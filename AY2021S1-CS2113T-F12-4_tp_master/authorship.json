[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    mainClassName \u003d \"seedu.modtracker.ModTracker\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "    archiveBaseName \u003d \"modtracker\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 2,
      "-": 44,
      "KennethEer": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kenneth Eer | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ker Chin Tian | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kwa Jun Liang, Desmond | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lee Hao Yuan | [Github](https://github.com/lhydl) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lim Gang Le | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 1,
      "lhydl": 9,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Setting Up, Getting Started](#setting-up-getting-started)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* [Design](#design)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * [Architecture](#architecture)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [UI component]()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Logic component]()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Model component]()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Storage component]()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Parser component]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Common classes]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* [Implementation](#implementation)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * [Store Data](#store-data)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    * [Add Module](#add-module) "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * [Add Time](#add-time)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * [Minus Time](#minus-time)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * [View modules](#view-modules)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * [Breakdown and analysis](#breakdown-and-analysis)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * [Proposed] Sharing of data to a central database for better analysis"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Add Task](#add-task)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Delete Task](#delete-task)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Mark Task as Done](#mark-task-as-done)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Appendix: Requirements](#appendix-requirements)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Product Scope](#product-scope)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [User Stories](#user-stories)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Use Cases](#use-cases)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Non-Functional Requirements](#non-functional-requirements)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * [Glossary](#glossary)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Appendix: Instructions for Manual Testing](#appendix-instructions-for-manual-testing)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Setting Up, Getting Started"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{Start up guide}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "## Design"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{Insert high level architecture diagram here}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The ModTracker class is the main entry point for the ModTracker application. It contains the main, loadData, run, "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "startAndGetName and runCommandLoopUntilExitCommand methods. The methods are responsible for:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* At app launch:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Creation of a ModTracker object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Load previously saved data from the text file into ModTracker."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Run the ModTracker app."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* At runtime:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Continuously prompt the user for input until app termination."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* At shutdown:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Save user data into a text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Invoke clean up methods where necessary."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The rest of the app consists of 5 packages:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Ui` : The user interface of the app."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Parser` : Parses the user input and calls the corresponding methods."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Logic` : Contains all classes and methods that performs the logical operations."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Model` : Holds the data of the app (Task \u0026 Module) in memory."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Storage` : Saves and loads data to and from the hard disk."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "## Implementation"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{Insert your own respective implementations here}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "This section describes some noteworthy details on how certain features are being implemented."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Store Data"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "The storage feature saves the data of the user so that "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "the ModTracker application continues from where the user left off the previous time. "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "#### Proposed Implementation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Storage` class facilitates the data saving and loading mechanism. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "The constructor `Storage(filePath)` accepts a String which is the file path to an external file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "This external file stores the user\u0027s data locally."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "Inside the external file, it stores the name of the user "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "followed by any valid inputs which modifies the data."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "The format of the data inside the external file is as follows:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "username"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "valid user input 1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "valid user input 2"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "valid user input 3"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "..."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "When the user runs the program again, "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": "the program will first load data from the external file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Parser` class then parses these data "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "before the program prompts the user for input."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "Given below is an example usage scenario, showing the 2 different times "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "when a user starts the application."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerct"
        },
        "content": "##### First Use"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "The user launches the application for the first time."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. `ModTracker` creates a new `Storage` object "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "with file path at `data/modtracker.txt`. "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The newly created `Storage` object checks that there is no file "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "at the specified file path, and creates a new file there."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The program prompts the user to input his/ her name."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The `Storage` object writes this username into the external file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The program prompts the user for further inputs."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The user enters `help`, and the program displays the help message. "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerct"
        },
        "content": "Since this command does not modify the data, "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerct"
        },
        "content": "the external file remains unchanged."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The user enters `addmod CS1010 10`, "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": "and the program adds the new module correspondingly. "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "Since this is a valid command which modifies the data,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": " the `Storage` object appends `addmod CS1010 10` to the external file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The user enters `exit`, and the program terminates."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "##### Second Use"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "The same user starts the application again (on the same device as the first use)."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. `ModTracker` creates a new `Storage` object "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerct"
        },
        "content": "with the same specified file path at `data/modtracker.txt`."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerct"
        },
        "content": "   "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The `Storage` object checks that the file at `data/modtracker.txt` exists,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerct"
        },
        "content": "and reads the first line of the file to obtain the user\u0027s name."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The `Storage` object passes the username to `ModTracker`, "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerct"
        },
        "content": "which calls `Ui` to greet the user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. `ModTracker` then obtains the remaining lines in the file via `Storage`,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kerct"
        },
        "content": "and passes it to `Parser` to load the data into `ModuleList` and `TaskList`."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The program prompts the user for further inputs,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kerct"
        },
        "content": "and it continues as per normal, with the data loaded."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kerct"
        },
        "content": "The following sequence diagram shows how the storage feature works,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kerct"
        },
        "content": "with a focus on how it obtains the username:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kerct"
        },
        "content": "![Storage Sequence Diagram](diagrams/Storage%20Sequence%20Diagram.svg)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kerct"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerct"
        },
        "content": "* **Alternative 1 (current choice)**: Saves the user input to the file"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Pros: Easy to implement as code from `Parser` can be reused"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Cons: Increases coupling as it depends on the `Parser` class "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerct"
        },
        "content": "    to make sense of the data"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerct"
        },
        "content": "* **Alternative 2**: Parses input into a different format "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerct"
        },
        "content": "storing the different modules, time expected, time spent and tasks"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Pros: Independent of how `Parser` takes in user input"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Cons: Requires additional work to parse data into the required"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kerct"
        },
        "content": "    storage format"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "### Add Module"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The add module feature will implement the checks of the module code input by the user through the following operations:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`checkIfModuleValid()` – Checks if the module code is of 6 – 8 characters without any spacing"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`checkIfModuleExist()` – Checks if the module already exists in the list of modules"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "If the module code is valid and does not exist, the add module feature will proceed to create the module and adds it to "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "the list of modules.  "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "\u003e **_NOTE:_**  A module is identfied by its module code"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "\u0026nbsp; "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Given below is an example usage scenario and how the add module mechanism behaves at each step."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 1. The user launches the application for the first time and hence, the list of modules is empty. The user types in a command: `addmod CS2113T`. "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 2. The parser class makes sense of the user input and calls the `addMod()` function in ModuleList class."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 3. Within the `addMod()` function, it will first check if the module code is valid by calling "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        `checkIfModuleValid()` function. The `checkIfModuleValid()` function will return true if the module code is "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        valid, and return false otherwise. If `checkIfModuleValid()` function returns true, proceed to step 4."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 4. Within the addmod function, it will then check if the module already exists in the list of modules by "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        calling `checkIfModuleExist()` function. The `checkIfModuleExist()` function will return true if the module "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        already exists in the modlist, and false otherwise. If `checkIfModuleValid()` function returns true, "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        proceed to step 5.  "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 5. A new module with module code \"CS2113T” is created by calling the constructor of Module class."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 6. The newly created module is added to the list of modules."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 7. The `printAdd()` function of the Ui class is called, displaying “CS2113T is added.” to the user."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 8. The newly created module is saved to storage."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The following activity diagram summarizes what happens when a user executes `addmod CS2113T` command for the first time.  "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "![addmod](diagrams/addmod%20activity%20diagram.png)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "##### Aspect: Checking existence of module by `checkIfModuleExist()` within `addmod()` function"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Alternative 1 (Current choice): Checks that module does not exist in the list of modules before adding a new module"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tPros: Ensure that there will be no duplicate modules in the list of modules"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tCons: User cannot have 2 same modules in the list of modules."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Alternative 2: Always add a new module"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tPros: The user can have 2 same modules in the list of modules."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tCons: If the user had inputted 2 same modules and wants to add the workload for these modules, the current "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          application will only update the module that was inputted earlier, ignoring the second module, resulting in "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          inconsistency."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tCons: If the user does not want duplicate modules, the user must ensure he/she does not add a module that is "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          already in the list of modules.  "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### Add Time"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The add time feature edits the actual workload for a specific module as indicated by the user. "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "This is done by adding time spent on the module. The actual workload is broken down into academic weeks and"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "hours spent in the respective academic weeks."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "##### Current implementation"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The feature will implement the same checks as the add module feature as shown earlier."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "If the module code is valid and exists the add time feature will proceed to add time from the module"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "as indicated by the user."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Given below is an example usage scenario and how the add time command behaves at each step."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.1 The user launches the application and does all the required steps to add a module with module code `CS2113T`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "to a list of modules. This is done by inputting the command `addMod CS2113T`."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.2 The user now types in a command: `addTime CS2113T 2 4`. This calls the add time command from `Parser`."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`Parser` then calls the `addTime()` method in `ModuleList` and passes `CS2113T`,`2` and `4` as parameters into the"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "method. "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e **_NOTE:_**  The first number is the hours spent in that week. The second number is the academic week that is being"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003eupdated."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.3 Within the `addTime()` function, it will first check if the module code is valid by calling"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleValid()` function. If the module code is valid, `checkIfModuleValid()` function will return true."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.4 Within the `addTime()` function, it will then check if the module exists in the module list storage by calling"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleExist()` function. If the module does exist, the `checkIfModuleExist()` function will return true."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.5 A time of `2` hours in academic week `4` will now be added to the actual workload of the `CS2113T` module. "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.6 The system will print the string `2 hours have been added to CS2113T`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.7 The actual workload is updated in storage."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The following sequence diagram illustrates what happens when a user executes `addTime CS2113T 2 4`."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[insert diagram here]"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 1 (current choice)**: adding time with academic weeks associated"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Easy to manage for user as the user only needs to focus on the current academic week to track his workload"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: User might prefer to manage his time spent in totality"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 2**: adding time in totality "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Able to cumulatively add time and manage workload based on overall total time spent."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: May not be useful to know total time spent as workload may be better managed weekly."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### Minus Time"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The minus time feature edits the actual workload for a specific module as indicated by the user. "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "This is done by removing time spent on the module. The actual workload is broken down into academic weeks and"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "hours spent in the respective academic weeks. This feature is the opposite of the add time feature. "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "##### Current implementation"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The feature will implement the same checks as the add module feature as shown earlier."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "As the command now is minus time, there would be two additional checks implemented."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`doesActualTimeExist()` - checks if the module code has existing actual workload stored to it."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`doesHoursExceedTotal()` - checks if the hours the user wishes to remove exceed the total hours in the actual workload."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "If the module code is valid, exists and has an actual workload the minus time feature will proceed to minus"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "time from the module as indicated by the user."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Given below is an example usage scenario and how the minus time command behaves at each step."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.1 The user launches the application and does all the required steps to add a module with module code `CS2113T`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "to a list of modules. This is done by inputting the command `addMod CS2113T`."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.2 The user then does all the required steps to add `2` hours of time spent in academic week `4` on `CS2113T`. This"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "is done by inputting the command `addTime CS2113T 2 4`."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.3 The user now types in a command: `minusTime CS2113T 2 4`. This calls the minus time command from `Parser`."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`Parser` then calls the `minusTime()` method in `ModuleList` and passes `CS2113T`,`2` and `4` as parameters into the"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "method."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e **_NOTE:_**  The first number is the hours spent in that week. The second number is the academic week that is being"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003eupdated."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.4 Within the `minusTime()` function, it will first check if the module code is valid by calling"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleValid()` function. If the module code is valid, `checkIfModuleValid()` function will return true."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.5 Within the `minusTime()` function, it will then check if the module exists in the module list storage by calling"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleExist()` function. If the module does exist, the `checkIfModuleExist()` function will return true."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.6 Within the `minusTime()` function, it will then check if there is an existing actual workload for this module by"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "calling the `doesActualTimeExist()` function. If the module has an existing workload, the `doesActualTimeExist()`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "function will return true."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.7 Within the `minusTime()` function, it will then check if the hours the user wish to remove is more than the"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "existing hours by"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "calling the `doesHoursExceedTotal()` function. If the module has an existing workload, the `doesHoursExceedTotal()`"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "function will return true."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.8 A time of `2` hours in academic week `4` will now be removed from the actual workload of the `CS2113T` module. "
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.9 The system will print the string `2 hours have been removed from CS2113T`"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.10 The actual workload is updated in storage."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The following sequence diagram illustrates what happens when a user executes `minusTime CS2113T 2 4`."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[insert diagram here]"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 1 (current choice)**: removing time with academic weeks associated"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Easy to manage for user as the user only needs to focus on the current academic week to track his workload"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: User might prefer to manage his time spent in totality"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 2**: minus time in totality "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Able to cumulatively remove time and manage workload based on overall total time spent."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: May not be useful to know total time spent as workload may be better managed weekly."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### View modules"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### Current Implementation"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The view module command allows the user to view all the modules taken,"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "the respective time spent and expected module workload at a glance. It prints "
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "`weekNumber`,`moduleCode`, `expectedWorkload` and `actualWorkload` in the specified "
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "week for all the modules taken in a table format. "
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Given below is an example usage scenario and how the view module command behaves at each step."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User calls the view module command from the `Parser`. `Parser` then calls the `printTable()`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "method in `Ui`. `printTable()` then instantiates `ModView` class and calls the `printAllModuleInformation()`"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "method from the `ModView` class."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User input is subjected to `validateInputs()` to verify that "
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "both of the following conditions are satisfied."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * `weekNumber` is an integer between 1 and 13 inclusive."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * `modlist` in `list` is not empty."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "If any of the above conditions is not satisfied, an error message will be printed"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "and `printAllModuleInformation()` terminates."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. A method `getMaxModuleLength()` will be called to find out the maximum length "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "of module code of modules taken. This is to facilitate the resizing of the printed table."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. `updateTemplates()` then updates the table templates such as `border`, `header` "
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "and `contents` are updated accordingly based on the output of `getMaxModuleLength()`."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. For each `Module` in `modList`, `updateContent()` will be called to update the contents"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "to be printed."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The following sequence diagram shows how the view module command works. "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "![view-module](diagrams/ModViewSequence.png)"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### Breakdown and Analysis"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### Current Implementation"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The analysis command allows the user to view the breakdown of the total time spent"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "in the week across all modules and provides a simple analysis of how they are doing."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User calls the view module command from the `Parser`. `Parser` then calls the `printBreakdownAnalysis()`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   method in `Ui`. `printBreakdownAnalysis()` then instantiates `ViewTimeBreakdownAnalysis` class. "
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   and calls the `printTimeBreakdownAndAnalysis()` method. "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. The user input is subjected to `validateInputs()` to verify that "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   both of the following conditions are satisfied."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * `weekNumber` is an integer between 1 and 13 inclusive."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * `modlist` in `list` is not empty."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   "
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   If any of the above conditions is not satisfied, an error message will be printed"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   and `printTimeBreakdownAndAnalysis()` terminates."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. `printTime()` method in `printTimeBreakdownAndAnalysis()` is first called. For each `Module` "
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "in `modList`, `printTime()` prints `actualWorkload` and `expectedWorkload` in form of a "
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "horizontal bar graph. The existence of the desired data is checked using `doesActualTimeExist()` "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "and `doesExpectedTimeExist()` methods of the `Module` class. If the desired data does not exist, a `NO INPUT` will be printed. "
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. `printBreakdown()` then calculates the total time spent by the user on the modules taken in the specified "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "week. It then prints out `actualTime` of each `Module` as a percentage of `totalTimeSpent`. If there is no input, "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "a `NO INPUT` message will be printed. `printBreakdown()` return **TRUE** if there exists a `Module` that has a "
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "valid input, else **False** is returned."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. If output of `printBreakdown()` is `True`, `printAnalysis()` will be called. `computeAnalysisOfTimeSpent()` "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "is called to determine the outcome of the analysis. A message will be printed depending on the output"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "of the analysis. "
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The following sequence diagram shows how the analysis command works. "
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "![analysis](diagrams/AnalysisSequence.png)"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* **Alternative 1 (current choice)**: Printing data as a bar graph"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Pros: Easy implementation as the bar graph is printed as a `String`."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Cons: It might be difficult to compare across modules using a bar graph."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* **Alternative 2**: Printing data as a line graph"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Pros: Easier to compare across different modules."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Cons: Difficult to implement as it requires external libraries."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Cons: Difficult to test due to additional dependencies on external libraries. "
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Add Task"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The add task feature allows user to add a task under an existing module. "
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Proposed Implementation"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The `addtask` command is executed by the `parse` method in the `Parser` class, which then calls the `addTask` method "
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "lhydl"
        },
        "content": "in the `TaskList` class. The `addTask` method performs all the necessary logic for the add task feature."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Given below is an example usage scenario."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The user input the `addtask` command and the `parse` method in `Parser` parses the command."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. `parse` calls the `addTask` method in `TaskList`."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method splits the user input into 3 sections:"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 1`: command"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 2`: module code"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 3`: task description"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method calls the `checkIfModuleValid` method in `ModuleList` class to check if `Section 2` is a "
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "lhydl"
        },
        "content": "valid module code."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If module code is not valid, the `addTask` method will return and `Ui` will prompt the user to enter a "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    valid module code."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if module code is valid, the `addTask` method will execute the next step."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method calls the `checkIfModuleExist` method to check if `Secion 2` (module code) exists in the database."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If module code does not exist in the database, the `addTask` method will return and `Ui` will prompt the user to"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    execute the `addmod` or `addexp` command first."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if module code exists, the `addTask` method will execute the next step."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method will create a new `Task` object by the constructor in `Task` class, with `Section 3` (task description). "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method adds the `Task` object to the array list `tasks`."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{will insert a sequence diagram here}"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Future Implementation"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "lhydl"
        },
        "content": "A future implementation requires user to enter the expected time required to complete the task. The `addTask` method will split the "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "lhydl"
        },
        "content": "user input into 4 sections, with `Section 4` as the expected time required to complete the task. `Section 4` will then be"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "lhydl"
        },
        "content": "used in the future implementation of mark task as done feature, as further illustrated in the [mark task as done](#mark-task-as-done)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "lhydl"
        },
        "content": "section."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Delete Task"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The delete task feature allows user to delete a task object."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Proposed Implementation"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The `deletetask` command is executed by the `parse` method in the `Parser` class, which then calls the `deleteTask` method"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "lhydl"
        },
        "content": "in the `TaskList` class. The `deleteTask` method performs all the necessary logic for the delete task feature."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Given below is an example usage scenario."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The user input the `deletetask` command and the `parse` method in `Parser` parses the command."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. `parse` calls the `deleteTask` method in `TaskList`."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `deleteTask` method splits the user input into 2 sections:"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 1`: command"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 2`: task number corresponding to the index of `Task` object in array list `tasks`"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `deleteTask` method will check if the array list `tasks` is empty."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If array list is empty, `Ui` will notify the user that there is no `Task` to delete."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if array list is not empty, `deleteTask` method will execute the next step."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `deleteTask` method will check the validity of `Section 2` (task number)."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If task number is not an integer, an exception will be thrown and the `deleteTask` method terminates."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If task number is out of bounds, `Ui` will prompt the user to enter a valid task number."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if task number is valid, `deleteTask` method will execute the next step."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `deleteTask` method will remove the `Task` with index corresponding to `Section 2` (task number) from the array "
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "lhydl"
        },
        "content": "list `tasks` by using the ArrayList util package method `.remove()`. "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{will insert a sequence diagram here}"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Mark Task as Done"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The mark task as done feature allows user to mark an existing task as done."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Proposed Implementation"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The `done` command is executed by the `parse` method in the `Parser` class, which then calls the `setDone` method in the"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`TaskList` class. The `setDone` method performs all the necessary logic for the mark task as done feature."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Given below is an example usage scenario."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The user input the `done` command and the `parse` method in `Parser` parses the command."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. `parse` calls the `setDone` method in `TaskList`."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method splits the user input into 2 sections:"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 1`: command"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 2`: task number corresponding to the index of `Task` object in array list `tasks`"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method will check if the array list `tasks` is empty."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If array list is empty, `Ui` will notify the user that there is no `Task` to mark as done."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if array list is not empty, `setDone` method will execute the next step."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method will check the validity of `Section 2` (task number)."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If task number is not an integer, an exception will be thrown and the `setDone` method terminates."
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If task number is out of bounds, `Ui` will prompt the user to enter a valid task number."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if task number is valid, `setDone` method will execute the next step."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method will then call the `setAsDone` method in `Task` class to mark the `Task` corresponding to "
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`Section 2` (task number) as done. "
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{will insert a sequence diagram here}   "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Future Implementation"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. When the `Task` is set as done, the `setDone` method will call the `addTime` method in `ModuleList` class"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "lhydl"
        },
        "content": "to add the expected time required to complete the task to the actual time spent on the module."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * This future implementation requires `Section 4` (expected time required to complete the task) from the future "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    implementation of the `addTask` method to be passed as a parameter to the `setDone` method and then to the "
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    `addTime` method."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Documentation, Logging, Testing, Configuration, Dev-Ops"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{Insert guides here for doc, testing etc}"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Appendix: Requirements"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Product Scope"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Target User Profile"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "NUS students"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* spend too much time on certain modules and neglecting other modules"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* want a timetable to view and breakdown all the module workload easily"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* need help to manage the time spent on each module"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Value Proposition"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* helps to track the time spent on every module  "
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* better prioritize their work for each module "
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* relieves the stress of NUS students by achieving a work-life balance"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### User Stories"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|student|input my modules|keep track of modules that I am taking|"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|student|input the expected module workload|keep track of the recommended time I should spend on the module|"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|busy student|view breakdown of my time spent on each module|pinpoint in detail where i spend most of time on|"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|student|input the actual time spent on each module|keep track of the actual time I spent|"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|careless user|edit the data easily|correct any mistakes I inputted wrongly/"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|user|save my data permanently|save the trouble of re-entering my data everytime I start the app|"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|v2.0|user of ModTracker|add tasks related to a module|know what are the outstanding tasks for each module"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v2.0|user|(to be updated)|(to be updated)|"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Use Cases"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{Insert some use cases examples}"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Non-Functional Requirements"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Should work on any _mainstream OS_ as long as they have Java 11 or above installed."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The commands should be short and succinct such that a user with average typing speed should be"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "lhydl"
        },
        "content": "able to accomplish the tasks faster than using a regular _GUI app_."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* *mainstream OS* - Windows, Linux, macOS"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* *GUI app* - An app that utilises GUI (graphical user interface). It allows users to interact with electronic devices "
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "lhydl"
        },
        "content": "through graphical icons and audio indicator. Most apps like the mobile apps that we are familiar with utilises the GUI."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Appendix: Instructions for Manual Testing"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 96,
      "lhydl": 155,
      "DesmondKJL": 116,
      "kerct": 90,
      "-": 31,
      "KennethEer": 79
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "# ModTracker"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": "_ModTracker_ is a desktop app for tracking the time spent on your modules, via a Command Line Interface (CLI)."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "It helps you to prioritise your work and balance your time spent among your modules. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "lhydl": 3,
      "-": 5
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "_ModTracker_ is a desktop app for tracking the time spent on your modules, via a Command Line Interface (CLI)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "It helps you to prioritise your work and balance your time spent among your modules. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [View help: `help`](#1-view-help-help)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Add a module: `addmod`](#2-add-a-module-addmod)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Add expected module workload: `addexp`](#3-add-expected-module-workload-addexp) "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Add actual time spent on a module: `addtime`](#4-add-actual-time-spent-on-a-module-addtime)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [List expected and actual time spent of all modules: `list`](#5-list-expected-and-actual-time-spent-of-all-modules-list)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Delete a module: `deletemod`](#6-delete-a-module-deletemod)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Delete expected module workload: `deleteexp`](#7-delete-expected-module-workload-deleteexp)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Minus from actual time spent on a module: `minus`](#8-minus-from-actual-time-spent-on-a-module-minus) "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Add tasks: `addtask`](#9-add-tasks-addtask)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [List all tasks: `listtask`](#10-list-all-tasks-listtask)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Mark task as done: `done`](#11-mark-task-as-done-done)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Delete a task: `deletetask`](#12-delete-a-task-deletetask)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Exit the program : `exit`](#13-exit-the-program--exit)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    1. [Save user data](#14-save-user-data)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "1. Download the latest version of `ModTracker` from [here](https://github.com/AY2021S1-CS2113T-F12-4/tp/releases)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Save the jar file to a folder of your choice."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Open a command prompt and navigate to the folder that contains the jar file. Command: `cd [directory/filename]`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Type in the `java -jar modtracker.jar` command and press enter to run the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. A welcome screen as shown below will be displayed if program is being executed successfully."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ````"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   |\\\\        /|         |\u003d\u003d\u003d\u003d\u003d\u003d            ||"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ||\\\\      / |  __   __|  ||  __  ___ ___ ||    ___   ____"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   || \\\\    /  |//  \\//  |  ||//  \\/  |/    ||// / _ \\ //   \\"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ||  \\\\  /   |||   ||  |  |||   ||  ||    ||\\\\ | __/ ||"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ||   \\\\/    |\\\\__/\\\\__|  |||   \\\\__|\\___ || \\\\\\___| ||"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   *****************************************************|"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   Full user guide available at: https://ay2021s1-cs2113t-f12-4.github.io/tp/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   Enter \u003chelp\u003e for a quick view of available commands."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ````"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Refer to the Features section below for more details on the application\u0027s available commands."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### Notes about command format:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Items in \u003c\u003e are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   e.g. in addmod \u003cmodule code\u003e, module code is a parameter which can be used as addmod CS2113T."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 1. View help: `help`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Shows a list of the commands available."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "\u003cA list of available commands will be shown here\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2. Add a module: `addmod`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adds a module to the database."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addmod \u003cmodule code\u003e`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing. "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` does not exist in the database."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addmod cs2113t`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "CS2113T is added."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 3. Add expected module workload: `addexp` "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adds the expected workload of the module to the database."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addexp \u003cmodule code\u003e \u003cexpected workload\u003e`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `expected workload` is in hours."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* If the `module code` already exist, this command replaces its expected workload with the new expected workload."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* If the `module code` does not exist, this command creates a new module and adds its expected workload to the database."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addexp cs2113t 10`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lhydl"
        },
        "content": "CS2113T, Expected Workload: 10h is added."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4. Add actual time spent on a module: `addtime`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adds the time spent on the indicated module."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addtime \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `time spent` is in hours."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addtime CS2113T 3 1`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lhydl"
        },
        "content": "3 hours are added to CS2113T."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 5. List expected and actual time spent of all modules: `list`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Shows a list of the modules, their expected module workload, and the actual time spent for the specific week."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `list \u003cweek number\u003e`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`list 1`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lhydl"
        },
        "content": "+------+---------+----------+----------+"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lhydl"
        },
        "content": "| Week | Module  | Expected |  Actual  |"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lhydl"
        },
        "content": "+------+---------+----------+----------+"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|  01  | CS2113T |    10    |    3.0   |"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lhydl"
        },
        "content": "+------+---------+----------+----------+"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 6. Delete a module: `deletemod`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Deletes the specified module code from the database."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `deletemod \u003cmodule code\u003e`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` exists in the database."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`deletemod CS2113T`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lhydl"
        },
        "content": "CS2113T is removed."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 7. Delete expected module workload: `deleteexp`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Deletes the expected workload of specified module code from the database."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `deleteexp \u003cmodule code\u003e`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` exists in the database."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`deleteexp CS2113T`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected Workload of CS2113T is removed."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 8. Minus from actual time spent on a module: `minus`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Minus the actual time spent on a specified module."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `minus \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e` "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `time spent` is in hours."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`minus CS2113T 3 1`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lhydl"
        },
        "content": "3 hours are removed from CS2113T"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 9. Add tasks: `addtask`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Add a task under a specified module."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addtask \u003cmodule code\u003e \u003ctask description\u003e`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` must contain 6-8 characters without any spacing."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` specified by the user must exist in the database. "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addtask CS2113T finish project`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Got it. I\u0027ve added this task under CS2113T:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[X] [CS2113T] finish project"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 10. List all tasks: `listtask`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lhydl"
        },
        "content": "List all tasks in the database."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `listtask`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [X] [CS2113T] finish project"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 11. Mark task as done: `done`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Mark a specified task as done."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `task number` is between 1 and the number of tasks in the database inclusive."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[/] [CS2113T] finish project"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 12. Delete a task: `deletetask`"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Delete a specified task from the database."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `deletetask \u003ctask number\u003e`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `task number` is between 1 and the number of tasks in the database inclusive."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`deletetask 1`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[/] [CS2113T] finish project"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lhydl"
        },
        "content": "You currently have no task :-)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 13. Exit the program : `exit`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lhydl"
        },
        "content": "All changes saved."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Bye \u003cusername\u003e. Hope to see you again soon!"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 14. Save user data"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Saves time spent in the hard disk automatically after any command that changes the data. There is no need to save manually. "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lhydl"
        },
        "content": "**Q**: Are the commands case sensitive? "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lhydl"
        },
        "content": "**A**: No, all the commands are case insensitive. Eg. typing in `HELP` will be taken in as a `help` command."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Feature|Command|"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|--------|--------|"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Viewing help|`help`|"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adding a module|`addmod \u003cmodule code\u003e`|"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adding expected module workload|`addexp \u003cmodule code\u003e \u003cexpected workload\u003e`|"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Add to actual time spent on a module|`addtime \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Listing all modules|`list \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Deleting a module|`deletemod \u003cmodule code\u003e`|"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Deleting expected module workload|`deleteexp \u003cmodule code\u003e`|"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Minus from time spent on the module|`minus \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Add tasks|`addtask \u003cmodule code\u003e \u003ctask description\u003e`|"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lhydl"
        },
        "content": "List all tasks|`listtask`|"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Mark task as done|`done \u003ctask number\u003e`|"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Delete a task|`deletetask \u003ctask number\u003e`|"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Exiting the program|`exit`|"
      }
    ],
    "authorContributionMap": {
      "lhydl": 256,
      "-": 37,
      "KennethEer": 8
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Analysis.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public enum Analysis {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    tooMuchTimeSpent, tooLittleTimeSpent, justRight, noInput"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 5
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ModTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Main entry-point for the java.seedu.modtracker application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class ModTracker {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private ModuleList modList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private Notification notification;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "        new ModTracker(\"data/modtracker.txt\").run();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public ModTracker(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modList \u003d new ModuleList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification \u003d new Notification();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ui.printWelcomeScreen();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d storage.getName();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "            name \u003d ui.printNamePrompt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "            storage.appendToFile(name);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui.printGreeting(name);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage.loadData(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage.unlockFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.start();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "        runCommandLoopUntilExitCommand(name);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage.lockFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Reads the user command until the user enters the exit command and terminates the program."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param name name of user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private void runCommandLoopUntilExitCommand(String name) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        while (!parser.isExit()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            parser.parse(input, modList, name, storage, true, taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public ModuleList getModList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return modList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 22,
      "kerct": 35,
      "-": 6,
      "KennethEer": 5
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ModView.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class ModView {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int LENGTH_OF_MODULE_CODE \u003d 6;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FIRST_PART_OF_BORDER \u003d \"+------+-\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SECOND_PART_OF_BORDER \u003d \"-------+----------+----------+\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FIRST_PART_OF_HEADER \u003d \"| Week | Module \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SECOND_PART_OF_HEADER \u003d \"| Expected |  Actual  |\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_INPUT \u003d \" No Input \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int DECIMAL_PLACES \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MIN_WEEK_VALUE \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MAX_WEEK_VALUE \u003d 13;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String WEEK_NUMBER_PADDING_CHAR \u003d \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int FACTOR \u003d 10;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String REPLACE_BY_WEEK_NUMBER \u003d \"WK\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String REPLACE_BY_MODULE_CODE \u003d \"XXXXXX\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FIRST_PART_OF_CONTENT \u003d \"|  \" + REPLACE_BY_WEEK_NUMBER"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"  | \" + REPLACE_BY_MODULE_CODE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String PADDING_CHAR \u003d \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_EXPECTED_WORKLOAD \u003d \"YY\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_NO_EXPECTED_WORKLOAD_FOUND \u003d \"    YY    \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_ACTUAL_WORKLOAD \u003d \"ZZZZ\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_NO_ACTUAL_WORKLOAD_FOUND \u003d \"   ZZZZ   \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SECOND_PART_OF_CONTENT \u003d \" |\" + REPLACE_BY_NO_EXPECTED_WORKLOAD_FOUND"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"|\" + REPLACE_BY_NO_ACTUAL_WORKLOAD_FOUND + \"|\" + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String INVALID_WEEK_NUMBER \u003d \"Please input a week number between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String EMPTY_MODULE_LIST \u003d \"The module list is empty. Please input some modules to be tracked.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the week number, module code, expected workload and actual time spent"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * in the specified week for all the modules taken in a table format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printAllModuleInformation(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!validateInputs(weekNumber, modList)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003e\u003d MIN_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003c\u003d MAX_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert !modList.isEmpty() : \"modList should not be empty\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cString\u003e moduleCodes \u003d list.getModuleCodes();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int maxLength \u003d getMaxModuleLength(moduleCodes);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int extraCharsToBeAdded \u003d maxLength - LENGTH_OF_MODULE_CODE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] updatedTemplates \u003d updateTemplates(extraCharsToBeAdded);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String border \u003d updatedTemplates[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String header \u003d updatedTemplates[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String contents \u003d updatedTemplates[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String crossToBeAdded \u003d updatedTemplates[3];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.print(border + header + border);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String updatedContent \u003d contents;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            updatedContent \u003d updateContent(weekNumber, crossToBeAdded, m, updatedContent);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.print(updatedContent + border);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String updateContent(int weekNumber, String crossToBeAdded, Module m, String out) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String crosses \u003d REPLACE_BY_MODULE_CODE + crossToBeAdded;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String weekNum \u003d (isTwoDigitNumber(weekNumber) ? \"\" : WEEK_NUMBER_PADDING_CHAR) + weekNumber;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        out \u003d out.replace(REPLACE_BY_WEEK_NUMBER, weekNum);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder moduleCode \u003d new StringBuilder(m.getModuleCode());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        while (moduleCode.length() \u003c crosses.length()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            moduleCode.append(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        out \u003d out.replace(crosses, moduleCode.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (m.doesExpectedWorkLoadExist()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String expectedWorkLoad \u003d (isTwoDigitNumber(m.getExpectedWorkload()) ? \"\" : PADDING_CHAR)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    + m.getExpectedWorkload();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_EXPECTED_WORKLOAD, expectedWorkLoad);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_NO_EXPECTED_WORKLOAD_FOUND, NO_INPUT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            double actualTime \u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            actualTime \u003d round(actualTime, DECIMAL_PLACES);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String actualWorkLoad \u003d (isTwoDigitNumber((int) actualTime) ? \"\" : PADDING_CHAR)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    + actualTime;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_ACTUAL_WORKLOAD, actualWorkLoad);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_NO_ACTUAL_WORKLOAD_FOUND, NO_INPUT);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private int getMaxModuleLength(ArrayList\u003cString\u003e moduleCodes) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int maxLength \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (String s : moduleCodes) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (s.length() \u003e maxLength) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                maxLength \u003d s.length();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return maxLength;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean validateInputs(int weekNumber, ArrayList\u003cModule\u003e modList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (weekNumber \u003c MIN_WEEK_VALUE || weekNumber \u003e MAX_WEEK_VALUE) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(INVALID_WEEK_NUMBER + System.lineSeparator());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (modList.isEmpty()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(EMPTY_MODULE_LIST + System.lineSeparator());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private double round(double value, int decimalPlaces) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int scale \u003d (int) Math.pow(FACTOR, decimalPlaces);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (double) Math.round(value * scale) / scale;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean isTwoDigitNumber(int num) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return String.valueOf(num).length() \u003d\u003d 2;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String[] updateTemplates(int extraCharsToBeAdded) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] output \u003d new String[4];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder dashToBeAdded \u003d new StringBuilder();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder spaceToBeAdded \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder crossToBeAdded \u003d new StringBuilder();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (int i \u003d 0; i \u003c extraCharsToBeAdded; i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            dashToBeAdded.append(\"-\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            spaceToBeAdded.append(\" \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            crossToBeAdded.append(\"X\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[0] \u003d FIRST_PART_OF_BORDER + dashToBeAdded + SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[1] \u003d FIRST_PART_OF_HEADER + spaceToBeAdded + SECOND_PART_OF_HEADER;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[2] \u003d FIRST_PART_OF_CONTENT + crossToBeAdded + SECOND_PART_OF_CONTENT;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[3] \u003d crossToBeAdded.toString();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 152,
      "kerct": 2
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a module. A \u003ccode\u003eModule\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a module with its moduleCode, expected time and actual time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int NO_INPUT \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private int expected \u003d NO_INPUT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final double[] actualTime \u003d new double[13];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Module(String mod) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        moduleCode \u003d mod;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Arrays.fill(actualTime, NO_INPUT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Module(String mod, String expected) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "        moduleCode \u003d mod;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.expected \u003d Integer.parseInt(expected);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Arrays.fill(actualTime, NO_INPUT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (expected \u003d\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return moduleCode;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return moduleCode + \", Expected Workload: \" + expected + \"h\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public int getExpectedWorkload() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return expected;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void setExpectedWorkload(int expected) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.expected \u003d expected;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public double[] getActualTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return actualTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void addActualTime(String time, String week) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double d \u003d Double.parseDouble(time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        int i \u003d Integer.parseInt(week);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (this.actualTime[i - INDEX_OFFSET] \u003d\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            this.actualTime[i - INDEX_OFFSET] \u003d d;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            this.actualTime[i - INDEX_OFFSET] +\u003d d;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusActualTime(String time, String week) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double d \u003d Double.parseDouble(time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        int i \u003d Integer.parseInt(week);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "        //assert this.actualTime[i - INDEX_OFFSET] !\u003d NO_INPUT : \"Cannot minus if actual time is not initialised\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (this.actualTime[i - INDEX_OFFSET] !\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            this.actualTime[i - INDEX_OFFSET] -\u003d d;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (!(obj instanceof Module)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Module m \u003d (Module) obj;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return moduleCode.equals(m.moduleCode);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return moduleCode.hashCode();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean doesExpectedWorkLoadExist() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (expected !\u003d NO_INPUT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean doesActualTimeExist(int weekNumber) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (actualTime[weekNumber - INDEX_OFFSET] !\u003d NO_INPUT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public boolean doesHoursExceedTotal(double time, int weekNumber) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        return (actualTime[weekNumber - INDEX_OFFSET] \u003c time);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 35,
      "DesmondKJL": 14,
      "kerct": 12,
      "KennethEer": 38
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ModuleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a module list. A \u003ccode\u003eModuleList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a list of modules and a Ui object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static ArrayList\u003cModule\u003e modList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String MODULECODE_SPACING \u003d \"Please type module code without any spacing.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String MODULECODE_LENGTH \u003d \"The module code should have 6 - 8 characters without any spacing.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String INVALID_MODULECODE \u003d \"Please check module code again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String INVALID_HOURS \u003d \"Please input a valid number of hours.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_ADDMOD \u003d \"Please type addmod \u003cmodule code\u003e\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_ADDEXP \u003d \"Please type addexp \u003cmodule code\u003e \u003cexpected workload\u003e\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DELETEMOD \u003d \"Please type deletemod \u003cmodule code\u003e\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DELETEEXP \u003d \"Please type deleteexp \u003cmodule code\u003e\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String NO_WORKLOAD_ERROR \u003d \"Cannot minus actual time as there is no actual time inputted.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_EXCEED_ERROR \u003d \"Sorry you are trying to remove too many hours\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_REMOVAL \u003d \" hours have been removed from \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOUR_REMOVAL \u003d \" hour has been removed from \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_ADD \u003d \" hours have been added to \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOUR_ADD \u003d \" hour has been added to \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int MIN_MOD_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int MAX_MOD_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final int NO_INPUT \u003d -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the module exists in the list of modules."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input module code typed in by user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return true if module is found in the list of modules, false otherwise."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean checkIfModuleExist(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Module currentMod \u003d new Module(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (Module mod : modList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (mod.equals(currentMod)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the module is valid."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param module  module code typed in by user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return true if module code is valid, false otherwise."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean checkIfModuleValid(String module, boolean toPrint) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String trimmedMod \u003d module.trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (trimmedMod.contains(\" \")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(MODULECODE_SPACING + System.lineSeparator());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (trimmedMod.length() \u003c MIN_MOD_LENGTH || trimmedMod.length() \u003e MAX_MOD_LENGTH) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(INVALID_MODULECODE + \" \" + MODULECODE_LENGTH + System.lineSeparator());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the time is valid."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param hours   number of hours typed in by user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return true if number of hours is valid, false otherwise."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean checkIfTimeValid(double hours, boolean toPrint) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (hours \u003c 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(INVALID_HOURS + System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates a module and adds the module to the list of modules if the module"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * does not exist."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code typed in by user."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addMod(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printExist(modCode);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.add(currentModule);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printAdd(currentModule);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_ADDMOD + System.lineSeparator());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates a module and adds the module with expected time to the"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * list of modules if module does not exist."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * If module already exist, update expected time based on user input."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code and expected time typed in by user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addExp(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String expTime \u003d modInfo[2];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            int expectedTime \u003d Integer.parseInt(expTime);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfTimeValid(expectedTime, toPrint)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            assert expectedTime \u003e\u003d 0 : \"The expected time should be positive\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Module currentMod \u003d new Module(modCode, expTime);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.add(currentMod);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                int index \u003d modList.indexOf(currentMod);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.get(index).setExpectedWorkload(expectedTime);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printAdd(currentMod);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_ADDEXP + System.lineSeparator());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"NumberFormatException: \" + nfe.getMessage() + System.lineSeparator());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Deletes the module if module exists."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code typed in by user."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteMod(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Module inputMod \u003d new Module(modCode);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.remove(inputMod);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printDelete(modCode);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskData();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int i;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            for (i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                String mod \u003d tasks.get(i - 1).getModCode().trim();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                if (mod.equals(modCode)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    tasks.remove(i - 1);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    i--;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_DELETEMOD + System.lineSeparator());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Deletes the expected time of the module if module exists."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code and expected time typed in by user."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteExp(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Module inputMod \u003d new Module(modCode);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                int index \u003d modList.indexOf(inputMod);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.get(index).setExpectedWorkload(NO_INPUT);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printDeleteExp(modCode);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_DELETEEXP + System.lineSeparator());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * Adds time to actual workload to an existing module."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param input   module code, added time spent and week input by user."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addTime(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String[] commandInfo \u003d input.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String modCode;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double hours;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modCode \u003d commandInfo[1].toUpperCase();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        hours \u003d Double.parseDouble(commandInfo[2]);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            int index \u003d modList.indexOf(currentModule);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            modList.get(index).addActualTime(commandInfo[2], commandInfo[3]);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (hours \u003e 1) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(commandInfo[2] + HOURS_ADD + modCode + System.lineSeparator());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(commandInfo[2] + HOUR_ADD + modCode + System.lineSeparator());"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * Minus time from actual workload to an existing module."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param input   module code, removed time spent and week input by user."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void minusTime(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String modCode;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double hours;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String[] commandInfo \u003d input.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modCode \u003d commandInfo[1].toUpperCase();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        hours \u003d Double.parseDouble(commandInfo[2]);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int index \u003d modList.indexOf(currentModule);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int week \u003d Integer.parseInt(commandInfo[3]);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (modList.get(index).doesActualTimeExist(week)) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (!modList.get(index).doesHoursExceedTotal(hours, week)) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    modList.get(index).minusActualTime(commandInfo[2], commandInfo[3]);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    if (toPrint) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        if (hours \u003e 1) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            System.out.println(commandInfo[2] + HOURS_REMOVAL"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                                    + modCode + System.lineSeparator());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            System.out.println(commandInfo[2] + HOUR_REMOVAL"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                                    + modCode + System.lineSeparator());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        storage.appendToFile(input);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    if (toPrint) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        System.out.println(HOURS_EXCEED_ERROR"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                                + System.lineSeparator());"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(NO_WORKLOAD_ERROR"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            + System.lineSeparator());"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public ArrayList\u003cModule\u003e getData() {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return modList;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Gets all the module codes of modules taken by the user."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return a list containing all the modules codes."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public ArrayList\u003cString\u003e getModuleCodes() {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output.add(m.getModuleCode());"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 13,
      "DesmondKJL": 83,
      "lhydl": 24,
      "kerct": 4,
      "KennethEer": 240
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Notification.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.ModuleList.modList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Notification {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static int numOfNotification \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static int currentWeek;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String ON_TRACK \u003d \"You are on track. Well Done!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String TOO_MUCH_TIME \u003d \"Beware! Seems like you are spending too much time on %s.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String TOO_LITTLE_TIME \u003d \"Oh no! It appears you are spending too little time on %s.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String OPEN_NOTIFICATION \u003d \"Please type `open` to view the notifications.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    //update week number with user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void updateCurrentWeek() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        currentWeek \u003d 13;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        while (currentWeek \u003e 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            for (Module mod : modList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (hasExpAndAct(mod)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            currentWeek--;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    //check if module has actual and expected time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private boolean hasExpAndAct(Module mod) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (mod.doesExpectedWorkLoadExist() \u0026\u0026 mod.doesActualTimeExist(currentWeek)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void getNumNotification(ModuleList list) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        updateCurrentWeek();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (currentWeek \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (Module mod : modList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ViewTimeBreakdownAnalysis breakDown \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Analysis analysis;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (hasExpAndAct(mod)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                analysis \u003d breakDown.computeAnalysisOfTimeSpent(mod, currentWeek);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                switch (analysis) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooMuchTimeSpent:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooLittleTimeSpent:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    numOfNotification++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printNotification(ModuleList list) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        getNumNotification(list);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (numOfNotification \u003d\u003d 0 || currentWeek \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(ON_TRACK + System.lineSeparator());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (Module mod : modList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ViewTimeBreakdownAnalysis breakDown \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Analysis analysis;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (mod.doesExpectedWorkLoadExist()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                analysis \u003d breakDown.computeAnalysisOfTimeSpent(mod, currentWeek);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                switch (analysis) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooMuchTimeSpent:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println(String.format(TOO_MUCH_TIME, mod.getModuleCode()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooLittleTimeSpent:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println(String.format(TOO_LITTLE_TIME, mod.getModuleCode()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        getNumNotification(list);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (numOfNotification \u003e 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"You have \" + numOfNotification + \" notifications.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(OPEN_NOTIFICATION);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 100
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected static boolean exit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDMOD \u003d \"addmod\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDTIME \u003d \"addtime\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDEXP \u003d \"addexp\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DELETEMOD \u003d \"deletemod\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DELETEEXP \u003d \"deleteexp\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String COMMAND_OPEN_NOTIFICATION \u003d \"open\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_MINUS \u003d \"minus\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String COMMAND_ANALYSIS \u003d \"analysis\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDTASK \u003d \"addtask\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DELETETASK \u003d \"deletetask\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_LISTTASK \u003d \"listtask\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public static final String COMMAND_RESET \u003d \"reset\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Parses user inputs."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param input   user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param modList module list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param name    name entered by the user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param storage storage object to load and store data"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param toPrint whether the UI should print the output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param taskList task list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse(String input, ModuleList modList, String name, Storage storage,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                      boolean toPrint, TaskList taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Notification notification \u003d new Notification();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert input !\u003d null : \"Input should not be null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String[] command \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        switch (command[0].toLowerCase()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDMOD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.addMod(input, toPrint, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDEXP:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.addExp(input, toPrint, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DELETEMOD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.deleteMod(input, toPrint, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DELETEEXP:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.deleteExp(input, toPrint, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        case COMMAND_OPEN_NOTIFICATION:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            notification.printNotification(modList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDTIME:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                modList.addTime(input, toPrint, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                System.out.println(\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_MINUS:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "                modList.minusTime(input, toPrint, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                System.out.println(\"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                ui.printTable(modList, Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                System.out.println(\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case COMMAND_ANALYSIS: // can help to update the params for this? thanks!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printBreakDownAnalysis(modList, 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDTASK:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "            taskList.addTask(input, toPrint, storage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DELETETASK:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "            taskList.deleteTasks(input, toPrint, storage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "            taskList.setDone(input, toPrint, storage);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_LISTTASK:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!input.toLowerCase().trim().equals(COMMAND_HELP)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printHelpList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!input.toLowerCase().trim().equals(COMMAND_EXIT)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printExitScreen(name);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                exit \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case COMMAND_RESET:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (ui.confirmReset()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.resetFile();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "                modList.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "                taskList.clear();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printInvalidCommand();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Checks for exit status."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return status of exit"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 3,
      "lhydl": 105,
      "kerct": 27,
      "KennethEer": 6
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Deals with loading tasks from and saving tasks to a file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a new Storage object with a File created at the specified file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param filePath File path whereby data is loaded from and stored at."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (filePath \u003d\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a scanner object to read the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Scanner to read the file of the Storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected Scanner getReader() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert file !\u003d null : \"File should not be null\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return new Scanner(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the username, if any."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Name found in the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Scanner reader \u003d getReader();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert reader !\u003d null : \"Reader should not be null\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (!reader.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return reader.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Loads the rest of the data from the file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void loadData(ModTracker modTracker) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Scanner reader \u003d getReader();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert reader !\u003d null : \"Reader should not be null\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert reader.hasNext() : \"First line should be filled with the name\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "        reader.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "            String input \u003d reader.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "            parser.parse(input, modTracker.getModList(), \"\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    this, false, modTracker.getTaskList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Appends the specified input to the storage file and creates a new line."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input to be appended to the file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void appendToFile(String input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert filePath !\u003d null : \"File path should not be null\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert file !\u003d null : \"File should not be null\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "            // creates a FileWriter in append mode"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.write(input + System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void resetFile() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d getName();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.write(name + System.lineSeparator());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void unlockFile() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerct"
        },
        "content": "        boolean unlock \u003d file.setWritable(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (!unlock) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Error setting file to be writable\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void lockFile() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "        boolean lock \u003d file.setReadOnly();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (!lock) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Error making data file read-only\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 123
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Creates a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected String modCode;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param modCode module code"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param description name of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public Task(String modCode, String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        this.modCode \u003d modCode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Gets the done status of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return isDone"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Returns a cross if task is not done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Returns a tick if task is done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return tick or cross symbol"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return (isDone ? \"/\" : \"X\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String getModCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return modCode;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Formats the display of tasks according to tasks type."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return the required display format depending on type of task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + \"[\" + modCode + \"] \" + description.trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 62
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Contains the task list and operations to manipulate the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public ModuleList modList \u003d new ModuleList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String MARKED_DONE_PREVIOUSLY \u003d \"Task is already marked as done previously.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String MARKED_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Marks a selected task as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Can only take in one task number at a time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param str input entered by user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void setDone(String str, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] digit \u003d str.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int num \u003d Integer.parseInt(digit[1]); //change string to int"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else if (num \u003c\u003d tasks.size() \u0026\u0026 num \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                if (tasks.get(num - 1).getDoneStatus()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    System.out.println(MARKED_DONE_PREVIOUSLY + System.lineSeparator());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    tasks.get(num - 1).setAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    if (toPrint) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                        System.out.println(MARKED_DONE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                        System.out.println(tasks.get(num - 1) + System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "                        storage.appendToFile(str);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidTaskNumber(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Deletes a selected task from the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Can only take in one task number at a time."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param str input entered by user"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void deleteTasks(String str, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] digit \u003d str.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int num \u003d Integer.parseInt(digit[1]); //change string to int"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else if (num \u003c\u003d tasks.size() \u0026\u0026 num \u003e 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    System.out.println(TASK_DELETED);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    System.out.println(tasks.get(num - 1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                tasks.remove(num - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    ui.printNumberOfTasks(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    storage.appendToFile(str);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidTaskNumber(taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param str input entered by user"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void addTask(String str, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] split \u003d str.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String modCode \u003d split[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!modList.checkIfModuleValid(modCode, true)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!modList.checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                /*Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                modList.modList.add(currentModule);*/"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            tasks.add(new Task(modCode, split[2]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printTaskIsAdded(taskList, modCode);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printNumberOfTasks(taskList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.appendToFile(str);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskData() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerct"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 102,
      "kerct": 27
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Text UI of the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    private static final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String ENTER_HELP \u003d \"Enter \u003chelp\u003e for a quick view of available commands.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String HELP_LIST \u003d \"Available Commands:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"1. addmod \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addmod CS2113T\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"2. addexp \u003cmodule code\u003e \u003cexpected workload\u003e\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addexp CS2113T 5\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"3. addtime \u003cmodule code\u003e \u003cactual time spent\u003e \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addtime CS2113T 2 1\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"4. list \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: list 2\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"5. deletemod \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: deletemod CS2113T\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"6. deleteexp \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: deleteexp CS2113T\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"7. minus \u003cmodule code\u003e \u003ctime\u003e \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: minus CS2113T 2 1\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"8. breakdown\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"9. addtask \u003cmodule code\u003e \u003ctask description\u003e\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addtask CS2113T revise for exam\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"10.deletetask \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: deletetask 1\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"11.done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: done 1\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"12.listtask\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "            + \"13.exit\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "            + \"14.reset\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String LOGO \u003d \"|\\\\\\\\        /|         |\u003d\u003d\u003d\u003d\u003d\u003d            ||\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||\\\\\\\\      / |  __   __|  ||  __  ___ ___ ||    ___   ____\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"|| \\\\\\\\    /  |//  \\\\//  |  ||//  \\\\/  |/    ||// / _ \\\\ //   \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||  \\\\\\\\  /   |||   ||  |  |||   ||  ||    ||\\\\\\\\ | __/ ||\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||   \\\\\\\\/    |\\\\\\\\__/\\\\\\\\__|  |||   \\\\\\\\__|\\\\___ || \\\\\\\\\\\\___| ||\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"*****************************************************|\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String BYE_LOGO \u003d  \"_______    _______\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||   \\\\\\\\\\\\  //||\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||___//\\\\\\\\// ||___\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||   \\\\\\\\ ||  ||\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||___// ||  ||____\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public static final String CONFIRMATION \u003d \"yes\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Reads input entered by the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return input entered by the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the invalid command line."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printInvalidCommand() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(INVALID_COMMAND);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(ENTER_HELP + System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the welcome screen when the program starts."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printWelcomeScreen() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Hello from\" + System.lineSeparator() + LOGO);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Full user guide available at: https://ay2021s1-cs2113t-f12-4.github.io/tp/\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(ENTER_HELP + System.lineSeparator());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prompts the user to enter his/her name."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String printNamePrompt() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String name \u003d in.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            printInvalidCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "            name \u003d printNamePrompt();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Greets the user by his/ her name."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printGreeting(String name) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Hello \" + name + \"!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"What can I do for you?\" + System.lineSeparator());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the exit line when user entered \"bye\"."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printExitScreen(String name) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"All changes saved.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(BYE_LOGO);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Bye \" + name + \". Hope to see you again soon!\" + System.lineSeparator());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints all the module information in a table."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param modList list of modules."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param week    specified week number."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTable(ModuleList modList, int week) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModView view \u003d new ModView();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(modList, week);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints all available commands."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printHelpList() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(HELP_LIST);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module does not exist."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printNotExist(String moduleCode) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(moduleCode + \" does not exist.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module exists."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printExist(String moduleCode) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(moduleCode + \" already exists.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module is deleted."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printDelete(String moduleCode) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(moduleCode + \" is removed.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"All tasks under \" + moduleCode + \" are deleted.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module is deleted."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printDeleteExp(String moduleCode) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Expected Workload of \" + moduleCode + \" is removed.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module is added to modList."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printAdd(Module moduleDetail) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(moduleDetail + \" is added.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Prints the given error message."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"There was an error :(\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(ENTER_HELP);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printBreakDownAnalysis(ModuleList modList, int week) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ViewTimeBreakdownAnalysis breakDown \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        breakDown.printTimeBreakDownAndAnalysis(modList, week);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the task added line when the user added a task to the task list."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printTaskIsAdded(TaskList list, String modCode) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task under \" + modCode + \":\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the number of tasks stored in the task list."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printNumberOfTasks(TaskList list) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } else if (tasks.size() \u003e 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"You currently have no task :-)\" + System.lineSeparator());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints invalid task number when task number entered does not exist."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printInvalidTaskNumber(TaskList list) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Invalid task number.\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Enter a task number from 1 to \" + tasks.size() + \".\" + System.lineSeparator());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints out the task list."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printTaskList(TaskList list) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"The current task list is empty.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                System.out.println(i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(); //adds a new line after the list"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Confirms with the user whether he/ she wants to clear all data."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return true if user wants to reset data."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public boolean confirmReset() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"---WARNING!---\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"This will delete all your past data.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"Type \u0027\" + CONFIRMATION + \"\u0027 if you wish to continue.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (input.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Okay, your data has been deleted :(\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"Reset not confirmed. Your data is safe :)\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 16,
      "lhydl": 161,
      "kerct": 38,
      "KennethEer": 34
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ViewTimeBreakdownAnalysis.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.justRight;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.noInput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.tooLittleTimeSpent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.tooMuchTimeSpent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class ViewTimeBreakdownAnalysis {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int LOWER_BOUND_OF_JUST_NICE \u003d -30;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String FULL_BAR \u003d \"█\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String HALF_BAR \u003d \"▌\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_INPUT \u003d \"NO INPUT\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String ACTUAL \u003d \"Actual   | \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String EXPECTED \u003d \"Expected | \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String ANALYSIS \u003d \"Analysis:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int UPPER_BOUND_OF_JUST_NICE \u003d 30;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String TOO_LITTLE_TIME_SPENT \u003d \"You seem to be spending too little time on the module.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"Perhaps you should spend more time on this module.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String JUST_RIGHT \u003d \"Good Job! Great time management!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String TOO_MUCH_TIME_SPENT \u003d \"Seems like you are spending too much time one this module.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"Do you perhaps need help for this module?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String MODULE_WEEK \u003d \"Module    Week \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int NONE \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_VALID_INPUTS \u003d \"None of the modules has any valid inputs.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MIN_WEEK_VALUE \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MAX_WEEK_VALUE \u003d 13;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String INVALID_WEEK_NUMBER \u003d \"Please input a week number between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String EMPTY_MODULE_LIST \u003d \"The module list is empty. Please input some modules to be tracked.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_TIME_SPENT \u003d \"Seems like you didn\u0027t spend any time on your modules this week.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the breakdown and analysis of the"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * time spent in the specified week."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTimeBreakDownAndAnalysis(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!validateInputs(list, weekNumber)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003e\u003d MIN_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003c\u003d MAX_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert !list.getData().isEmpty() : \"modList should not be empty\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printTime(list, weekNumber);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean toPrintAnalysis \u003d printBreakdown(list, weekNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (toPrintAnalysis) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            printAnalysis(list, weekNumber);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean validateInputs(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (weekNumber \u003c MIN_WEEK_VALUE || weekNumber \u003e MAX_WEEK_VALUE) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(INVALID_WEEK_NUMBER + System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.getData().isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(EMPTY_MODULE_LIST + System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the breakdown of the time spent in the specified week."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       class containing all the modules taken."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return true if total time spent on the modules is greater than zero, otherwise false."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean printBreakdown(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        double totalTimeSpent \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean modsWithValidInputExist \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                totalTimeSpent +\u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                modsWithValidInputExist \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!modsWithValidInputExist) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(NO_VALID_INPUTS + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Total time spent: \" + totalTimeSpent + \" H\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (totalTimeSpent \u003d\u003d NONE) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(NO_TIME_SPENT + System.lineSeparator());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                double actualTime \u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                if (actualTime \u003e NONE) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    int percentage;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    percentage \u003d (int) (actualTime * 100 / totalTimeSpent);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    System.out.println(percentage + \"% of time is spent on \" + m.getModuleCode());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    System.out.println(\"Seems like you didn\u0027t spend any time on \" + m.getModuleCode() + \" this week.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(\"No input for \" + m.getModuleCode());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the time spent in the specified week"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * in form of a horizontal bar graph."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTime(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(MODULE_WEEK + weekNumber + System.lineSeparator());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.print(ACTUAL);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                printBarGraph(m.getActualTime()[weekNumber - INDEX_OFFSET]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(NO_INPUT);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.print(EXPECTED);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesExpectedWorkLoadExist()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                printBarGraph(m.getExpectedWorkload());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(NO_INPUT);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the analysis of the time spent in the specified week."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printAnalysis(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(ANALYSIS);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Analysis analysis \u003d computeAnalysisOfTimeSpent(m, weekNumber);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            switch (analysis) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case tooMuchTimeSpent:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(TOO_MUCH_TIME_SPENT);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case justRight:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(JUST_RIGHT);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case tooLittleTimeSpent:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(TOO_LITTLE_TIME_SPENT);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case noInput:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Computes the analysis of actual time spent on the module for the week."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param m          module taken."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return analysis of actual time spent compare to the expected workload."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Analysis computeAnalysisOfTimeSpent(Module m, int weekNumber) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        double actualTime \u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int expectedTime \u003d m.getExpectedWorkload();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        double percentageDifference \u003d (actualTime - expectedTime) / expectedTime * 100.0;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return noInput;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (percentageDifference \u003c LOWER_BOUND_OF_JUST_NICE) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return tooLittleTimeSpent;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (percentageDifference \u003c UPPER_BOUND_OF_JUST_NICE || actualTime \u003d\u003d expectedTime) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return justRight;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return tooMuchTimeSpent;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void printBarGraph(double time) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean endsWithHalfBlock \u003d !hasDecimalPlaces(time);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (int i \u003d 0; i \u003c (int) time; i++) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output.append(FULL_BAR);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (endsWithHalfBlock) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output.append(HALF_BAR);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output.append(\" \").append(time);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean hasDecimalPlaces(double input) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return ((input * 10) % 10 \u003d\u003d 0);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 224,
      "KennethEer": 2
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModTrackerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "class ModTrackerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModViewTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "class ModViewTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final ModView view \u003d new ModView();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_emptyList_emptyModuleList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList emptyList \u003d new ModuleList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        emptyList.getData().clear();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.EMPTY_MODULE_LIST + System.lineSeparator()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_invalidWeekNumber_invalidWeekNumber() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList emptyList \u003d new ModuleList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        emptyList.getData().clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, 0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.INVALID_WEEK_NUMBER + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, -1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.INVALID_WEEK_NUMBER + System.lineSeparator()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, 14);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.INVALID_WEEK_NUMBER + System.lineSeparator()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_6CharLongModuleCode_tableAdjustedTo6Char() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"CS1231\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | CS1231 | No Input | No Input |\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_7CharLongModuleCode_tableAdjustedTo7Char() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"GER1000\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"-\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \" \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"-\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000 | No Input | No Input |\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"-\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_8CharLongModuleCode_tableAdjustedTo8Char() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"GER1000H\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \"  \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000H | No Input | No Input |\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_hasExpectedWorkload_displaysExpectedWorkLoad() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"GER1000H\", \"8\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \"  \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000H |     8    | No Input |\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_hasActualWorkload_displaysActualWorkLoad() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module mod \u003d new Module(\"GER1000H\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        mod.addActualTime(\"8\", \"1\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(mod);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \"  \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000H | No Input |    8.0   |\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 159
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModuleListMinusAddTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.MethodOrderer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.Order;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.TestMethodOrder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "@TestMethodOrder(MethodOrderer.OrderAnnotation.class)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "class ModuleListMinusAddTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String TEST_FILEPATH \u003d \"test/data/modlist.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    Storage storage \u003d new Storage(TEST_FILEPATH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    ModuleList modulesTest \u003d new ModuleList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void addTime_AddOnlyAnHour_ModuleWithoutActualWorkload_ModuleWithWorkloadAdded() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addMod(\"addmod CS3030\", true, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addTime(\"addtime CS3030 1 4\", true, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"1 hour has been added to CS3030\" + System.lineSeparator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(2)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void addTime_ModuleWithoutActualWorkload_ModuleWithWorkloadAdded() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addMod(\"addmod CS3030\", true, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addTime(\"addtime CS3030 4 4\", true, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"4 hours have been added to CS3030\" + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(3)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusTime_ModuleWithActualWorkload_ModuleWithWorkloadSubtracted() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.minusTime(\"minustime CS3030 2 4\", true, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"2 hours have been removed from CS3030\" + System.lineSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(4)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusTime_MinusOnlyAnHour_ModuleWithActualWorkload_ModuleWithWorkloadSubtracted() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.minusTime(\"minustime CS3030 1 4\", true, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"1 hour has been removed from CS3030\" + System.lineSeparator();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(5)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusTime_CheckIfHoursExceed() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.minusTime(\"minustime CS3030 5 4\", true, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"Sorry you are trying to remove too many hours\" + System.lineSeparator();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 80
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModuleListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "class ModuleListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String TEST_FILEPATH \u003d \"test/data/modlist.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    Storage storage \u003d new Storage(TEST_FILEPATH);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    ModuleList modulesTest \u003d new ModuleList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addExp_emptyModuleList_newModuleWithExpTimeAdded() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cModule\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Module testMod \u003d new Module(\"CS3030\", \"4\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        testList.add(testMod);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addExp(\"addExp CS3030 4\", true, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"CS3030, Expected Workload: 4h is added.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertArrayEquals(testList.toArray(), modulesTest.modList.toArray());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addModule_emptyModuleList_newModuleAdded() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"CS5000 is added.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addMod(\"addMod CS5000\", true, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(modulesTest.checkIfModuleExist(\"CS5000\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addModule_invalidInput_printErrorMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Please type addmod \u003cmodule code\u003e\" + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addMod(\"addMod\", true, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteModule_removeModule_ModuleRemoved() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"CS5000 is removed.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                + \"All tasks under CS5000 are deleted.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.deleteMod(\"deleteMod CS5000\", true, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertFalse(modulesTest.checkIfModuleExist(\"CS5000\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteModule_removeNonExistingModule_printErrorMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"CS0000 does not exist.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.deleteMod(\"deleteMod CS0000\", true, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteExp_ModuleWithExpTime_ModuleWithExpTimeRemoved() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.deleteExp(\"deleteExp CS3030\", true, storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Expected Workload of CS3030 is removed.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 2,
      "KennethEer": 83
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    ModuleList modList \u003d new ModuleList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_invalidInput_expectPrintInvalid() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input1 \u003d \"exit addmod \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input1, modList, null, null, true, null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d Ui.INVALID_COMMAND + System.lineSeparator() + Ui.ENTER_HELP + System.lineSeparator();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input2 \u003d \"addexps\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input2, modList, null, null, true, null);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input3 \u003d \"help 1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input3, modList, null, null, true, null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_blankInput_expectPrintInvalid() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, null, null, true, null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d Ui.INVALID_COMMAND + System.lineSeparator() + Ui.ENTER_HELP + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_exitInput_expectPrintExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"exit\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String name \u003d \"Lee\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, name, null, true, null);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"All changes saved.\" + System.lineSeparator() + Ui.BYE_LOGO + System.lineSeparator()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                + \"Bye \" + name + \". Hope to see you again soon!\" + System.lineSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_exitInput_expectExitStatusTrue() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"exit\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, null, null, true, null);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertTrue(parser.isExit());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_anyInput_expectExitStatusFalse() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"addexp \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, null, null, true, null);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertFalse(parser.isExit());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 75
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private static final String TEST_DATA_FILEPATH \u003d \"test/data/modtracker.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void constructor_nullFilePath_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Storage(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void testIfFileExists_validFilePath_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "        new Storage(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertTrue(new File(TEST_DATA_FILEPATH).isFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void getReader_validFilePath_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Storage storage \u003d new Storage(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertNotNull(storage.getReader());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void getName_validName_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Storage storage \u003d new Storage(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertEquals(\"John Doe\", storage.getName());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void load_validFormat_success() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ModTracker modTracker \u003d new ModTracker(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modTracker.getStorage().loadData(modTracker);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ModuleList actualModList \u003d modTracker.getModList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(actualModList.checkIfModuleExist(\"CS1000\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(actualModList.checkIfModuleExist(\"EE2000\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertFalse(actualModList.checkIfModuleExist(\"CS1231\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList actualTaskList \u003d modTracker.getTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertEquals(\"CS1000\", actualTaskList.getTaskData().get(0).getModCode());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertEquals(1, actualTaskList.getTaskData().size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 50,
      "KennethEer": 3
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/TaskListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void addTask_nonExistingModule_expectTaskNotAdded() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        taskList.addTask(\"addtask CS2101 study\", true, null);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"CS2101 does not exist.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void addTask_invalidModule_expectTaskNotAdded() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "        taskList.addTask(\"addtask cs21 study\", true, null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"Please check module code again. The module code should have \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                + \"6 - 8 characters without any spacing.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 31,
      "kerct": 4
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ViewTimeBreakdownAnalysisTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "class ViewTimeBreakdownAnalysisTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final ViewTimeBreakdownAnalysis view \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printBreakdown_modulesWithNoValidInput_printNoValidInputsReturnFalse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"10\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output \u003d view.printBreakdown(list, 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.NO_VALID_INPUTS + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printBreakdown_modulesWithValidInputButNoTimeSpent_printTimeSpentEqualsZeroReturnFalse() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module.addActualTime(\"0\", \"2\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output \u003d view.printBreakdown(list, 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d \"Total time spent: 0.0 H\" + System.lineSeparator()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.NO_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printBreakdown_modulesWithTimeEqualsZeroTimeEqualsFiveAndInvalidTime_ReturnTrue() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"5\", \"2\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"0\", \"2\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module3 \u003d new Module(\"CS2101\", \"8\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module3);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output \u003d view.printBreakdown(list, 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertTrue(output);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d \"Total time spent: 5.0 H\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"100% of time is spent on CS1231\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"Seems like you didn\u0027t spend any time on CS2113t this week.\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"No input for CS2101\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithInvalidInput_noInput() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"10\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithTooLittleTimeSpent_tooLitteTimeSpent() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"0\", \"2\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"5.6\", \"2\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_LITTLE_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS2113t\" + System.lineSeparator()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_LITTLE_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithJustRightTimeSpent_justRightTimeSpent() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"10.39\", \"2\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"5.61\", \"2\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.JUST_RIGHT + System.lineSeparator()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS2113t\" + System.lineSeparator()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.JUST_RIGHT + System.lineSeparator()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithTooMuchTimeSpent_tooMuchTimeSpent() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"10.4\", \"2\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"15\", \"2\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_MUCH_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS2113t\" + System.lineSeparator()"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_MUCH_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberLessThanMinListNotEmpty_returnFalse() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 0);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output2 \u003d view.validateInputs(list, -1);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output1);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output2);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberMoreThanMaxListNotEmpty_returnFalse() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 14);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberValidListNotEmpty_returnTrue() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 7);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertTrue(output1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberValidListIsEmpty_returnFalse() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 7);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output1);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printTime_actualTimeExistsExpectedWorkloadExist_barGraphForActualTimeAndExpectedWorkload() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"5\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"3.4\", \"2\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printTime(list, 2);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.MODULE_WEEK + \"2\" + System.lineSeparator()"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.ACTUAL + \"███▌ 3.4\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.EXPECTED + \"█████ 5.0\" + System.lineSeparator()"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printTime_actualTimeDoesNotExistExpectedWorkloadExist_noInputForActualTimeAndBarGraphForExpectedWorkload() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"5\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printTime(list, 2);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.MODULE_WEEK + \"2\" + System.lineSeparator()"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.ACTUAL + ViewTimeBreakdownAnalysis.NO_INPUT"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.EXPECTED + \"█████ 5.0\" + System.lineSeparator()"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printTime_actualTimeExistsNoExpectedWorkload_barGraphForActualTimeAndNoInputForExpectedWorkload() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"3.4\", \"2\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printTime(list, 2);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.MODULE_WEEK + \"2\" + System.lineSeparator()"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.ACTUAL + \"███▌ 3.4\""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.EXPECTED + ViewTimeBreakdownAnalysis.NO_INPUT + System.lineSeparator()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 317
    }
  },
  {
    "path": "test/data/modtracker.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "John Doe"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod cs1000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod ee2000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "addtask cs1000 revision"
      }
    ],
    "authorContributionMap": {
      "kerct": 2,
      "KennethEer": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod CS1000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod CS2113t"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addexp CS3000 6"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addexp CS3200 8"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "addexp CS1000 8"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "addtime CS1000 7 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "analysis 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "deletemod CS1000"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "deletemod cs2113t"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deletemod CS3200"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "exit"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 5,
      "lhydl": 1,
      "kerct": 2,
      "-": 1,
      "KennethEer": 5
    }
  }
]
