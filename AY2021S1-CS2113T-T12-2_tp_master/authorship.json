[
  {
    "path": "data/tasks.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "[T][/] hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "[D][X] project (by: 20-Jan-2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "[E][X] meeting (at: 20-Oct-2020)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "[T][X] hi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "[D][/] hi (by: 17-Oct-2021)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "[E][X] got it (at: 19-Nov-2020)"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 5,
      "JiawenLyu": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jingming | [Github](https://github.com/Jingming517/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "Jingming517": 1
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "[T][X] a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "[D][X] b (by: 17-May-2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "[D][X] c (by: 23-May-2019)"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/DateParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Extracts dates input by the user. Returns a LocalDate."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Default date format is ddMMyy for fastest date input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class DateParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    //@@author Jingming517 - reused with minor modification."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Converts date of a user input from a String to LocalDate."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param date string of date to process."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return date in LocalDate format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static LocalDate inputDateProcessor(String date) throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyy\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (date.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        LocalDate ld \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String valid \u003d ld.format(formatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (!valid.equals(date)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return ld;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    //@@author Jingming517 */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 10,
      "Jingming517": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Initializes the application and imports the data stored locally to the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param filePath Filepath of the storage data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "            storage.importData(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printNoImportDataMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Greets the user upon start up and exit."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Command c \u003d Parser.handleUserInput(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeBorder(true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "                c.execute(taskList, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeExceptionMessage(e, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeBorder(false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 50,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Signals an error caused by an invalid command input by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        exception \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.PrintEventsCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.PrintListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.PrintTimelineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.ProgressCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Determines the type of command input by the user and calls for the respective command function."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_PRINT_LIST \u003d \"print list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_PRINT_EVENTS \u003d \"print events\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String COMMAND_PRINT_TIMELINE \u003d \"print timeline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String COMMAND_SHOW_PROGRESS \u003d \"print progress\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static Command handleUserInput(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (userInput.equals(COMMAND_EXIT)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new ExitCommand(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else if (userInput.equals(COMMAND_PRINT_LIST)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            return new PrintListCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else if (userInput.equals(COMMAND_PRINT_EVENTS)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            return new PrintEventsCommand(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else if (userInput.equals(COMMAND_PRINT_TIMELINE)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            return new PrintTimelineCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_SHOW_PROGRESS)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return new ProgressCommand(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "            /** An invalid command is catered for in AddCommand */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new AddCommand(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 6,
      "imhm": 29,
      "JiawenLyu": 8,
      "Jingming517": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents the local file used to store the task list data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private static String storageFilePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"[/]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storageFilePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Writes to a text file the list of tasks. Creates a new storage file if the file does not exists."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList Contains the list of tasks to be saved."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void saveData(TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "        File output \u003d new File(storageFilePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        /** Attempts to create a file to store the data. */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "        createFile(output);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "            FileWriter fw \u003d new FileWriter(output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "                fw.write(t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printSaveDataErrorMessage(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Reads from a storage file and imports the tasks to a task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList Stores the tasks to this task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws FileNotFoundException if storage file does not exist."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void importData(TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "        File input \u003d new File(storageFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Scanner s \u003d new Scanner(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "            extractCommandFromStorage(s.nextLine(), taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printImportDataSuccessMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Creates a new storage file if the file does not exists."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param output Storage file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private static void createFile(File output) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (output.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (!output.getParentFile().exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "                output.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "            output.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printFileCreatedMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printFileCreateErrorMessage(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Determines the tasks\u0027 type and status, and adds them accordingly to the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private void extractCommandFromStorage(String command, TaskList taskList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String task \u003d command.substring(1, 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String isDone \u003d command.substring(3, 6);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDetails \u003d command.substring(7); // includes task\u0027s description and date"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDateString;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "        LocalDate taskDate;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": "        DateTimeFormatter storageDateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (task) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDescription \u003d taskDetails;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.addTask(new Todo(taskDescription));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": "            int indexEndOfDesc \u003d taskDetails.indexOf(\" (by: \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDetails \u003d taskDetails.replace(\"(by: \", \"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDescription \u003d taskDetails.substring(0, indexEndOfDesc);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDateString \u003d taskDetails.substring(indexEndOfDesc, taskDetails.length() - 1).trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDate \u003d LocalDate.parse(taskDateString, storageDateFormat);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.addTask(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "imhm"
        },
        "content": "            indexEndOfDesc \u003d taskDetails.indexOf(\" (at: \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDetails \u003d taskDetails.replace(\"(at: \", \"\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDescription \u003d taskDetails.substring(0, indexEndOfDesc);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDateString \u003d taskDetails.substring(indexEndOfDesc, taskDetails.length() - 1).trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDate \u003d LocalDate.parse(taskDateString, storageDateFormat);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.addTask(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (isDone.equals(TICK_SYMBOL)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.markTaskAsDone(taskList.getTotalTask());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 135
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDateParseError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Unable to parse date\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the input of the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @return user\u0027s input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the Duke welcome message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "        printDukeBorder(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \" Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \" What can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        printDukeBorder(false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the Duke exit message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the border of the chat box."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param top set to true to print the top border. Else, set to false to print the bottom border"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDukeBorder(boolean top) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (top) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"............. DUKE CHAT BOX ^^ ............\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"...........................................\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the task deleted and the number of tasks left in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumberDelete task number of the task to be deleted."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList         task list of the task to be deleted."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDeleteTaskMessage(int taskNumberDelete, TaskList taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "        /* - 1 is catered for array list\u0027s index starting from 0. */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Task deleted:\\n\" + taskList.getTaskList().get(taskNumberDelete - 1));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Your total tasks: \" + (taskList.getTotalTask() - 1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the list of tasks in the task list, formatted as an indexed list starting from 1."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList tasks retrieved from this task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printTaskListView(TaskList taskList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"This is your list of task(s):\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.printf(\"%d.\" + taskList.getTaskList().get(i) + \"\\n\", i + 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Shows the user all the event type of tasks in the task list,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * such as lecture, lab, tutorial and events."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList tasks retrieved from this task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEventsListView(TaskList taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int eventCounts \u003d 0;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"This is your list of event(s):\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (taskList.getTaskList().get(i).getTaskType().equals(\"E\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                eventCounts++;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                System.out.printf(\"%d.\" + taskList.getTaskList().get(i) + \"\\n\", eventCounts);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (eventCounts \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"Opps, there seems no events stored in your list!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the task (that was indicated by the user) that was marked as done ."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList            task list that has the task marked as done."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumberCompleted task number indicated by the user as done."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printCompleteTaskMessage(int taskNumberCompleted, TaskList taskList) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "imhm"
        },
        "content": "                \"Good work! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        + taskList.getTaskList().get(taskNumberCompleted - 1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the task that was added and the total number of tasks in the task list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the list of task that the task was added to."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printAddTaskMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "imhm"
        },
        "content": "        /* - 1 is catered for array list\u0027s index starting from 0. */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(taskList.getTaskList().get(taskList.getTaskList().size() - 1));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Your total tasks: \" + taskList.getTotalTask());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints all tasks that contains the keyword, including the task index in the task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the list of tasks being searched."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param keyword  keyword indicated by user."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if there are no tasks that contains the keyword."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFindTaskMessage(TaskList taskList, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (!isFound) { // first instance when keyword is found"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "imhm"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "imhm"
        },
        "content": "                System.out.println((i + 1) + \".\" + task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Show the user\u0027s progress on deadlines and todos."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param taskList the list of user tasks."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static void printProgress(TaskList taskList) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        int numFinished \u003d 0;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        int numTotal \u003d 0;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            if (task.getTaskType().equals(\"E\") || task.getTaskType().equals(\"D\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                numTotal++;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                if (task.getIsDone()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    numFinished++;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (numTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"You have no deadlines or todos now!\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            float progress \u003d (float) numFinished / numTotal * 100;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"You have finished \" + numFinished + \"/\" + numTotal"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", progress) + \"%) deadlines and todos.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the error message based on the invalid command input by the user."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e        type of error."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the working list of task."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDukeExceptionMessage(DukeException e, TaskList taskList) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (e.getException()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the deadline in this format: deadline ... /by ddMMyy\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the event in this format: event ... /at ddMMyy\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case \"lecture\":"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"Error: Please key in the event in this format: lecture ... / date time\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case \"tutorial\":"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"Error: Please key in the event in this format: tutorial ... / date time\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case \"lab\":"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"Error: Please key in the event in this format: lab ... / date time\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid command\":"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \"Available commands: print list, print events, print progress, done, \""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \"todo, deadline, event, find, delete, bye\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid task action\":"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Total task(s): \" + taskList.getTotalTask());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the command in this format: done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the command in this format: delete \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"keyword not found\":"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"There are no tasks matching this keyword. Check that you have spelt it correctly.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Unknown Error.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the exception that occurred when saving data to storage file."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e exception message."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printSaveDataErrorMessage(IOException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Unable to save data. Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the message to inform the user that no data was imported."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printNoImportDataMessage() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"No existing data imported.\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the message to inform the user that existing data was imported."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printImportDataSuccessMessage() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Existing data imported.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the exception that occurred when creating a storage file."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e exception message."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFileCreateErrorMessage(IOException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Cannot create file; reason: \" + e.getMessage());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the message to inform the user that an output file is created."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFileCreatedMessage() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"New output file created.\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 20,
      "imhm": 221,
      "JiawenLyu": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.task.Lecture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.task.Tutorial;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.task.Lab;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Adds a task to the task list, depending on what kind of task (event, deadline, todo) it is."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String LECTURE \u003d \"lecture\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String TUTORIAL \u003d \"tutorial\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String LAB \u003d \"lab\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public AddCommand(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Creates a task in the task list after determining what type of task (event, deadline, todo)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the updated task list in the storage after the new task is added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the task list to add the new task to."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage  the storage to be saved to."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the add command input is invalid."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String[] command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        command \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String commandType \u003d command[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "        LocalDate taskDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDescription \u003d command[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    taskList.addTask(new Todo(taskDescription));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "                command \u003d command[1].split(\"/by\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDate \u003d DateParser.inputDateProcessor(command[1].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    taskList.addTask(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "                command \u003d command[1].split(\"/at\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDate \u003d DateParser.inputDateProcessor(command[1].trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    taskList.addTask(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case LECTURE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                command \u003d command[1].split(\"/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                taskDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                command \u003d command[1].trim().split(\" \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    throw new DukeException(\"lecture\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    taskList.addTask(new Lecture(taskDescription, command[0], command[1]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                throw new DukeException(\"lecture\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case TUTORIAL:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                command \u003d command[1].split(\"/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                taskDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                command \u003d command[1].trim().split(\" \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    throw new DukeException(\"tutorial\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    taskList.addTask(new Tutorial(taskDescription, command[0], command[1]));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                throw new DukeException(\"tutorial\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case LAB:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                command \u003d command[1].split(\"/\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                taskDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                command \u003d command[1].trim().split(\" \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    throw new DukeException(\"lab\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    taskList.addTask(new Lab(taskDescription, command[0], command[1]));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                throw new DukeException(\"lab\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid command\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printAddTaskMessage(taskList);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 96,
      "JiawenLyu": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Command(String userInput) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Executes the command and throws a Duke exception when the command is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public abstract void execute(TaskList taskList, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns true if the command is exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Deletes the task of task number specified by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Deletes the task of task number specified by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the updated task list in the storage after the task is deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the task list to delete the task from."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage  the storage to be saved to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the delete command input is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int taskNumberDelete;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskNumberDelete \u003d Integer.parseInt(userInput.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (taskNumberDelete \u003e taskList.getTotalTask() || taskNumberDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid task action\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printDeleteTaskMessage(taskNumberDelete, taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.deleteTask(taskNumberDelete - 1); // - 1 to cater for index starting from 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Sets the task of task number specified by the user as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the task of task number specified by the user as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the updated task list in the storage after the task is marked as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the task list that contains the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage  the storage to be saved to."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the done command is invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int taskNumberCompleted;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskNumberCompleted \u003d Integer.parseInt(userInput.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (taskNumberCompleted \u003e taskList.getTotalTask() || taskNumberCompleted \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid task action\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.markTaskAsDone(taskNumberCompleted);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printCompleteTaskMessage(taskNumberCompleted, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Saves the current task list locally before terminating the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ExitCommand(String userInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the current task list locally."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the task list to be saved."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage  the storage to be saved to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printExitMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the isExit flag to true."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Searches the task list for tasks that contains the keyword specified by the user and prints them."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Searches the task list for tasks that contains the keyword specified by the user and prints them."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the task list to search from."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage  not required."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the keyword is not found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        keyword \u003d userInput.replace(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printFindTaskMessage(taskList, keyword);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintEventsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Lists all event type of tasks (such as lecture, lab, tutorial and events)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * in the task list to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class PrintEventsCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public PrintEventsCommand(String userInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Lists all event type of tasks (such as lecture, lab, tutorial and events)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * in the task list to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList the task list to list from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param storage  not required."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Ui.printEventsListView(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class PrintListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public PrintListCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the task list to list from."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage  not required."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printTaskListView(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 2,
      "imhm": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintTimelineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class PrintTimelineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public PrintTimelineCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        TaskList timelineList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        TaskList todoList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            Task temp \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            switch (taskList.getTask(i).getTaskType()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                timelineList.addTask(temp);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                todoList.addTask(temp);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        TaskList sortedList \u003d sortByDate(timelineList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"Here is your timeline:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int numberOfItems \u003d sortedList.getTotalTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"Timeline \\n|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i \u003d 0; i \u003c numberOfItems; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            if (i \u003d\u003d 0 || (sortedList.getTask(i - 1).getTime() !\u003d sortedList.getTask(i).getTime())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                System.out.println(\"|__ \" + sortedList.getTask(i).getTime());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"|        |__ \" + sortedList.getTask(i).toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public TaskList sortByDate(TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        TaskList sortingList \u003d taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            for (int j \u003d i + 1; j \u003c taskList.getTotalTask(); j++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                if (taskList.getTask(i).getTime() !\u003d null \u0026\u0026 taskList.getTask(j).getTime() !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    if (taskList.getTask(j).getTime().isBefore(taskList.getTask(i).getTime())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        sortingList.swapTasks(i, j);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return sortingList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 63
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ProgressCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Show the progress of deadlines and todos to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class ProgressCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public ProgressCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Show the progress of deadlines and todos to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param taskList the task list to list from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param storage  not required"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        Ui.printProgress(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JiawenLyu": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [D] icon to indicate task as a deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 8,
      "imhm": 24,
      "Jingming517": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [E] icon to indicate task as a event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 8,
      "imhm": 26,
      "Jingming517": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Lab.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Represents a lab event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class Lab extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public Lab(String description, String date, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Return a string to describe the lab task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[LAB]\" + super.toString() + \" (\" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JiawenLyu": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Lecture.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Represents a lecture event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class Lecture extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public Lecture(String description, String date, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Return a string to describe the lecture task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[LEC]\" + super.toString() + \" (\" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JiawenLyu": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a Task in the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the status of the task and the description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a tick if the task is done. Returns a cross if the task is not done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns empty string, will be overridden in different task types by"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * the corresponding task type."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return default task type is empty."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Get the state of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return the state of the task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 10,
      "imhm": 43,
      "JiawenLyu": 9,
      "Jingming517": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private int totalTask \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param task to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalTask++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Deletes the task from the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumber of the task to be deleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalTask--;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumber of the task that is completed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public int getTotalTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return totalTask;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void swapTasks(int i, int j) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        Collections.swap(taskList, i, j);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 54,
      "Jingming517": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [T] icon to indicate task as a todo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 8,
      "imhm": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Tutorial.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Represents a tutorial event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class Tutorial extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public Tutorial(String description, String date, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Return a string to describe the tutorial task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[TUT]\" + super.toString() + \" (\" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JiawenLyu": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": "deadline wrongcommand"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "find"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "delete"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "wrongcommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "done1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "delete1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "find no such keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "event project meeting /at 060606"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "deadline return book /by 080606"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "find book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "imhm": 20
    }
  }
]
