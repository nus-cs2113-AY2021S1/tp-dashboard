[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1\u0027"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"    implementation \u0027com.alibaba:fastjson:1.2.74\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"    mainClassName \u003d \"seedu.duke.Main\""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"    enableAssertions \u003d true"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"LIU-YiFeng-1"},"content":""}],"authorContributionMap":{"LIU-YiFeng-1":3,"imhm":3,"-":45}},{"path":"data/tasks.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"ACT|false|Interview Workshop|2020-11-13|12:00|CUBE|0"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":"ACT|false|meeting with CCA heads|2020-11-20|14:00|zoom|0"},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"EXAM|false|cs1010|2020-12-12|12:00|nus|1|this is online lesson"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"LEC|true|cs1010|2020-11-09|15:00|nus|0"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"LEC|false|cs1010|2020-11-16|15:00|nus|0"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":""}],"authorContributionMap":{"LIU-YiFeng-1":5,"JiawenLyu":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Liu Jingming | [Jingming517](https://github.com/Jingming517/) | [Portfolio](team/jingming517.md)"},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Liu Yifeng | [LIU-YiFeng-1](https://github.com/LIU-YiFeng-1/) | [Portfolio](team/liu-yifeng-1.md)"},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lyu Jiawen | [JiawenLyu](https://github.com/JiawenLyu/) | [Portfolio](team/jiawenlyu.md)"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ng Hong Ming | [imhm](https://github.com/imhm/) | [Portfolio](team/imhm.md)"},{"lineNumber":9,"author":{"gitId":"Zhangyilin0203"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhang Yilin | [Zhangyilin0203](https://github.com/Zhangyilin0203/) | [Portfolio](team/zhangyl.md)"}],"authorContributionMap":{"LIU-YiFeng-1":1,"imhm":1,"JiawenLyu":1,"-":5,"Zhangyilin0203":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Table of contents"},{"lineNumber":4,"author":{"gitId":"-"},"content":"- [Introduction](#introduction)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  * [What is 25HoursADay](#what-is-25hoursaday)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  * [Purpose and scope](#purpose-and-scope)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"- [Setting Up and Getting started](#setting-up-and-getting-started)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * [Setting up](#setting-up)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * [Getting started](#getting-started)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"- [Design](#design)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * [Architecture](#architecture)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * [Ui](#ui)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * [Parser](#parser)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * [Command](#command)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * [Storage](#storage)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * [Model](#model)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    + [Task](#task)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    + [Event](#event)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"- [Implementation](#implementation)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * [Add a calendar item feature](#add-a-calendar-item-feature)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * [Mark a task as done feature](#mark-a-task-as-done-feature)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * [Additional information of an event feature](#additional-information-of-an-event-feature)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    + [Add additional information](#add-additional-information)"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    + [View additional information](#view-additional-information)"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    + [Delete additional information](#delete-additional-information)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * [Delete a calendar item feature](#delete-a-calendar-item-feature)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * [Find a calendar item feature](#find-a-calendar-item-feature)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * [Print tasks feature](#print-tasks-feature)"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * [Print events feature](#print-events-feature)"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Print personal calendar feature](#print-personal-calendar-feature)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Prioritize a task feature](#prioritize-a-task-feature)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Print prioritized tasks feature](#print-prioritized-tasks-feature)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Print progress feature](#print-progress-feature)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Print suggestions feature](#print-suggestions-feature)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Print countdown feature](#print-countdown-feature)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Saving data feature](#saving-data-feature)"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Check the validity of a module code](#check-the-validity-of-a-module-code)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"- [Documentation](#documentation)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation guide](#documentation-guide)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    + [Setting up and maintaining the project website](#setting-up-and-maintaining-the-project-website)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    + [Style guidance](#style-guidance)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    + [Editing diagrams](#editing-diagrams)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    + [Converting a document to the PDF format](#converting-a-document-to-the-pdf-format)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Testing guide](#testing-guide)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"- [DevOps guide](#devops-guide)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Build automation](#build-automation)"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * [Continuous integration](#continuous-integration)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * [Make a release](#make-a-release)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"- [Appendix A: About the product](#appendix-a-about-the-product)"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  * [Product scope](#product-scope)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  * [Target user profile](#target-user-profile)"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  * [Value proposition](#value-proposition)"},{"lineNumber":53,"author":{"gitId":"-"},"content":"- [Appendix B: User Stories](#appendix-b-user-stories)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"- [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"- [Appendix D: Glossary](#appendix-d-glossary)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"- [Appendix E: Contact the initial developers](#appendix-e-contact-the-initial-developers)"},{"lineNumber":57,"author":{"gitId":"-"},"content":"- [Appendix F: Instructions for manual testing](#appendix-f-instructions-for-manual-testing)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  * [Command summary](#command-summary)"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"## Introduction"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"This section provides an introduction to the developer guide for *25HoursADay*."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"### What is 25HoursADay"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"*25HoursADay* is a scheduling app optimized for users via a convenient yet powerful Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, *25HoursADay* can schedule your tasks and events faster than traditional GUI apps."},{"lineNumber":65,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"### Purpose and scope"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"The purpose of this developer guide is to describe the architecture and software design decisions for the task scheduling application *25HoursADay*. This developer guide covers an overview of the program architecture, the logical view of major components, and the mechanism of the functions."},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"The intended audience of this guide are the developers and software testers of *25HoursADay*."},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"## Setting Up and Getting started"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":"This section provides on setting up the *25HoursADay* application."},{"lineNumber":73,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":74,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Setting up"},{"lineNumber":75,"author":{"gitId":"imhm"},"content":""},{"lineNumber":76,"author":{"gitId":"LIU-YiFeng-1"},"content":"Before diving into the project development and testing, here are some essential tools required in this project:"},{"lineNumber":77,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":78,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. **JAVA 11.0.8**"},{"lineNumber":79,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Launch your terminal and type \"java -version\" to ensure you have the correct version number"},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * If you have no Java installed or different version number, please proceed to this [website](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    to download the **Java 11.0.8** installer."},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. **Intellij IDEA**"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * If you are new to IntelliJ, please proceed to this [website](https://www.jetbrains.com/help/idea/installation-guide.html)"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"    to download and install the IDE."},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":"    "},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":"After installing the required tools, proceed to [Github Page](https://github.com/AY2021S1-CS2113T-T12-2/tp) and "},{"lineNumber":87,"author":{"gitId":"LIU-YiFeng-1"},"content":"fork the project to your own repository, and clone your fork into your working computer.    "},{"lineNumber":88,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":89,"author":{"gitId":"LIU-YiFeng-1"},"content":"Now, Open Intellij "},{"lineNumber":90,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. If you are not in the welcome screen, click `File` → `Close Project` to navigate to the starting project dialog)"},{"lineNumber":91,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Set up the correct JDK version for Gradle."},{"lineNumber":92,"author":{"gitId":"LIU-YiFeng-1"},"content":"        1. Click `Configure` → `Project Structure for New Project`"},{"lineNumber":93,"author":{"gitId":"LIU-YiFeng-1"},"content":"        1. Click `New...` and set it to the directory of the JDK"},{"lineNumber":94,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Upon the successful configuration, you should be able to see the following screenshot:"},{"lineNumber":95,"author":{"gitId":"LIU-YiFeng-1"},"content":"![JDK Config](images/JDK_Config_Screenshot.png)"},{"lineNumber":96,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Lastly, **Import the project as a Gradle Project.**"},{"lineNumber":97,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Intellij IDEA by default has the Gradle plugin installed. If you have disabled it, go to "},{"lineNumber":98,"author":{"gitId":"LIU-YiFeng-1"},"content":"    `File` → `Settings` → `Plugins` to re-enable them."},{"lineNumber":99,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Click Import Project (or Open or Import in newer version of Intellij)."},{"lineNumber":100,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Locate the **build.gradle file** (not the root folder as you would do in a normal importing) and select it. Click `OK`."},{"lineNumber":101,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * If asked, choose to `Open as Project` (not Open as File)."},{"lineNumber":102,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Click `OK` to accept the default settings but do ensure that the selected version of Gradle JVM matches the "},{"lineNumber":103,"author":{"gitId":"LIU-YiFeng-1"},"content":"    JDK being used for the project."},{"lineNumber":104,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Wait for the importing process to finish (may take a few minutes, so get some :coffee: :relaxed:)"},{"lineNumber":105,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. **Verify the set up**:"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    * Run the `..main/java/seedu.duke/Main`"},{"lineNumber":107,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Upon a successful configuration, you should be able to see the welcome screen of the project as shown below:"},{"lineNumber":108,"author":{"gitId":"LIU-YiFeng-1"},"content":"    ![verify_set_up](images/Verify_setup.PNG)"},{"lineNumber":109,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Run some tests to ensure it is working properly."},{"lineNumber":110,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":111,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Getting started"},{"lineNumber":112,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":113,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. **Configure the coding style**"},{"lineNumber":114,"author":{"gitId":"LIU-YiFeng-1"},"content":"If using IDEA, follow the guide If using IDEA, follow the guide [se-edu/guides IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html) "},{"lineNumber":115,"author":{"gitId":"LIU-YiFeng-1"},"content":"to set up IDEA’s coding style to match ours."},{"lineNumber":116,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":117,"author":{"gitId":"LIU-YiFeng-1"},"content":"    :bulb: Tips: Optionally, you can follow the guide  [se-edu/guides Using Checkstyle](https://se-education.org/guides/tutorials/checkstyle.html) "},{"lineNumber":118,"author":{"gitId":"LIU-YiFeng-1"},"content":"    to find how to use the CheckStyle within IDEA e.g., to report problems as you write code."},{"lineNumber":119,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. **Set up CI**"},{"lineNumber":120,"author":{"gitId":"LIU-YiFeng-1"},"content":"This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, "},{"lineNumber":121,"author":{"gitId":"LIU-YiFeng-1"},"content":"it will run the CI for your project automatically at each push to the master branch or to any PR. No set up required."},{"lineNumber":122,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. **Learn the design**"},{"lineNumber":123,"author":{"gitId":"imhm"},"content":"When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [*25HoursADay*’s architecture](#architecture)."},{"lineNumber":124,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":125,"author":{"gitId":"imhm"},"content":"## Design"},{"lineNumber":126,"author":{"gitId":"imhm"},"content":"This section describes the design overview of the *25HoursADay* application."},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"JiawenLyu"},"content":"### Architecture"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"imhm"},"content":"The figure below shows the overall design of the application. \u003cbr/\u003e"},{"lineNumber":131,"author":{"gitId":"LIU-YiFeng-1"},"content":"![overall_architecture](images/Overall_Architecture.JPG)"},{"lineNumber":132,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":133,"author":{"gitId":"imhm"},"content":"The sequence diagram below shows how the components interact with each other for the scenario where the user issues the command `todo`."},{"lineNumber":134,"author":{"gitId":"LIU-YiFeng-1"},"content":"![Archi_SD](images/Archi_SD.JPG)"},{"lineNumber":135,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":136,"author":{"gitId":"imhm"},"content":"An overview of each components is listed below."},{"lineNumber":137,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":138,"author":{"gitId":"JiawenLyu"},"content":"### Ui"},{"lineNumber":139,"author":{"gitId":"imhm"},"content":"The `Ui` class is responsible for the user interface of the application. It receives the input from the user and prints the results to the user."},{"lineNumber":140,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":141,"author":{"gitId":"JiawenLyu"},"content":"### Parser"},{"lineNumber":142,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":143,"author":{"gitId":"imhm"},"content":"The `Parser` class is responsible for interpreting the user\u0027s input and calling the respective command. "},{"lineNumber":144,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":145,"author":{"gitId":"JiawenLyu"},"content":"### Command"},{"lineNumber":146,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":147,"author":{"gitId":"imhm"},"content":"The different `Command` classes are responsible for receiving the user\u0027s input from the `Parser` class and executing the corresponding commands. "},{"lineNumber":148,"author":{"gitId":"imhm"},"content":"The figure belows shows the class diagram of the command class: \u003cbr/\u003e"},{"lineNumber":149,"author":{"gitId":"LIU-YiFeng-1"},"content":"![command.jpg](images/command.JPG)"},{"lineNumber":150,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":151,"author":{"gitId":"imhm"},"content":"All Command classes inherit from the `Command` class."},{"lineNumber":152,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":153,"author":{"gitId":"JiawenLyu"},"content":"### Storage"},{"lineNumber":154,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":155,"author":{"gitId":"imhm"},"content":"The `Storage` class is responsible for reading and writing data to the hard disk."},{"lineNumber":156,"author":{"gitId":"imhm"},"content":""},{"lineNumber":157,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":158,"author":{"gitId":"imhm"},"content":"### Model"},{"lineNumber":159,"author":{"gitId":"imhm"},"content":"The model is responsible for holding the data of the application in memory. The figure below shows the structure of the Model in this application."},{"lineNumber":160,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":161,"author":{"gitId":"LIU-YiFeng-1"},"content":"![Model_class_diagram](images/Model_Class_Diagram.JPG)"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"imhm"},"content":" When executing commands,the `CalendarItem` class updates the information or provides the information of different types of items if needed. "},{"lineNumber":164,"author":{"gitId":"imhm"},"content":"It is split into two subclasses: `Task` and `Event` class."},{"lineNumber":165,"author":{"gitId":"imhm"},"content":"The `CalendarList` class holds the array of `CalendarItem` and keeps track of the number of total items, total tasks, and total events."},{"lineNumber":166,"author":{"gitId":"imhm"},"content":""},{"lineNumber":167,"author":{"gitId":"imhm"},"content":"The `Task` and `Event` classes are further explained below."},{"lineNumber":168,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":169,"author":{"gitId":"JiawenLyu"},"content":"#### Task"},{"lineNumber":170,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"The `Task` class stores the information of all task items, including description and status, such as `isDone` and `isImportant`. "},{"lineNumber":172,"author":{"gitId":"imhm"},"content":"It has two subclasses: `Todo` and `Deadline`. `Deadline` items also have the date information and countdown for the deadline date, which are not included in `Todo` tasks. "},{"lineNumber":173,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":174,"author":{"gitId":"JiawenLyu"},"content":"#### Event"},{"lineNumber":175,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":176,"author":{"gitId":"imhm"},"content":"The `Event` class stores the information of all `Event` items, including date, time, venue, status whether it is overdue, and any other information if added. "},{"lineNumber":177,"author":{"gitId":"-"},"content":"It has two subclasses: `SchoolEvent` and `Activity`. `Activity` items can have other details."},{"lineNumber":178,"author":{"gitId":"imhm"},"content":"All `SchoolEvent` items must have a module code.  "},{"lineNumber":179,"author":{"gitId":"JiawenLyu"},"content":"Furthermore, the `SchoolEvent` class has four subclasses which are `Lecture`, `Tutorial`, `Lab`, and `Exam`. Among them only `Exam` items have a countdown for the exam date. "},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"Design consideration: `SchoolEvent` is modelled after classes in NUS to cater to our intended users."},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"imhm"},"content":"## Implementation"},{"lineNumber":184,"author":{"gitId":"imhm"},"content":"This section describes the details of how each feature is implemented."},{"lineNumber":185,"author":{"gitId":"imhm"},"content":""},{"lineNumber":186,"author":{"gitId":"JiawenLyu"},"content":"### Add a calendar item feature"},{"lineNumber":187,"author":{"gitId":"JiawenLyu"},"content":"This feature is facilitated by `AddCommand`."},{"lineNumber":188,"author":{"gitId":"imhm"},"content":"The following sequence diagram shows how the `execute()` operation works to add a `Todo` item:\u003cbr/\u003e"},{"lineNumber":189,"author":{"gitId":"LIU-YiFeng-1"},"content":"![add_command_sd](images/add_command_SD.JPG)"},{"lineNumber":190,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":191,"author":{"gitId":"imhm"},"content":"The following sequence diagram shows how the `execute()` operation works to add `Activity` or `Deadline` item. A"},{"lineNumber":192,"author":{"gitId":"imhm"},"content":" `Deadline` item is used as an example."},{"lineNumber":193,"author":{"gitId":"imhm"},"content":":\u003cbr/\u003e"},{"lineNumber":194,"author":{"gitId":"LIU-YiFeng-1"},"content":"![add_command_date_sd](images/add_command_date_SD.JPG)"},{"lineNumber":195,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":196,"author":{"gitId":"imhm"},"content":"The following sequence diagram shows how the `execute()` operation works to add a`SchoolEvent` item. An `Exam` item"},{"lineNumber":197,"author":{"gitId":"imhm"},"content":" is used as an example."},{"lineNumber":198,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":199,"author":{"gitId":"LIU-YiFeng-1"},"content":" ![add_command_module_sd](images/add_command_module_SD.JPG)"},{"lineNumber":200,"author":{"gitId":"imhm"},"content":""},{"lineNumber":201,"author":{"gitId":"imhm"},"content":"* Note: A self-call to a specific method to add the new `CalendarItem` to the `CalendarList` is done based on the type of"},{"lineNumber":202,"author":{"gitId":"-"},"content":" `CalendarItem` being added. The `CalendarItem` object created is also based on the type of `CalendarItem` being added. "},{"lineNumber":203,"author":{"gitId":"JiawenLyu"},"content":" "},{"lineNumber":204,"author":{"gitId":"imhm"},"content":"#### Check the validity of a module code"},{"lineNumber":205,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `ModuleChecker` class and `NusModule` class."},{"lineNumber":206,"author":{"gitId":"imhm"},"content":""},{"lineNumber":207,"author":{"gitId":"imhm"},"content":"The `NusModule` class consists of an empty constructor, a getter and setter to retrieve and set the module code of a `NusModule` object."},{"lineNumber":208,"author":{"gitId":"imhm"},"content":"The `ModuleChecker` class has a `generateNusModsMap()` which generates a `HashMap\u003cString, NusModule\u003e`. This is achieved by reading"},{"lineNumber":209,"author":{"gitId":"imhm"},"content":"the JSON file from the NUS Mod website and parser it into a list of Module objects."},{"lineNumber":210,"author":{"gitId":"imhm"},"content":""},{"lineNumber":211,"author":{"gitId":"imhm"},"content":"After which, the isModuleValid function will analyse the module code entered by the user, and returns TRUE if the code is "},{"lineNumber":212,"author":{"gitId":"imhm"},"content":"valid, FALSE otherwise."},{"lineNumber":213,"author":{"gitId":"imhm"},"content":""},{"lineNumber":214,"author":{"gitId":"imhm"},"content":"### Mark a task as done feature"},{"lineNumber":215,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `DoneCommand`."},{"lineNumber":216,"author":{"gitId":"imhm"},"content":"The following sequence diagram show how the `execute()` operation works:\u003cbr/\u003e"},{"lineNumber":217,"author":{"gitId":"LIU-YiFeng-1"},"content":"![done_command_sd](images/done_command_SD.JPG)"},{"lineNumber":218,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":219,"author":{"gitId":"imhm"},"content":"* Note: The command first extracts the task number from the user input prior to `convertTaskNumberToCalendarNumber`. "},{"lineNumber":220,"author":{"gitId":"imhm"},"content":"There will be a check in the function `markTaskAsDone(calendarNumber)` to ensure that the calendar item being marked as done is a task. "},{"lineNumber":221,"author":{"gitId":"imhm"},"content":""},{"lineNumber":222,"author":{"gitId":"imhm"},"content":""},{"lineNumber":223,"author":{"gitId":"imhm"},"content":"### Additional information of an event feature"},{"lineNumber":224,"author":{"gitId":"imhm"},"content":"#### Add additional information"},{"lineNumber":225,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `AddInfoCommand`."},{"lineNumber":226,"author":{"gitId":"imhm"},"content":"The following sequence diagram show how the `execute()` operation of `AddInfoCommand` works:\u003cbr/\u003e"},{"lineNumber":227,"author":{"gitId":"LIU-YiFeng-1"},"content":"![addInfoCommand_sd](images/addInfoCommand_SD.JPG)"},{"lineNumber":228,"author":{"gitId":"imhm"},"content":""},{"lineNumber":229,"author":{"gitId":"imhm"},"content":"#### View additional information"},{"lineNumber":230,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `ViewInfoCommand`."},{"lineNumber":231,"author":{"gitId":"imhm"},"content":""},{"lineNumber":232,"author":{"gitId":"imhm"},"content":"The following sequence diagram show how the `execute()` operation of `ViewInfoCommand` works:\u003cbr/\u003e"},{"lineNumber":233,"author":{"gitId":"LIU-YiFeng-1"},"content":"![viewInfoCommand_SD](images/viewInfoCommand_SD.JPG)"},{"lineNumber":234,"author":{"gitId":"imhm"},"content":""},{"lineNumber":235,"author":{"gitId":"imhm"},"content":"#### Delete additional information"},{"lineNumber":236,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `DeleteInfoCommand`."},{"lineNumber":237,"author":{"gitId":"imhm"},"content":""},{"lineNumber":238,"author":{"gitId":"imhm"},"content":"The following sequence diagram show how the `execute()` operation of `DeleteInfoCommand` works:\u003cbr/\u003e"},{"lineNumber":239,"author":{"gitId":"LIU-YiFeng-1"},"content":"![deleteInfoCommand_SD](images/deleteInfoCommand_SD.JPG)"},{"lineNumber":240,"author":{"gitId":"imhm"},"content":""},{"lineNumber":241,"author":{"gitId":"imhm"},"content":"* Note: The commands first extracts the event number from the user input prior to `convertEventNumberToCalendarNumber`. "},{"lineNumber":242,"author":{"gitId":"imhm"},"content":""},{"lineNumber":243,"author":{"gitId":"imhm"},"content":"### Delete a calendar item feature"},{"lineNumber":244,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `DeleteCommand`."},{"lineNumber":245,"author":{"gitId":"imhm"},"content":"The following sequence diagram show how the `execute()` operation works:\u003cbr/\u003e"},{"lineNumber":246,"author":{"gitId":"LIU-YiFeng-1"},"content":"![deleteCommand_sd](images/deleteCommand_SD.JPG)"},{"lineNumber":247,"author":{"gitId":"imhm"},"content":""},{"lineNumber":248,"author":{"gitId":"imhm"},"content":"* Note: The command first extracts the task/event number from the user input prior to `convertTaskNumberToCalendarNumber` and `convertEventNumberToCalendarNumber` respectively. "},{"lineNumber":249,"author":{"gitId":"imhm"},"content":""},{"lineNumber":250,"author":{"gitId":"imhm"},"content":""},{"lineNumber":251,"author":{"gitId":"imhm"},"content":"### Find a calendar item feature"},{"lineNumber":252,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `FindCommand`."},{"lineNumber":253,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the `execute()` operation works when the user searches the entire calendar.:\u003cbr/\u003e"},{"lineNumber":254,"author":{"gitId":"LIU-YiFeng-1"},"content":"![fidCommand_sd](images/findCommand_SD.JPG)"},{"lineNumber":255,"author":{"gitId":"imhm"},"content":""},{"lineNumber":256,"author":{"gitId":"imhm"},"content":"The search for tasks or events feature has a similar sequence diagram with a slight difference to the varying condition. Depending"},{"lineNumber":257,"author":{"gitId":"imhm"},"content":"on whether the user searches for tasks or events, the condition will check for the instance of either the task or event respectively."},{"lineNumber":258,"author":{"gitId":"imhm"},"content":""},{"lineNumber":259,"author":{"gitId":"imhm"},"content":"### Prioritize a task feature "},{"lineNumber":260,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `PrioritizeCommand`. "},{"lineNumber":261,"author":{"gitId":"imhm"},"content":"The following sequence diagram shows how the `execute()` operation works when the user wants to prioritize a task:\u003cbr/\u003e"},{"lineNumber":262,"author":{"gitId":"imhm"},"content":"![PrioritizeCommand](images/PrioritizeCommand_SD.png)"},{"lineNumber":263,"author":{"gitId":"imhm"},"content":""},{"lineNumber":264,"author":{"gitId":"imhm"},"content":"* Note: It first extracts the task number from the user input prior to convertTaskNumberToCalendarNumber. "},{"lineNumber":265,"author":{"gitId":"imhm"},"content":"There will be a check in the function `markTaskAsImportant(calendarNumber)` to ensure that the calendar item being marked as important is a task."},{"lineNumber":266,"author":{"gitId":"imhm"},"content":""},{"lineNumber":267,"author":{"gitId":"imhm"},"content":"### Print prioritized tasks feature"},{"lineNumber":268,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `PrintPriorityCommand`."},{"lineNumber":269,"author":{"gitId":"imhm"},"content":"The following sequence diagram shows how the `execute()` operation works when the user wants to print all the prioritized tasks:\u003cbr/\u003e"},{"lineNumber":270,"author":{"gitId":"imhm"},"content":"![PrintPriorityCommand_SD](images/PrintPriorityCommand_SD.png)"},{"lineNumber":271,"author":{"gitId":"imhm"},"content":""},{"lineNumber":272,"author":{"gitId":"imhm"},"content":"* Note: It uses the `getIsImportant()` function of task items to identify whether it is a prioritized task."},{"lineNumber":273,"author":{"gitId":"imhm"},"content":""},{"lineNumber":274,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Print tasks feature"},{"lineNumber":275,"author":{"gitId":"LIU-YiFeng-1"},"content":"This feature is facilitated by `PrintTasksCommand`."},{"lineNumber":276,"author":{"gitId":"LIU-YiFeng-1"},"content":"The following sequence diagram shows how the `execute()` operation works when the user wants to print the list of tasks stored in the program."},{"lineNumber":277,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_tasks_command_sd](images/PrintTasksCommand_SD.png)"},{"lineNumber":278,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":279,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Print events feature"},{"lineNumber":280,"author":{"gitId":"LIU-YiFeng-1"},"content":"This feature is facilitated by `PrintEventsCommand`."},{"lineNumber":281,"author":{"gitId":"LIU-YiFeng-1"},"content":"The following sequence diagram shows how the `execute()` operation works when the user wants to print the list of events stored in the program."},{"lineNumber":282,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_events_command_sd](images/PrintEventsCommand_SD.png)"},{"lineNumber":283,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Print personal calendar feature"},{"lineNumber":285,"author":{"gitId":"imhm"},"content":"This feature is facilitated by `PrintTimelineCommand`."},{"lineNumber":286,"author":{"gitId":"-"},"content":"The following sequence diagram show how the `execute()` operation works when the user wants to print the personalised calendar:\u003cbr/\u003e"},{"lineNumber":287,"author":{"gitId":"LIU-YiFeng-1"},"content":"![PrintTimelineCommand_SD](images/PrintTimelineCommand_SD.png)"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"JiawenLyu"},"content":"### Print progress feature"},{"lineNumber":290,"author":{"gitId":"JiawenLyu"},"content":"This feature is facilitated by `PrintProgressCommand`."},{"lineNumber":291,"author":{"gitId":"JiawenLyu"},"content":"The following sequence diagram shows how the `execute()` operation works when the user wants to see the progress of all tasks:\u003cbr/\u003e"},{"lineNumber":292,"author":{"gitId":"LIU-YiFeng-1"},"content":"![PrintProgressCommand_SD](images/PrintProgressCommand_SD.png)"},{"lineNumber":293,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":294,"author":{"gitId":"JiawenLyu"},"content":"### Print suggestions feature"},{"lineNumber":295,"author":{"gitId":"JiawenLyu"},"content":"This feature is facilitated by `PrintSuggestionCommand`."},{"lineNumber":296,"author":{"gitId":"JiawenLyu"},"content":"The following sequence diagram shows how the `execute()` operation works when the user wants to see suggestions about preparing which tasks:\u003cbr/\u003e"},{"lineNumber":297,"author":{"gitId":"LIU-YiFeng-1"},"content":"![PrintSuggestionCommand_SD](images/PrintSuggestionCommand_SD.png)"},{"lineNumber":298,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":299,"author":{"gitId":"imhm"},"content":"* Note: It uses `getEarliestDeadline()` function to get the earliest ordinary deadline in the list, and `getEarImportantDeadline()` function to get the earliest important deadline in the list."},{"lineNumber":300,"author":{"gitId":"JiawenLyu"},"content":"Similarly, it uses`getFirstTodo()` function to get the first added todo task in the list, and `getFirImportantTodo()` function to get the first added important todo task in the list."},{"lineNumber":301,"author":{"gitId":"JiawenLyu"},"content":"If no corresponding items, the functions will return null. Then it passes the return results to Ui, and Ui prints suggestions with respect to the importance and urgency of them."},{"lineNumber":302,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":303,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Print countdown feature"},{"lineNumber":304,"author":{"gitId":"LIU-YiFeng-1"},"content":"This feature is facilitated by `CountdownCommand`."},{"lineNumber":305,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":306,"author":{"gitId":"Zhangyilin0203"},"content":"The following sequence diagram shows how the `execute()` operation works when the user decide to see the countdown of exams and deadlines:\u003cbr/\u003e"},{"lineNumber":307,"author":{"gitId":"LIU-YiFeng-1"},"content":"![countdown_command_SD](images/countdown_command_SD.jpg)"},{"lineNumber":308,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":309,"author":{"gitId":"Zhangyilin0203"},"content":"The following sequence diagram shows how the `execute()` operation works when the user decide to see the countdown of exams or deadlines:\u003cbr/\u003e"},{"lineNumber":310,"author":{"gitId":"LIU-YiFeng-1"},"content":"![countdown_deadlines_exams_SD](images/countdown_deadlines_exams_SD.jpg)"},{"lineNumber":311,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":312,"author":{"gitId":"imhm"},"content":"* Note: Before printing the countdown, `countdown()` function will calculate the countdown of exams or deadlines, and the countdowns for"},{"lineNumber":313,"author":{"gitId":"Zhangyilin0203"},"content":"exams or deadlines will be sorted in ascending sequence by function `sortDeadlinesAndPrintCountdown()` or `sortExamsAndPrintCountdown()`"},{"lineNumber":314,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":315,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":316,"author":{"gitId":"Zhangyilin0203"},"content":"### Saving data feature"},{"lineNumber":317,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":318,"author":{"gitId":"Zhangyilin0203"},"content":"This feature is facilitated by `Storage` class and saves the data input by the users automatically into file `tasks.txt` in `/data` directory. "},{"lineNumber":319,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":320,"author":{"gitId":"Zhangyilin0203"},"content":"The file `tasks.txt` is loaded when initializing the program by calling the function `readFromFile()`."},{"lineNumber":321,"author":{"gitId":"LIU-YiFeng-1"},"content":"![storage_load_data_SD](images/storage_load_data_SD.jpg)"},{"lineNumber":322,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"The local file is updated every time when the user adds or deletes an item, "},{"lineNumber":324,"author":{"gitId":"Zhangyilin0203"},"content":"or changes the attributes of the item by calling the function `writeToFile()`."},{"lineNumber":325,"author":{"gitId":"LIU-YiFeng-1"},"content":"![storage_store_data_SD](images/storage_store_data_SD.jpg)"},{"lineNumber":326,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":327,"author":{"gitId":"imhm"},"content":"* Note: if the local file and directory does not exist at the beginning, `createFile()` will be called to create a new "},{"lineNumber":328,"author":{"gitId":"Zhangyilin0203"},"content":"directory, and a new text file."},{"lineNumber":329,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":330,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":331,"author":{"gitId":"Jingming517"},"content":"\u003c!-- @@author Jingming517 --\u003e"},{"lineNumber":332,"author":{"gitId":"Jingming517"},"content":"## Documentation"},{"lineNumber":333,"author":{"gitId":"Jingming517"},"content":"This section shows how the developer guide is documented."},{"lineNumber":334,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":335,"author":{"gitId":"Jingming517"},"content":"### Documentation guide"},{"lineNumber":336,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":337,"author":{"gitId":"Jingming517"},"content":"We use Markdown for writing documentation."},{"lineNumber":338,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":339,"author":{"gitId":"Jingming517"},"content":"#### Setting up and maintaining the project website"},{"lineNumber":340,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":341,"author":{"gitId":"Jingming517"},"content":"* We use Intellij\u0027s inbuilt markdown editor to maintain our documentations of this project"},{"lineNumber":342,"author":{"gitId":"Jingming517"},"content":"* And also the [Cayman](https://pages-themes.github.io/cayman/) to manage documentation.  "},{"lineNumber":343,"author":{"gitId":"Jingming517"},"content":"* The docs/ folder is used for documentation.  "},{"lineNumber":344,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":345,"author":{"gitId":"Jingming517"},"content":"#### Style guidance"},{"lineNumber":346,"author":{"gitId":"Jingming517"},"content":"* Follow the [Google developer documentation style guide](https://developers.google.com/style)."},{"lineNumber":347,"author":{"gitId":"Jingming517"},"content":"* Also relevant is the [[se-edu/guides] Markdown coding standard](https://se-education.org/guides/conventions/markdown.html)"},{"lineNumber":348,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":349,"author":{"gitId":"Jingming517"},"content":"#### Editing diagrams"},{"lineNumber":350,"author":{"gitId":"Jingming517"},"content":"* We use [diagrams.net](https://www.diagrams.net/) to draw UML diagrams used in this document."},{"lineNumber":351,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":352,"author":{"gitId":"Jingming517"},"content":"#### Converting a document to the PDF format"},{"lineNumber":353,"author":{"gitId":"Jingming517"},"content":"* We use Google Chrome for converting documentation to PDF format.  "},{"lineNumber":354,"author":{"gitId":"Jingming517"},"content":"* Here are the steps to convert the project documentation to PDF format:"},{"lineNumber":355,"author":{"gitId":"Jingming517"},"content":"  * Go to your generated documentation site on GitHub using Chrome."},{"lineNumber":356,"author":{"gitId":"Jingming517"},"content":"  * Within Chrome, click on the Print option in Chrome’s menu."},{"lineNumber":357,"author":{"gitId":"Jingming517"},"content":"  * Set the destination to Save as PDF, then click Save to save a copy of the file in PDF format."},{"lineNumber":358,"author":{"gitId":"Jingming517"},"content":"* See the guide [[se-edu/guides] Saving web documents as PDF files](https://se-education.org/guides/tutorials/savingPdf.html) for more details.  "},{"lineNumber":359,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":360,"author":{"gitId":"Jingming517"},"content":"### Testing guide"},{"lineNumber":361,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":362,"author":{"gitId":"Jingming517"},"content":"There are two ways to run tests."},{"lineNumber":363,"author":{"gitId":"Jingming517"},"content":"* Method 1: Using IntelliJ JUnit test runner"},{"lineNumber":364,"author":{"gitId":"Jingming517"},"content":"  * To run all tests, right-click on the src/test/java folder and choose Run Tests in `tp.test`"},{"lineNumber":365,"author":{"gitId":"Jingming517"},"content":"  * To run a subset of tests, you can right-click on a test package, test class, or a test and choose Run `DukeTest`"},{"lineNumber":366,"author":{"gitId":"Jingming517"},"content":"* Method 2: Using Gradle"},{"lineNumber":367,"author":{"gitId":"Jingming517"},"content":"  * Open a console and run the command `gradlew checkstyleMain` (Mac/Linux: ./gradlew checkstyleMain)  "},{"lineNumber":368,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":369,"author":{"gitId":"Jingming517"},"content":"\u003c!-- @@author --\u003e"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"LIU-YiFeng-1"},"content":"## DevOps guide"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"### Build automation"},{"lineNumber":375,"author":{"gitId":"LIU-YiFeng-1"},"content":"This project uses Gradle for **build automation and dependency management.**"},{"lineNumber":376,"author":{"gitId":"LIU-YiFeng-1"},"content":"You are highly recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":377,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":378,"author":{"gitId":"LIU-YiFeng-1"},"content":"Given below are how to use Gradle for some important project tasks."},{"lineNumber":379,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":380,"author":{"gitId":"LIU-YiFeng-1"},"content":"* `clean`: Deletes the files created during the previous build tasks (e.g. files in the `build` folder)."},{"lineNumber":381,"author":{"gitId":"LIU-YiFeng-1"},"content":"e.g. `./gradlew clean`"},{"lineNumber":382,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":383,"author":{"gitId":"LIU-YiFeng-1"},"content":"* `shadowJar`: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, if the current file is outdated."},{"lineNumber":384,"author":{"gitId":"LIU-YiFeng-1"},"content":"e.g. `./gradlew shadowJar`"},{"lineNumber":385,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":386,"author":{"gitId":"LIU-YiFeng-1"},"content":"* `run`: Builds and run the program."},{"lineNumber":387,"author":{"gitId":"LIU-YiFeng-1"},"content":"  `runShadow`: Builds the application as a fat JAR, and then runs it."},{"lineNumber":388,"author":{"gitId":"LIU-YiFeng-1"},"content":"    "},{"lineNumber":389,"author":{"gitId":"LIU-YiFeng-1"},"content":"* `checkstyleMain`: Runs the code style check for the main code base."},{"lineNumber":390,"author":{"gitId":"LIU-YiFeng-1"},"content":"  `checkstyleTest`: Runs the code style check for the test code base."},{"lineNumber":391,"author":{"gitId":"LIU-YiFeng-1"},"content":"  "},{"lineNumber":392,"author":{"gitId":"LIU-YiFeng-1"},"content":"* `test`: Runs all tests."},{"lineNumber":393,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * `./gradlew test` - Runs all tests"},{"lineNumber":394,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * `./gradlew clean test` - Cleans the project and runs tests"},{"lineNumber":395,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Continuous integration"},{"lineNumber":397,"author":{"gitId":"LIU-YiFeng-1"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files "},{"lineNumber":398,"author":{"gitId":"LIU-YiFeng-1"},"content":"(in the `.github/workflows` folder). No further setting up required."},{"lineNumber":399,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Make a release"},{"lineNumber":401,"author":{"gitId":"LIU-YiFeng-1"},"content":"Here are the stpes to create a new release after you have implemented new features."},{"lineNumber":402,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":403,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Update the version number in `Main.java`."},{"lineNumber":404,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Generate a fat JAR file using Gradle (i.e. `gradlew shadow`)."},{"lineNumber":405,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number e.g: `V2.1`."},{"lineNumber":406,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. [Create a new release using Github](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/managing-releases-in-a-repository)."},{"lineNumber":407,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Upload the JAR file you created."},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"imhm"},"content":"## Appendix A: About the product "},{"lineNumber":410,"author":{"gitId":"imhm"},"content":"This section provides a description of the product."},{"lineNumber":411,"author":{"gitId":"imhm"},"content":""},{"lineNumber":412,"author":{"gitId":"imhm"},"content":"### Product scope"},{"lineNumber":413,"author":{"gitId":"imhm"},"content":"*25HoursADay* is a task scheduling program optimized for use via a Command Line Interface (CLI) while still "},{"lineNumber":414,"author":{"gitId":"imhm"},"content":"having the benefits of a Graphical User Interface (GUI). It serves as a one-stop application for the users to keep track of their"},{"lineNumber":415,"author":{"gitId":"imhm"},"content":"tasks, events and any "},{"lineNumber":416,"author":{"gitId":"imhm"},"content":"It is specially catered to NUS students, offering features relevant to a NUS student. "},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Target user profile"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"imhm"},"content":"* NUS student"},{"lineNumber":421,"author":{"gitId":"LIU-YiFeng-1"},"content":"* has the need to manage a significant number of day-to-day matters"},{"lineNumber":422,"author":{"gitId":"LIU-YiFeng-1"},"content":"* prefer desktop command line apps over other types"},{"lineNumber":423,"author":{"gitId":"LIU-YiFeng-1"},"content":"* prefer typing to using mouse interactions"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* comfortable with using command line applications"},{"lineNumber":425,"author":{"gitId":"LIU-YiFeng-1"},"content":"* forgetful person who needs reminders"},{"lineNumber":426,"author":{"gitId":"LIU-YiFeng-1"},"content":"* a fast typer"},{"lineNumber":427,"author":{"gitId":"imhm"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Value proposition"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"By using *25HoursADay*, it provides an all-in-one application for the users to keep track of his/her day-to-day matters. Without the"},{"lineNumber":432,"author":{"gitId":"-"},"content":"need to search through different platforms for information, *25HoursADay* can manage one\u0027s day-to-day matters faster than a "},{"lineNumber":433,"author":{"gitId":"-"},"content":"typical mouse/GUI driven application."},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"imhm"},"content":"## Appendix B: User Stories"},{"lineNumber":436,"author":{"gitId":"imhm"},"content":"This section describes the user stories considered when implementing the features."},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":439,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":440,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"},{"lineNumber":441,"author":{"gitId":"LIU-YiFeng-1"},"content":"|v1.0|user|add different tasks and events|better manage my day-to-day matters|"},{"lineNumber":442,"author":{"gitId":"imhm"},"content":"|v1.0|user|set my tasks as done|track my tasks better|"},{"lineNumber":443,"author":{"gitId":"imhm"},"content":"|v1.0|user|delete my calendar items|remove unwanted items and organise my calendar better |"},{"lineNumber":444,"author":{"gitId":"-"},"content":"|v1.0|user|print all events and tasks separately|have a clear picture of what I have on hand|"},{"lineNumber":445,"author":{"gitId":"JiawenLyu"},"content":"|v1.0|user|see my progress of tasks|know the percentage of tasks I have finished and adjust my working pace| "},{"lineNumber":446,"author":{"gitId":"Zhangyilin0203"},"content":"|v1.0|user|store all the data locally|load my saved data to the app next time|"},{"lineNumber":447,"author":{"gitId":"imhm"},"content":"|v2.0|user|find an item in my calendar|locate an item without having to go through the entire list|"},{"lineNumber":448,"author":{"gitId":"imhm"},"content":"|v2.0|NUS student|add information about my classes|locate all the information about my class on this app|"},{"lineNumber":449,"author":{"gitId":"imhm"},"content":"|v2.0|NUS student|delete information about my classes|can keep the information about my class relevant at all times |"},{"lineNumber":450,"author":{"gitId":"JiawenLyu"},"content":"|v2.0|user|mark my tasks as important|distinguish important tasks and the ordinary tasks|"},{"lineNumber":451,"author":{"gitId":"-"},"content":"|v2.0|user|print calendar in timeline format|have a visual overview of all the items I have|"},{"lineNumber":452,"author":{"gitId":"-"},"content":"|v2.0|user|print timeline before a certain date|have an overview of current tasks and better manage my time|"},{"lineNumber":453,"author":{"gitId":"JiawenLyu"},"content":"|v2.0|user|get some suggestions when I do not know what to do|prepare for important and urgent tasks first|"},{"lineNumber":454,"author":{"gitId":"LIU-YiFeng-1"},"content":"|v2.0|NUS student|add my school events recursively|save my time typing out the events one by one|"},{"lineNumber":455,"author":{"gitId":"Zhangyilin0203"},"content":"|v2.0|NUS student|see the exam and deadline countdown|be conscious about the coming exams and deadlines and manage my time more wisely|"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"imhm"},"content":"## Appendix C: Non-Functional Requirements"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. The program should work on any _mainstream_ OS as long as it has **Java 11.0.8** or above installed."},{"lineNumber":460,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. The program should be able to hold up to 1000 tasks without a noticeable slowness in performance for typical usage."},{"lineNumber":461,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. A user with an above average typing speed for regular English text (e.g not code, not system admin commands) should "},{"lineNumber":462,"author":{"gitId":"LIU-YiFeng-1"},"content":"find it handy to use command lines rather than using the mouse."},{"lineNumber":463,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. The program should be able to detect all NUS modules, provided there is proper connection established between the program"},{"lineNumber":464,"author":{"gitId":"LIU-YiFeng-1"},"content":"and the NUS Mods API.   "},{"lineNumber":465,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":466,"author":{"gitId":"LIU-YiFeng-1"},"content":"{Give non-functional requirements; More to add}"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"imhm"},"content":"## Appendix D: Glossary"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"Zhangyilin0203"},"content":"* *Task* - a todo item or a deadline item."},{"lineNumber":471,"author":{"gitId":"LIU-YiFeng-1"},"content":"* *School event* - a lecture, tutorial, lab session or an examination."},{"lineNumber":472,"author":{"gitId":"imhm"},"content":"* *Event* - an activity or a school event."},{"lineNumber":473,"author":{"gitId":"imhm"},"content":"* *Calendar item* - a task or an event.\t"},{"lineNumber":474,"author":{"gitId":"Zhangyilin0203"},"content":"* *Task list* - a list that stores all the tasks added to the app."},{"lineNumber":475,"author":{"gitId":"Zhangyilin0203"},"content":"* *Event list* - a list that stores all the events added to the app."},{"lineNumber":476,"author":{"gitId":"Zhangyilin0203"},"content":"* *Calendar list* - a list that stores all the calendar items added to the app."},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"imhm"},"content":""},{"lineNumber":479,"author":{"gitId":"imhm"},"content":"## Appendix E: Contact the initial developers"},{"lineNumber":480,"author":{"gitId":"imhm"},"content":"The table below shows the information and contact details of developers."},{"lineNumber":481,"author":{"gitId":"imhm"},"content":""},{"lineNumber":482,"author":{"gitId":"imhm"},"content":"|Developer| Contact details | "},{"lineNumber":483,"author":{"gitId":"imhm"},"content":"|--------|----------|"},{"lineNumber":484,"author":{"gitId":"imhm"},"content":"|Liu Jingming|E0424608@u.nus.edu|"},{"lineNumber":485,"author":{"gitId":"imhm"},"content":"|Liu Yifeng|E0425960@u.nus.edu|"},{"lineNumber":486,"author":{"gitId":"imhm"},"content":"|Lyu Jiawen|E0376928@u.nus.edu|"},{"lineNumber":487,"author":{"gitId":"imhm"},"content":"|Ng Hong Ming|E0426149@u.nus.edu|"},{"lineNumber":488,"author":{"gitId":"imhm"},"content":"|Zhang Yilin|E0377000@u.nus.edu|"},{"lineNumber":489,"author":{"gitId":"imhm"},"content":""},{"lineNumber":490,"author":{"gitId":"imhm"},"content":"## Appendix F: Instructions for manual testing"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"imhm"},"content":"General steps for manual testing:"},{"lineNumber":493,"author":{"gitId":"imhm"},"content":"1. Execute an \"Add\" action.  "},{"lineNumber":494,"author":{"gitId":"imhm"},"content":"2. Execute a \"Delete\" / \"Find\" / \"Print\" / \"Set\" / \"View\" action of the same command type."},{"lineNumber":495,"author":{"gitId":"imhm"},"content":""},{"lineNumber":496,"author":{"gitId":"Zhangyilin0203"},"content":"Printing the countdown of exams"},{"lineNumber":497,"author":{"gitId":"Zhangyilin0203"},"content":"1. Prerequisites: add some `exam` events into the `calendarList`."},{"lineNumber":498,"author":{"gitId":"Zhangyilin0203"},"content":"2. Test case: `countdown exams`"},{"lineNumber":499,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":500,"author":{"gitId":"Zhangyilin0203"},"content":"   Expected: The countdown of the exams will be calculated for you. And the countdown of all upcoming exams will be printed. "},{"lineNumber":501,"author":{"gitId":"Zhangyilin0203"},"content":"   "},{"lineNumber":502,"author":{"gitId":"Zhangyilin0203"},"content":"3. Test case: `countdown 12345678`"},{"lineNumber":503,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":504,"author":{"gitId":"Zhangyilin0203"},"content":"   Expected: No countdown will be calculated and printed. Error details will be shown in the exception message given to you."},{"lineNumber":505,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":506,"author":{"gitId":"imhm"},"content":"Refer to [Command Summary](#command-summary) to view the list of actions, command types and command format.   "},{"lineNumber":507,"author":{"gitId":"-"},"content":"Refer to [User Guide](https://ay2021s1-cs2113t-t12-2.github.io/tp/UserGuide.html) to view the other commands and their expected output."},{"lineNumber":508,"author":{"gitId":"imhm"},"content":""},{"lineNumber":509,"author":{"gitId":"imhm"},"content":"### Command summary"},{"lineNumber":510,"author":{"gitId":"imhm"},"content":"The following table contains the list of commands available in the application."},{"lineNumber":511,"author":{"gitId":"imhm"},"content":""},{"lineNumber":512,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Term| Meaning | Command Format|"},{"lineNumber":513,"author":{"gitId":"LIU-YiFeng-1"},"content":"|--------|----------------|--------|"},{"lineNumber":514,"author":{"gitId":"imhm"},"content":"|Add|activity event|`act \u003cactivity_description\u003e @\u003cvenue\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":515,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|additional information for an event|`/a \u003cevent_number\u003e - \u003cadditional_information\u003e`|"},{"lineNumber":516,"author":{"gitId":"imhm"},"content":"|Add|deadline task|`deadline \u003ctask_description\u003e / \u003cdue_date\u003e`|"},{"lineNumber":517,"author":{"gitId":"imhm"},"content":"|Add|exam event|`exam \u003cmodule_name\u003e @\u003cvenue\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":518,"author":{"gitId":"imhm"},"content":"|Add|lab event|`lab \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003crecurring_number\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":519,"author":{"gitId":"imhm"},"content":"|Add|lecture event|`lect \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003crecurring_number\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":520,"author":{"gitId":"imhm"},"content":"|Add|todo task|`todo \u003ctask_description\u003e`|"},{"lineNumber":521,"author":{"gitId":"imhm"},"content":"|Add|tutorial event|`tut \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003crecurring_number\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":522,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Delete|additional information for an event|`/- \u003cevent_number\u003e a \u003cadditional_information_number\u003e`|"},{"lineNumber":523,"author":{"gitId":"imhm"},"content":"|Delete|events|`-e \u003cevent_number\u003e`|"},{"lineNumber":524,"author":{"gitId":"imhm"},"content":"|Delete|tasks|`-t \u003ctask_number\u003e`|"},{"lineNumber":525,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Find|all calendar items|`/f \u003ckeyword\u003e`|"},{"lineNumber":526,"author":{"gitId":"imhm"},"content":"|Find|events|`/fe \u003ckeyword\u003e`|"},{"lineNumber":527,"author":{"gitId":"imhm"},"content":"|Find|tasks|`/ft \u003ckeyword\u003e`|"},{"lineNumber":528,"author":{"gitId":"imhm"},"content":"|Print|countdown for all items|`countdown`|"},{"lineNumber":529,"author":{"gitId":"imhm"},"content":"|Print|countdown for deadlines|`countdown deadlines`|"},{"lineNumber":530,"author":{"gitId":"imhm"},"content":"|Print|countdown for exams|`countdown exams`|"},{"lineNumber":531,"author":{"gitId":"imhm"},"content":"|Print|events|`print events`|"},{"lineNumber":532,"author":{"gitId":"imhm"},"content":"|Print|important tasks|`print *`|"},{"lineNumber":533,"author":{"gitId":"imhm"},"content":"|Print|progress|`print progress`|"},{"lineNumber":534,"author":{"gitId":"imhm"},"content":"|Print|tasks|`print tasks`|"},{"lineNumber":535,"author":{"gitId":"imhm"},"content":"|Print|timeline (default)|`print timeline`|"},{"lineNumber":536,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline before a date|`print timeline date \u003cdate\u003e`|"},{"lineNumber":537,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline for the next 31 days|`print timeline month`|"},{"lineNumber":538,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline for the next 7 days|`print timeline week`|"},{"lineNumber":539,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Quit|exit the application|`bye`|"},{"lineNumber":540,"author":{"gitId":"imhm"},"content":""},{"lineNumber":541,"author":{"gitId":"imhm"},"content":""},{"lineNumber":542,"author":{"gitId":"imhm"},"content":""},{"lineNumber":543,"author":{"gitId":"imhm"},"content":""},{"lineNumber":544,"author":{"gitId":"imhm"},"content":""},{"lineNumber":545,"author":{"gitId":"imhm"},"content":""},{"lineNumber":546,"author":{"gitId":"imhm"},"content":""},{"lineNumber":547,"author":{"gitId":"imhm"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"LIU-YiFeng-1":139,"imhm":177,"JiawenLyu":42,"-":117,"Jingming517":39,"Zhangyilin0203":39}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"# 25HoursADay"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"*25HoursADay* is a scheduling application optimized for users via a convenient yet powerful Command Line Interface (CLI) "},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, *25HoursADay* can "},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"schedule your tasks and events faster than traditional GUI apps."},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Target User Profile"},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. All NUS Students"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Feature List (for V2.0)"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Personalised Calendar "},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * View available commands\t"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Add a task"},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Mark a task as done"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Add an event"},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Add additional information of an event"},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Delete a calendar item"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Prioritize tasks"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Find a calendar item"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Print tasks"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Print events"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Print important tasks"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Print progress"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Give suggestion"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Print timeline"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * weekly timeline"},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * monthly timeline"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * specific timeline for a day"},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Print countdown"},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"* General"},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Showing welcome message and exit message"},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Saving of Calendar items into text file automatically"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * Loading of past Calendar items from text file"},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Useful links:"},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [User Guide](https://ay2021s1-cs2113t-t12-2.github.io/tp/UserGuide.html)"},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Developer Guide](https://ay2021s1-cs2113t-t12-2.github.io/tp/DeveloperGuide.html)"},{"lineNumber":46,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [About Us](https://ay2021s1-cs2113t-t12-2.github.io/tp/AboutUs.html)"}],"authorContributionMap":{"LIU-YiFeng-1":41,"imhm":3,"-":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Table of Contents"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Introduction](#introduction)"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Foreword](#foreword)"},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Important Notes](#important-notes)"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Quick Start](#quick-start)"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Features](#features)"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Viewing available commands](#viewing-available-commands)"},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Adding a task](#adding-a-task)"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Adding a todo task](#adding-a-todo-task)"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Adding a deadline task](#adding-a-deadline-task)"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Adding an event](#adding-an-event)"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Adding an activity event](#adding-an-activity-event)"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Adding an examination event](#adding-an-examination-event)"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Adding recurring laboratory events](#adding-recurring-laboratory-events)"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"        * [Adding recurring lecture events](#adding-recurring-lecture-events)"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"        * [Adding recurring tutorial events](#adding-recurring-tutorial-events)"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Adding additional information of an event](#adding-additional-information-to-an-event)"},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Viewing additional information of an event](#viewing-the-additional-information-of-an-event)"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    * [Deleting additional information of an event](#deleting-the-additional-information-of-an-event)"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Marking a task as done](#marking-a-task-as-done)"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Deleting a calendar item](#deleting-a-calendar-item)"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Deleting a task](#deleting-a-task)"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Deleting an event](#deleting-an-event)"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Finding a calendar item](#finding-a-calendar-item)"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Finding an item from the calendar list](#finding-an-item-from-the-calendar-list)"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Finding an item from the task list](#finding-an-item-from-the-task-list)"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Finding an item from the event list](#finding-an-item-from-the-event-list)"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Prioritizing task](#prioritizing-a-task)"},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Printing tasks](#printing-tasks)"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Printing events](#printing-events)"},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Printing progress](#printing-progress)"},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Giving suggestion](#giving-suggestion)"},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Printing timeline](#printing-timeline)"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Printing default calendar](#printing-default-calendar)"},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Printing calendar for the next 7 days](#printing-calendar-for-the-next-7-days)"},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Printing calendar for the next 31 days](#printing-calendar-for-the-next-31-days)"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Printing calendar before a specific date](#printing-calendar-before-a-specific-date)"},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Printing countdown](#printing-countdown)"},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [Printing countdown of both deadline and exam events](#printing-countdown-of-both-deadline-and-exam-events)"},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [printing countdown for deadline tasks only](#printing-countdown-for-deadline-tasks-only)"},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":"        * [printing countdown for exam events only](#printing-countdown-for-exam-events-only)"},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Saving the data](#saving-the-data)"},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * [Exiting the application](#exiting-the-application)"},{"lineNumber":46,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Frequently Asked Questions (FAQ)](#faq)"},{"lineNumber":47,"author":{"gitId":"LIU-YiFeng-1"},"content":"* [Command summary](#command-summary)"},{"lineNumber":48,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"LIU-YiFeng-1"},"content":"**_25HoursADay_** is a scheduling application optimized for users via a convenient yet powerful Command Line Interface (CLI) "},{"lineNumber":52,"author":{"gitId":"LIU-YiFeng-1"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, **_25HoursADay_** can "},{"lineNumber":53,"author":{"gitId":"LIU-YiFeng-1"},"content":"schedule your tasks and events faster than traditional GUI applications."},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Foreword"},{"lineNumber":56,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":57,"author":{"gitId":"LIU-YiFeng-1"},"content":"**_25HoursADay_** is targeted towards students from National University of Singapore (NUS). This user guide is designed "},{"lineNumber":58,"author":{"gitId":"LIU-YiFeng-1"},"content":"to provide documentation for potential users who will use **_25HoursADay_** on a day-to-day basis. This document will provide a "},{"lineNumber":59,"author":{"gitId":"LIU-YiFeng-1"},"content":"step-by-step guide to show you how to access following features of the application:"},{"lineNumber":60,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":61,"author":{"gitId":"LIU-YiFeng-1"},"content":"1)\tView available commands of the application"},{"lineNumber":62,"author":{"gitId":"LIU-YiFeng-1"},"content":"2)\tAdd tasks and events to the application"},{"lineNumber":63,"author":{"gitId":"LIU-YiFeng-1"},"content":"3)\tView your personalized calendar and the items available"},{"lineNumber":64,"author":{"gitId":"LIU-YiFeng-1"},"content":"4)\tSearch an item in the application"},{"lineNumber":65,"author":{"gitId":"LIU-YiFeng-1"},"content":"5)\tPrioritize your tasks and keep track of your progress"},{"lineNumber":66,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":67,"author":{"gitId":"LIU-YiFeng-1"},"content":"After familiarizing with all the functionalities, you will definitely be able to better manage your day-to-day matters. Feeling excited? Let’s begin!"},{"lineNumber":68,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":69,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Important Notes"},{"lineNumber":70,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":71,"author":{"gitId":"LIU-YiFeng-1"},"content":"Before we jump into the main content, kindly read this section before proceeding to the feature section for a better understanding of it. This section consists of the legends and common terminology used in the feature section."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"LIU-YiFeng-1"},"content":"The following table shows the list of legends used in this document:"},{"lineNumber":74,"author":{"gitId":"LIU-YiFeng-1"},"content":"![table_of_legeng](images/Table1_legeng.PNG)"},{"lineNumber":75,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":76,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":77,"author":{"gitId":"LIU-YiFeng-1"},"content":"The following table displays the list of terminologies used in this document:"},{"lineNumber":78,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":79,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Term| Meaning | "},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"|--------|----------|"},{"lineNumber":81,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Task|A to-do item or a deadline item|"},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Event|An activity or a school event|"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"|School event|Lecture, tutorial, laboratory session or examination|"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Task list|List of tasks*|"},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Event list|List of events*|"},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Task number|Refers to the index of the task in the task list|"},{"lineNumber":87,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Event number|Refers to the index of the event in the event list|"},{"lineNumber":88,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Calendar item| A Task or an Event|"},{"lineNumber":89,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Calendar list|List of calendar items|"},{"lineNumber":90,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":91,"author":{"gitId":"LIU-YiFeng-1"},"content":"*You may view your task list and event list using the `print tasks` and `print events` feature respectively."},{"lineNumber":92,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":93,"author":{"gitId":"LIU-YiFeng-1"},"content":"**！！！Caution！！!**"},{"lineNumber":94,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":95,"author":{"gitId":"LIU-YiFeng-1"},"content":"**1. All command parameters used in **_25HoursADay_** are case-sensitive!**"},{"lineNumber":96,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":97,"author":{"gitId":"LIU-YiFeng-1"},"content":"For example: "},{"lineNumber":98,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":99,"author":{"gitId":"LIU-YiFeng-1"},"content":"`help` is a valid command while `HELP` is an invalid command!"},{"lineNumber":100,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":101,"author":{"gitId":"LIU-YiFeng-1"},"content":"**2. All command parameters are not allowed to be used as user inputs!**"},{"lineNumber":102,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":103,"author":{"gitId":"LIU-YiFeng-1"},"content":"For example:"},{"lineNumber":104,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":105,"author":{"gitId":"LIU-YiFeng-1"},"content":"`@`, `/`, `-`, `*` and `-r` are intended command parameters and are not allowed to be used as place holders! "},{"lineNumber":106,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":107,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":108,"author":{"gitId":"LIU-YiFeng-1"},"content":"**3. All user inputs will be trimmed!**"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Quick Start"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Ensure you have Java 11.0.8 installed."},{"lineNumber":113,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Download the latest version of the project file **_25HoursADay.jar_** and the JSON data file **_NUS_Mod_info.json_** from [here](https://github.com/AY2021S1-CS2113T-T12-2/tp/releases/tag/V2.1)."},{"lineNumber":114,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Copy the JAR file and the JSON data file to the same folder that you want to use as the _home folder_ for the project file."},{"lineNumber":115,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. In the _Command Prompt_, navigate to the working directory of the _home folder_ before starting the application."},{"lineNumber":116,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Type the command \"java -jar\" and drag the downloaded **_25HoursADay.jar_** onto the command box and press _Enter_ to start the application."},{"lineNumber":117,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. The _Command Prompt_ should display a similar output as shown in the figure below:"},{"lineNumber":118,"author":{"gitId":"LIU-YiFeng-1"},"content":"    ![Screen_Shot_of_welcome_message](images/Verify_setup.PNG)"},{"lineNumber":119,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Type the command in the _Command Prompt_ and press _Enter_ to execute it. "},{"lineNumber":120,"author":{"gitId":"LIU-YiFeng-1"},"content":"    * E.g. typing `help` and pressing _Enter_ will display the help information."},{"lineNumber":121,"author":{"gitId":"LIU-YiFeng-1"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"LIU-YiFeng-1"},"content":"This section provides the features **_25HoursADay_** has to offer. It entails a brief description of what it does and how to use it."},{"lineNumber":126,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":127,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Viewing available commands:"},{"lineNumber":128,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":129,"author":{"gitId":"LIU-YiFeng-1"},"content":"As a first-time user, you can always type `help` in the terminal to view the list of available commands. "},{"lineNumber":130,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":131,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `help`"},{"lineNumber":132,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":133,"author":{"gitId":"LIU-YiFeng-1"},"content":"![Screen_Shot_of_help_command](images/Help_Command.PNG)"},{"lineNumber":134,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":135,"author":{"gitId":"LIU-YiFeng-1"},"content":"![wanring_message_for_help](images/warning_help_command.PNG)"},{"lineNumber":136,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":137,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Adding a task:"},{"lineNumber":138,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":139,"author":{"gitId":"LIU-YiFeng-1"},"content":"Are you sometimes overwhelmed by different tasks and not sure how to document them properly? Why not just use our task adding features? This feature allows you to add 2 types of tasks:"},{"lineNumber":140,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":141,"author":{"gitId":"LIU-YiFeng-1"},"content":"•\tTodo task which has no specific due date and just serves as a reminder for your day to day matters."},{"lineNumber":142,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":143,"author":{"gitId":"LIU-YiFeng-1"},"content":"•\tDeadline tasks which has a specific due date and the application has a count down feature to monitor them."},{"lineNumber":144,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":145,"author":{"gitId":"LIU-YiFeng-1"},"content":"The following 2 sub-sections will provide you with the guide on how to add a task to the calendar list.  "},{"lineNumber":146,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":147,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: You can input a task description with or without spaces."},{"lineNumber":148,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":149,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding a todo task:"},{"lineNumber":150,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":151,"author":{"gitId":"LIU-YiFeng-1"},"content":"This function allows you to add a todo task, such as exercise plans or small reminders for your day to day matters "},{"lineNumber":152,"author":{"gitId":"LIU-YiFeng-1"},"content":"which can be a great help if you are a forgetful person."},{"lineNumber":153,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":154,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `todo \u003ctask_description\u003e`"},{"lineNumber":155,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":156,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example: "},{"lineNumber":157,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":158,"author":{"gitId":"LIU-YiFeng-1"},"content":"`todo exercise for 10 minutes` "},{"lineNumber":159,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":160,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds a todo task of exercising for 10 minutes to the calendar list as demonstrated in the figure below."},{"lineNumber":161,"author":{"gitId":"LIU-YiFeng-1"},"content":"![todo_command](images/todo_command.png)"},{"lineNumber":162,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The total number of tasks may differ if you have more tasks stored in the application."},{"lineNumber":163,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":164,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tips_todo](images/tip_for_todo.PNG)"},{"lineNumber":165,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":166,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding a deadline task:"},{"lineNumber":167,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":168,"author":{"gitId":"LIU-YiFeng-1"},"content":"This function allows you to add a deadline task, such as project submission or assignment submission and the application "},{"lineNumber":169,"author":{"gitId":"LIU-YiFeng-1"},"content":"will keep track of the due date which will definitely make your study life more manageable! The function will also display a "},{"lineNumber":170,"author":{"gitId":"LIU-YiFeng-1"},"content":"warning message if the due date of the deadline item is already passed (with respect to today\u0027s date), making sure all your deadlines are properly recorded and"},{"lineNumber":171,"author":{"gitId":"LIU-YiFeng-1"},"content":"minimise any potential careless typo."},{"lineNumber":172,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":173,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `deadline \u003ctask_description\u003e /\u003cdue_date\u003e`"},{"lineNumber":174,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":175,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space before and after the `/` is optional!"},{"lineNumber":176,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":177,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example of a passed deadline:"},{"lineNumber":178,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":179,"author":{"gitId":"LIU-YiFeng-1"},"content":"`deadline project submission /301020` "},{"lineNumber":180,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":181,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds a deadline task of project submission which is due on 30 October 2020 (a past date), "},{"lineNumber":182,"author":{"gitId":"LIU-YiFeng-1"},"content":"as illustrated by the figure below."},{"lineNumber":183,"author":{"gitId":"LIU-YiFeng-1"},"content":"![deadline_command_passed](images/deadline_command.png)"},{"lineNumber":184,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":185,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example of a proper deadline:"},{"lineNumber":186,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":187,"author":{"gitId":"LIU-YiFeng-1"},"content":"`deadline project video demo /090922` "},{"lineNumber":188,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":189,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds a deadline task of project video demo which is due on 09 September 2022 (a future date), as illustrated "},{"lineNumber":190,"author":{"gitId":"LIU-YiFeng-1"},"content":"by the figure below."},{"lineNumber":191,"author":{"gitId":"LIU-YiFeng-1"},"content":"![deadline_command_proper](images/deadline_command_proper.png)"},{"lineNumber":192,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":193,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tips_deadline](images/tips_deadline.PNG)"},{"lineNumber":194,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":195,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_dadline](images/warning_deadline.PNG)"},{"lineNumber":196,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":197,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Adding an event:"},{"lineNumber":198,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":199,"author":{"gitId":"LIU-YiFeng-1"},"content":"You can add different events to the calendar list, including school events, "},{"lineNumber":200,"author":{"gitId":"LIU-YiFeng-1"},"content":"such as`lecture`, `tutorial`, `exam`, and `lab` events, and other events in `activity` type. "},{"lineNumber":201,"author":{"gitId":"LIU-YiFeng-1"},"content":"You may add both past and upcoming events to your calendar list."},{"lineNumber":202,"author":{"gitId":"LIU-YiFeng-1"},"content":"You can add `lecture`, `tutorial`, and `lab` events as recurring events, but the `exam` and `activity` events cannot be recurring. "},{"lineNumber":203,"author":{"gitId":"JiawenLyu"},"content":"When you add events to the list, you can use `lect`, `lab`, `tut`, `exam` or `act` command in following formats:  "},{"lineNumber":204,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":205,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tip_event](images/tip_event.PNG)"},{"lineNumber":206,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":207,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_event](images/warning_event.PNG)"},{"lineNumber":208,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":209,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding an activity event:"},{"lineNumber":210,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":211,"author":{"gitId":"LIU-YiFeng-1"},"content":"This function allows you to add activities, such as interview workshops or Co-Curriculum Activities (CCAs). "},{"lineNumber":212,"author":{"gitId":"LIU-YiFeng-1"},"content":"This is definitely the best way to keep track of your commitments and will surely make your student life more vibrant and gain the most out of it! "},{"lineNumber":213,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":214,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `act \u003cactivity_description\u003e @\u003cvenue\u003e / \u003cdate\u003e \u003ctime\u003e`"},{"lineNumber":215,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":216,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The spaces before and after the `@` and `/` are optional! All other spaces are mandatory!"},{"lineNumber":217,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":218,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":219,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":220,"author":{"gitId":"LIU-YiFeng-1"},"content":"`act CCA @NUS UTOWN / 200920 1600` "},{"lineNumber":221,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":222,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds a CCA event held at NUS UTOWN on 20th September 2020, 4pm as shown in the figure below."},{"lineNumber":223,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":224,"author":{"gitId":"LIU-YiFeng-1"},"content":"![act_command](images/act_command.png)"},{"lineNumber":225,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":226,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: You can input an activity description with or without spaces."},{"lineNumber":227,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":228,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":229,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_act](images/warning_act.PNG)"},{"lineNumber":230,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":231,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding an examination event:"},{"lineNumber":232,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":233,"author":{"gitId":"LIU-YiFeng-1"},"content":"You can add an examination event to the calendar list by using the following format."},{"lineNumber":234,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":235,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `exam \u003cmodule_name\u003e @\u003cvenue\u003e / \u003cdate\u003e \u003ctime\u003e`"},{"lineNumber":236,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":237,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The spaces before and after the `@` and `/` are optional! All other spaces are mandatory!"},{"lineNumber":238,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":239,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":240,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":241,"author":{"gitId":"LIU-YiFeng-1"},"content":"`exam CS1010 @com1-b1-12 / 121220 1700` "},{"lineNumber":242,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":243,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds CS1010 exam at 2020-12-12 5pm to the event list. The venue is com1-b1-12."},{"lineNumber":244,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":245,"author":{"gitId":"LIU-YiFeng-1"},"content":"![exam_command](images/exam_command.PNG)"},{"lineNumber":246,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":247,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: Only valid modules provided by NUS are allowed to be added! "},{"lineNumber":248,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":249,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding recurring laboratory events:"},{"lineNumber":250,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":251,"author":{"gitId":"LIU-YiFeng-1"},"content":"When you have new recurring laboratory events and want to add them to the calendar list, you can use `lab` command."},{"lineNumber":252,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":253,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `lab \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003cnumber of lab session\u003e / \u003cdate\u003e \u003ctime\u003e`"},{"lineNumber":254,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":255,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The spaces before and after the `@`, `-r`, and `/` are optional! All other spaces are mandatory!"},{"lineNumber":256,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":257,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":258,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":259,"author":{"gitId":"LIU-YiFeng-1"},"content":"`lab CS1010 @com1-b1-14 -r 9 / 210920 1600` "},{"lineNumber":260,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":261,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds CS1010 lab at 2020-09-21 4pm to the event list, the venue is com1-b1-14 and the lab will happen for the next 9 weeks."},{"lineNumber":262,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":263,"author":{"gitId":"LIU-YiFeng-1"},"content":"![lab_command](images/lab_command.PNG)"},{"lineNumber":264,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":265,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: Only valid modules provided by NUS are allowed to be added! "},{"lineNumber":266,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":267,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The value for `\u003cnumber of lab session\u003e` is in the range of 1 to 13 only!"},{"lineNumber":268,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":269,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding recurring lecture events:"},{"lineNumber":270,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":271,"author":{"gitId":"LIU-YiFeng-1"},"content":"When you have new recurring lecture events and want to add them to the calendar list, you can use `lect` command."},{"lineNumber":272,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":273,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `lect \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003cnumber of lecture\u003e / \u003cdate\u003e \u003ctime\u003e`"},{"lineNumber":274,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":275,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The spaces before and after the `@`, `-r`, and `/` are optional! All other spaces are mandatory!"},{"lineNumber":276,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":277,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":278,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":279,"author":{"gitId":"LIU-YiFeng-1"},"content":"`lect CS2113 @lt12 -r 10 / 030220 1200` "},{"lineNumber":280,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":281,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds CS2113 lecture at 2020-02-03 12pm to the event list, the venue is lt12 and the lecture will happen for the next 10 weeks."},{"lineNumber":282,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":283,"author":{"gitId":"LIU-YiFeng-1"},"content":"![lect_command](images/lect_command.PNG)"},{"lineNumber":284,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":285,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: Only valid modules provided by NUS are allowed to be added! "},{"lineNumber":286,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":287,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The value for `\u003cnumber of lecture\u003e` is in the range of 1 to 13 only!"},{"lineNumber":288,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":289,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding recurring tutorial events:"},{"lineNumber":290,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":291,"author":{"gitId":"LIU-YiFeng-1"},"content":"When you have new recurring tutorial events and want to add them to the calendar list, you can use `tut` command."},{"lineNumber":292,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":293,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `tut \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003cnumber of tutorial\u003e / \u003cdate\u003e \u003ctime\u003e`"},{"lineNumber":294,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":295,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The spaces before and after the `@`, `-r`, and `/` are optional! All other spaces are mandatory!"},{"lineNumber":296,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":297,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":298,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":299,"author":{"gitId":"LIU-YiFeng-1"},"content":"`tut CS1010 @com1-b1-12 -r 5 / 121020 1700` "},{"lineNumber":300,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":301,"author":{"gitId":"LIU-YiFeng-1"},"content":"This adds CS1010 lab at 2020-10-20 5pm to the event list, the venue is com1-b1-12 and the tutorial will happen for the next 5 weeks."},{"lineNumber":302,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":303,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tut_command](images/tut_command.PNG)"},{"lineNumber":304,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":305,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_event_date](images/warning_event_format.PNG)"},{"lineNumber":306,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":307,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: Only valid modules provided by NUS are allowed to be added! "},{"lineNumber":308,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":309,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The value for `\u003cnumber of tutorial\u003e` is in the range of 1 to 13 only!"},{"lineNumber":310,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":311,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Additional information of an event"},{"lineNumber":312,"author":{"gitId":"imhm"},"content":"You can add additional information pertaining to an event in your calendar list, "},{"lineNumber":313,"author":{"gitId":"imhm"},"content":"view the list of added information and delete irrelevant ones! Use this as a one stop application to store everything you need to know!"},{"lineNumber":314,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":315,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Adding additional information to an event:"},{"lineNumber":316,"author":{"gitId":"imhm"},"content":"You can add additional information pertaining to an event in your calendar list. You may use this feature to store"},{"lineNumber":317,"author":{"gitId":"imhm"},"content":"the module website for a school event or the things to bring to an event."},{"lineNumber":318,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":319,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `/a \u003cevent_number\u003e - \u003cadditional information\u003e`"},{"lineNumber":320,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":321,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: All the spaces in the command above are optional!"},{"lineNumber":322,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":323,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":324,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":325,"author":{"gitId":"LIU-YiFeng-1"},"content":"`/a 1 - This is the additional information for event number 1`"},{"lineNumber":326,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":327,"author":{"gitId":"LIU-YiFeng-1"},"content":"This addes \"This is the additional information for event number 1\" to the event with index of 1."},{"lineNumber":328,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":329,"author":{"gitId":"LIU-YiFeng-1"},"content":"![additional_info_command](images/additional_info_command.PNG)"},{"lineNumber":330,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":331,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will differ if you have a different event "},{"lineNumber":332,"author":{"gitId":"LIU-YiFeng-1"},"content":"stored in the event index number 1."},{"lineNumber":333,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":334,"author":{"gitId":"imhm"},"content":"You may then view the additional information using the view additional information feature below."},{"lineNumber":335,"author":{"gitId":"imhm"},"content":"![tip_additional_info](images/tip_additional_info.PNG)"},{"lineNumber":336,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":337,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_add_info](images/warning_add_info.png)"},{"lineNumber":338,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":339,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Viewing the additional information of an event:"},{"lineNumber":340,"author":{"gitId":"imhm"},"content":"After adding the additional information related to the event, you can then view the list of additional information "},{"lineNumber":341,"author":{"gitId":"imhm"},"content":" pertaining to that event. Use this feature to recall what you need to do before the event!"},{"lineNumber":342,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":343,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `/v \u003cevent_number\u003e`"},{"lineNumber":344,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":345,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is optional!"},{"lineNumber":346,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":347,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":348,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":349,"author":{"gitId":"imhm"},"content":"`/v 1` "},{"lineNumber":350,"author":{"gitId":"imhm"},"content":""},{"lineNumber":351,"author":{"gitId":"LIU-YiFeng-1"},"content":"This allows you to view all the additional information that you have added for event number 1 in a form of a list."},{"lineNumber":352,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":353,"author":{"gitId":"LIU-YiFeng-1"},"content":"![view_additional_info_command](images/view_addit_info_command.PNG)"},{"lineNumber":354,"author":{"gitId":"imhm"},"content":""},{"lineNumber":355,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will differ if you have a different event "},{"lineNumber":356,"author":{"gitId":"LIU-YiFeng-1"},"content":"or different additional information stored in the event index number 1."},{"lineNumber":357,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":358,"author":{"gitId":"imhm"},"content":"#### Deleting the additional information of an event:"},{"lineNumber":359,"author":{"gitId":"imhm"},"content":"Should you have wrongly added any additional information to an event, fret not, you can delete them using this feature."},{"lineNumber":360,"author":{"gitId":"imhm"},"content":""},{"lineNumber":361,"author":{"gitId":"imhm"},"content":"Format: `/- \u003cevent_number\u003e a \u003cadditional_information_number\u003e`"},{"lineNumber":362,"author":{"gitId":"imhm"},"content":""},{"lineNumber":363,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: All the spaces in the command above are optional!"},{"lineNumber":364,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":365,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":366,"author":{"gitId":"imhm"},"content":""},{"lineNumber":367,"author":{"gitId":"LIU-YiFeng-1"},"content":"`/- 1 a 1`"},{"lineNumber":368,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":369,"author":{"gitId":"LIU-YiFeng-1"},"content":"This deletes the additional information number 1 pertaining to the event with index of 1."},{"lineNumber":370,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":371,"author":{"gitId":"LIU-YiFeng-1"},"content":"![delete_additional_info_command](images/delete_additional_info_command.PNG)"},{"lineNumber":372,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":373,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will differ if you have a different event "},{"lineNumber":374,"author":{"gitId":"LIU-YiFeng-1"},"content":"or different additional information stored in the event index number 1."},{"lineNumber":375,"author":{"gitId":"imhm"},"content":" "},{"lineNumber":376,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Marking a task as done:"},{"lineNumber":377,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":378,"author":{"gitId":"LIU-YiFeng-1"},"content":"To help manage your tasks better, you can mark a task on your calendar list as completed by using the `done` command. "},{"lineNumber":379,"author":{"gitId":"imhm"},"content":"If the task is done, you will be able to see a small tick [/] beside the task. Else, you will see a cross [X] beside the task."},{"lineNumber":380,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":381,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `done \u003ctask_number\u003e`"},{"lineNumber":382,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":383,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is optional!"},{"lineNumber":384,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":385,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":386,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":387,"author":{"gitId":"LIU-YiFeng-1"},"content":"`done 1`"},{"lineNumber":388,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":389,"author":{"gitId":"LIU-YiFeng-1"},"content":"By using this command, you will mark the first task on your task list as done! "},{"lineNumber":390,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":391,"author":{"gitId":"LIU-YiFeng-1"},"content":"![done_command](images/done_command.PNG)"},{"lineNumber":392,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":393,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":394,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have a different task stored in the task index number 1."},{"lineNumber":395,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":396,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_done](images/warning_done.PNG)"},{"lineNumber":397,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":398,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Deleting a calendar item:"},{"lineNumber":399,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":400,"author":{"gitId":"LIU-YiFeng-1"},"content":"You may delete any calendar items you have added wrongly or any items that have become obsolete. It is advisable"},{"lineNumber":401,"author":{"gitId":"imhm"},"content":" for you to use this feature frequently to keep your task and event lists uncluttered!"},{"lineNumber":402,"author":{"gitId":"LIU-YiFeng-1"},"content":" ![warning_cal_delete](images/warning_cal_delete.png)"},{"lineNumber":403,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":404,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Deleting a task:"},{"lineNumber":405,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":406,"author":{"gitId":"imhm"},"content":"You can delete a task from your calendar list. You can use this to delete the tasks that you have already completed!"},{"lineNumber":407,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":408,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `-t \u003ctask_number\u003e`"},{"lineNumber":409,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":410,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is optional!"},{"lineNumber":411,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":412,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":413,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":414,"author":{"gitId":"imhm"},"content":" `-t 1` "},{"lineNumber":415,"author":{"gitId":"imhm"},"content":" "},{"lineNumber":416,"author":{"gitId":"LIU-YiFeng-1"},"content":"After executing this command, notice that task number 1 has been removed from your calendar."},{"lineNumber":417,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":418,"author":{"gitId":"LIU-YiFeng-1"},"content":" ![delete_task_command](images/delete_task_command.PNG)"},{"lineNumber":419,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":420,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":421,"author":{"gitId":"LIU-YiFeng-1"},"content":" Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":422,"author":{"gitId":"LIU-YiFeng-1"},"content":" differ if you have a different task stored in the task index number 1."},{"lineNumber":423,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":424,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Deleting an event:"},{"lineNumber":425,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":426,"author":{"gitId":"imhm"},"content":"You can delete an event from your calendar list. Use this to delete the events that are already over!"},{"lineNumber":427,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":428,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `-e \u003cevent_number\u003e`"},{"lineNumber":429,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":430,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is optional!"},{"lineNumber":431,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":432,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":433,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":434,"author":{"gitId":"imhm"},"content":" `-e 1` "},{"lineNumber":435,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":436,"author":{"gitId":"imhm"},"content":"  After executing this command, notice that event number 1 has been removed from your calendar."},{"lineNumber":437,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":438,"author":{"gitId":"LIU-YiFeng-1"},"content":" ![delete_event_command](images/delete_event_command.PNG)"},{"lineNumber":439,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":440,"author":{"gitId":"LIU-YiFeng-1"},"content":" Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":441,"author":{"gitId":"LIU-YiFeng-1"},"content":" differ if you have a different event stored in the event index number 1."},{"lineNumber":442,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":443,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Finding a calendar item:"},{"lineNumber":444,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":445,"author":{"gitId":"imhm"},"content":"If you have a long list of calendar items, you may use this feature to find a calendar item based on a specific"},{"lineNumber":446,"author":{"gitId":"imhm"},"content":"keyword of the item’s description. Additionally, for a more specific search, you may search based on whether"},{"lineNumber":447,"author":{"gitId":"imhm"},"content":"it is a task or an event. "},{"lineNumber":448,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":449,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Finding an item from the calendar list:"},{"lineNumber":450,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":451,"author":{"gitId":"imhm"},"content":"You can search the entire calendar based on a keyword. For example, you might want to search for the due date of an"},{"lineNumber":452,"author":{"gitId":"imhm"},"content":"assignment in your calendar."},{"lineNumber":453,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":454,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `/f \u003ckeyword\u003e`"},{"lineNumber":455,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":456,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory!"},{"lineNumber":457,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":458,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example: "},{"lineNumber":459,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":460,"author":{"gitId":"imhm"},"content":"`/f assignment` "},{"lineNumber":461,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":462,"author":{"gitId":"LIU-YiFeng-1"},"content":"This displays a list of items (both tasks and events) containing the keyword “assignment”."},{"lineNumber":463,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":464,"author":{"gitId":"LIU-YiFeng-1"},"content":"![find_item_command](images/find_item_command.PNG)"},{"lineNumber":465,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":466,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output depends on the items stored in the application."},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The items printed by the find functions are in the order of how the user added them, this is to facilitate other commands "},{"lineNumber":469,"author":{"gitId":"LIU-YiFeng-1"},"content":"such as deleting the item."},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tip_find](images/tip_find.PNG)"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Finding an item from the task list: "},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"imhm"},"content":"You can also search from your task list based on a keyword. This will be useful if you need to narrow your search to"},{"lineNumber":476,"author":{"gitId":"imhm"},"content":"just your list of tasks instead of both tasks and events. For example, if you are just searching for your tuition"},{"lineNumber":477,"author":{"gitId":"imhm"},"content":"homework tasks, you can use this feature to exclude any events with description containing “tuition”!"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `/ft \u003ckeyword\u003e`"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory!"},{"lineNumber":482,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":483,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example: "},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"imhm"},"content":"`/ft tuition` "},{"lineNumber":486,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":487,"author":{"gitId":"LIU-YiFeng-1"},"content":"This displays a list of tasks containing the keyword “tuition”."},{"lineNumber":488,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":489,"author":{"gitId":"LIU-YiFeng-1"},"content":"![find_task_command](images/find_task_command.PNG)"},{"lineNumber":490,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":491,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":492,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output depends on the tasks stored in the application."},{"lineNumber":493,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":494,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Finding an item from the event list: "},{"lineNumber":495,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":496,"author":{"gitId":"imhm"},"content":"Likewise, you can also search your event list based on a keyword. This is especially useful if you have multiple"},{"lineNumber":497,"author":{"gitId":"imhm"},"content":"tasks and events having a similar description. For example, if you are looking for events happening on the same date"},{"lineNumber":498,"author":{"gitId":"imhm"},"content":", you can use this feature to exclude all deadline tasks with the same date!"},{"lineNumber":499,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":500,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `/fe \u003ckeyword\u003e`"},{"lineNumber":501,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":502,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory!"},{"lineNumber":503,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":504,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example: "},{"lineNumber":505,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":506,"author":{"gitId":"LIU-YiFeng-1"},"content":"`/fe 09-Nov-2020`"},{"lineNumber":507,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":508,"author":{"gitId":"LIU-YiFeng-1"},"content":"This displays the list of events containing the keyword “09-Nov-2020”."},{"lineNumber":509,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":510,"author":{"gitId":"LIU-YiFeng-1"},"content":"![find_event_command](images/find_event_command.PNG)"},{"lineNumber":511,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":512,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output depends on the events stored in the application."},{"lineNumber":513,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":514,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":515,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tip_find_event](images/tip_find_event.PNG)"},{"lineNumber":516,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":517,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Prioritizing a task:                                                                                                "},{"lineNumber":518,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":519,"author":{"gitId":"JiawenLyu"},"content":"When you have important tasks, you can prioritize them in the task list to distinguish from ordinary tasks."},{"lineNumber":520,"author":{"gitId":"LIU-YiFeng-1"},"content":"If you want to prioritize an important task, you can use `*t \u003ctask_number\u003e` to mark the task as important. "},{"lineNumber":521,"author":{"gitId":"LIU-YiFeng-1"},"content":"    "},{"lineNumber":522,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `*t \u003ctask_number\u003e`"},{"lineNumber":523,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":524,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is optional!"},{"lineNumber":525,"author":{"gitId":"LIU-YiFeng-1"},"content":"    "},{"lineNumber":526,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example: "},{"lineNumber":527,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":528,"author":{"gitId":"LIU-YiFeng-1"},"content":"`*t 1` "},{"lineNumber":529,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":530,"author":{"gitId":"LIU-YiFeng-1"},"content":"This marks the first task in the task list as important."},{"lineNumber":531,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":532,"author":{"gitId":"LIU-YiFeng-1"},"content":"![prioritizing_command](images/prioritizing_command.PNG)"},{"lineNumber":533,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":534,"author":{"gitId":"LIU-YiFeng-1"},"content":" Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":535,"author":{"gitId":"LIU-YiFeng-1"},"content":" differ if you have a different task stored in the task index number 1."},{"lineNumber":536,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":537,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_prioritizing](images/warning_prioritizing.PNG)"},{"lineNumber":538,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":539,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Printing tasks:"},{"lineNumber":540,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":541,"author":{"gitId":"LIU-YiFeng-1"},"content":"If you want to prioritize or delete some of the tasks on hand but cannot recall the task number as there are simply "},{"lineNumber":542,"author":{"gitId":"LIU-YiFeng-1"},"content":"too many tasks, you can always ask _**25HoursADay**_ to print out all tasks saved in the application. "},{"lineNumber":543,"author":{"gitId":"LIU-YiFeng-1"},"content":"In this way, you can have a better picture of the tasks on hand! "},{"lineNumber":544,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":545,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print tasks`"},{"lineNumber":546,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":547,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":548,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":549,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":550,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":551,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print tasks`"},{"lineNumber":552,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":553,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints all tasks stored in the application."},{"lineNumber":554,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":555,"author":{"gitId":"LIU-YiFeng-1"},"content":"![printTasks](images/printTasks_command.png)"},{"lineNumber":556,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":557,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":558,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different tasks stored in the calendar list."},{"lineNumber":559,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":560,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The events are printed in the order of how the user added them, this is to facilitate other commands such as marking a"},{"lineNumber":561,"author":{"gitId":"LIU-YiFeng-1"},"content":"task as done or deleting a task."},{"lineNumber":562,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":563,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tips_printtask](images/tip_printTasks.PNG)"},{"lineNumber":564,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":565,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Printing events:"},{"lineNumber":566,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":567,"author":{"gitId":"LIU-YiFeng-1"},"content":"If you want to delete past events or to add additional information to a certain event, you can always ask the application "},{"lineNumber":568,"author":{"gitId":"LIU-YiFeng-1"},"content":"to display all events saved in the application. This feature will definitely save your brain space wasted on memorising them."},{"lineNumber":569,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":570,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print events`"},{"lineNumber":571,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":572,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":573,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":574,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":575,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":576,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print events`"},{"lineNumber":577,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":578,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints all events stored in the application."},{"lineNumber":579,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":580,"author":{"gitId":"LIU-YiFeng-1"},"content":"![printEvents](images/printEvents_command.png)"},{"lineNumber":581,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":582,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":583,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different events stored in the calendar list."},{"lineNumber":584,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":585,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The events are printed in the order of how the user added them, this is to facilitate other commands such as adding "},{"lineNumber":586,"author":{"gitId":"LIU-YiFeng-1"},"content":"additional information for an event or deleting an event."},{"lineNumber":587,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":588,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tips_printevents](images/tip_printEvents.PNG)"},{"lineNumber":589,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":590,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Printing important tasks:"},{"lineNumber":591,"author":{"gitId":"LIU-YiFeng-1"},"content":"    "},{"lineNumber":592,"author":{"gitId":"JiawenLyu"},"content":"If you just want to view all the important tasks instead of all the tasks in the calendar list now, "},{"lineNumber":593,"author":{"gitId":"JiawenLyu"},"content":"you can type `print *` command to view the list of important tasks together with their information.                           "},{"lineNumber":594,"author":{"gitId":"LIU-YiFeng-1"},"content":"                                                    "},{"lineNumber":595,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print *`"},{"lineNumber":596,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":597,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":598,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":599,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":600,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":601,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print *`"},{"lineNumber":602,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":603,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints all important tasks in the application."},{"lineNumber":604,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":605,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print*](images/printImportant_command..PNG)"},{"lineNumber":606,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":607,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":608,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different tasks stored in the calendar list."},{"lineNumber":609,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":610,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Printing progress: "},{"lineNumber":611,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":612,"author":{"gitId":"JiawenLyu"},"content":"If you have a lot of tasks and want to trace the progress of how many of the tasks have been finished, "},{"lineNumber":613,"author":{"gitId":"JiawenLyu"},"content":"you can type  `print progress` command to see the fraction and percentage proportion of the finished tasks among all the tasks."},{"lineNumber":614,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":615,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print progress`"},{"lineNumber":616,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":617,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":618,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":619,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":620,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":621,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print progress`"},{"lineNumber":622,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":623,"author":{"gitId":"LIU-YiFeng-1"},"content":"This displays your current progress."},{"lineNumber":624,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":625,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_progress](images/printProgress_command.PNG)"},{"lineNumber":626,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":627,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":628,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have completed different number of tasks."},{"lineNumber":629,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":630,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Giving suggestion: "},{"lineNumber":631,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":632,"author":{"gitId":"JiawenLyu"},"content":"When you have a lot of tasks and do not know preparing for which several tasks first, you can get some simple suggestions from the 25HoursADay. "},{"lineNumber":633,"author":{"gitId":"JiawenLyu"},"content":"This application can select several important and urgent tasks in the task list for you. If you want to view the suggestions, "},{"lineNumber":634,"author":{"gitId":"JiawenLyu"},"content":"you can type the `suggestion` command to see the recommended tasks together with their information.  "},{"lineNumber":635,"author":{"gitId":"LIU-YiFeng-1"},"content":"    "},{"lineNumber":636,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `suggestion`"},{"lineNumber":637,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":638,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":639,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":640,"author":{"gitId":"LIU-YiFeng-1"},"content":"`suggestion`"},{"lineNumber":641,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":642,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints the more urgent items for you."},{"lineNumber":643,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":644,"author":{"gitId":"LIU-YiFeng-1"},"content":"![suggestion_command](images/suggestion_command.PNG)"},{"lineNumber":645,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":646,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":647,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different items stored in the calendar list."},{"lineNumber":648,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":649,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Printing timeline"},{"lineNumber":650,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"If you want to see your calendar items in a timeline format, you can always use the personalised calendar feature. "},{"lineNumber":652,"author":{"gitId":"LIU-YiFeng-1"},"content":"There are four kinds of personalised calendar that you can print: default calendar, weekly calendar, monthly calendar, "},{"lineNumber":653,"author":{"gitId":"LIU-YiFeng-1"},"content":"and calendar before a specific date you choose."},{"lineNumber":654,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":655,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing default calendar: "},{"lineNumber":656,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":657,"author":{"gitId":"LIU-YiFeng-1"},"content":"Print the personal calendar including all calendar items, with todo items (which do not have a specific date) printed as a list at the bottom of the timeline."},{"lineNumber":658,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":659,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print timeline`"},{"lineNumber":660,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":661,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":662,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":663,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":664,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":665,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print timeline`"},{"lineNumber":666,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":667,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints the default calendar for you."},{"lineNumber":668,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":669,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_timeline](images/printTimeline_command.PNG)"},{"lineNumber":670,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":671,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":672,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different items stored in the calendar list."},{"lineNumber":673,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":674,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing calendar for the next 7 days: "},{"lineNumber":675,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":676,"author":{"gitId":"LIU-YiFeng-1"},"content":"Wanting to find out what is going to happen in the next 7 days? `print timeline week` can be of great help."},{"lineNumber":677,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":678,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print timeline week`"},{"lineNumber":679,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":680,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing between each command parameters."},{"lineNumber":681,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":682,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":683,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":684,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print timeline week`"},{"lineNumber":685,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":686,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints the personal calendar fot the next 7 days."},{"lineNumber":687,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":688,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_timeline_week](images/printTimeline_week_command.PNG)"},{"lineNumber":689,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":690,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":691,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different items stored in the calendar list."},{"lineNumber":692,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":693,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":694,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing calendar for the next 31 days: "},{"lineNumber":695,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":696,"author":{"gitId":"LIU-YiFeng-1"},"content":"Wanting to find out what is going to happen in the next 31 days? `print timeline month` can be of great help."},{"lineNumber":697,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":698,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print timeline month`"},{"lineNumber":699,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":700,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing between each command parameters."},{"lineNumber":701,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":702,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":703,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":704,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print timeline month`"},{"lineNumber":705,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":706,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints the personal calendar fot the next 31 days."},{"lineNumber":707,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":708,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_timeline_month](images/printTimeline_month_command.PNG)"},{"lineNumber":709,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":710,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":711,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different items stored in the calendar list."},{"lineNumber":712,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":713,"author":{"gitId":"LIU-YiFeng-1"},"content":"![tip_timeline_month](images/warning_timeline_month.PNG)"},{"lineNumber":714,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":715,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing calendar before a specific date:"},{"lineNumber":716,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":717,"author":{"gitId":"LIU-YiFeng-1"},"content":"Wanting to find out what is going to happen before a specific date? `print timeline date \u003cdate\u003e` can be of great help."},{"lineNumber":718,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":719,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `print timeline date \u003cdate\u003e`"},{"lineNumber":720,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":721,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing between each command parameters."},{"lineNumber":722,"author":{"gitId":"-"},"content":"Note: If your input a past date, only the todo items will be shown.  "},{"lineNumber":723,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":724,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":725,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":726,"author":{"gitId":"LIU-YiFeng-1"},"content":"`print timeline date \u003cdate\u003e`"},{"lineNumber":727,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":728,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints the personal calendar before a specific date."},{"lineNumber":729,"author":{"gitId":"-"},"content":""},{"lineNumber":730,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":731,"author":{"gitId":"LIU-YiFeng-1"},"content":"![print_timeline_date](images/printTimeline_date_command.PNG)"},{"lineNumber":732,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":733,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":734,"author":{"gitId":"LIU-YiFeng-1"},"content":"differ if you have different items stored in the calendar list."},{"lineNumber":735,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":736,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_timeline_date](images/warning_timeline_date.PNG)"},{"lineNumber":737,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":738,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Printing countdown:"},{"lineNumber":739,"author":{"gitId":"LIU-YiFeng-1"},"content":"      "},{"lineNumber":740,"author":{"gitId":"LIU-YiFeng-1"},"content":"If you want to see the countdown of all the upcoming exams and know how much time you still have to review, or you want to "},{"lineNumber":741,"author":{"gitId":"LIU-YiFeng-1"},"content":"double check how many days you still have before the deadline, you can type the `countdown`, `countdown exams`, or `countdown deadlines` command."},{"lineNumber":742,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":743,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing countdown of both deadline and exam events: "},{"lineNumber":744,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":745,"author":{"gitId":"Zhangyilin0203"},"content":"If you type `countdown`, you can see the countdown of all the unfinished deadlines tasks and all the upcoming exam events."},{"lineNumber":746,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":747,"author":{"gitId":"LIU-YiFeng-1"},"content":"The item with the closest date will be printed first."},{"lineNumber":748,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":749,"author":{"gitId":"LIU-YiFeng-1"},"content":"All the unfinished deadlines will be printed before all the upcoming exams."},{"lineNumber":750,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":751,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `countdown`"},{"lineNumber":752,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":753,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":754,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":755,"author":{"gitId":"LIU-YiFeng-1"},"content":"`countdown`"},{"lineNumber":756,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":757,"author":{"gitId":"LIU-YiFeng-1"},"content":"This shows you the countdown to your deadlines and exams."},{"lineNumber":758,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":759,"author":{"gitId":"LIU-YiFeng-1"},"content":" ![countdown](images/countdown_command.PNG)"},{"lineNumber":760,"author":{"gitId":"LIU-YiFeng-1"},"content":" "},{"lineNumber":761,"author":{"gitId":"LIU-YiFeng-1"},"content":" Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":762,"author":{"gitId":"LIU-YiFeng-1"},"content":" differ if you have different items stored in the calendar list."},{"lineNumber":763,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":764,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing countdown for exam events only: "},{"lineNumber":765,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":766,"author":{"gitId":"Zhangyilin0203"},"content":"If you type `countdown exams`, you can see the countdown of all upcoming exams."},{"lineNumber":767,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":768,"author":{"gitId":"LIU-YiFeng-1"},"content":"The exam with the closest date will be printed first."},{"lineNumber":769,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":770,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `countdown exams`"},{"lineNumber":771,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":772,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":773,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":774,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":775,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":776,"author":{"gitId":"LIU-YiFeng-1"},"content":"`countdown exams`"},{"lineNumber":777,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":778,"author":{"gitId":"LIU-YiFeng-1"},"content":"This displays the countdown for examinations only."},{"lineNumber":779,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":780,"author":{"gitId":"LIU-YiFeng-1"},"content":"![countdown_exams_command](images/countdown_exam_command.PNG)"},{"lineNumber":781,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":782,"author":{"gitId":"LIU-YiFeng-1"},"content":" Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":783,"author":{"gitId":"LIU-YiFeng-1"},"content":" differ if you have different items stored in the calendar list."},{"lineNumber":784,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":785,"author":{"gitId":"LIU-YiFeng-1"},"content":"![warning_countdown](images/warning_countdown.PNG)"},{"lineNumber":786,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":787,"author":{"gitId":"LIU-YiFeng-1"},"content":"#### Printing countdown for deadline tasks only: "},{"lineNumber":788,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":789,"author":{"gitId":"Zhangyilin0203"},"content":"If you type `countdown deadlines`, you can see the countdown of all unfinished deadlines."},{"lineNumber":790,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":791,"author":{"gitId":"LIU-YiFeng-1"},"content":"The deadline with the closest due date will be printed first."},{"lineNumber":792,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":793,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `countdown deadlines`"},{"lineNumber":794,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":795,"author":{"gitId":"LIU-YiFeng-1"},"content":"Note: The space in the command above is mandatory and should only have 1 spacing."},{"lineNumber":796,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":797,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":798,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":799,"author":{"gitId":"LIU-YiFeng-1"},"content":"`countdown deadlines`"},{"lineNumber":800,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":801,"author":{"gitId":"LIU-YiFeng-1"},"content":"This prints the countdown for the deadlines only."},{"lineNumber":802,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":803,"author":{"gitId":"LIU-YiFeng-1"},"content":"![countdown_deadlines_command](images/countdown_deadlines_command.PNG)"},{"lineNumber":804,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":805,"author":{"gitId":"LIU-YiFeng-1"},"content":" Note: The above figure is for illustration purpose only. The desired output will"},{"lineNumber":806,"author":{"gitId":"LIU-YiFeng-1"},"content":" differ if you have different items stored in the calendar list."},{"lineNumber":807,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":808,"author":{"gitId":"Zhangyilin0203"},"content":"![warning_countdown](images/warning_countdown.PNG)"},{"lineNumber":809,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":810,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":811,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Saving the data"},{"lineNumber":812,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":813,"author":{"gitId":"LIU-YiFeng-1"},"content":"When you close the application or you make some changes to the application such as adding an event, the data for the tasks and events "},{"lineNumber":814,"author":{"gitId":"LIU-YiFeng-1"},"content":"are automatically saved locally. So, there is no need for users to save manually."},{"lineNumber":815,"author":{"gitId":"LIU-YiFeng-1"},"content":"Next time when you start the application, all the data will automatically be loaded from the local file to the application."},{"lineNumber":816,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":817,"author":{"gitId":"Zhangyilin0203"},"content":"![saving_data](images/savingdata.png)"},{"lineNumber":818,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":819,"author":{"gitId":"Zhangyilin0203"},"content":"![warning_savingdata](images/warning_savingdata.png)"},{"lineNumber":820,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":821,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Exiting the application: "},{"lineNumber":822,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":823,"author":{"gitId":"LIU-YiFeng-1"},"content":"If you want to exit the application, you can always type `bye` in the terminal to quit and all the data entered will be saved "},{"lineNumber":824,"author":{"gitId":"LIU-YiFeng-1"},"content":"automatically for your future use. "},{"lineNumber":825,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":826,"author":{"gitId":"LIU-YiFeng-1"},"content":"Format: `bye`"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"LIU-YiFeng-1"},"content":"Example:"},{"lineNumber":829,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":830,"author":{"gitId":"LIU-YiFeng-1"},"content":"`bye`"},{"lineNumber":831,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":832,"author":{"gitId":"LIU-YiFeng-1"},"content":"This exits the application for you."},{"lineNumber":833,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":834,"author":{"gitId":"LIU-YiFeng-1"},"content":"![bye_command](images/bye_command.png)"},{"lineNumber":835,"author":{"gitId":"-"},"content":""},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":838,"author":{"gitId":"-"},"content":""},{"lineNumber":839,"author":{"gitId":"Zhangyilin0203"},"content":"Want to find out more about 25HoursADay? "},{"lineNumber":840,"author":{"gitId":"Zhangyilin0203"},"content":"How to transfer our data to another device? Or how to store our data? "},{"lineNumber":841,"author":{"gitId":"LIU-YiFeng-1"},"content":"Here are the most common questions that NUS students would ask about our application. "},{"lineNumber":842,"author":{"gitId":"Zhangyilin0203"},"content":"The questions and the answers to them can be found below."},{"lineNumber":843,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":844,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"LIU-YiFeng-1"},"content":"**A**: Download the application in the other computer and overwrite the empty data file it creates with the data from your "},{"lineNumber":847,"author":{"gitId":"LIU-YiFeng-1"},"content":"previous **_25HoursADay.jar_**."},{"lineNumber":848,"author":{"gitId":"-"},"content":""},{"lineNumber":849,"author":{"gitId":"LIU-YiFeng-1"},"content":"**Q**: Can I use **_25HoursADay_** on different operating systems like Linux, Windows, or macOS?  "},{"lineNumber":850,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":851,"author":{"gitId":"LIU-YiFeng-1"},"content":"**A**: Yes, **_25HoursADay_** is compatible with Linux, Windows and macOS."},{"lineNumber":852,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":853,"author":{"gitId":"LIU-YiFeng-1"},"content":"**Q**: Will the data be saved if I accidentally close my application without typing the command bye?  "},{"lineNumber":854,"author":{"gitId":"-"},"content":""},{"lineNumber":855,"author":{"gitId":"LIU-YiFeng-1"},"content":"**A**: Yes, the data will automatically be saved locally even when you close your application halfway."},{"lineNumber":856,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":857,"author":{"gitId":"LIU-YiFeng-1"},"content":"**Q**: If I wrongly deleted my task, can I undo it?"},{"lineNumber":858,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":859,"author":{"gitId":"LIU-YiFeng-1"},"content":"**A**: No, currently **_25HoursADay_** doesn\u0027t have an undo feature, therefore you need to manually add your calendar item back "},{"lineNumber":860,"author":{"gitId":"LIU-YiFeng-1"},"content":"using `add` command."},{"lineNumber":861,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":862,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":863,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Command Summary"},{"lineNumber":864,"author":{"gitId":"-"},"content":""},{"lineNumber":865,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Term| Meaning | Command Format|"},{"lineNumber":866,"author":{"gitId":"LIU-YiFeng-1"},"content":"|--------|----------------|--------|"},{"lineNumber":867,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|activity event|`act \u003cactivity_description\u003e @\u003cvenue\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":868,"author":{"gitId":"imhm"},"content":"|Add|additional information for an event|`/a \u003cevent_number\u003e - \u003cadditional_information\u003e`|"},{"lineNumber":869,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|deadline task|`deadline \u003ctask_description\u003e / \u003cdue_date\u003e`|"},{"lineNumber":870,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|exam event|`exam \u003cmodule_name\u003e @\u003cvenue\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":871,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|lab event|`lab \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003crecurring_number\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":872,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|lecture event|`lect \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003crecurring_number\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":873,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|todo task|`todo \u003ctask_description\u003e`|"},{"lineNumber":874,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Add|tutorial event|`tut \u003cmodule_name\u003e @\u003cvenue\u003e -r \u003crecurring_number\u003e / \u003cdate\u003e \u003ctime\u003e`|"},{"lineNumber":875,"author":{"gitId":"imhm"},"content":"|Delete|additional information for an event|`/- \u003cevent_number\u003e a \u003cadditional_information_number\u003e`|"},{"lineNumber":876,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Delete|events|`-e \u003cevent_number\u003e`|"},{"lineNumber":877,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Delete|tasks|`-t \u003ctask_number\u003e`|"},{"lineNumber":878,"author":{"gitId":"imhm"},"content":"|Find|all calendar items|`/f \u003ckeyword\u003e`|"},{"lineNumber":879,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Find|events|`/fe \u003ckeyword\u003e`|"},{"lineNumber":880,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Find|tasks|`/ft \u003ckeyword\u003e`|"},{"lineNumber":881,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|countdown for all items|`countdown`|"},{"lineNumber":882,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|countdown for deadlines|`countdown deadlines`|"},{"lineNumber":883,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|countdown for exams|`countdown exams`|"},{"lineNumber":884,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|events|`print events`|"},{"lineNumber":885,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|important tasks|`print *`|"},{"lineNumber":886,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|progress|`print progress`|"},{"lineNumber":887,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|tasks|`print tasks`|"},{"lineNumber":888,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline (default)|`print timeline`|"},{"lineNumber":889,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline before a date|`print timeline date \u003cdate\u003e`|"},{"lineNumber":890,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline for the next 31 days|`print timeline month`|"},{"lineNumber":891,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Print|timeline for the next 7 days|`print timeline week`|"},{"lineNumber":892,"author":{"gitId":"LIU-YiFeng-1"},"content":"|Quit|exit the application|`bye`|"}],"authorContributionMap":{"LIU-YiFeng-1":790,"imhm":43,"JiawenLyu":11,"-":31,"Zhangyilin0203":17}},{"path":"docs/team/imhm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"# Ng Hong Ming - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"Our product, **_25HoursADay_** is a scheduling application catered for NUS students. "},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"It is optimised for use via the Command Line Interface (CLI) and it serves as an efficient one stop application for our users to manage their time. "},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"### Summary of Contributions"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"#### Code contributed:"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"[RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dimhm)"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"#### New Features implemented:"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"##### Establishing the overall structure of the code"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"Created the `CalendarList`, `CalendarItem`, `SchoolEvent`, `Exam`, `Lab`, `Tutorial`, `Lecture` classes, separating"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":" the `Event` class and the `Task` class. [#27](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/27)"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"* Highlights: It requires heavy change to the existing features to fit the new design. (Changing from the task list"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":" in Duke to a new Calendar list. Changing existing features to fit a specific class ie. mark as done only works for"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"  tasks.[#47](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/47))"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"* Credits: The team came up with the class diagram for the CalendarList together. The overall design of the code is reused from my iP\u0027s code."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":""},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"##### Additional information for event class "},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"* What it does: Users are able to add/view/delete a list of information pertaining to the event"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"* Justification: This feature is unique and useful as it serves as a one stop application to"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":" store all data in your calendar."},{"lineNumber":25,"author":{"gitId":"imhm"},"content":""},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"#### Enhancements to existing features implemented:"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":""},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"* Find Feature [#74](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/74)"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"    * What it does: Users can use a keyword to search for an item from their list of tasks, or their list of events or the"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":" entire calendar list."},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"    * Justification: Users can narrow their search based on the item."},{"lineNumber":32,"author":{"gitId":"imhm"},"content":""},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"* Delete Feature [#47](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/47)"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"    * What it does: Users can delete an event or a task."},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    * Justification: As the users can view their events list and task lists, they can remove unwanted tasks or events"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":" based on the indexing of the task/event in the task/event list."},{"lineNumber":37,"author":{"gitId":"imhm"},"content":""},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"* Wrote additional tests for existing features to increase coverage. [#81](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/81)"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":""},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"#### Contributions to documentation:"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"* User Guide"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"    * Wrote the Important Notes section."},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"    * Documented the following features: [5.3]Marking a task as done, [5.5] Adding additional information of an event"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"    , [5.6] Deleting a calendar item, [5.7] Finding a calendar item."},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"* Developer Guide"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"    * Co-written the Design section with Jiawen. Added all diagrams (Architecture diagram, example sequence diagram"},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"    (SD), class diagrams) in the Design section."},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"    * Documented the following features and added their respective sequence diagrams in the Implementation section"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"    : Add a calendar item feature, Mark a task as done feature, Additional information of an event feature, Delete a"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"     calendar item feature and Find a calendar item feature."},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"    * Documented part of the user stories."},{"lineNumber":52,"author":{"gitId":"imhm"},"content":""},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"#### Contributions to team-based tasks:"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"* Manage issue tracker (allocating and closing issues), closing of milestones V1.0 and V2.0."},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"* Release management: Release V1.0 and V2.0."},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"* Update the code as well as test files regularly to make sure it passes CI on GitHub."},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"#### Contributions beyond the project team:"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":"* Sharing the solution I found to to fellow peers facing the source tree issue of not being able to authenticate. [issue"},{"lineNumber":59,"author":{"gitId":"imhm"},"content":" #114](https://github.com/nus-cs2113-AY2021S1/forum/issues/114#issuecomment-717809977)"},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"* Reported bugs in other team\u0027s project during PE."},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"[1](https://github.com/imhm/ped/issues/1)"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"[2](https://github.com/imhm/ped/issues/2)"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"[3](https://github.com/imhm/ped/issues/3)"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"[4](https://github.com/imhm/ped/issues/4)"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"* Reported bugs in other team\u0027s DG during tutorial."},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"[1](https://github.com/nus-cs2113-AY2021S1/tp/pull/6#issuecomment-718349154)"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"[2](https://github.com/nus-cs2113-AY2021S1/tp/pull/6#issuecomment-718352506)"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"[3](https://github.com/nus-cs2113-AY2021S1/tp/pull/6#issuecomment-718354243)"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"[4](https://github.com/nus-cs2113-AY2021S1/tp/pull/6#issuecomment-718356711)"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"[5](https://github.com/nus-cs2113-AY2021S1/tp/pull/6#issuecomment-718358158)"}],"authorContributionMap":{"imhm":70}},{"path":"docs/team/jiawenlyu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"# Lyu Jiawen - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"Our product, **_25HoursADay_** is a scheduling application catered for NUS students. "},{"lineNumber":5,"author":{"gitId":"JiawenLyu"},"content":"It is optimised for use via the Command Line Interface (CLI) and it serves as an efficient one stop application for our users to manage their time. \u003cbr/\u003e"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":"\u003cbr/\u003e"},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"## Summary of Contributions"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":"### Code contributed: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djiawenlyu)"},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"### Enhancements to New features:"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":"* Added ability to add lecture, lab, and tutorial events."},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":" ([\\#15](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/15),"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"  [\\#30](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/30))"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"  * What it does: Add the ability to add new lecture, lab, and tutorial events."},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":"  * Justification: The feature allows users to manage the lecture, lab, and tutorial events."},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"  * Highlights: This feature is one of the basic features of the program, which is not complex but essential."},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"* Added ability to print the progress of tasks."},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#15](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/15),"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"   [\\#30](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/30),"},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"   [\\#41](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/41),"},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"   [\\#244](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/244))"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"   * What it does: Print user\u0027s progress of tasks."},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"   * Justification: This feature allows users to view their progress of finished tasks on all tasks."},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"   * Highlights: This feature print out the result both in percentages and fractions for the users to keep track of."},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"* Added ability to prioritize a task."},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#84](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/84),"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"   [\\#150](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/150))"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"   * What it does: Add the ability to mark a task as important."},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"   * Justification: This feature allows users to give higher priority to important tasks."},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"   * Highlights: This feature distinguishes the ordinary tasks and important events for users to manage their tasks better."},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"* Added ability to print prioritized tasks."},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#84](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/84))"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"   * What it does: Add the ability to print all the important tasks."},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"   * Justification: This feature allows users to view all the important tasks they have."},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"* Added ability to print suggestions."},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#96](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/96),"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"   [\\#142](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/142))"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"   * What it does: Add the ability to give users simple suggestions about preparing for which tasks first."},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"   * Justification: This feature allows users to get simple suggestions when they do not know what to do to manage their time better."},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"   * Highlights: This function just gives the basic suggestions considering both the importance and the urgency of tasks. "},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"     The number of suggestions given varies and at most three."},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"### Enhancement to existing features:"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"* Added `isOver` for all events to automatically check whether the event is over."},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#52](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/52))"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"* Fixed the input and output format of all events."},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#52](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/52))"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"* Wrote Junit tests to increase coverage."},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#98](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/98))"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"### Contributions to team-based tasks:"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"* Reviewed team members\u0027 PR, and gave them suggestions."},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#29](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/29),"},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"   [\\#90](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/90),"},{"lineNumber":52,"author":{"gitId":"JiawenLyu"},"content":"   [\\#94](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/94))"},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"* Update the code as well as test files regularly to make sure it passes CI on GitHub."},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"### Contributions to the Developer Guide:"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"* Added part of the `Design` to the Developer Guide."},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#110](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/110))"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"* Added implementation for the features `prioritize a task`, `print prioritized tasks`, `print progress`, `print suggestions`."},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#133](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/133),"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":"   [\\#147](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/147))"},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"* Added sequence diagram for features `prioritize a task`, `print prioritized tasks`, `print progress`, `print suggestions`."},{"lineNumber":61,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#134](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/134),"},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"   [\\#135](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/135),"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"   [\\#137](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/137),"},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"   [\\#144](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/144),"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"   [\\#228](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/228))"},{"lineNumber":66,"author":{"gitId":"JiawenLyu"},"content":"* Added part of the user stories."},{"lineNumber":67,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#165](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/165))"},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"### Contributions to the User Guide:"},{"lineNumber":69,"author":{"gitId":"JiawenLyu"},"content":"* Documented features `adding an event`, `prioritizing a task`, `printing important tasks`, "},{"lineNumber":70,"author":{"gitId":"JiawenLyu"},"content":" `printing progress`, and `giving suggestion`."},{"lineNumber":71,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#179](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/179))"},{"lineNumber":72,"author":{"gitId":"JiawenLyu"},"content":"### Contributions beyond the project team:"},{"lineNumber":73,"author":{"gitId":"JiawenLyu"},"content":"* Reported bugs in other team\u0027s project during PE."},{"lineNumber":74,"author":{"gitId":"JiawenLyu"},"content":"  ([\\#1](https://github.com/JiawenLyu/ped/issues/1),"},{"lineNumber":75,"author":{"gitId":"JiawenLyu"},"content":"   [\\#2](https://github.com/JiawenLyu/ped/issues/2),"},{"lineNumber":76,"author":{"gitId":"JiawenLyu"},"content":"   [\\#3](https://github.com/JiawenLyu/ped/issues/3),"},{"lineNumber":77,"author":{"gitId":"JiawenLyu"},"content":"   [\\#4](https://github.com/JiawenLyu/ped/issues/4),"},{"lineNumber":78,"author":{"gitId":"JiawenLyu"},"content":"   [\\#5](https://github.com/JiawenLyu/ped/issues/5),"},{"lineNumber":79,"author":{"gitId":"JiawenLyu"},"content":"   [\\#6](https://github.com/JiawenLyu/ped/issues/6))"}],"authorContributionMap":{"JiawenLyu":79}},{"path":"docs/team/liu-yifeng-1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"# LIU YIFENG - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"Our product, **_25HoursADay_** is a scheduling application catered for NUS students. "},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"It is optimised for use via the Command Line Interface (CLI) and it serves as an efficient one stop application for our users to manage their time. "},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"## Summary of Contributions"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Code contributed:"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":"For code contribution, please visit this [website](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dliu-yifeng-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dLIU-YiFeng-1\u0026tabRepo\u003dAY2021S1-CS2113T-T12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other) "},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"for more details."},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Enhancements to new features:"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Added ability to print all tasks and all events separately. (`print events` and `print tasks`)"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":" ([\\#10](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/10))"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"  * What it does: It allows the user to have an easy overview of all the events and tasks stored in the program."},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"  * Justification: It allows the user to retrieve the index number for a particular event or task quickly. So that the user can "},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    perform other operations (such as deletion, mark as done, adding additional information and viewing additional information etc) easily."},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"  * Highlights: It displays all tasks and events with additional information if there is any."},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"  "},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":" * Integrated a third party library (fastjson) to the project and added the ability to verify the module code entered by the user."},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#126](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/126),"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#246](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/246),"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#270](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/270)"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"  )"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"   * What it does: It checks the validity of the module code entered by the user against the NUSMod API."},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"   If valid, program will proceed as per normal. Else, it will prompt the user with an error message."},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"   * Justification: As a task scheduling application, it is crucial for the application to provide some sanity check to ensure the "},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"   user entered the correct information."},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"   * Highlights: This feature is functional with or without the Internet."},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"  "},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"\u003cbr/\u003e"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Enhancement to existing features:"},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Shorten and Standardised the user command input format to make the code more readable."},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#56](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/56))"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Enabled school events (such as Lecture, Tutorial and Lab session) to be added recursively."},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#79](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/79))"},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Update welcome Logo and Chat box to suit the team name."},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#122](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/122))"},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Enabled warning message for over-due deadline items."},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#240](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/240),"},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#288](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/288)"},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":"  )"},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Wrote Junit tests to increase coverage."},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#124](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/124))"},{"lineNumber":46,"author":{"gitId":"LIU-YiFeng-1"},"content":"  "},{"lineNumber":47,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Contributions to the DG:"},{"lineNumber":48,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Added the Setting Up \u0026 Getting started section."},{"lineNumber":49,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#148](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/148),"},{"lineNumber":50,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#149](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/149)"},{"lineNumber":51,"author":{"gitId":"LIU-YiFeng-1"},"content":")"},{"lineNumber":52,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Added the DevOps guide, Non-functional Requirements, Product Scope and User Stories."},{"lineNumber":53,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Added implementation and sequence diagram for `print events` and `print tasks`."},{"lineNumber":54,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#164](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/149))"},{"lineNumber":55,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Added implementation sequence diagram for ModuleChecker."},{"lineNumber":56,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#185](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/185),"},{"lineNumber":57,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#284](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/284)"},{"lineNumber":58,"author":{"gitId":"LIU-YiFeng-1"},"content":"  )"},{"lineNumber":59,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":60,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Contributions to the UG:"},{"lineNumber":61,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Drafted UG based on what we had for CS2101 and documented the summary of command section."},{"lineNumber":62,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#107](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/107))"},{"lineNumber":63,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Updated the UG with expected output screenshots."},{"lineNumber":64,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#172](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/172),"},{"lineNumber":65,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#175](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/175),"},{"lineNumber":66,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#177](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/177),"},{"lineNumber":67,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#230](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/231),"},{"lineNumber":68,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#231](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/231),"},{"lineNumber":69,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#296](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/296)"},{"lineNumber":70,"author":{"gitId":"LIU-YiFeng-1"},"content":"  )"},{"lineNumber":71,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":72,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Contributions to team-based tasks:"},{"lineNumber":73,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Reviewed others\u0027 PR and provided feedback."},{"lineNumber":74,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#20](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/20))"},{"lineNumber":75,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Updated both the user and developer guides that are not specific to my features and enhancements."},{"lineNumber":76,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":77,"author":{"gitId":"LIU-YiFeng-1"},"content":"### Contributions beyond the project team:"},{"lineNumber":78,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Reported bugs in other team\u0027s project during mock PE."},{"lineNumber":79,"author":{"gitId":"LIU-YiFeng-1"},"content":"  ([\\#1](https://github.com/LIU-YiFeng-1/ped/issues/1),"},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#2](https://github.com/LIU-YiFeng-1/ped/issues/2),"},{"lineNumber":81,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#3](https://github.com/LIU-YiFeng-1/ped/issues/3),"},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#4](https://github.com/LIU-YiFeng-1/ped/issues/4),"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#5](https://github.com/LIU-YiFeng-1/ped/issues/5),"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#6](https://github.com/LIU-YiFeng-1/ped/issues/6),"},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":"  [\\#7](https://github.com/LIU-YiFeng-1/ped/issues/7)"},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":"  )"},{"lineNumber":87,"author":{"gitId":"LIU-YiFeng-1"},"content":"* Shared useful external library on the module Forum."},{"lineNumber":88,"author":{"gitId":"LIU-YiFeng-1"},"content":"([\\#107](https://github.com/nus-cs2113-AY2021S1/forum/issues/107))"}],"authorContributionMap":{"LIU-YiFeng-1":88}},{"path":"docs/team/zhangyl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhangyilin0203"},"content":"# Zhang Yilin - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":3,"author":{"gitId":"Zhangyilin0203"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"Zhangyilin0203"},"content":"Our product, **_25HoursADay_** is a scheduling application catered for NUS students. "},{"lineNumber":5,"author":{"gitId":"Zhangyilin0203"},"content":"It is optimised for use via the Command Line Interface (CLI) and it serves as an efficient one stop application for our users to manage their time. \u003cbr/\u003e"},{"lineNumber":6,"author":{"gitId":"Zhangyilin0203"},"content":"\u003cbr/\u003e"},{"lineNumber":7,"author":{"gitId":"Zhangyilin0203"},"content":"Given below are my contributions to the project. \u003cbr/\u003e"},{"lineNumber":8,"author":{"gitId":"Zhangyilin0203"},"content":"## Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"Zhangyilin0203"},"content":"### Code contributed:"},{"lineNumber":10,"author":{"gitId":"Zhangyilin0203"},"content":"[RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dzhangyilin0203)"},{"lineNumber":11,"author":{"gitId":"Zhangyilin0203"},"content":"### Enhancements implemented:"},{"lineNumber":12,"author":{"gitId":"Zhangyilin0203"},"content":"* Added ability to save and load data to local file."},{"lineNumber":13,"author":{"gitId":"Zhangyilin0203"},"content":" ([\\#17](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/17),"},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":"  [\\#31](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/31),"},{"lineNumber":15,"author":{"gitId":"Zhangyilin0203"},"content":"  [\\#58](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/58),"},{"lineNumber":16,"author":{"gitId":"Zhangyilin0203"},"content":"  [\\#90](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/90))"},{"lineNumber":17,"author":{"gitId":"Zhangyilin0203"},"content":"  * What it does: Add the ability to store the changed data to a local file"},{"lineNumber":18,"author":{"gitId":"Zhangyilin0203"},"content":"                   and load the data to the application when the application opens."},{"lineNumber":19,"author":{"gitId":"Zhangyilin0203"},"content":"  * Justification: The feature improve the application significantly as it can let users store the data they have "},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"                   already written to the program, which increase the efficiency of the application."},{"lineNumber":21,"author":{"gitId":"Zhangyilin0203"},"content":"  * Highlights: This feature is able to store the changed data locally even if user accidentally close the application."},{"lineNumber":22,"author":{"gitId":"Zhangyilin0203"},"content":"                Also, if the user wants to switch to another device, he or she can copy and paste the content to that device,"},{"lineNumber":23,"author":{"gitId":"Zhangyilin0203"},"content":"                so that the other device could store exactly the same information."},{"lineNumber":24,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":25,"author":{"gitId":"Zhangyilin0203"},"content":"* Added ability to print the countdown for exams and deadlines."},{"lineNumber":26,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#77](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/77),"},{"lineNumber":27,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#168](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/168))"},{"lineNumber":28,"author":{"gitId":"Zhangyilin0203"},"content":"   * What it does: Add the ability to print the countdown for deadline tasks and exam events."},{"lineNumber":29,"author":{"gitId":"Zhangyilin0203"},"content":"                   User can decide to print only the countdown for only the deadline task or exam events or both."},{"lineNumber":30,"author":{"gitId":"Zhangyilin0203"},"content":"   * Justification: This feature allows user to view how much time is left for their deadline and exams so that they can"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":"                    better prepare for them."},{"lineNumber":32,"author":{"gitId":"Zhangyilin0203"},"content":"   * Highlights: This feature is able to print countdown in the ascending order, so that the most urgent task "},{"lineNumber":33,"author":{"gitId":"Zhangyilin0203"},"content":"                 or event is at the top. If the deadline or exam date is within a day, countdown command will print out"},{"lineNumber":34,"author":{"gitId":"Zhangyilin0203"},"content":"                 messages like *\u0027its time to speed up\u0027* or *\u0027try your best\u0027* to encourage the user."},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":36,"author":{"gitId":"Zhangyilin0203"},"content":"* Added more JavaDoc comments for some public methods."},{"lineNumber":37,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#73](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/73))"},{"lineNumber":38,"author":{"gitId":"Zhangyilin0203"},"content":"* Improved the quality of code by deleting unused methods, avoiding too long methods, magic string and unused exceptions."},{"lineNumber":39,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#60](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/60))"},{"lineNumber":40,"author":{"gitId":"Zhangyilin0203"},"content":"* Wrote Junit tests to increase coverage."},{"lineNumber":41,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#87](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/87))"},{"lineNumber":42,"author":{"gitId":"Zhangyilin0203"},"content":"### Contributions to team-based tasks:"},{"lineNumber":43,"author":{"gitId":"Zhangyilin0203"},"content":"* Reviewed team members\u0027 PR, and gave them some suggestions."},{"lineNumber":44,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#86](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/86),"},{"lineNumber":45,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#30](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/30))"},{"lineNumber":46,"author":{"gitId":"Zhangyilin0203"},"content":"* Fixed the code regularly to make sure it passes CI on GitHub."},{"lineNumber":47,"author":{"gitId":"Zhangyilin0203"},"content":"### Contributions to documentation:"},{"lineNumber":48,"author":{"gitId":"Zhangyilin0203"},"content":"#### Contributions to the Developer Guide:"},{"lineNumber":49,"author":{"gitId":"Zhangyilin0203"},"content":"* Added an introduction to the Developer Guide."},{"lineNumber":50,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#118](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/118))"},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"* Added implementation for the feature `saving data`, `print countdown`."},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#129](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/129),"},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#186](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/186),"},{"lineNumber":54,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#187](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/187),"},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#200](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/200),"},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"   )"},{"lineNumber":57,"author":{"gitId":"Zhangyilin0203"},"content":"* Added sequence diagram `save data`, `load data` for feature `saving data` , and feature `print countdown`."},{"lineNumber":58,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#128](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/128),"},{"lineNumber":59,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#183](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/183),"},{"lineNumber":60,"author":{"gitId":"Zhangyilin0203"},"content":"   [\\#190](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/190))"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"* Added the glossary for Developer Guide."},{"lineNumber":62,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#119](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/119))"},{"lineNumber":63,"author":{"gitId":"Zhangyilin0203"},"content":"* Added part of the user stories."},{"lineNumber":64,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#171](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/171))"},{"lineNumber":65,"author":{"gitId":"Zhangyilin0203"},"content":"* Added part of the user manual testing."},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#309](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/309))"},{"lineNumber":67,"author":{"gitId":"Zhangyilin0203"},"content":"  "},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"#### Contributions to the User Guide:"},{"lineNumber":69,"author":{"gitId":"Zhangyilin0203"},"content":"* Documented features `saving the data`, as well as feature `countdown deadlines`, feature `countdown exams`, and feature `countdown` "},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"  in printing countdown."},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#169](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/169))"},{"lineNumber":72,"author":{"gitId":"Zhangyilin0203"},"content":"* Documented the FAQ part of user guide."},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"  ([\\#169](https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/169))"},{"lineNumber":74,"author":{"gitId":"Zhangyilin0203"},"content":"#### Contributions beyond the project team:"},{"lineNumber":75,"author":{"gitId":"Zhangyilin0203"},"content":"* Reported bugs in other team\u0027s project during PE."},{"lineNumber":76,"author":{"gitId":"Zhangyilin0203"},"content":"  ([1](https://github.com/Zhangyilin0203/ped/issues/1),"},{"lineNumber":77,"author":{"gitId":"Zhangyilin0203"},"content":"   [2](https://github.com/Zhangyilin0203/ped/issues/2),"},{"lineNumber":78,"author":{"gitId":"Zhangyilin0203"},"content":"   [3](https://github.com/Zhangyilin0203/ped/issues/3),"},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"   [4](https://github.com/Zhangyilin0203/ped/issues/4),"},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"   [5](https://github.com/Zhangyilin0203/ped/issues/5),"},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"   [6](https://github.com/Zhangyilin0203/ped/issues/6),"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"   [7](https://github.com/Zhangyilin0203/ped/issues/7),"},{"lineNumber":83,"author":{"gitId":"Zhangyilin0203"},"content":"   [8](https://github.com/Zhangyilin0203/ped/issues/8),"},{"lineNumber":84,"author":{"gitId":"Zhangyilin0203"},"content":"   [9](https://github.com/Zhangyilin0203/ped/issues/10),"},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":"   [10](https://github.com/Zhangyilin0203/ped/issues/11),"},{"lineNumber":86,"author":{"gitId":"Zhangyilin0203"},"content":"   [11](https://github.com/Zhangyilin0203/ped/issues/12))"}],"authorContributionMap":{"Zhangyilin0203":86}},{"path":"src/main/java/seedu/duke/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":" * Signals an error caused by an invalid command input by the user."},{"lineNumber":5,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"public class CommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":""},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"    private String exception;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":""},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"    public CommandException(String message) {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"        exception \u003d message;"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":""},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    public String getException() {"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        return exception;"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":18}},{"path":"src/main/java/seedu/duke/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" * Extracts dates input by the user. Returns a LocalDate."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" * Default date format is ddMMyy for fastest date input."},{"lineNumber":10,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"public abstract class DateTimeParser {"},{"lineNumber":12,"author":{"gitId":"Jingming517"},"content":"    //@@author Jingming517 - reused with minor modification."},{"lineNumber":13,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":14,"author":{"gitId":"Jingming517"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jingming517"},"content":"     * Converts date of a user input from a String to LocalDate."},{"lineNumber":16,"author":{"gitId":"Jingming517"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Jingming517"},"content":"     * @param date string of date to process."},{"lineNumber":18,"author":{"gitId":"Jingming517"},"content":"     * @return date in LocalDate format."},{"lineNumber":19,"author":{"gitId":"Jingming517"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Jingming517"},"content":"    public static LocalDate inputDateProcessor(String date) throws Exception {"},{"lineNumber":21,"author":{"gitId":"Jingming517"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyy\");"},{"lineNumber":22,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":23,"author":{"gitId":"Jingming517"},"content":"        if (date.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"Jingming517"},"content":"            throw new Exception();"},{"lineNumber":25,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":27,"author":{"gitId":"Jingming517"},"content":"        LocalDate ld \u003d LocalDate.parse(date, formatter);"},{"lineNumber":28,"author":{"gitId":"Jingming517"},"content":"        String valid \u003d ld.format(formatter);"},{"lineNumber":29,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":30,"author":{"gitId":"Jingming517"},"content":"        if (!valid.equals(date)) {"},{"lineNumber":31,"author":{"gitId":"Jingming517"},"content":"            throw new Exception();"},{"lineNumber":32,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Jingming517"},"content":"        return ld;"},{"lineNumber":34,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":35,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Jingming517"},"content":"    //@@author Jingming517 */"},{"lineNumber":37,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":38,"author":{"gitId":"Jingming517"},"content":"    public static LocalTime inputTimeProcessor(String time) throws Exception {"},{"lineNumber":39,"author":{"gitId":"Jingming517"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":40,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":41,"author":{"gitId":"Jingming517"},"content":"        if (time.isEmpty()) {"},{"lineNumber":42,"author":{"gitId":"Jingming517"},"content":"            throw new Exception();"},{"lineNumber":43,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":45,"author":{"gitId":"Jingming517"},"content":"        LocalTime lt \u003d LocalTime.parse(time, formatter);"},{"lineNumber":46,"author":{"gitId":"Jingming517"},"content":"        String valid \u003d lt.format(formatter);"},{"lineNumber":47,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":48,"author":{"gitId":"Jingming517"},"content":"        if (!valid.equals(time)) {"},{"lineNumber":49,"author":{"gitId":"Jingming517"},"content":"            throw new Exception();"},{"lineNumber":50,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Jingming517"},"content":"        return lt;"},{"lineNumber":52,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":54,"author":{"gitId":"Jingming517"},"content":"}"}],"authorContributionMap":{"imhm":11,"Jingming517":43}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":" * Entry point of the Main application."},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" * Initializes the application and starts the interaction with the user."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"public class Main {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":""},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    private CalendarList calendarList;"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":""},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"     * Initializes the application and imports the data stored locally to the application."},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     * @param filePath Filepath of the storage data."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    public Main(String filePath) {"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"        calendarList \u003d new CalendarList();"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        storage.readFromFile(calendarList);"},{"lineNumber":26,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"     * Reads the user command and executes it, until the user issues the exit command."},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"     * Greets the user upon start up and exit."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    public void run() {"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"        boolean isExit \u003d false;"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"        while (!isExit) {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"                Command c \u003d Parser.handleUserInput(fullCommand);"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"                Ui.printBorder(true);"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"                c.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            } catch (CommandException e) {"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"                Ui.printExceptionMessage(e, calendarList);"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"            } finally {"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"                Ui.printBorder(false);"},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":""},{"lineNumber":51,"author":{"gitId":"imhm"},"content":""},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"        new Main(\"data/tasks.txt\").run();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"imhm":46,"-":7,"Zhangyilin0203":2}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.AddInfoCommand;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.CountdownCommand;"},{"lineNumber":7,"author":{"gitId":"Jingming517"},"content":"import seedu.duke.command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.DeleteInfoCommand;"},{"lineNumber":9,"author":{"gitId":"Jingming517"},"content":"import seedu.duke.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.command.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.HelpCommand;"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.command.PrintEventsCommand;"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.PrintPriorityCommand;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.PrintProgressCommand;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.PrintSuggestionCommand;"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.command.PrintTasksCommand;"},{"lineNumber":18,"author":{"gitId":"Jingming517"},"content":"import seedu.duke.command.PrintTimelineCommand;"},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.command.PrioritizeCommand;"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"import seedu.duke.command.ViewInfoCommand;"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":""},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":" * Determines the type of command input by the user and calls for the respective command function."},{"lineNumber":24,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"public class Parser {"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":""},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_DELETE \u003d \"-\";"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String COMMAND_DONE \u003d \"done\";"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND \u003d \"/f\";"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_HELP \u003d \"help\";"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String COMMAND_PRINT_EVENTS \u003d \"print events\";"},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String COMMAND_PRINT_TASKS \u003d \"print tasks\";"},{"lineNumber":34,"author":{"gitId":"Jingming517"},"content":"    public static final String COMMAND_PRINT_TIMELINE \u003d \"print timeline\";"},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"    public static final String COMMAND_SHOW_PROGRESS \u003d \"print progress\";"},{"lineNumber":36,"author":{"gitId":"Zhangyilin0203"},"content":"    public static final String COMMAND_SHOW_COUNTDOWN \u003d \"countdown\";"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_ADD_INFO \u003d \"/a\";"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_VIEW_INFO \u003d \"/v\";"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_DELETE_INFO \u003d \"/-\";"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"    public static final String COMMAND_PRIORITIZE \u003d \"*\";"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"    public static final String COMMAND_PRINT_PRIORITY \u003d \"print *\";"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"    public static final String COMMAND_PRINT_SUGGESTION \u003d \"suggestion\";"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":""},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"    public static Command handleUserInput(String userInput) {"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":""},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"        if (userInput.equals(COMMAND_EXIT)) {"},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"            return new ExitCommand(userInput);"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"        } else if (userInput.equals(COMMAND_HELP)) {"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"            return new HelpCommand(userInput);"},{"lineNumber":50,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (userInput.equals(COMMAND_PRINT_TASKS)) {"},{"lineNumber":51,"author":{"gitId":"LIU-YiFeng-1"},"content":"            return new PrintTasksCommand(userInput);"},{"lineNumber":52,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (userInput.equals(COMMAND_PRINT_EVENTS)) {"},{"lineNumber":53,"author":{"gitId":"LIU-YiFeng-1"},"content":"            return new PrintEventsCommand(userInput);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } else if (userInput.startsWith(COMMAND_PRINT_TIMELINE)) {"},{"lineNumber":55,"author":{"gitId":"Jingming517"},"content":"            return new PrintTimelineCommand(userInput);"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"        } else if (userInput.startsWith(COMMAND_DONE)) {"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"            return new DoneCommand(userInput);"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":"        } else if (userInput.startsWith(COMMAND_DELETE)) {"},{"lineNumber":59,"author":{"gitId":"imhm"},"content":"            return new DeleteCommand(userInput);"},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"        } else if (userInput.startsWith(COMMAND_FIND)) {"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"            return new FindCommand(userInput);"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"        } else if (userInput.startsWith(COMMAND_ADD_INFO)) {"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"            return new AddInfoCommand(userInput);"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"        } else if (userInput.startsWith(COMMAND_VIEW_INFO)) {"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"            return new ViewInfoCommand(userInput);"},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"        } else if (userInput.startsWith(COMMAND_DELETE_INFO)) {"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"            return new DeleteInfoCommand(userInput);"},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"        } else if (userInput.equals(COMMAND_SHOW_PROGRESS)) {"},{"lineNumber":69,"author":{"gitId":"JiawenLyu"},"content":"            return new PrintProgressCommand(userInput);"},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"        } else if (userInput.startsWith(COMMAND_SHOW_COUNTDOWN)) {"},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"            return new CountdownCommand(userInput);"},{"lineNumber":72,"author":{"gitId":"JiawenLyu"},"content":"        } else if (userInput.startsWith((COMMAND_PRIORITIZE))) {"},{"lineNumber":73,"author":{"gitId":"JiawenLyu"},"content":"            return new PrioritizeCommand(userInput);"},{"lineNumber":74,"author":{"gitId":"JiawenLyu"},"content":"        } else if (userInput.equals(COMMAND_PRINT_PRIORITY)) {"},{"lineNumber":75,"author":{"gitId":"JiawenLyu"},"content":"            return new PrintPriorityCommand(userInput);"},{"lineNumber":76,"author":{"gitId":"JiawenLyu"},"content":"        } else if (userInput.equals(COMMAND_PRINT_SUGGESTION)) {"},{"lineNumber":77,"author":{"gitId":"JiawenLyu"},"content":"            return new PrintSuggestionCommand(userInput);"},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"imhm"},"content":"            /** An invalid command is catered for in AddCommand */"},{"lineNumber":80,"author":{"gitId":"imhm"},"content":"            return new AddCommand(userInput);"},{"lineNumber":81,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":8,"imhm":51,"JiawenLyu":15,"Jingming517":5,"-":1,"Zhangyilin0203":3}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Activity;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Exam;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Lab;"},{"lineNumber":9,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.event.Lecture;"},{"lineNumber":10,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.event.Tutorial;"},{"lineNumber":11,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Todo;"},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.resources.ModuleChecker;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":""},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"import java.io.File;"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"import java.io.FileWriter;"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"import java.io.IOException;"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"import java.time.DateTimeException;"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":22,"author":{"gitId":"Zhangyilin0203"},"content":"import java.time.LocalTime;"},{"lineNumber":23,"author":{"gitId":"Zhangyilin0203"},"content":"import java.util.ArrayList;"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"import java.util.Scanner;"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":""},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":" * Represents the local file used to store the task list data."},{"lineNumber":28,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":29,"author":{"gitId":"Zhangyilin0203"},"content":"//@@author zhangyilin0203"},{"lineNumber":30,"author":{"gitId":"Zhangyilin0203"},"content":"public class Storage {"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":32,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int TYPE \u003d 0;"},{"lineNumber":33,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int TASK_IS_DONE \u003d 1;"},{"lineNumber":34,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int TASK_DESCRIPTION \u003d 2;"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int TASK_IMPORTANT \u003d 3;"},{"lineNumber":36,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int TASK_DATE \u003d 4;"},{"lineNumber":37,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":38,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int EVENT_MODULE_CODE \u003d 2;"},{"lineNumber":39,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int DETAILS \u003d 2;"},{"lineNumber":40,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int EVENT_IS_OVER \u003d 1;"},{"lineNumber":41,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int EVENT_DATE \u003d 3;"},{"lineNumber":42,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int EVENT_TIME \u003d 4;"},{"lineNumber":43,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int EVENT_VENUE \u003d 5;"},{"lineNumber":44,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final int EVENT_ADDITION_INFO \u003d 6;"},{"lineNumber":45,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":46,"author":{"gitId":"Zhangyilin0203"},"content":"    private static ArrayList\u003cCalendarItem\u003e taskArrayList;"},{"lineNumber":47,"author":{"gitId":"Zhangyilin0203"},"content":"    private static String filePath;"},{"lineNumber":48,"author":{"gitId":"Zhangyilin0203"},"content":"    public static int countFileTasks \u003d 0;"},{"lineNumber":49,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":50,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"     * Constructor of the Storage class."},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"     * Initialize file f and file path, if f does not exists, creat a new file f."},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param filePath the path that is the destination of the file."},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"    public Storage(String filePath) {"},{"lineNumber":57,"author":{"gitId":"Zhangyilin0203"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":58,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":60,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"     * Creates a new storage file if the file does not exists."},{"lineNumber":62,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param output Storage file."},{"lineNumber":64,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Zhangyilin0203"},"content":"    private static void createFile(File output) {"},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"Zhangyilin0203"},"content":"            if (output.exists()) {"},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"                return;"},{"lineNumber":69,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"            if (!output.getParentFile().exists()) {"},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"                output.getParentFile().mkdirs();"},{"lineNumber":72,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"            output.createNewFile();"},{"lineNumber":74,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (IOException e) {"},{"lineNumber":75,"author":{"gitId":"Zhangyilin0203"},"content":"            Ui.printFileCreateErrorMessage(e);"},{"lineNumber":76,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"     * Write the data from taskList into file."},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list that the data is stored during running the program."},{"lineNumber":83,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void writeToFile(CalendarList calendarList) {"},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"Zhangyilin0203"},"content":"            assert filePath !\u003d null : \"filePath should not be null\";"},{"lineNumber":87,"author":{"gitId":"Zhangyilin0203"},"content":"            File output \u003d new File(filePath);"},{"lineNumber":88,"author":{"gitId":"Zhangyilin0203"},"content":"            createFile(output);"},{"lineNumber":89,"author":{"gitId":"Zhangyilin0203"},"content":"            FileWriter fw \u003d new FileWriter(output);"},{"lineNumber":90,"author":{"gitId":"Zhangyilin0203"},"content":"            taskArrayList \u003d calendarList.getCalendarList();"},{"lineNumber":91,"author":{"gitId":"Zhangyilin0203"},"content":"            for (CalendarItem item : taskArrayList) {"},{"lineNumber":92,"author":{"gitId":"Zhangyilin0203"},"content":"                fw.write(item.printIntoFile() + \"\\n\");"},{"lineNumber":93,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"            fw.close();"},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"            Ui.printSaveDataErrorMessage(e);"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"Zhangyilin0203"},"content":"     * Read data from file and store the data into the taskList."},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList A taskList that store the data read from file."},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void readFromFile(CalendarList calendarList) {"},{"lineNumber":106,"author":{"gitId":"Zhangyilin0203"},"content":"        File input \u003d new File(filePath);"},{"lineNumber":107,"author":{"gitId":"Zhangyilin0203"},"content":"        createFile(input);"},{"lineNumber":108,"author":{"gitId":"Zhangyilin0203"},"content":"        Scanner sc \u003d null;"},{"lineNumber":109,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"Zhangyilin0203"},"content":"            sc \u003d new Scanner(input);"},{"lineNumber":111,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":112,"author":{"gitId":"Zhangyilin0203"},"content":"            Ui.printFileNotFoundMessage();"},{"lineNumber":113,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"Zhangyilin0203"},"content":"        while (sc.hasNext()) {"},{"lineNumber":115,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem item \u003d null;"},{"lineNumber":116,"author":{"gitId":"Zhangyilin0203"},"content":"            String[] taskInFile \u003d sc.nextLine().split(\"\\\\|\");"},{"lineNumber":117,"author":{"gitId":"Zhangyilin0203"},"content":"            int num \u003d taskInFile.length;"},{"lineNumber":118,"author":{"gitId":"Zhangyilin0203"},"content":"            assert taskInFile[TYPE] !\u003d null : \"the type of the task should not be null\";"},{"lineNumber":119,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d getItemsFromFile(item, taskInFile, num);"},{"lineNumber":120,"author":{"gitId":"Zhangyilin0203"},"content":"            countFileTasks++;"},{"lineNumber":121,"author":{"gitId":"Zhangyilin0203"},"content":"            addItemToCalendarList(calendarList, item);"},{"lineNumber":122,"author":{"gitId":"Zhangyilin0203"},"content":"            markTaskAsDone(item, taskInFile);"},{"lineNumber":123,"author":{"gitId":"Zhangyilin0203"},"content":"            markEventAsOver(item, taskInFile);"},{"lineNumber":124,"author":{"gitId":"Zhangyilin0203"},"content":"            markTaskAsImportant(item, taskInFile);"},{"lineNumber":125,"author":{"gitId":"Zhangyilin0203"},"content":"            loadAdditionInformation(item, taskInFile, num);"},{"lineNumber":126,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":129,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem getItemsFromFile(CalendarItem item, String[] taskInFile, int num) {"},{"lineNumber":130,"author":{"gitId":"Zhangyilin0203"},"content":"        switch (taskInFile[TYPE]) {"},{"lineNumber":131,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"T\":"},{"lineNumber":132,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003d\u003d 4) {"},{"lineNumber":133,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d new Todo(taskInFile[TASK_DESCRIPTION]);"},{"lineNumber":134,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":135,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in \" + taskInFile[TASK_DESCRIPTION]);"},{"lineNumber":136,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":138,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"D\":"},{"lineNumber":139,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003d\u003d 5) {"},{"lineNumber":140,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d readDeadlineTask(taskInFile);"},{"lineNumber":141,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":142,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in deadline: \" + taskInFile[TASK_DESCRIPTION]);"},{"lineNumber":143,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":145,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"ACT\":"},{"lineNumber":146,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003e\u003d 7) {"},{"lineNumber":147,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d readActivity(taskInFile);"},{"lineNumber":148,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":149,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in act: \" + taskInFile[DETAILS]);"},{"lineNumber":150,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":152,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"LEC\":"},{"lineNumber":153,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003e\u003d 7) {"},{"lineNumber":154,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d readLectureEvent(taskInFile);"},{"lineNumber":155,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":156,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in lec: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":157,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":159,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"TUT\":"},{"lineNumber":160,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003e\u003d 7) {"},{"lineNumber":161,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d readTutorialEvent(taskInFile);"},{"lineNumber":162,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":163,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in tut: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":164,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":166,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"LAB\":"},{"lineNumber":167,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003e\u003d 7) {"},{"lineNumber":168,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d readLabEvent(taskInFile);"},{"lineNumber":169,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":170,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in lab: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":171,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":173,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"EXAM\":"},{"lineNumber":174,"author":{"gitId":"Zhangyilin0203"},"content":"            if (num \u003e\u003d 7) {"},{"lineNumber":175,"author":{"gitId":"Zhangyilin0203"},"content":"                item \u003d readExamEvent(taskInFile);"},{"lineNumber":176,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":177,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(\"element in file is lost in exam: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":178,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":180,"author":{"gitId":"Zhangyilin0203"},"content":"        default:"},{"lineNumber":181,"author":{"gitId":"Zhangyilin0203"},"content":"            Ui.printWrongStorageInput();"},{"lineNumber":182,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":183,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":185,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":187,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":188,"author":{"gitId":"Zhangyilin0203"},"content":"     * Reads exam event to app."},{"lineNumber":189,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":190,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data to read."},{"lineNumber":191,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return item to add."},{"lineNumber":192,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem readExamEvent(String[] taskInFile) {"},{"lineNumber":194,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarItem item \u003d null;"},{"lineNumber":195,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalTime time;"},{"lineNumber":196,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalDate date;"},{"lineNumber":197,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskInFile[EVENT_DATE].equals(\"\") || taskInFile[EVENT_TIME].equals(\"\")"},{"lineNumber":198,"author":{"gitId":"Zhangyilin0203"},"content":"                || taskInFile[EVENT_MODULE_CODE].equals(\"\") || taskInFile[EVENT_VENUE].equals(\"\")) {"},{"lineNumber":199,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"element in file is lost in exam: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":200,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":201,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"Zhangyilin0203"},"content":"        if (!isValid(taskInFile)) {"},{"lineNumber":203,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"module code incorrect in exam: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":204,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":205,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":207,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"},{"lineNumber":208,"author":{"gitId":"Zhangyilin0203"},"content":"            time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"},{"lineNumber":209,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d new Exam(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"},{"lineNumber":210,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":211,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Invalid exam date time \" + taskInFile[EVENT_DATE] + \" \" + taskInFile[EVENT_TIME]"},{"lineNumber":212,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \" for \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":213,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":215,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":217,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"Zhangyilin0203"},"content":"     * Reads lab event to app."},{"lineNumber":219,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":220,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data to read."},{"lineNumber":221,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return item to add."},{"lineNumber":222,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem readLabEvent(String[] taskInFile) {"},{"lineNumber":224,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarItem item \u003d null;"},{"lineNumber":225,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalTime time;"},{"lineNumber":226,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalDate date;"},{"lineNumber":227,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskInFile[EVENT_DATE].equals(\"\") || taskInFile[EVENT_TIME].equals(\"\")"},{"lineNumber":228,"author":{"gitId":"Zhangyilin0203"},"content":"                || taskInFile[EVENT_MODULE_CODE].equals(\"\") || taskInFile[EVENT_VENUE].equals(\"\")) {"},{"lineNumber":229,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"element in file is lost in lab: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":230,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":231,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"Zhangyilin0203"},"content":"        if (!isValid(taskInFile)) {"},{"lineNumber":233,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"module code incorrect in lab: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":234,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":235,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":237,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"},{"lineNumber":238,"author":{"gitId":"Zhangyilin0203"},"content":"            time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"},{"lineNumber":239,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d new Lab(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"},{"lineNumber":240,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":241,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Invalid lab date time \" + taskInFile[EVENT_DATE] + \" \" + taskInFile[EVENT_TIME]"},{"lineNumber":242,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \" for \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":243,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":245,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":247,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"Zhangyilin0203"},"content":"     * Reads tutorial event to app."},{"lineNumber":249,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":250,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data to read."},{"lineNumber":251,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return item to add."},{"lineNumber":252,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem readTutorialEvent(String[] taskInFile) {"},{"lineNumber":254,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarItem item \u003d null;"},{"lineNumber":255,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalTime time;"},{"lineNumber":256,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalDate date;"},{"lineNumber":257,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskInFile[EVENT_DATE].equals(\"\") || taskInFile[EVENT_TIME].equals(\"\")"},{"lineNumber":258,"author":{"gitId":"Zhangyilin0203"},"content":"                || taskInFile[EVENT_MODULE_CODE].equals(\"\") || taskInFile[EVENT_VENUE].equals(\"\")) {"},{"lineNumber":259,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"element in file is lost in tut: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":260,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":261,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"Zhangyilin0203"},"content":"        if (!isValid(taskInFile)) {"},{"lineNumber":263,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"module code incorrect in tutorial: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":264,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":265,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":267,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"},{"lineNumber":268,"author":{"gitId":"Zhangyilin0203"},"content":"            time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"},{"lineNumber":269,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d new Tutorial(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"},{"lineNumber":270,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":271,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Invalid tutorial date time \" + taskInFile[EVENT_DATE] + \" \" + taskInFile[EVENT_TIME]"},{"lineNumber":272,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \" for \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":273,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":274,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":275,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":277,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":278,"author":{"gitId":"Zhangyilin0203"},"content":"     * Reads lecture event to app."},{"lineNumber":279,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":280,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data to read."},{"lineNumber":281,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return item to add."},{"lineNumber":282,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem readLectureEvent(String[] taskInFile) {"},{"lineNumber":284,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarItem item \u003d null;"},{"lineNumber":285,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalTime time;"},{"lineNumber":286,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalDate date;"},{"lineNumber":287,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskInFile[EVENT_DATE].equals(\"\") || taskInFile[EVENT_TIME].equals(\"\")"},{"lineNumber":288,"author":{"gitId":"Zhangyilin0203"},"content":"                || taskInFile[EVENT_MODULE_CODE].equals(\"\") || taskInFile[EVENT_VENUE].equals(\"\")) {"},{"lineNumber":289,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"element in file is lost in lec: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":290,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":291,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"Zhangyilin0203"},"content":"        if (!isValid(taskInFile)) {"},{"lineNumber":293,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"module code incorrect in lec: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":294,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":295,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":297,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"},{"lineNumber":298,"author":{"gitId":"Zhangyilin0203"},"content":"            time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"},{"lineNumber":299,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d new Lecture(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"},{"lineNumber":300,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":301,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Invalid lecture date time \" + taskInFile[EVENT_DATE] + \" \" + taskInFile[EVENT_TIME]"},{"lineNumber":302,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \" for \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":303,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":304,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":305,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":307,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":308,"author":{"gitId":"Zhangyilin0203"},"content":"     * Reads activity event to app."},{"lineNumber":309,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":310,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data to read."},{"lineNumber":311,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return item to add."},{"lineNumber":312,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem readActivity(String[] taskInFile) {"},{"lineNumber":314,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarItem item \u003d null;"},{"lineNumber":315,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalTime time;"},{"lineNumber":316,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalDate date;"},{"lineNumber":317,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskInFile[EVENT_DATE].equals(\"\") || taskInFile[EVENT_TIME].equals(\"\") || taskInFile[DETAILS].equals(\"\")"},{"lineNumber":318,"author":{"gitId":"Zhangyilin0203"},"content":"                || taskInFile[EVENT_VENUE].equals(\"\")) {"},{"lineNumber":319,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"element in file is lost in act: \" + taskInFile[EVENT_MODULE_CODE]);"},{"lineNumber":320,"author":{"gitId":"Zhangyilin0203"},"content":"            return null;"},{"lineNumber":321,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":322,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":323,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"},{"lineNumber":324,"author":{"gitId":"Zhangyilin0203"},"content":"            time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"},{"lineNumber":325,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d new Activity(taskInFile[DETAILS], date, time, taskInFile[EVENT_VENUE]);"},{"lineNumber":326,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":327,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Invalid activity date time \" + taskInFile[EVENT_DATE] + \" \" + taskInFile[EVENT_TIME]"},{"lineNumber":328,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \" for \" + taskInFile[DETAILS]);"},{"lineNumber":329,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":330,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":331,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":333,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":334,"author":{"gitId":"Zhangyilin0203"},"content":"     * Reads deadline task to app."},{"lineNumber":335,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":336,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data to read."},{"lineNumber":337,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return item to add."},{"lineNumber":338,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":339,"author":{"gitId":"Zhangyilin0203"},"content":"    private static CalendarItem readDeadlineTask(String[] taskInFile) {"},{"lineNumber":340,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarItem item \u003d null;"},{"lineNumber":341,"author":{"gitId":"Zhangyilin0203"},"content":"        LocalDate date;"},{"lineNumber":342,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":343,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d LocalDate.parse(taskInFile[TASK_DATE].trim());"},{"lineNumber":344,"author":{"gitId":"Zhangyilin0203"},"content":"            item \u003d new Deadline(taskInFile[TASK_DESCRIPTION], date);"},{"lineNumber":345,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":346,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Invalid deadline date \" + taskInFile[TASK_DATE]"},{"lineNumber":347,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \" for \" + taskInFile[TASK_DESCRIPTION]);"},{"lineNumber":348,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":349,"author":{"gitId":"Zhangyilin0203"},"content":"        return item;"},{"lineNumber":350,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":352,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":353,"author":{"gitId":"Zhangyilin0203"},"content":"     * Adds an item into the calendar list."},{"lineNumber":354,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":355,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list we want to add our item to."},{"lineNumber":356,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item         the item we want to add to the calendar list."},{"lineNumber":357,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":358,"author":{"gitId":"Zhangyilin0203"},"content":"    private static void addItemToCalendarList(CalendarList calendarList, CalendarItem item) {"},{"lineNumber":359,"author":{"gitId":"Zhangyilin0203"},"content":"        if (item instanceof Task) {"},{"lineNumber":360,"author":{"gitId":"Zhangyilin0203"},"content":"            calendarList.addTask((Task) item);"},{"lineNumber":361,"author":{"gitId":"Zhangyilin0203"},"content":"        } else if (item instanceof Event) {"},{"lineNumber":362,"author":{"gitId":"Zhangyilin0203"},"content":"            calendarList.addEvent((Event) item);"},{"lineNumber":363,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":364,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":366,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":367,"author":{"gitId":"Zhangyilin0203"},"content":"     * Marks a task as important."},{"lineNumber":368,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":369,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item       the task we need to mark as important."},{"lineNumber":370,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data stored in the local file."},{"lineNumber":371,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":372,"author":{"gitId":"Zhangyilin0203"},"content":"    private static void markTaskAsImportant(CalendarItem item, String[] taskInFile) {"},{"lineNumber":373,"author":{"gitId":"Zhangyilin0203"},"content":"        if (item instanceof Task) {"},{"lineNumber":374,"author":{"gitId":"Zhangyilin0203"},"content":"            if (taskInFile[TASK_IMPORTANT].equals(\"true\")) {"},{"lineNumber":375,"author":{"gitId":"Zhangyilin0203"},"content":"                ((Task) item).markAsImportant();"},{"lineNumber":376,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":377,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":378,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":380,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":381,"author":{"gitId":"Zhangyilin0203"},"content":"     * Marks an event as over."},{"lineNumber":382,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":383,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item       the event we need to mark as over."},{"lineNumber":384,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data stored in the local file."},{"lineNumber":385,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":386,"author":{"gitId":"Zhangyilin0203"},"content":"    private static void markEventAsOver(CalendarItem item, String[] taskInFile) {"},{"lineNumber":387,"author":{"gitId":"Zhangyilin0203"},"content":"        if (item instanceof Event) {"},{"lineNumber":388,"author":{"gitId":"Zhangyilin0203"},"content":"            if (taskInFile[EVENT_IS_OVER].equals(\"true\")) {"},{"lineNumber":389,"author":{"gitId":"Zhangyilin0203"},"content":"                ((Event) item).markAsOver();"},{"lineNumber":390,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":391,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":393,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":394,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":395,"author":{"gitId":"Zhangyilin0203"},"content":"     * Marks a task as done."},{"lineNumber":396,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":397,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item       the task that we need to mark as done."},{"lineNumber":398,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data stored in local file."},{"lineNumber":399,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":400,"author":{"gitId":"Zhangyilin0203"},"content":"    private static void markTaskAsDone(CalendarItem item, String[] taskInFile) {"},{"lineNumber":401,"author":{"gitId":"Zhangyilin0203"},"content":"        if (item instanceof Task) {"},{"lineNumber":402,"author":{"gitId":"Zhangyilin0203"},"content":"            if (taskInFile[TASK_IS_DONE].equals(\"true\")) {"},{"lineNumber":403,"author":{"gitId":"Zhangyilin0203"},"content":"                ((Task) item).markAsDone();"},{"lineNumber":404,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":405,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":406,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":407,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":408,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":409,"author":{"gitId":"Zhangyilin0203"},"content":"     * Loads the additional information stored in the local file."},{"lineNumber":410,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":411,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item       the event we need to add the additional information."},{"lineNumber":412,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile the data in the local file."},{"lineNumber":413,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param num        the total splitting number."},{"lineNumber":414,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":415,"author":{"gitId":"Zhangyilin0203"},"content":"    private static void loadAdditionInformation(CalendarItem item, String[] taskInFile, int num) {"},{"lineNumber":416,"author":{"gitId":"Zhangyilin0203"},"content":"        if (item instanceof Event) {"},{"lineNumber":417,"author":{"gitId":"Zhangyilin0203"},"content":"            int i;"},{"lineNumber":418,"author":{"gitId":"Zhangyilin0203"},"content":"            for (i \u003d 1; i \u003c\u003d num - EVENT_ADDITION_INFO - 1; i++) {"},{"lineNumber":419,"author":{"gitId":"Zhangyilin0203"},"content":"                ((Event) item).setAdditionalInformation(taskInFile[i + EVENT_ADDITION_INFO]);"},{"lineNumber":420,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":421,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":422,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":423,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":424,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":425,"author":{"gitId":"Zhangyilin0203"},"content":"     * Checks if the module code in the command is valid."},{"lineNumber":426,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":427,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param taskInFile data in file."},{"lineNumber":428,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return isValid  True if the module code is valid, FALSE otherwise."},{"lineNumber":429,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":430,"author":{"gitId":"Zhangyilin0203"},"content":"    private static boolean isValid(String[] taskInFile) {"},{"lineNumber":431,"author":{"gitId":"Zhangyilin0203"},"content":"        ModuleChecker moduleChecker \u003d new ModuleChecker();"},{"lineNumber":432,"author":{"gitId":"Zhangyilin0203"},"content":"        String moduleCode \u003d taskInFile[2];"},{"lineNumber":433,"author":{"gitId":"Zhangyilin0203"},"content":"        return moduleChecker.isModuleValid(moduleCode);"},{"lineNumber":434,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":435,"author":{"gitId":"Zhangyilin0203"},"content":"}"}],"authorContributionMap":{"imhm":21,"Zhangyilin0203":414}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Exam;"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.calendar.event.Lab;"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.calendar.event.Lecture;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Tutorial;"},{"lineNumber":10,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":""},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":" * Text UI of the application."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"public class Ui {"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND_EVENT \u003d \"/fe\";"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND_TASK \u003d \"/ft\";"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND_EVENT_OR_TASK \u003d \"/f\";"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    private Scanner in;"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":""},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    public Ui() {"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        this.in \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":""},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"     * Lists all available commands to the user with the format of the command."},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"    public static void printHelpCommand() {"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"        System.out.println(\"List of available commands:\\n\""},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"                + \"1. todo \u003ctask description\u003e\\n\""},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"2. deadline \u003ctask description\u003e /ddMMyy\\n\""},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"3. act \u003cactivity description\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"                + \"4. exam \u003cmodule code\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"5. lect \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of lecture\u003e /ddMMyy HHmm\\n\""},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"6. tut \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of tutorial\u003e /ddMMyy HHmm\\n\""},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"7. lab \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of lab session\u003e /ddMMyy HHmm\\n\""},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"                + \"8. done \u003ctask number\u003e\\n\""},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"                + \"9. -t \u003ctask number\u003e\\n\""},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"                + \"10. -e \u003cevent number\u003e\\n\""},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"                + \"11. *t \u003ctask number\u003e\\n\""},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"                + \"12. /f \u003ckeyword of task/event\u003e\\n\""},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"                + \"13. /ft \u003ckeyword of task\u003e\\n\""},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"                + \"14. /fe \u003ckeyword of event\u003e\\n\""},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":"                + \"15. print tasks\\n\""},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"                + \"16. print events\\n\""},{"lineNumber":52,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"17. print timeline \\n\""},{"lineNumber":53,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"18. print timeline week\\n\""},{"lineNumber":54,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"19. print timeline month\\n\""},{"lineNumber":55,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"20. print timeline date \u003cddMMyy\u003e\\n\""},{"lineNumber":56,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"21. print progress\\n\""},{"lineNumber":57,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"22. print *\\n\""},{"lineNumber":58,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"23. countdown\\n\""},{"lineNumber":59,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"24. countdown exams\\n\""},{"lineNumber":60,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"25. countdown deadlines\\n\""},{"lineNumber":61,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"26. /a \u003cevent number\u003e - information\\n\""},{"lineNumber":62,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"27. /v \u003cevent number\u003e\\n\""},{"lineNumber":63,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"28. /- \u003cevent_number\u003e a \u003cadditional_information_number\u003e\\n\""},{"lineNumber":64,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"29. suggestion\\n\""},{"lineNumber":65,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"30. bye\""},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"        );"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":""},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"     * Prints the number of tasks in the calendar list."},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":"     * @param calendarList containing the tasks."},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":"    public static void printTotalTaskNumber(CalendarList calendarList) {"},{"lineNumber":75,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Your total task(s): \" + calendarList.getTotalTasks());"},{"lineNumber":76,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"imhm"},"content":""},{"lineNumber":78,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"     * Prints the file not found message."},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void printFileNotFoundMessage() {"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"        System.out.println(\"The file cannot be found: You should follow the UG\u0027s quick \""},{"lineNumber":83,"author":{"gitId":"Zhangyilin0203"},"content":"                + \"start to normally access the file\");"},{"lineNumber":84,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":86,"author":{"gitId":"imhm"},"content":""},{"lineNumber":87,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"imhm"},"content":"     * Returns the input of the user."},{"lineNumber":89,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"imhm"},"content":"     * @return user\u0027s input"},{"lineNumber":91,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"imhm"},"content":"    public String readCommand() {"},{"lineNumber":93,"author":{"gitId":"imhm"},"content":"        return in.nextLine().trim();"},{"lineNumber":94,"author":{"gitId":"imhm"},"content":""},{"lineNumber":95,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"imhm"},"content":""},{"lineNumber":97,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Prints the welcome message."},{"lineNumber":99,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"imhm"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":101,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":102,"author":{"gitId":"LIU-YiFeng-1"},"content":"        String hi \u003d \" #####  #######   #     # ####### #     # ######   #####       #      ######     #   #     #\\n\""},{"lineNumber":103,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"#     # #         #     # #     # #     # #     # #     #     # #     #     #   # #   #   #\\n\""},{"lineNumber":104,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"      # #         #     # #     # #     # #     # #          #   #    #     #  #   #   # #\\n\""},{"lineNumber":105,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \" #####  ######    ####### #     # #     # ######   #####    #     #   #     # #     #   #\\n\""},{"lineNumber":106,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"#             #   #     # #     # #     # #   #         #   #######   #     # #######   #\\n\""},{"lineNumber":107,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"#       #     #   #     # #     # #     # #    #  #     #   #     #   #     # #     #   #\\n\""},{"lineNumber":108,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"#######  #####    #     # #######  #####  #     #  #####    #     #   ######  #     #   #\\n\";"},{"lineNumber":109,"author":{"gitId":"LIU-YiFeng-1"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":110,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"},{"lineNumber":111,"author":{"gitId":"LIU-YiFeng-1"},"content":"        System.out.println(hi);"},{"lineNumber":112,"author":{"gitId":"LIU-YiFeng-1"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\""},{"lineNumber":113,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"Welcome to 25 Hours A Day Task Manager!\\n\""},{"lineNumber":114,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"What can I do for you?\\n\""},{"lineNumber":115,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"Enter \u0027help\u0027 for the list of commands.\\n\""},{"lineNumber":116,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":117,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":118,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"imhm"},"content":""},{"lineNumber":120,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"imhm"},"content":"     * Prints the exit message."},{"lineNumber":122,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"imhm"},"content":"    public static void printExitMessage() {"},{"lineNumber":124,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":125,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"imhm"},"content":""},{"lineNumber":127,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"imhm"},"content":"     * Prints the border of the chat box."},{"lineNumber":129,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"imhm"},"content":"     * @param top set to true to print the top border. Else, set to false to print the bottom border"},{"lineNumber":131,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"imhm"},"content":"    public static void printBorder(boolean top) {"},{"lineNumber":133,"author":{"gitId":"imhm"},"content":"        if (top) {"},{"lineNumber":134,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"................................. \""},{"lineNumber":135,"author":{"gitId":"imhm"},"content":"                    + \"25HoursADay Chat Box ^^ ...............................\");"},{"lineNumber":136,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":137,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"....................................................\""},{"lineNumber":138,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \".....................................\");"},{"lineNumber":139,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"imhm"},"content":""},{"lineNumber":142,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"Zhangyilin0203"},"content":"     * Prints when user changes the content of the file."},{"lineNumber":144,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void printWrongStorageInput() {"},{"lineNumber":146,"author":{"gitId":"Zhangyilin0203"},"content":"        System.out.println(\"The content of the file is changed by user, cannot load one of the line\");"},{"lineNumber":147,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":149,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"imhm"},"content":"     * Shows the task deleted and the number of tasks left in the list."},{"lineNumber":151,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"imhm"},"content":"     * @param numberDelete task number of the task to be deleted."},{"lineNumber":153,"author":{"gitId":"imhm"},"content":"     * @param calendarList task list of the task to be deleted."},{"lineNumber":154,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"imhm"},"content":"    public static void printDeleteMessage(int numberDelete, CalendarList calendarList) {"},{"lineNumber":156,"author":{"gitId":"imhm"},"content":"        assert calendarList !\u003d null;"},{"lineNumber":157,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Deleted:\\n\" + calendarList.getCalendarList().get(numberDelete));"},{"lineNumber":158,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"imhm"},"content":""},{"lineNumber":160,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"imhm"},"content":"     * Prints the last additional information of a particular event."},{"lineNumber":162,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":163,"author":{"gitId":"imhm"},"content":"     * @param event event containing the additional information."},{"lineNumber":164,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"imhm"},"content":"    public static void printLastAdditionalInformation(Event event) {"},{"lineNumber":166,"author":{"gitId":"imhm"},"content":"        assert event !\u003d null;"},{"lineNumber":167,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Event: \" + event);"},{"lineNumber":168,"author":{"gitId":"imhm"},"content":"        int lastIndexOfAdditionalInformation \u003d"},{"lineNumber":169,"author":{"gitId":"imhm"},"content":"                event.getAdditionalInformationCount() - 1; // -1 to cater for array list starting from 0"},{"lineNumber":170,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Additional info added: \""},{"lineNumber":171,"author":{"gitId":"imhm"},"content":"                + event.getAdditionalInformationElement(lastIndexOfAdditionalInformation));"},{"lineNumber":172,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"imhm"},"content":""},{"lineNumber":174,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"imhm"},"content":"     * Prints the additional information based on the index."},{"lineNumber":176,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"imhm"},"content":"     * @param event     containing the additional information."},{"lineNumber":178,"author":{"gitId":"imhm"},"content":"     * @param indexInfo index of the additional information in the array list."},{"lineNumber":179,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"imhm"},"content":"    public static void printAdditionalInformation(Event event, int indexInfo) {"},{"lineNumber":181,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Event: \" + event);"},{"lineNumber":182,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Additional info deleted: \""},{"lineNumber":183,"author":{"gitId":"imhm"},"content":"                + event.getAdditionalInformationElement(indexInfo));"},{"lineNumber":184,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"imhm"},"content":""},{"lineNumber":186,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"imhm"},"content":"     * Prints the list of additional information of a particular event."},{"lineNumber":188,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":189,"author":{"gitId":"imhm"},"content":"     * @param additionalInformation array list of the additional information."},{"lineNumber":190,"author":{"gitId":"imhm"},"content":"     * @param event                 event that contains the additional information."},{"lineNumber":191,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"imhm"},"content":"    public static void printAllAdditionalInformation(ArrayList\u003cString\u003e additionalInformation, Event event) {"},{"lineNumber":193,"author":{"gitId":"imhm"},"content":"        assert event !\u003d null;"},{"lineNumber":194,"author":{"gitId":"imhm"},"content":"        int i \u003d 0;"},{"lineNumber":195,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Event:\" + event);"},{"lineNumber":196,"author":{"gitId":"imhm"},"content":"        if (additionalInformation.isEmpty()) {"},{"lineNumber":197,"author":{"gitId":"imhm"},"content":"            System.out.println(\"No existing additional information.\");"},{"lineNumber":198,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":199,"author":{"gitId":"imhm"},"content":"            for (String s : additionalInformation) {"},{"lineNumber":200,"author":{"gitId":"imhm"},"content":"                i++;"},{"lineNumber":201,"author":{"gitId":"imhm"},"content":"                System.out.println(i + \". \" + s);"},{"lineNumber":202,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"imhm"},"content":""},{"lineNumber":206,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Shows the user the list of items in the calendar list,"},{"lineNumber":208,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * formatted as an indexed list starting from 1."},{"lineNumber":209,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":210,"author":{"gitId":"imhm"},"content":"     * @param calendarList tasks retrieved from this task list."},{"lineNumber":211,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":212,"author":{"gitId":"imhm"},"content":"    public static void printTaskListView(CalendarList calendarList) {"},{"lineNumber":213,"author":{"gitId":"LIU-YiFeng-1"},"content":"        assert calendarList !\u003d null;"},{"lineNumber":214,"author":{"gitId":"LIU-YiFeng-1"},"content":"        int taskCounts \u003d 0;"},{"lineNumber":215,"author":{"gitId":"imhm"},"content":"        System.out.println(\"This is your list of task(s):\");"},{"lineNumber":216,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":217,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (calendarList.getCalendarList().get(i) instanceof Task) {"},{"lineNumber":218,"author":{"gitId":"LIU-YiFeng-1"},"content":"                taskCounts++;"},{"lineNumber":219,"author":{"gitId":"LIU-YiFeng-1"},"content":"                System.out.printf(\"%d.\" + calendarList.getCalendarList().get(i) + \"\\n\", taskCounts);"},{"lineNumber":220,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":221,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"LIU-YiFeng-1"},"content":"        if (taskCounts \u003d\u003d 0) {"},{"lineNumber":223,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Oops, there are no tasks stored in your list!\");"},{"lineNumber":224,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":227,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":228,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Shows the user all the events in the calendar list,"},{"lineNumber":229,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * such as lecture, lab, tutorial and events."},{"lineNumber":230,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":231,"author":{"gitId":"imhm"},"content":"     * @param calendarList tasks retrieved from this task list."},{"lineNumber":232,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"imhm"},"content":"    public static void printEventsListView(CalendarList calendarList) {"},{"lineNumber":234,"author":{"gitId":"LIU-YiFeng-1"},"content":"        assert calendarList !\u003d null;"},{"lineNumber":235,"author":{"gitId":"LIU-YiFeng-1"},"content":"        int eventCounts \u003d 0;"},{"lineNumber":236,"author":{"gitId":"LIU-YiFeng-1"},"content":"        System.out.println(\"This is your list of event(s):\");"},{"lineNumber":237,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":238,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (calendarList.getCalendarList().get(i) instanceof Event) {"},{"lineNumber":239,"author":{"gitId":"LIU-YiFeng-1"},"content":"                eventCounts++;"},{"lineNumber":240,"author":{"gitId":"imhm"},"content":"                System.out.printf(\"%d.\" + calendarList.getCalendarList().get(i) + \"\\n\", eventCounts);"},{"lineNumber":241,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":242,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"LIU-YiFeng-1"},"content":"        if (eventCounts \u003d\u003d 0) {"},{"lineNumber":244,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Oops, there are no events stored in your list!\");"},{"lineNumber":245,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"imhm"},"content":""},{"lineNumber":248,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":249,"author":{"gitId":"imhm"},"content":"     * Shows the user the task (that was indicated by the user) that was marked as done ."},{"lineNumber":250,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":251,"author":{"gitId":"imhm"},"content":"     * @param calendarNumberCompleted calendar number of the task set as done."},{"lineNumber":252,"author":{"gitId":"imhm"},"content":"     * @param calendarList            calendar list that has the task marked as done."},{"lineNumber":253,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":254,"author":{"gitId":"imhm"},"content":"    public static void printCompleteTaskMessage(int calendarNumberCompleted, CalendarList calendarList) {"},{"lineNumber":255,"author":{"gitId":"imhm"},"content":"        assert calendarList !\u003d null;"},{"lineNumber":256,"author":{"gitId":"imhm"},"content":"        System.out.println("},{"lineNumber":257,"author":{"gitId":"imhm"},"content":"                \"Good work! I\u0027ve marked this task as done:\\n\""},{"lineNumber":258,"author":{"gitId":"imhm"},"content":"                        + calendarList.getCalendarList().get(calendarNumberCompleted));"},{"lineNumber":259,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"imhm"},"content":""},{"lineNumber":261,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"imhm"},"content":"     * Shows the user the task/event that was added."},{"lineNumber":263,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":264,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list that the task was added to."},{"lineNumber":265,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"imhm"},"content":"    public static void printAddMessage(CalendarList calendarList, boolean isTask) {"},{"lineNumber":267,"author":{"gitId":"LIU-YiFeng-1"},"content":"        assert calendarList !\u003d null;"},{"lineNumber":268,"author":{"gitId":"imhm"},"content":"        String calendarItem;"},{"lineNumber":269,"author":{"gitId":"LIU-YiFeng-1"},"content":"        /* - 1 is catered for array list\u0027s index starting from 0. */"},{"lineNumber":270,"author":{"gitId":"LIU-YiFeng-1"},"content":"        int lastCalendarItemIndex \u003d calendarList.getCalendarList().size() - 1;"},{"lineNumber":271,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":272,"author":{"gitId":"imhm"},"content":"        if (isTask) {"},{"lineNumber":273,"author":{"gitId":"imhm"},"content":"            calendarItem \u003d \"task\";"},{"lineNumber":274,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (calendarList.getCalendarList().get(lastCalendarItemIndex) instanceof Deadline"},{"lineNumber":275,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    \u0026\u0026 calendarList.getCalendarList().get(lastCalendarItemIndex).getDate().isBefore(LocalDate.now())) {"},{"lineNumber":276,"author":{"gitId":"LIU-YiFeng-1"},"content":"                System.out.println(\"WARNING! The deadline has already passed! \""},{"lineNumber":277,"author":{"gitId":"LIU-YiFeng-1"},"content":"                        + \"Maybe you want to double confirm? Good Luck!\\n\");"},{"lineNumber":278,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":279,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":280,"author":{"gitId":"imhm"},"content":"            calendarItem \u003d \"event\";"},{"lineNumber":281,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Got it. I\u0027ve added this \" + calendarItem + \":\");"},{"lineNumber":283,"author":{"gitId":"imhm"},"content":""},{"lineNumber":284,"author":{"gitId":"LIU-YiFeng-1"},"content":"        /* condition checker; only Lecture, Lab and Tutorial will print the recurring description*/"},{"lineNumber":285,"author":{"gitId":"LIU-YiFeng-1"},"content":"        if (calendarList.getCalendarList().get(lastCalendarItemIndex) instanceof Lecture) {"},{"lineNumber":286,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(calendarList.getCalendarList().get(lastCalendarItemIndex).getRecurringDescription());"},{"lineNumber":287,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (calendarList.getCalendarList().get(lastCalendarItemIndex) instanceof Tutorial) {"},{"lineNumber":288,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(calendarList.getCalendarList().get(lastCalendarItemIndex).getRecurringDescription());"},{"lineNumber":289,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (calendarList.getCalendarList().get(lastCalendarItemIndex) instanceof Lab) {"},{"lineNumber":290,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(calendarList.getCalendarList().get(lastCalendarItemIndex).getRecurringDescription());"},{"lineNumber":291,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else {"},{"lineNumber":292,"author":{"gitId":"imhm"},"content":"            System.out.println(calendarList.getCalendarList().get(lastCalendarItemIndex));"},{"lineNumber":293,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"imhm"},"content":""},{"lineNumber":296,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":297,"author":{"gitId":"Zhangyilin0203"},"content":"     * Prints each item\u0027s countdown."},{"lineNumber":298,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":299,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param days how many days left."},{"lineNumber":300,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item the item to print the countdown."},{"lineNumber":301,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":302,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void printCountDownItem(int days, CalendarItem item) {"},{"lineNumber":303,"author":{"gitId":"LIU-YiFeng-1"},"content":"        assert item !\u003d null;"},{"lineNumber":304,"author":{"gitId":"Zhangyilin0203"},"content":"        if (days \u003c 0) {"},{"lineNumber":305,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(item.getDescription() + \" You have already missed it!\");"},{"lineNumber":306,"author":{"gitId":"Zhangyilin0203"},"content":"        } else if (days \u003d\u003d 0) {"},{"lineNumber":307,"author":{"gitId":"Zhangyilin0203"},"content":"            if (item instanceof Exam) {"},{"lineNumber":308,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(item.getDescription() + \" is in a day. Try your best!\");"},{"lineNumber":309,"author":{"gitId":"Zhangyilin0203"},"content":"            } else {"},{"lineNumber":310,"author":{"gitId":"Zhangyilin0203"},"content":"                System.out.println(item.getDescription() + \" is in a day. It\u0027s time to speed up!\");"},{"lineNumber":311,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":312,"author":{"gitId":"Zhangyilin0203"},"content":"        } else {"},{"lineNumber":313,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(item.getDescription() + \" has \" + days + \" days left.\");"},{"lineNumber":314,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":315,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":317,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":318,"author":{"gitId":"Zhangyilin0203"},"content":"     * Print the countdown for every item in the calendar list."},{"lineNumber":319,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":320,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list we want to print the countdown for."},{"lineNumber":321,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param type         0 is for exam events, 1 is for deadline tasks."},{"lineNumber":322,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":323,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void printCountDownMessage(CalendarList calendarList, int type) {"},{"lineNumber":324,"author":{"gitId":"Zhangyilin0203"},"content":"        switch (type) {"},{"lineNumber":325,"author":{"gitId":"Zhangyilin0203"},"content":"        case 0:"},{"lineNumber":326,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Here is your exams countdown:\");"},{"lineNumber":327,"author":{"gitId":"Zhangyilin0203"},"content":"            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":328,"author":{"gitId":"Zhangyilin0203"},"content":"                CalendarItem temp \u003d calendarList.getItem(i);"},{"lineNumber":329,"author":{"gitId":"Zhangyilin0203"},"content":"                Ui.printCountDownItem(((Exam) temp).getCountdown(), temp);"},{"lineNumber":330,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":331,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":332,"author":{"gitId":"Zhangyilin0203"},"content":"        case 1:"},{"lineNumber":333,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Here is your deadlines countdown:\");"},{"lineNumber":334,"author":{"gitId":"Zhangyilin0203"},"content":"            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":335,"author":{"gitId":"Zhangyilin0203"},"content":"                CalendarItem temp \u003d calendarList.getItem(i);"},{"lineNumber":336,"author":{"gitId":"Zhangyilin0203"},"content":"                Ui.printCountDownItem(((Deadline) temp).getCountdown(), temp);"},{"lineNumber":337,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":338,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":339,"author":{"gitId":"Zhangyilin0203"},"content":"        default:"},{"lineNumber":340,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":341,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":343,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":344,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":345,"author":{"gitId":"imhm"},"content":"     * Prints the calendar task/event/item for FindCommand."},{"lineNumber":346,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":347,"author":{"gitId":"imhm"},"content":"     * @param command        command type."},{"lineNumber":348,"author":{"gitId":"imhm"},"content":"     * @param calendarList   the calendar list to search from."},{"lineNumber":349,"author":{"gitId":"imhm"},"content":"     * @param isFound        true if the first item has been found and printed."},{"lineNumber":350,"author":{"gitId":"imhm"},"content":"     * @param itemIndex      item index in the calendar list."},{"lineNumber":351,"author":{"gitId":"imhm"},"content":"     * @param printNumbering item index printed to the user."},{"lineNumber":352,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":353,"author":{"gitId":"imhm"},"content":"    public static void printFindItemMessage(String command, CalendarList calendarList, boolean isFound,"},{"lineNumber":354,"author":{"gitId":"imhm"},"content":"                                            int itemIndex, int printNumbering) {"},{"lineNumber":355,"author":{"gitId":"imhm"},"content":""},{"lineNumber":356,"author":{"gitId":"imhm"},"content":"        if (!isFound) { // first instance when keyword is found"},{"lineNumber":357,"author":{"gitId":"imhm"},"content":"            String itemType \u003d \"\";"},{"lineNumber":358,"author":{"gitId":"imhm"},"content":"            switch (command) {"},{"lineNumber":359,"author":{"gitId":"imhm"},"content":"            case COMMAND_FIND_EVENT:"},{"lineNumber":360,"author":{"gitId":"imhm"},"content":"                itemType \u003d \"event(s)\";"},{"lineNumber":361,"author":{"gitId":"imhm"},"content":"                break;"},{"lineNumber":362,"author":{"gitId":"imhm"},"content":"            case COMMAND_FIND_TASK:"},{"lineNumber":363,"author":{"gitId":"imhm"},"content":"                itemType \u003d \"task(s)\";"},{"lineNumber":364,"author":{"gitId":"imhm"},"content":"                break;"},{"lineNumber":365,"author":{"gitId":"imhm"},"content":"            case COMMAND_FIND_EVENT_OR_TASK:"},{"lineNumber":366,"author":{"gitId":"imhm"},"content":"                itemType \u003d \"item(s)\";"},{"lineNumber":367,"author":{"gitId":"imhm"},"content":"                break;"},{"lineNumber":368,"author":{"gitId":"imhm"},"content":"            default:"},{"lineNumber":369,"author":{"gitId":"imhm"},"content":"                break;"},{"lineNumber":370,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":371,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Here are the matching \" + itemType + \" in your calendar:\");"},{"lineNumber":372,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":373,"author":{"gitId":"imhm"},"content":"        System.out.printf(\"%d.\" + calendarList.getCalendarList().get(itemIndex) + \"\\n\", printNumbering);"},{"lineNumber":374,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"imhm"},"content":""},{"lineNumber":376,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":377,"author":{"gitId":"imhm"},"content":"     * Shows the user\u0027s progress on deadlines and todos."},{"lineNumber":378,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":379,"author":{"gitId":"JiawenLyu"},"content":"     * @param numTotal    integer of number of total user tasks."},{"lineNumber":380,"author":{"gitId":"JiawenLyu"},"content":"     * @param numFinished integer of number of finished tasks."},{"lineNumber":381,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":382,"author":{"gitId":"JiawenLyu"},"content":"    public static void printProgress(int numTotal, int numFinished) {"},{"lineNumber":383,"author":{"gitId":"JiawenLyu"},"content":"        if (numTotal \u003d\u003d 0) {"},{"lineNumber":384,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"You have no deadlines or todos now!\");"},{"lineNumber":385,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":386,"author":{"gitId":"JiawenLyu"},"content":"            float progress \u003d (float) numFinished / numTotal * 100;"},{"lineNumber":387,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"You have finished \" + numFinished + \"/\" + numTotal"},{"lineNumber":388,"author":{"gitId":"JiawenLyu"},"content":"                    + \" (\" + String.format(\"%.2f\", progress) + \"%) deadlines and todos.\");"},{"lineNumber":389,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":390,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":392,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":393,"author":{"gitId":"JiawenLyu"},"content":"     * Print the message after marking a task as important."},{"lineNumber":394,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":395,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList  the list of user\u0027s tasks and events."},{"lineNumber":396,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarIndex the index of the task in the list."},{"lineNumber":397,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":398,"author":{"gitId":"JiawenLyu"},"content":"    public static void printPrioritizeMessage(CalendarList calendarList, int calendarIndex) {"},{"lineNumber":399,"author":{"gitId":"JiawenLyu"},"content":"        assert calendarList !\u003d null;"},{"lineNumber":400,"author":{"gitId":"JiawenLyu"},"content":"        assert calendarIndex \u003e\u003d 0;"},{"lineNumber":401,"author":{"gitId":"JiawenLyu"},"content":"        System.out.println("},{"lineNumber":402,"author":{"gitId":"JiawenLyu"},"content":"                \"I\u0027ve marked this task as important:\\n\""},{"lineNumber":403,"author":{"gitId":"JiawenLyu"},"content":"                        + calendarList.getCalendarList().get(calendarIndex));"},{"lineNumber":404,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":406,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":407,"author":{"gitId":"JiawenLyu"},"content":"     * Print all important tasks in the list."},{"lineNumber":408,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":409,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of user\u0027s tasks and events."},{"lineNumber":410,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":411,"author":{"gitId":"JiawenLyu"},"content":"    public static void printImportantTasks(CalendarList calendarList) {"},{"lineNumber":412,"author":{"gitId":"JiawenLyu"},"content":"        int taskCount \u003d 0;"},{"lineNumber":413,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":414,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":415,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":416,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":417,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":418,"author":{"gitId":"JiawenLyu"},"content":"            if (((Task) item).getIsImportant()) {"},{"lineNumber":419,"author":{"gitId":"JiawenLyu"},"content":"                taskCount++;"},{"lineNumber":420,"author":{"gitId":"JiawenLyu"},"content":"                System.out.println(taskCount + \". \" + item.toString());"},{"lineNumber":421,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":422,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":423,"author":{"gitId":"JiawenLyu"},"content":"        if (taskCount \u003d\u003d 0) {"},{"lineNumber":424,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"You have no important tasks now!\");"},{"lineNumber":425,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":426,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"There are in total \" + taskCount + \" important tasks in your list.\");"},{"lineNumber":427,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":428,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":429,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":430,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":431,"author":{"gitId":"JiawenLyu"},"content":"     * Show the earliest important deadline task if exists,"},{"lineNumber":432,"author":{"gitId":"JiawenLyu"},"content":"     * and the earliest ordinary deadline task if it exists and is before the important earliest."},{"lineNumber":433,"author":{"gitId":"JiawenLyu"},"content":"     * Show the fist important todo task in the list if exists,"},{"lineNumber":434,"author":{"gitId":"JiawenLyu"},"content":"     * otherwise show the first ordinary todo task in the list if exists."},{"lineNumber":435,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":436,"author":{"gitId":"JiawenLyu"},"content":"     * @param earliestDeadline     the deadline task with earliest due date."},{"lineNumber":437,"author":{"gitId":"JiawenLyu"},"content":"     * @param earImportantDeadline the important deadline task with earliest due date."},{"lineNumber":438,"author":{"gitId":"JiawenLyu"},"content":"     * @param firstTodo            the first todo task in the list."},{"lineNumber":439,"author":{"gitId":"JiawenLyu"},"content":"     * @param firImportantTodo     the first important todo task in the list."},{"lineNumber":440,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":441,"author":{"gitId":"JiawenLyu"},"content":"    public static void printSuggestion(Task earliestDeadline, Task earImportantDeadline,"},{"lineNumber":442,"author":{"gitId":"JiawenLyu"},"content":"                                       Task firstTodo, Task firImportantTodo) {"},{"lineNumber":443,"author":{"gitId":"JiawenLyu"},"content":"        if (earImportantDeadline \u003d\u003d null \u0026\u0026 earliestDeadline \u003d\u003d null"},{"lineNumber":444,"author":{"gitId":"JiawenLyu"},"content":"                \u0026\u0026 firImportantTodo \u003d\u003d null \u0026\u0026 firstTodo \u003d\u003d null) {"},{"lineNumber":445,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"You have no unfinished tasks now!\");"},{"lineNumber":446,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":447,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"Maybe you can prepare for the following tasks now:\");"},{"lineNumber":448,"author":{"gitId":"JiawenLyu"},"content":"            if (earImportantDeadline !\u003d null) {"},{"lineNumber":449,"author":{"gitId":"JiawenLyu"},"content":"                System.out.println(\"The earliest unfinished important deadline: \""},{"lineNumber":450,"author":{"gitId":"JiawenLyu"},"content":"                        + earImportantDeadline.toString());"},{"lineNumber":451,"author":{"gitId":"JiawenLyu"},"content":"                if (earliestDeadline !\u003d null"},{"lineNumber":452,"author":{"gitId":"JiawenLyu"},"content":"                        \u0026\u0026 earliestDeadline.getDate().isBefore(earImportantDeadline.getDate())) {"},{"lineNumber":453,"author":{"gitId":"JiawenLyu"},"content":"                    System.out.println(\"The earliest unfinished ordinary deadline: \""},{"lineNumber":454,"author":{"gitId":"JiawenLyu"},"content":"                            + earliestDeadline.toString());"},{"lineNumber":455,"author":{"gitId":"JiawenLyu"},"content":"                }"},{"lineNumber":456,"author":{"gitId":"JiawenLyu"},"content":"            } else if (earliestDeadline !\u003d null) {"},{"lineNumber":457,"author":{"gitId":"JiawenLyu"},"content":"                System.out.println(\"The earliest unfinished ordinary deadline: \""},{"lineNumber":458,"author":{"gitId":"JiawenLyu"},"content":"                        + earliestDeadline.toString());"},{"lineNumber":459,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":460,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":461,"author":{"gitId":"JiawenLyu"},"content":"            if (firImportantTodo !\u003d null) {"},{"lineNumber":462,"author":{"gitId":"JiawenLyu"},"content":"                System.out.println(\"The first unfinished important todo task: \""},{"lineNumber":463,"author":{"gitId":"JiawenLyu"},"content":"                        + firImportantTodo.toString());"},{"lineNumber":464,"author":{"gitId":"JiawenLyu"},"content":"            } else if (firstTodo !\u003d null) {"},{"lineNumber":465,"author":{"gitId":"JiawenLyu"},"content":"                System.out.println(\"The first unfinished ordinary todo task: \""},{"lineNumber":466,"author":{"gitId":"JiawenLyu"},"content":"                        + firstTodo.toString());"},{"lineNumber":467,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":468,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":469,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":470,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":471,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":472,"author":{"gitId":"imhm"},"content":"     * Prints the error message based on the invalid command input by the user."},{"lineNumber":473,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":474,"author":{"gitId":"imhm"},"content":"     * @param e            type of error."},{"lineNumber":475,"author":{"gitId":"imhm"},"content":"     * @param calendarList the working calendar list."},{"lineNumber":476,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":477,"author":{"gitId":"imhm"},"content":"    public static void printExceptionMessage(CommandException e, CalendarList calendarList) {"},{"lineNumber":478,"author":{"gitId":"imhm"},"content":"        switch (e.getException()) {"},{"lineNumber":479,"author":{"gitId":"imhm"},"content":"        case \"todo\":"},{"lineNumber":480,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Error: The description of todo cannot be empty.\");"},{"lineNumber":481,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":482,"author":{"gitId":"imhm"},"content":"        case \"deadline\":"},{"lineNumber":483,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Error: Please key in the deadline in this format: deadline \u003ctask description\u003e /ddMMyy\\n\""},{"lineNumber":484,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Command parameters such as `/` are not allowed in \u003ctask description\u003e\""},{"lineNumber":485,"author":{"gitId":"LIU-YiFeng-1"},"content":"            );"},{"lineNumber":486,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":487,"author":{"gitId":"imhm"},"content":"        case \"activity\":"},{"lineNumber":488,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Error: Please follow this format: act \u003cactivity description\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""},{"lineNumber":489,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Command parameters such as `@` and `/` are not allowed in \u003cactivity description\u003e and \u003cvenue\u003e\""},{"lineNumber":490,"author":{"gitId":"LIU-YiFeng-1"},"content":"            );"},{"lineNumber":491,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":492,"author":{"gitId":"JiawenLyu"},"content":"        case \"lecture\":"},{"lineNumber":493,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Error: Please key in the lecture in this format: \\n\""},{"lineNumber":494,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"lect \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of lecture\u003e /ddMMyy HHmm\\n\""},{"lineNumber":495,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Command parameters such as `@`, `-r` and `/` are not allowed in \u003cvenue\u003e\""},{"lineNumber":496,"author":{"gitId":"LIU-YiFeng-1"},"content":"            );"},{"lineNumber":497,"author":{"gitId":"JiawenLyu"},"content":"            break;"},{"lineNumber":498,"author":{"gitId":"JiawenLyu"},"content":"        case \"tutorial\":"},{"lineNumber":499,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Error: Please key in the tutorial in this format: \\n\""},{"lineNumber":500,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"tut \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of tutorial\u003e /ddMMyy HHmm\\n\""},{"lineNumber":501,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Command parameters such as `@`, `-r` and `/` are not allowed in \u003cvenue\u003e\""},{"lineNumber":502,"author":{"gitId":"LIU-YiFeng-1"},"content":"            );"},{"lineNumber":503,"author":{"gitId":"JiawenLyu"},"content":"            break;"},{"lineNumber":504,"author":{"gitId":"JiawenLyu"},"content":"        case \"lab\":"},{"lineNumber":505,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Error: Please key in the lab in this format: \\n\""},{"lineNumber":506,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"lab \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of lab session\u003e /ddMMyy HHmm\\n\""},{"lineNumber":507,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Command parameters such as `@`, `-r` and `/` are not allowed in \u003cvenue\u003e\""},{"lineNumber":508,"author":{"gitId":"LIU-YiFeng-1"},"content":"            );"},{"lineNumber":509,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":510,"author":{"gitId":"imhm"},"content":"        case \"exam\":"},{"lineNumber":511,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Error: Please key in the exam in this format: \\n\""},{"lineNumber":512,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"exam \u003cmodule code\u003e @\u003cexam venue\u003e /ddMMyy HHmm\\n\""},{"lineNumber":513,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Command parameters such as `@` and `/` are not allowed in \u003cvenue\u003e\""},{"lineNumber":514,"author":{"gitId":"LIU-YiFeng-1"},"content":"            );"},{"lineNumber":515,"author":{"gitId":"JiawenLyu"},"content":"            break;"},{"lineNumber":516,"author":{"gitId":"imhm"},"content":"        case \"invalid command\":"},{"lineNumber":517,"author":{"gitId":"imhm"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""},{"lineNumber":518,"author":{"gitId":"imhm"},"content":"                    + \"Type \\\"help\\\" to learn the different commands.\");"},{"lineNumber":519,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":520,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"invalid countdown\":"},{"lineNumber":521,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Error: invalid input of countdown, please key in the command in this format:\\n\""},{"lineNumber":522,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \"1. countdown\\n\""},{"lineNumber":523,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \"2. countdown exams\\n\""},{"lineNumber":524,"author":{"gitId":"Zhangyilin0203"},"content":"                    + \"3. countdown deadlines\");"},{"lineNumber":525,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":526,"author":{"gitId":"imhm"},"content":"        case \"invalid task action\":"},{"lineNumber":527,"author":{"gitId":"imhm"},"content":"            System.out.println("},{"lineNumber":528,"author":{"gitId":"imhm"},"content":"                    \"Error: Total task(s): \" + calendarList.getTotalTasks() + \". Please key in a valid task number.\");"},{"lineNumber":529,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":530,"author":{"gitId":"imhm"},"content":"        case \"invalid event action\":"},{"lineNumber":531,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Error: Total event(s): \" + calendarList.getTotalEvents()"},{"lineNumber":532,"author":{"gitId":"imhm"},"content":"                    + \". Please key in a valid event number.\");"},{"lineNumber":533,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":534,"author":{"gitId":"imhm"},"content":"        case \"done\":"},{"lineNumber":535,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Error: Please key in the command in this format: done \u003ctask number\u003e\");"},{"lineNumber":536,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":537,"author":{"gitId":"imhm"},"content":"        case \"task done\":"},{"lineNumber":538,"author":{"gitId":"imhm"},"content":"            System.out.println(\"The task has already been marked as done!\");"},{"lineNumber":539,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":540,"author":{"gitId":"imhm"},"content":"        case \"delete\":"},{"lineNumber":541,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Error: Please key in the command in this format: -t \u003ctask number\u003e \""},{"lineNumber":542,"author":{"gitId":"imhm"},"content":"                    + \"OR -e \u003cevent number\u003e\");"},{"lineNumber":543,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":544,"author":{"gitId":"JiawenLyu"},"content":"        case \"prioritize\":"},{"lineNumber":545,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"Error: Please key in the command in this format: *t \u003ctask number\u003e \");"},{"lineNumber":546,"author":{"gitId":"JiawenLyu"},"content":"            break;"},{"lineNumber":547,"author":{"gitId":"imhm"},"content":"        case \"missing keyword\":"},{"lineNumber":548,"author":{"gitId":"imhm"},"content":"            System.out.println(\"The keyword cannot be empty or spaces!\");"},{"lineNumber":549,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":550,"author":{"gitId":"imhm"},"content":"        case \"keyword not found\":"},{"lineNumber":551,"author":{"gitId":"imhm"},"content":"            System.out.println(\"There are no tasks matching this keyword. Check that you have spelt it correctly.\");"},{"lineNumber":552,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":553,"author":{"gitId":"imhm"},"content":"        case \"find\":"},{"lineNumber":554,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Error: Please key in the find command in this format: \\n\""},{"lineNumber":555,"author":{"gitId":"imhm"},"content":"                    + \"1. /f \u003ckeyword\u003e\\n\""},{"lineNumber":556,"author":{"gitId":"imhm"},"content":"                    + \"2. /ft \u003ckeyword\u003e\\n\""},{"lineNumber":557,"author":{"gitId":"imhm"},"content":"                    + \"3. /fe \u003ckeyword\u003e\");"},{"lineNumber":558,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":559,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"file not found\":"},{"lineNumber":560,"author":{"gitId":"imhm"},"content":"            System.out.println(\"The file can not be found.\");"},{"lineNumber":561,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":562,"author":{"gitId":"imhm"},"content":"        case \"invalid done number\":"},{"lineNumber":563,"author":{"gitId":"imhm"},"content":"            System.out.println(\"You can only mark a task as done. An event cannot be marked as done.\");"},{"lineNumber":564,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":565,"author":{"gitId":"imhm"},"content":"        case \"invalid add info\":"},{"lineNumber":566,"author":{"gitId":"imhm"},"content":"            System.out.println("},{"lineNumber":567,"author":{"gitId":"imhm"},"content":"                    \"Error: Please key in the additional information in this format: /a \u003cevent number\u003e - information\");"},{"lineNumber":568,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":569,"author":{"gitId":"imhm"},"content":"        case \"missing add info\":"},{"lineNumber":570,"author":{"gitId":"imhm"},"content":"            System.out.println("},{"lineNumber":571,"author":{"gitId":"imhm"},"content":"                    \"Error: The additional information should not be empty!\");"},{"lineNumber":572,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":573,"author":{"gitId":"imhm"},"content":"        case \"invalid view info\":"},{"lineNumber":574,"author":{"gitId":"imhm"},"content":"            System.out.println("},{"lineNumber":575,"author":{"gitId":"imhm"},"content":"                    \"Error: To view the additional information of the event: /v \u003cevent number\u003e\");"},{"lineNumber":576,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":577,"author":{"gitId":"imhm"},"content":"        case \"invalid delete info\":"},{"lineNumber":578,"author":{"gitId":"imhm"},"content":"            System.out.println("},{"lineNumber":579,"author":{"gitId":"imhm"},"content":"                    \"Error: To delete an additional information of an event: /- \u003cevent number\u003e a \u003cinformation number\u003e\");"},{"lineNumber":580,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":581,"author":{"gitId":"imhm"},"content":"        case \"invalid info action\":"},{"lineNumber":582,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Please enter a valid additional information index number.\");"},{"lineNumber":583,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":584,"author":{"gitId":"LIU-YiFeng-1"},"content":"        case \"invalid module code exam\":"},{"lineNumber":585,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println("},{"lineNumber":586,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    \"Error: invalid module code. The module code cannot be found in NUS module list.\\n\""},{"lineNumber":587,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"Please be reminded to key in the exam in this format: \\n\""},{"lineNumber":588,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"exam \u003cmodule code\u003e @\u003cexam venue\u003e /ddMMyy HHmm\");"},{"lineNumber":589,"author":{"gitId":"LIU-YiFeng-1"},"content":"            break;"},{"lineNumber":590,"author":{"gitId":"LIU-YiFeng-1"},"content":"        case \"invalid module code lab\":"},{"lineNumber":591,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println("},{"lineNumber":592,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    \"Error: invalid module code. The module code cannot be found in NUS module list.\\n\""},{"lineNumber":593,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"Please be reminded to key in the lab in this format: \\n\""},{"lineNumber":594,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"lab \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of lab session\u003e /ddMMyy HHmm\");"},{"lineNumber":595,"author":{"gitId":"LIU-YiFeng-1"},"content":"            break;"},{"lineNumber":596,"author":{"gitId":"LIU-YiFeng-1"},"content":"        case \"invalid module code tut\":"},{"lineNumber":597,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println("},{"lineNumber":598,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    \"Error: invalid module code. The module code cannot be found in NUS module list.\\n\""},{"lineNumber":599,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"Please be reminded to key in the tut in this format: \\n\""},{"lineNumber":600,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"tut \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of tutorial\u003e /ddMMyy HHmm\");"},{"lineNumber":601,"author":{"gitId":"LIU-YiFeng-1"},"content":"            break;"},{"lineNumber":602,"author":{"gitId":"LIU-YiFeng-1"},"content":"        case \"invalid module code lect\":"},{"lineNumber":603,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println("},{"lineNumber":604,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    \"Error: invalid module code. The module code cannot be found in NUS module list.\\n\""},{"lineNumber":605,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"Please be reminded to key in the lect in this format: \\n\""},{"lineNumber":606,"author":{"gitId":"LIU-YiFeng-1"},"content":"                            + \"lect \u003cmodule code\u003e @\u003cvenue\u003e -r \u003cnumber of lecture\u003e /ddMMyy HHmm\");"},{"lineNumber":607,"author":{"gitId":"LIU-YiFeng-1"},"content":"            break;"},{"lineNumber":608,"author":{"gitId":"Zhangyilin0203"},"content":"        case \"storage\":"},{"lineNumber":609,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"Content in the file is altered, could not read in the file normally\");"},{"lineNumber":610,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":611,"author":{"gitId":"imhm"},"content":"        case \"command not found\":"},{"lineNumber":612,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Command not found. Please input a valid command.\");"},{"lineNumber":613,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":614,"author":{"gitId":"LIU-YiFeng-1"},"content":"        case \"not enough info\":"},{"lineNumber":615,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Not enough command info. Type \\\"help\\\" to learn the different commands.\");"},{"lineNumber":616,"author":{"gitId":"LIU-YiFeng-1"},"content":"            break;"},{"lineNumber":617,"author":{"gitId":"LIU-YiFeng-1"},"content":"        case \"invalid recurring number\":"},{"lineNumber":618,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"The recurring number is in the range of 0 - 13 only.\");"},{"lineNumber":619,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":620,"author":{"gitId":"JiawenLyu"},"content":"        case \"important task\":"},{"lineNumber":621,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"The task has already been marked as done!\");"},{"lineNumber":622,"author":{"gitId":"JiawenLyu"},"content":"            break;"},{"lineNumber":623,"author":{"gitId":"imhm"},"content":"        default:"},{"lineNumber":624,"author":{"gitId":"imhm"},"content":"            System.out.println(\"Unknown Error.\");"},{"lineNumber":625,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":626,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":627,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":628,"author":{"gitId":"imhm"},"content":""},{"lineNumber":629,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":630,"author":{"gitId":"imhm"},"content":"     * Shows the user the exception that occurred when creating a storage file."},{"lineNumber":631,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":632,"author":{"gitId":"imhm"},"content":"     * @param e exception message."},{"lineNumber":633,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":634,"author":{"gitId":"imhm"},"content":"    public static void printFileCreateErrorMessage(IOException e) {"},{"lineNumber":635,"author":{"gitId":"imhm"},"content":"        System.out.println(\"Cannot create file; reason: \" + e.getMessage());"},{"lineNumber":636,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":637,"author":{"gitId":"imhm"},"content":""},{"lineNumber":638,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":639,"author":{"gitId":"Zhangyilin0203"},"content":"     * Shows the user the exception that occurred when saving data to storage file."},{"lineNumber":640,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":641,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param e exception message."},{"lineNumber":642,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":643,"author":{"gitId":"Zhangyilin0203"},"content":"    public static void printSaveDataErrorMessage(IOException e) {"},{"lineNumber":644,"author":{"gitId":"Zhangyilin0203"},"content":"        System.out.println(\"Unable to save data. Error: \" + e.getMessage());"},{"lineNumber":645,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":646,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":141,"imhm":309,"JiawenLyu":112,"Zhangyilin0203":84}},{"path":"src/main/java/seedu/duke/calendar/CalendarItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"public abstract class CalendarItem {"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"    public abstract String printIntoFile();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public abstract LocalTime getTime();"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public abstract LocalDate getDate();"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public abstract String getDescription();"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public abstract String getRecurringDescription();"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":2,"imhm":5,"-":9}},{"path":"src/main/java/seedu/duke/calendar/CalendarList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":""},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":" * Represents a calendar list."},{"lineNumber":12,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"public class CalendarList {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":""},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    private ArrayList\u003cCalendarItem\u003e calendarList; // contains all events and tasks"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    private int totalItems \u003d 0;"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    private int totalTasks \u003d 0;"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"    private int totalEvents \u003d 0;"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":""},{"lineNumber":20,"author":{"gitId":"imhm"},"content":""},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    public CalendarList() {"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"        calendarList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":""},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"     * Adds a task to the calendar list."},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"     * @param task to be added."},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"    public void addTask(Task task) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"        calendarList.add(task);"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        totalTasks++;"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"        totalItems++;"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":""},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"     * Adds an event to the calendar list."},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"     * @param event to be added."},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"    public void addEvent(Event event) {"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        calendarList.add(event);"},{"lineNumber":43,"author":{"gitId":"Zhangyilin0203"},"content":"        totalEvents++;"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        totalItems++;"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void addItem(CalendarItem item) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        calendarList.add(item);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        totalItems++;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"     * Deletes the task from the calendar list."},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"     * @param calendarNumber of the task to be deleted."},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"    public void deleteTask(int calendarNumber) {"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":""},{"lineNumber":59,"author":{"gitId":"imhm"},"content":"        calendarList.remove(calendarNumber);"},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"        totalTasks--;"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"        totalItems--;"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":""},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"     * Deletes the event from the event list."},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"     * @param calendarNumber of the event to be deleted."},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"    public void deleteEvent(int calendarNumber) {"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":""},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"        calendarList.remove(calendarNumber);"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":"        totalEvents--;"},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"        totalItems--;"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"imhm"},"content":""},{"lineNumber":76,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"imhm"},"content":"     * Converts the task index to the calendar index."},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"imhm"},"content":"     * @param taskNumber   task index"},{"lineNumber":80,"author":{"gitId":"imhm"},"content":"     * @param calendarList calendar list of the task."},{"lineNumber":81,"author":{"gitId":"imhm"},"content":"     * @return calendar index of the task"},{"lineNumber":82,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"    public static int convertTaskNumberToCalendarNumber(int taskNumber, CalendarList calendarList)"},{"lineNumber":84,"author":{"gitId":"imhm"},"content":"            throws CommandException {"},{"lineNumber":85,"author":{"gitId":"imhm"},"content":""},{"lineNumber":86,"author":{"gitId":"imhm"},"content":"        if (taskNumber \u003e calendarList.getTotalTasks() || taskNumber \u003c\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid task action\");"},{"lineNumber":88,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"imhm"},"content":""},{"lineNumber":90,"author":{"gitId":"imhm"},"content":"        int taskCount \u003d 0;"},{"lineNumber":91,"author":{"gitId":"imhm"},"content":"        int itemCount \u003d 0;"},{"lineNumber":92,"author":{"gitId":"imhm"},"content":"        for (CalendarItem s : calendarList.getCalendarList()) {"},{"lineNumber":93,"author":{"gitId":"imhm"},"content":""},{"lineNumber":94,"author":{"gitId":"imhm"},"content":"            if (s instanceof Task) {"},{"lineNumber":95,"author":{"gitId":"imhm"},"content":"                taskCount++;"},{"lineNumber":96,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"imhm"},"content":""},{"lineNumber":98,"author":{"gitId":"imhm"},"content":"            if (taskNumber \u003d\u003d taskCount) {"},{"lineNumber":99,"author":{"gitId":"imhm"},"content":"                break;"},{"lineNumber":100,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"imhm"},"content":"            itemCount++;"},{"lineNumber":102,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"imhm"},"content":"        return itemCount;"},{"lineNumber":104,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"imhm"},"content":""},{"lineNumber":106,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"imhm"},"content":"     * Converts the event index to the calendar index."},{"lineNumber":108,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"imhm"},"content":"     * @param eventNumber  event index"},{"lineNumber":110,"author":{"gitId":"imhm"},"content":"     * @param calendarList calendar list of the task."},{"lineNumber":111,"author":{"gitId":"imhm"},"content":"     * @return calendar index of the event"},{"lineNumber":112,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"imhm"},"content":"    public static int convertEventNumberToCalendarNumber(int eventNumber, CalendarList calendarList)"},{"lineNumber":114,"author":{"gitId":"imhm"},"content":"            throws CommandException {"},{"lineNumber":115,"author":{"gitId":"imhm"},"content":""},{"lineNumber":116,"author":{"gitId":"imhm"},"content":"        if (eventNumber \u003e calendarList.getTotalEvents() || eventNumber \u003c\u003d 0) {"},{"lineNumber":117,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid event action\");"},{"lineNumber":118,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"imhm"},"content":""},{"lineNumber":120,"author":{"gitId":"imhm"},"content":"        int eventCount \u003d 0;"},{"lineNumber":121,"author":{"gitId":"imhm"},"content":"        int itemCount \u003d 0;"},{"lineNumber":122,"author":{"gitId":"imhm"},"content":"        for (CalendarItem s : calendarList.getCalendarList()) {"},{"lineNumber":123,"author":{"gitId":"imhm"},"content":""},{"lineNumber":124,"author":{"gitId":"imhm"},"content":"            if (s instanceof Event) {"},{"lineNumber":125,"author":{"gitId":"imhm"},"content":"                eventCount++;"},{"lineNumber":126,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"imhm"},"content":""},{"lineNumber":128,"author":{"gitId":"imhm"},"content":"            if (eventNumber \u003d\u003d eventCount) {"},{"lineNumber":129,"author":{"gitId":"imhm"},"content":"                break;"},{"lineNumber":130,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"imhm"},"content":"            itemCount++;"},{"lineNumber":132,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"imhm"},"content":"        return itemCount;"},{"lineNumber":134,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"imhm"},"content":""},{"lineNumber":136,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"imhm"},"content":"     * Sets the task as done."},{"lineNumber":138,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"imhm"},"content":"     * @param calendarNumberCompleted of the task that is completed."},{"lineNumber":140,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"imhm"},"content":"    public void markTaskAsDone(int calendarNumberCompleted) throws CommandException {"},{"lineNumber":142,"author":{"gitId":"imhm"},"content":""},{"lineNumber":143,"author":{"gitId":"imhm"},"content":"        if (calendarList.get(calendarNumberCompleted) instanceof Task) {"},{"lineNumber":144,"author":{"gitId":"imhm"},"content":"            ((Task) calendarList.get(calendarNumberCompleted)).markAsDone();"},{"lineNumber":145,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":146,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid done number\");"},{"lineNumber":147,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"imhm"},"content":""},{"lineNumber":149,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"imhm"},"content":""},{"lineNumber":151,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"JiawenLyu"},"content":"     * Mark the task as important."},{"lineNumber":153,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":154,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarNumber the index of the task in the calendar list."},{"lineNumber":155,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"imhm"},"content":"    public void markTaskAsImportant(int calendarNumber) throws CommandException {"},{"lineNumber":157,"author":{"gitId":"JiawenLyu"},"content":"        if (calendarList.get(calendarNumber) instanceof Task) {"},{"lineNumber":158,"author":{"gitId":"JiawenLyu"},"content":"            ((Task) calendarList.get(calendarNumber)).markAsImportant();"},{"lineNumber":159,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":160,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"prioritize\");"},{"lineNumber":161,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":164,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"Zhangyilin0203"},"content":"     * Swaps two tasks with index i and index j."},{"lineNumber":166,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param i the index of the first task to be swapped."},{"lineNumber":168,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param j the index of the second task to be swapped."},{"lineNumber":169,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"imhm"},"content":"    public void swapTasks(int i, int j) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (calendarList.get(i) !\u003d null \u0026\u0026 calendarList.get(j) !\u003d null) {"},{"lineNumber":172,"author":{"gitId":"imhm"},"content":"            Collections.swap(calendarList, i, j);"},{"lineNumber":173,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"imhm"},"content":""},{"lineNumber":176,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":177,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the total number of items in calendarList."},{"lineNumber":178,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"imhm"},"content":"    public int getTotalItems() {"},{"lineNumber":180,"author":{"gitId":"imhm"},"content":"        return totalItems;"},{"lineNumber":181,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"imhm"},"content":""},{"lineNumber":183,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the total number of tasks in calendarList."},{"lineNumber":185,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"imhm"},"content":"    public int getTotalTasks() {"},{"lineNumber":187,"author":{"gitId":"imhm"},"content":"        return totalTasks;"},{"lineNumber":188,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"imhm"},"content":""},{"lineNumber":190,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the total number of events in the calendarList."},{"lineNumber":192,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"imhm"},"content":"    public int getTotalEvents() {"},{"lineNumber":194,"author":{"gitId":"imhm"},"content":"        return totalEvents;"},{"lineNumber":195,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"imhm"},"content":""},{"lineNumber":197,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the whole calendarList."},{"lineNumber":199,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"imhm"},"content":"    public ArrayList\u003cCalendarItem\u003e getCalendarList() {"},{"lineNumber":201,"author":{"gitId":"imhm"},"content":"        return calendarList;"},{"lineNumber":202,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"imhm"},"content":""},{"lineNumber":204,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":205,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the specific item with index i."},{"lineNumber":206,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":207,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param i the index of the item wanted."},{"lineNumber":208,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return the item with index i."},{"lineNumber":209,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"imhm"},"content":"    public CalendarItem getItem(int i) {"},{"lineNumber":211,"author":{"gitId":"imhm"},"content":"        return calendarList.get(i);"},{"lineNumber":212,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":169,"JiawenLyu":11,"-":8,"Zhangyilin0203":25}},{"path":"src/main/java/seedu/duke/calendar/event/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":""},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" * Represents an event task."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"public class Activity extends Event {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    private String details;"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"    protected String eventType;"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":""},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String EVENT_FILE_SYMBOL \u003d \"ACT\";"},{"lineNumber":15,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"    public static final String TICK_SYMBOL \u003d \"/\";"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    public static final String CROSS_SYMBOL \u003d \"X\";"},{"lineNumber":18,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":19,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"     * A constructor of an activity object."},{"lineNumber":21,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param details the description of the activity."},{"lineNumber":23,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param date    date of the activity."},{"lineNumber":24,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param time    time of the activity."},{"lineNumber":25,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param venue   venue of the activity."},{"lineNumber":26,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    public Activity(String details, LocalDate date, LocalTime time, String venue) {"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        super(date, time, venue);"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        this.details \u003d details;"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"        eventType \u003d \"ACT\";"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":"        this.isOver \u003d getIsOver();"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":""},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":"     * Checks whether the activity is over."},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the activity is over"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsOver() {"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"        if (date.isBefore(LocalDate.now())) {"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"            return false;"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"     * Shows whether the activity is over."},{"lineNumber":52,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the activity is over"},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"    public String getIcon() {"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"     * Returns a [A] icon to indicate task as a event task."},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"        return \"[A][\" + getIcon() + \"] \" + details + \" \" + super.toString();"},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":""},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the activity description."},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return \"[A][\" + getIcon() + \"] \" + details + \" \" + super.getDescription();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"imhm"},"content":"     * Returns the respective event type."},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"JiawenLyu"},"content":"    public String getType() {"},{"lineNumber":81,"author":{"gitId":"JiawenLyu"},"content":"        return eventType;"},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":84,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the activity into files."},{"lineNumber":86,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return string contains the information about the activity event."},{"lineNumber":88,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"Zhangyilin0203"},"content":"    public String printIntoFile() {"},{"lineNumber":91,"author":{"gitId":"Zhangyilin0203"},"content":"        String writeToFile \u003d EVENT_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + details"},{"lineNumber":92,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue"},{"lineNumber":93,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + getAdditionalInformationCount();"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"        if (getAdditionalInformationCount() !\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"            int i;"},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"            for (i \u003d 0; i \u003c getAdditionalInformationCount(); i++) {"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"                writeToFile \u003d writeToFile + SEPARATOR + getAdditionalInformationElement(i);"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":"        return writeToFile;"},{"lineNumber":101,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the activity time."},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"Jingming517"},"content":"    @Override"},{"lineNumber":107,"author":{"gitId":"imhm"},"content":"    public LocalTime getTime() {"},{"lineNumber":108,"author":{"gitId":"imhm"},"content":"        return this.time;"},{"lineNumber":109,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":111,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the activity date."},{"lineNumber":113,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this.date;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":2,"imhm":31,"JiawenLyu":31,"-":10,"Jingming517":3,"Zhangyilin0203":42}},{"path":"src/main/java/seedu/duke/calendar/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":""},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":""},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":" * Represents an event in the event list."},{"lineNumber":12,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"public abstract class Event extends CalendarItem {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"    protected LocalDate date;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    protected LocalTime time;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    protected String venue;"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    protected boolean isOver;"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"    protected ArrayList\u003cString\u003e additionalInformation;"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"    protected int additionalInformationCount \u003d 0;"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":""},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"     * A constructor for events."},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"     * @param date  date of the event"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"     * @param time  time of the event"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"     * @param venue venue of the event"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"    public Event(LocalDate date, LocalTime time, String venue) {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        this.date \u003d date;"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        this.time \u003d time;"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"        this.venue \u003d venue;"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        additionalInformation \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"     * Describe the event."},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"     * @return a string containing the information about the event"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"        String additionalInformationIndicator \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        if (additionalInformationCount !\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"            additionalInformationIndicator \u003d \" #info\";"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy E\")) + \" \""},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"h:mma\"))"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"                + \" (\" + venue + \")\" + additionalInformationIndicator;"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":""},{"lineNumber":52,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Description for adding an recurring event."},{"lineNumber":54,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return a string containing the information about the recurring event."},{"lineNumber":56,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":59,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return \"every \" + date.getDayOfWeek() + \" \" + time.format(DateTimeFormatter.ofPattern(\"h:mma\"))"},{"lineNumber":60,"author":{"gitId":"LIU-YiFeng-1"},"content":"                + \" (\" + venue + \")\";"},{"lineNumber":61,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":63,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"     * Returns the venue of the event and additional information indicator for the event."},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"     * @return a string containing the above mentioned information."},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String additionalInformationIndicator \u003d \"\";"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (additionalInformationCount !\u003d 0) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            additionalInformationIndicator \u003d \" #info\";"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return \" (\" + venue + \")\" + additionalInformationIndicator;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"    public void setAdditionalInformation(String additionalInformation) {"},{"lineNumber":79,"author":{"gitId":"imhm"},"content":"        this.additionalInformation.add(additionalInformation);"},{"lineNumber":80,"author":{"gitId":"imhm"},"content":"        additionalInformationCount++;"},{"lineNumber":81,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"imhm"},"content":""},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"    public ArrayList\u003cString\u003e getAdditionalInformation() {"},{"lineNumber":84,"author":{"gitId":"imhm"},"content":"        return additionalInformation;"},{"lineNumber":85,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"imhm"},"content":""},{"lineNumber":87,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"imhm"},"content":"     * Returns the additional information of at particular index."},{"lineNumber":89,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"imhm"},"content":"     * @param informationNumber index of the additional information."},{"lineNumber":91,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"imhm"},"content":"    public String getAdditionalInformationElement(int informationNumber) {"},{"lineNumber":93,"author":{"gitId":"imhm"},"content":"        return additionalInformation.get(informationNumber);"},{"lineNumber":94,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"imhm"},"content":""},{"lineNumber":96,"author":{"gitId":"imhm"},"content":"    public int getAdditionalInformationCount() {"},{"lineNumber":97,"author":{"gitId":"imhm"},"content":"        return additionalInformationCount;"},{"lineNumber":98,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"JiawenLyu"},"content":"    public abstract String getType();"},{"lineNumber":101,"author":{"gitId":"imhm"},"content":""},{"lineNumber":102,"author":{"gitId":"imhm"},"content":"    public LocalDate getDate() {"},{"lineNumber":103,"author":{"gitId":"imhm"},"content":"        return date;"},{"lineNumber":104,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"imhm"},"content":""},{"lineNumber":106,"author":{"gitId":"Zhangyilin0203"},"content":"    public void markAsOver() {"},{"lineNumber":107,"author":{"gitId":"Zhangyilin0203"},"content":"        isOver \u003d true;"},{"lineNumber":108,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":110,"author":{"gitId":"imhm"},"content":"    public LocalTime getTime() {"},{"lineNumber":111,"author":{"gitId":"imhm"},"content":"        return time;"},{"lineNumber":112,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"imhm"},"content":""},{"lineNumber":114,"author":{"gitId":"imhm"},"content":"    public String getVenue() {"},{"lineNumber":115,"author":{"gitId":"imhm"},"content":"        return venue;"},{"lineNumber":116,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"imhm"},"content":""},{"lineNumber":118,"author":{"gitId":"imhm"},"content":"    public boolean isOver() {"},{"lineNumber":119,"author":{"gitId":"imhm"},"content":"        return isOver;"},{"lineNumber":120,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"imhm"},"content":""},{"lineNumber":122,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"imhm"},"content":"     * Removes the additional information from the array list based on the index."},{"lineNumber":124,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"imhm"},"content":"     * @param indexInfo the additional information\u0027s index number."},{"lineNumber":126,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"imhm"},"content":"    public void deleteAdditionalInformation(int indexInfo) {"},{"lineNumber":128,"author":{"gitId":"imhm"},"content":"        additionalInformation.remove(indexInfo);"},{"lineNumber":129,"author":{"gitId":"imhm"},"content":"        additionalInformationCount--;"},{"lineNumber":130,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":12,"imhm":90,"JiawenLyu":15,"-":10,"Zhangyilin0203":4}},{"path":"src/main/java/seedu/duke/calendar/event/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":""},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":" * Represents an Exam event."},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"public class Exam extends SchoolEvent {"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":"    protected String eventType;"},{"lineNumber":11,"author":{"gitId":"Zhangyilin0203"},"content":"    protected int countdown;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String EXAM_FILE_SYMBOL \u003d \"EXAM\";"},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"    public static final String TICK_SYMBOL \u003d \"/\";"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"    public static final String CROSS_SYMBOL \u003d \"X\";"},{"lineNumber":17,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"    public Exam(String moduleCode, LocalDate date, LocalTime time, String venue) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"        super(moduleCode, date, time, venue);"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"        this.isOver \u003d getIsOver();"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Zhangyilin0203"},"content":"     * Checks whether the exam is over."},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the exam is over"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsOver() {"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"        if (date.isBefore(LocalDate.now())) {"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":"        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"            return false;"},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Zhangyilin0203"},"content":"     * Shows whether the exam is over."},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the exam is over"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"    public String getIcon() {"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"     * Returns a [Exam] icon to indicate task as a Exam task."},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"JiawenLyu"},"content":"        return \"[Exam][\" + getIcon() + \"] \" + super.toString();"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":""},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the type of the event."},{"lineNumber":57,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \"[Exam][\" + getIcon() + \"] \" + super.getDescription();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"    public String getType() {"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"        return eventType;"},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":""},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves exam into files."},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return string contains the information about the exam."},{"lineNumber":72,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":"    public String printIntoFile() {"},{"lineNumber":75,"author":{"gitId":"Zhangyilin0203"},"content":"        String writeToFile;"},{"lineNumber":76,"author":{"gitId":"Zhangyilin0203"},"content":"        writeToFile \u003d EXAM_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR"},{"lineNumber":77,"author":{"gitId":"Zhangyilin0203"},"content":"                + moduleCode + SEPARATOR + date + SEPARATOR + time + SEPARATOR + venue"},{"lineNumber":78,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + getAdditionalInformationCount();"},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"        if (getAdditionalInformationCount() !\u003d 0) {"},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"            int i;"},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"            for (i \u003d 0; i \u003c getAdditionalInformationCount(); i++) {"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"                writeToFile \u003d writeToFile + SEPARATOR + getAdditionalInformationElement(i);"},{"lineNumber":83,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":"        return writeToFile;"},{"lineNumber":86,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"imhm"},"content":""},{"lineNumber":88,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the exam date."},{"lineNumber":90,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this.date;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the exam time."},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public LocalTime getTime() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this.time;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"    public int getCountdown() {"},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"        return countdown;"},{"lineNumber":106,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":108,"author":{"gitId":"Zhangyilin0203"},"content":"    public void setCountdown(int countdown) {"},{"lineNumber":109,"author":{"gitId":"Zhangyilin0203"},"content":"        this.countdown \u003d countdown;"},{"lineNumber":110,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":29,"JiawenLyu":27,"-":15,"Zhangyilin0203":40}},{"path":"src/main/java/seedu/duke/calendar/event/Lab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":" * Represents a lab event."},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"public class Lab extends SchoolEvent {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"    protected String eventType;"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"    private static final String LAB_FILE_SYMBOL \u003d \"LAB\";"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    public static final String TICK_SYMBOL \u003d \"/\";"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"    public static final String CROSS_SYMBOL \u003d \"X\";"},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"     * A Constructor of a lab object."},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"     * @param moduleCode module code of the lab"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"     * @param date       date of the lab"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"     * @param time       time of the lab"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"     * @param venue      venue of the lab"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"    public Lab(String moduleCode, LocalDate date, LocalTime time, String venue) {"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"        super(moduleCode, date, time, venue);"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"        eventType \u003d \"LAB\";"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":"        this.isOver \u003d getIsOver();"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":"     * Checks whether the lab is over."},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the lab is over"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsOver() {"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"        LocalDateTime dateAndTime \u003d LocalDateTime.of(date, time);"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"        ZonedDateTime due \u003d ZonedDateTime.of(dateAndTime, ZoneId.of(\"+08:00\"));"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"        ZonedDateTime now \u003d ZonedDateTime.now(ZoneId.of(\"+08:00\"));"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"        if (due.isBefore(now)) {"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"            return false;"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"     * Shows whether the lab is over."},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the lab is over"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"    public String getIcon() {"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"     * Describes the lab event."},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"     * @return a string containing the information about the lab event"},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"JiawenLyu"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"JiawenLyu"},"content":"        return \"[LAB]\" + \"[\" + getIcon() + \"] \" + super.toString();"},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":70,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Returns the description of the lab."},{"lineNumber":72,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return \"[LAB]\" + \"[\" + getIcon() + \"] \" + super.getDescription();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Returns the description of the recurring lab."},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return \"[LAB]\" + \"[R] \" + super.getRecurringDescription();"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":86,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the lab event into files."},{"lineNumber":88,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"JiawenLyu"},"content":"     * @return string contains the information about the lab event."},{"lineNumber":90,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":92,"author":{"gitId":"JiawenLyu"},"content":"    public String printIntoFile() {"},{"lineNumber":93,"author":{"gitId":"Zhangyilin0203"},"content":"        String writeToFile;"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"        writeToFile \u003d LAB_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + moduleCode"},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue"},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + getAdditionalInformationCount();"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"        if (getAdditionalInformationCount() !\u003d 0) {"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"            int i;"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"            for (i \u003d 0; i \u003c getAdditionalInformationCount(); i++) {"},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":"                writeToFile \u003d writeToFile + SEPARATOR + getAdditionalInformationElement(i);"},{"lineNumber":101,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":"        return writeToFile;"},{"lineNumber":104,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":106,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"JiawenLyu"},"content":"     * Returns the respective object type."},{"lineNumber":108,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"JiawenLyu"},"content":"    public String getType() {"},{"lineNumber":111,"author":{"gitId":"JiawenLyu"},"content":"        return eventType;"},{"lineNumber":112,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":114,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"JiawenLyu"},"content":"     * Get the date of the lab."},{"lineNumber":116,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"JiawenLyu"},"content":"     * @return date of the lab"},{"lineNumber":118,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"JiawenLyu"},"content":"    public LocalDate getDate() {"},{"lineNumber":121,"author":{"gitId":"JiawenLyu"},"content":"        return date;"},{"lineNumber":122,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":124,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"JiawenLyu"},"content":"     * Get the time of the lab."},{"lineNumber":126,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"JiawenLyu"},"content":"     * @return time of the lab"},{"lineNumber":128,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":130,"author":{"gitId":"JiawenLyu"},"content":"    public LocalTime getTime() {"},{"lineNumber":131,"author":{"gitId":"JiawenLyu"},"content":"        return time;"},{"lineNumber":132,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":11,"imhm":2,"JiawenLyu":99,"-":5,"Zhangyilin0203":16}},{"path":"src/main/java/seedu/duke/calendar/event/Lecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":" * Represents a lecture event."},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":" */"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"public class Lecture extends SchoolEvent {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"    protected String eventType;"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":15,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String LECTURE_FILE_SYMBOL \u003d \"LEC\";"},{"lineNumber":16,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    public static final String TICK_SYMBOL \u003d \"/\";"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"    public static final String CROSS_SYMBOL \u003d \"X\";"},{"lineNumber":19,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"     * A Constructor of a lecture object."},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"     * @param moduleCode module code of the lecture"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"     * @param date       date of the lecture"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"     * @param time       time of the lecture"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"     * @param venue      venue of the lecture"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"    public Lecture(String moduleCode, LocalDate date, LocalTime time, String venue) {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        super(moduleCode, date, time, venue);"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"        eventType \u003d \"LEC\";"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":"        this.isOver \u003d getIsOver();"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":"     * Checks whether the lecture is over."},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the tutorial is over"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsOver() {"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"        LocalDateTime dateAndTime \u003d LocalDateTime.of(date, time);"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"        ZonedDateTime due \u003d ZonedDateTime.of(dateAndTime, ZoneId.of(\"+08:00\"));"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"        ZonedDateTime now \u003d ZonedDateTime.now(ZoneId.of(\"+08:00\"));"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"        if (due.isBefore(now)) {"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"            return false;"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"     * Shows whether the lab is over."},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the lab is over"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"    public String getIcon() {"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"imhm"},"content":""},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"     * Describes the lecture event."},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"     * @Return a string to describe the lecture event."},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"JiawenLyu"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"JiawenLyu"},"content":"        return \"[LEC]\" + \"[\" + getIcon() + \"] \" + super.toString();"},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the description of the lecture."},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return \"[LEC]\" + \"[\" + getIcon() + \"] \" + super.getDescription();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Returns the description of the recurring lecture."},{"lineNumber":81,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return \"[LEC]\" + \"[R] \" + super.getRecurringDescription();"},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":87,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the lecture event into files."},{"lineNumber":89,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"JiawenLyu"},"content":"     * @return string contains the information about the lecture event."},{"lineNumber":91,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"Zhangyilin0203"},"content":"    @Override"},{"lineNumber":93,"author":{"gitId":"Zhangyilin0203"},"content":"    public String printIntoFile() {"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"        String writeToFile;"},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"        writeToFile \u003d LECTURE_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + moduleCode"},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + getAdditionalInformationCount();"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"        if (getAdditionalInformationCount() !\u003d 0) {"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"            int i;"},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":"            for (i \u003d 0; i \u003c getAdditionalInformationCount(); i++) {"},{"lineNumber":101,"author":{"gitId":"Zhangyilin0203"},"content":"                writeToFile \u003d writeToFile + (SEPARATOR + getAdditionalInformationElement(i));"},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"        return writeToFile;"},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":107,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"Zhangyilin0203"},"content":"     * Gets the date of the lecture."},{"lineNumber":109,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"JiawenLyu"},"content":"     * @return date of the lecture"},{"lineNumber":111,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":113,"author":{"gitId":"JiawenLyu"},"content":"    public LocalDate getDate() {"},{"lineNumber":114,"author":{"gitId":"JiawenLyu"},"content":"        return date;"},{"lineNumber":115,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":117,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the time of the lecture."},{"lineNumber":119,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":121,"author":{"gitId":"JiawenLyu"},"content":"    public LocalTime getTime() {"},{"lineNumber":122,"author":{"gitId":"JiawenLyu"},"content":"        return time;"},{"lineNumber":123,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":125,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"JiawenLyu"},"content":"     * Returns the respective object type."},{"lineNumber":127,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":129,"author":{"gitId":"JiawenLyu"},"content":"    public String getType() {"},{"lineNumber":130,"author":{"gitId":"JiawenLyu"},"content":"        return eventType;"},{"lineNumber":131,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":133,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":8,"imhm":11,"JiawenLyu":78,"-":6,"Zhangyilin0203":30}},{"path":"src/main/java/seedu/duke/calendar/event/SchoolEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":""},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":" * Represents a school based event."},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"public abstract class SchoolEvent extends Event {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    protected String moduleCode;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    public SchoolEvent(String moduleCode, LocalDate date, LocalTime time, String venue) {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        super(date, time, venue);"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        this.moduleCode \u003d moduleCode;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":""},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"    public String getModuleCode() {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"        return moduleCode;"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":""},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     * Returns the status of the task and the description of the task."},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        return moduleCode + \" \" + super.toString();"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return moduleCode + \" \" + super.getDescription();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return moduleCode + \" \" + super.getRecurringDescription();"},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"    public abstract String printIntoFile();"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":5,"imhm":31,"-":5}},{"path":"src/main/java/seedu/duke/calendar/event/Tutorial.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.calendar.event;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":" * Represents a tutorial event."},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"public class Tutorial extends SchoolEvent {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"    protected String eventType;"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"    private static final String TUTORIAL_FILE_SYMBOL \u003d \"TUT\";"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    public static final String TICK_SYMBOL \u003d \"/\";"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"    public static final String CROSS_SYMBOL \u003d \"X\";"},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"     * A Constructor of a tutorial object."},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"     * @param moduleCode module code of the tutorial"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"     * @param date       date of the tutorial"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"     * @param time       time of the tutorial"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"     * @param venue      venue of the tutorial"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"    public Tutorial(String moduleCode, LocalDate date, LocalTime time, String venue) {"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"        super(moduleCode, date, time, venue);"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"        eventType \u003d \"TUT\";"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":"        this.isOver \u003d getIsOver();"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":"     * Checks whether the tutorial is over."},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the tutorial is over"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsOver() {"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"        LocalDateTime dateAndTime \u003d LocalDateTime.of(date, time);"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"        ZonedDateTime due \u003d ZonedDateTime.of(dateAndTime, ZoneId.of(\"+08:00\"));"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"        ZonedDateTime now \u003d ZonedDateTime.now(ZoneId.of(\"+08:00\"));"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"        if (due.isBefore(now)) {"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"            return true;"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"            return false;"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"     * Shows whether the tutorial is over."},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the tutorial is over"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"    public String getIcon() {"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"     * Describes the tutorial event."},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"     * @Return a string to describe the tutorial event."},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"JiawenLyu"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"JiawenLyu"},"content":"        return \"[TUT]\" + \"[\" + getIcon() + \"] \" + super.toString();"},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"     * Gets the description of the tutorial."},{"lineNumber":72,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return the description of the tutorial."},{"lineNumber":74,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return \"[TUT]\" + \"[\" + getIcon() + \"] \" + super.getDescription();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Returns the description of the recurring tutorial."},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return \"[TUT]\" + \"[R] \" + super.getRecurringDescription();"},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":88,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the tutorial event into files."},{"lineNumber":90,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"JiawenLyu"},"content":"     * @return string contains the information about the tutorial event."},{"lineNumber":92,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"JiawenLyu"},"content":"    public String printIntoFile() {"},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"        String writeToFile;"},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"        writeToFile \u003d TUTORIAL_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + moduleCode"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + getAdditionalInformationCount();"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"        if (getAdditionalInformationCount() !\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":"            int i;"},{"lineNumber":101,"author":{"gitId":"Zhangyilin0203"},"content":"            for (i \u003d 0; i \u003c getAdditionalInformationCount(); i++) {"},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":"                writeToFile \u003d writeToFile + SEPARATOR + getAdditionalInformationElement(i);"},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"        return writeToFile;"},{"lineNumber":106,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":108,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"JiawenLyu"},"content":"     * Returns the respective type."},{"lineNumber":110,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"JiawenLyu"},"content":"    public String getType() {"},{"lineNumber":113,"author":{"gitId":"JiawenLyu"},"content":"        return eventType;"},{"lineNumber":114,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":116,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"Zhangyilin0203"},"content":"     * Gets the date of the tutorial."},{"lineNumber":118,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return date of the tutorial."},{"lineNumber":120,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"JiawenLyu"},"content":"    public LocalDate getDate() {"},{"lineNumber":123,"author":{"gitId":"JiawenLyu"},"content":"        return date;"},{"lineNumber":124,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"Zhangyilin0203"},"content":"     * Gets the time of the tutorial."},{"lineNumber":129,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"JiawenLyu"},"content":"     * @return time of the tutorial"},{"lineNumber":131,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":133,"author":{"gitId":"JiawenLyu"},"content":"    public LocalTime getTime() {"},{"lineNumber":134,"author":{"gitId":"JiawenLyu"},"content":"        return time;"},{"lineNumber":135,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":8,"imhm":2,"JiawenLyu":96,"-":6,"Zhangyilin0203":24}},{"path":"src/main/java/seedu/duke/calendar/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.task;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" * Represents a deadline task."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"    protected String taskType;"},{"lineNumber":13,"author":{"gitId":"Zhangyilin0203"},"content":"    protected int countdown;"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":""},{"lineNumber":15,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String DEADLINE_FILE_SYMBOL \u003d \"D\";"},{"lineNumber":16,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":17,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        this.by \u003d by;"},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"        this.taskType \u003d \"D\";"},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"        this.isImportant \u003d getIsImportant();"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":""},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"     * Returns a [D] icon to indicate task as a deadline task."},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return \"[D]\" + super.toString() + \" by: \" + by.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return null;"},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /** Returns the respective task type. */"},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getTaskType() {"},{"lineNumber":46,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return taskType;"},{"lineNumber":47,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":49,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the deadline task into files."},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return string contains the information about the deadline task."},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Zhangyilin0203"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":"    public String printIntoFile() {"},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"        return DEADLINE_FILE_SYMBOL + SEPARATOR + isDone + SEPARATOR + description + SEPARATOR + this.isImportant"},{"lineNumber":57,"author":{"gitId":"Zhangyilin0203"},"content":"                + SEPARATOR + this.by;"},{"lineNumber":58,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":60,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the date of the deadline."},{"lineNumber":62,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Jingming517"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {"},{"lineNumber":65,"author":{"gitId":"Jingming517"},"content":"        return this.by;"},{"lineNumber":66,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the time of the deadline."},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public LocalTime getTime() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":76,"author":{"gitId":"Zhangyilin0203"},"content":"    public int getCountdown() {"},{"lineNumber":77,"author":{"gitId":"Zhangyilin0203"},"content":"        return countdown;"},{"lineNumber":78,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"    public void setCountdown(int countdown) {"},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"        this.countdown \u003d countdown;"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":14,"imhm":23,"JiawenLyu":1,"-":12,"Jingming517":3,"Zhangyilin0203":30}},{"path":"src/main/java/seedu/duke/calendar/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.task;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":""},{"lineNumber":5,"author":{"gitId":"Jingming517"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" * Represents a Task in the task list."},{"lineNumber":10,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"public abstract class Task extends CalendarItem {"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    public static final String TICK_SYMBOL \u003d \"/\";"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    public static final String CROSS_SYMBOL \u003d \"X\";"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"    protected String description;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    protected boolean isDone;"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"    protected boolean isImportant;"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":""},{"lineNumber":18,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String TASK_FILE_SYMBOL \u003d \"Task\";"},{"lineNumber":19,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    public Task(String description) {"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"        this.isImportant \u003d false;"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":""},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"     * Returns the status of the task and the description of the task."},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"        String priorityMessage \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"        if (isImportant) {"},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"            priorityMessage \u003d \"(important!) \";"},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + priorityMessage + this.description;"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":""},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the description of the task."},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String priorityMessage \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (isImportant) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            priorityMessage \u003d \"(important!) \";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + priorityMessage + this.description;"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":""},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"     * Returns a tick if the task is done. Returns a cross if the task is not done."},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"    public String getStatusIcon() {"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":""},{"lineNumber":58,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Returns empty string, will be overridden in different task types by"},{"lineNumber":60,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * the corresponding task type."},{"lineNumber":61,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return default task type is empty."},{"lineNumber":63,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getTaskType() {"},{"lineNumber":65,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return \"\";"},{"lineNumber":66,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"     * Sets the task as done."},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"    public void markAsDone() {"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":"        this.isDone \u003d true;"},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":""},{"lineNumber":75,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"JiawenLyu"},"content":"     * Prioritize the task as important."},{"lineNumber":77,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"JiawenLyu"},"content":"    public void markAsImportant() {"},{"lineNumber":79,"author":{"gitId":"JiawenLyu"},"content":"        this.isImportant \u003d true;"},{"lineNumber":80,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":82,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"JiawenLyu"},"content":"     * Get whether the task is marked as important."},{"lineNumber":84,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"JiawenLyu"},"content":"     * @return whether the task is important"},{"lineNumber":86,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsImportant() {"},{"lineNumber":88,"author":{"gitId":"JiawenLyu"},"content":"        return isImportant;"},{"lineNumber":89,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":91,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the task into files."},{"lineNumber":93,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return string contains the information about the activity event."},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"    public String printIntoFile() {"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"        return TASK_FILE_SYMBOL + SEPARATOR + isDone + SEPARATOR + description;"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":101,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":"     * Gets the state of the task."},{"lineNumber":103,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"JiawenLyu"},"content":"     * @return the state of the task"},{"lineNumber":105,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"JiawenLyu"},"content":"    public boolean getIsDone() {"},{"lineNumber":107,"author":{"gitId":"JiawenLyu"},"content":"        return isDone;"},{"lineNumber":108,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":110,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the date of the task."},{"lineNumber":112,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the time of the task."},{"lineNumber":120,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public LocalTime getTime() {"},{"lineNumber":123,"author":{"gitId":"Jingming517"},"content":"        return null;"},{"lineNumber":124,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":10,"imhm":44,"JiawenLyu":30,"Jingming517":4,"-":16,"Zhangyilin0203":22}},{"path":"src/main/java/seedu/duke/calendar/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.calendar.task;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":" * Represents a todo task."},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"public class Todo extends Task {"},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"    protected String taskType;"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":""},{"lineNumber":12,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String TODO_FILE_SYMBOL \u003d \"T\";"},{"lineNumber":13,"author":{"gitId":"Zhangyilin0203"},"content":"    private static final String SEPARATOR \u003d \"|\";"},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    public Todo(String description) {"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"        this.taskType \u003d \"T\";"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"        this.isImportant \u003d getIsImportant();"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":""},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     * Returns a [T] icon to indicate task as a todo task."},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.getDescription();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getRecurringDescription() {"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return null;"},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"     * Returns the respective task type."},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getTaskType() {"},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return taskType;"},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":47,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Zhangyilin0203"},"content":"     * Saves the todo task into files."},{"lineNumber":49,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return string contains the information about the todo task."},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":"    public String printIntoFile() {"},{"lineNumber":54,"author":{"gitId":"Zhangyilin0203"},"content":"        return TODO_FILE_SYMBOL + SEPARATOR + isDone + SEPARATOR + description + SEPARATOR"},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":"                + this.isImportant;"},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the todo task date."},{"lineNumber":60,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"Zhangyilin0203"},"content":"     * Returns the todo task time."},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public LocalTime getTime() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":12,"imhm":23,"JiawenLyu":1,"-":18,"Zhangyilin0203":19}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.DateTimeParser;"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.Storage;"},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.Ui;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Activity;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Exam;"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Lab;"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Lecture;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Tutorial;"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Todo;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"import seedu.duke.resources.ModuleChecker;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":""},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"import java.time.LocalDate;"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"import java.time.LocalTime;"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":""},{"lineNumber":20,"author":{"gitId":"imhm"},"content":""},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":" * Adds a task to the task list, depending on what kind of task (event, deadline, todo) it is."},{"lineNumber":23,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"public class AddCommand extends Command {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":""},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String ACTIVITY \u003d \"act\";"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String LECTURE \u003d \"lect\";"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String TUTORIAL \u003d \"tut\";"},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":"    public static final String LAB \u003d \"lab\";"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"    public static final String EXAM \u003d \"exam\";"},{"lineNumber":33,"author":{"gitId":"Zhangyilin0203"},"content":"    public static final int COMMAND_TYPE \u003d 0;"},{"lineNumber":34,"author":{"gitId":"Zhangyilin0203"},"content":"    public static final int DESCRIPTION \u003d 1;"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":36,"author":{"gitId":"Zhangyilin0203"},"content":"    private String venue;"},{"lineNumber":37,"author":{"gitId":"Zhangyilin0203"},"content":"    private String moduleCode;"},{"lineNumber":38,"author":{"gitId":"Zhangyilin0203"},"content":"    private LocalTime time;"},{"lineNumber":39,"author":{"gitId":"Zhangyilin0203"},"content":"    private String[] dateTime;"},{"lineNumber":40,"author":{"gitId":"Zhangyilin0203"},"content":"    private LocalDate date;"},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private static int recurringCount;"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":""},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"    public AddCommand(String userInput) {"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        super(userInput);"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"     * Creates a task in the task list after determining what type of task (event, deadline, todo)."},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"     * Saves the updated calendar list in the storage after the new task is added."},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list to add the new task to."},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the add command input is invalid."},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"        String[] command;"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":"        boolean isTask \u003d false;"},{"lineNumber":59,"author":{"gitId":"imhm"},"content":""},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"        command \u003d userInput.split(\" \", 2);"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"        String commandType \u003d command[COMMAND_TYPE];"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":""},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"        switch (commandType) {"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"        case TODO:"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"            try {"},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"                isTask \u003d addTodoTask(calendarList, command[DESCRIPTION]);"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"            } catch (Exception e) {"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"                throw new CommandException(\"todo\");"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"        case DEADLINE:"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":"            try {"},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"                isTask \u003d addDeadlineTask(calendarList, command);"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":"            } catch (Exception e) {"},{"lineNumber":75,"author":{"gitId":"imhm"},"content":"                throw new CommandException(\"deadline\");"},{"lineNumber":76,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"        case ACTIVITY:"},{"lineNumber":79,"author":{"gitId":"imhm"},"content":"            try {"},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"                addActivityEvent(calendarList, command);"},{"lineNumber":81,"author":{"gitId":"imhm"},"content":"            } catch (Exception e) {"},{"lineNumber":82,"author":{"gitId":"imhm"},"content":"                throw new CommandException(\"activity\");"},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"imhm"},"content":"        case EXAM:"},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (command.length \u003d\u003d 1) {"},{"lineNumber":87,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"not enough info\");"},{"lineNumber":88,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (isValid(command)) {"},{"lineNumber":90,"author":{"gitId":"Zhangyilin0203"},"content":"                try {"},{"lineNumber":91,"author":{"gitId":"Zhangyilin0203"},"content":"                    addExamEvent(calendarList, command);"},{"lineNumber":92,"author":{"gitId":"Zhangyilin0203"},"content":"                } catch (Exception e) {"},{"lineNumber":93,"author":{"gitId":"imhm"},"content":"                    throw new CommandException(\"exam\");"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"LIU-YiFeng-1"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"invalid module code exam\");"},{"lineNumber":97,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"        case LECTURE:"},{"lineNumber":100,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (command.length \u003d\u003d 1) {"},{"lineNumber":101,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"not enough info\");"},{"lineNumber":102,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (isValid(command)) {"},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"                try {"},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"                    addLectureEvent(calendarList, command);"},{"lineNumber":106,"author":{"gitId":"Zhangyilin0203"},"content":"                } catch (Exception e) {"},{"lineNumber":107,"author":{"gitId":"imhm"},"content":"                    throw new CommandException(\"lecture\");"},{"lineNumber":108,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"LIU-YiFeng-1"},"content":"            } else {"},{"lineNumber":110,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"invalid module code lect\");"},{"lineNumber":111,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"Zhangyilin0203"},"content":"        case TUTORIAL:"},{"lineNumber":114,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (command.length \u003d\u003d 1) {"},{"lineNumber":115,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"not enough info\");"},{"lineNumber":116,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (isValid(command)) {"},{"lineNumber":118,"author":{"gitId":"Zhangyilin0203"},"content":"                try {"},{"lineNumber":119,"author":{"gitId":"Zhangyilin0203"},"content":"                    addTutorialEvent(calendarList, command);"},{"lineNumber":120,"author":{"gitId":"Zhangyilin0203"},"content":"                } catch (Exception e) {"},{"lineNumber":121,"author":{"gitId":"imhm"},"content":"                    throw new CommandException(\"tutorial\");"},{"lineNumber":122,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"LIU-YiFeng-1"},"content":"            } else {"},{"lineNumber":124,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"invalid module code tut\");"},{"lineNumber":125,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":127,"author":{"gitId":"Zhangyilin0203"},"content":"        case LAB:"},{"lineNumber":128,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (command.length \u003d\u003d 1) {"},{"lineNumber":129,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"not enough info\");"},{"lineNumber":130,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (isValid(command)) {"},{"lineNumber":132,"author":{"gitId":"Zhangyilin0203"},"content":"                try {"},{"lineNumber":133,"author":{"gitId":"Zhangyilin0203"},"content":"                    addLabEvent(calendarList, command);"},{"lineNumber":134,"author":{"gitId":"Zhangyilin0203"},"content":"                } catch (Exception e) {"},{"lineNumber":135,"author":{"gitId":"imhm"},"content":"                    throw new CommandException(\"lab\");"},{"lineNumber":136,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"LIU-YiFeng-1"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"LIU-YiFeng-1"},"content":"                throw new CommandException(\"invalid module code lab\");"},{"lineNumber":139,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"Zhangyilin0203"},"content":"            break;"},{"lineNumber":141,"author":{"gitId":"Zhangyilin0203"},"content":"        default:"},{"lineNumber":142,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid command\");"},{"lineNumber":143,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"imhm"},"content":"        Ui.printAddMessage(calendarList, isTask);"},{"lineNumber":145,"author":{"gitId":"Zhangyilin0203"},"content":"        if (isTask) {"},{"lineNumber":146,"author":{"gitId":"Zhangyilin0203"},"content":"            Ui.printTotalTaskNumber(calendarList);"},{"lineNumber":147,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":149,"author":{"gitId":"Zhangyilin0203"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":150,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"imhm"},"content":""},{"lineNumber":152,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for Lab event example: lab CS1010 com1-b1-14 /at 100820 1400."},{"lineNumber":154,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the lab event to."},{"lineNumber":156,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param command      the attributes of the lab event."},{"lineNumber":157,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the module code is empty."},{"lineNumber":158,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"Zhangyilin0203"},"content":"    private void addLabEvent(CalendarList calendarList, String[] command) throws Exception {"},{"lineNumber":160,"author":{"gitId":"JiawenLyu"},"content":"        command \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":161,"author":{"gitId":"imhm"},"content":"        moduleCode \u003d command[0];"},{"lineNumber":162,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].split(\"-r\", 2);"},{"lineNumber":163,"author":{"gitId":"JiawenLyu"},"content":"        String[] temp \u003d command[0].split(\"@\");"},{"lineNumber":164,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].split(\"/\", 2);"},{"lineNumber":165,"author":{"gitId":"LIU-YiFeng-1"},"content":"        recurringCount \u003d Integer.parseInt(command[0].trim());"},{"lineNumber":166,"author":{"gitId":"JiawenLyu"},"content":"        venue \u003d temp[1].trim();"},{"lineNumber":167,"author":{"gitId":"imhm"},"content":"        dateTime \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":168,"author":{"gitId":"imhm"},"content":"        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"},{"lineNumber":169,"author":{"gitId":"imhm"},"content":"        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"},{"lineNumber":170,"author":{"gitId":"imhm"},"content":""},{"lineNumber":171,"author":{"gitId":"imhm"},"content":"        if (moduleCode.isEmpty()) {"},{"lineNumber":172,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"lab\");"},{"lineNumber":173,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (recurringCount \u003c 1 || recurringCount \u003e 13) {"},{"lineNumber":174,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Warning! The value for \u003cnumber of lab session\u003e can only be \""},{"lineNumber":175,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"in the range of 1 to 13. \\n\");"},{"lineNumber":176,"author":{"gitId":"LIU-YiFeng-1"},"content":"            throw new CommandException(\"lab\");"},{"lineNumber":177,"author":{"gitId":"JiawenLyu"},"content":"        } else if (venue.isEmpty()) {"},{"lineNumber":178,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"The \u003cvenue\u003e cannot be empty!\\n\");"},{"lineNumber":179,"author":{"gitId":"JiawenLyu"},"content":"            throw new CommandException(\"lab\");"},{"lineNumber":180,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":181,"author":{"gitId":"LIU-YiFeng-1"},"content":"            for (int i \u003d 0; i \u003c recurringCount; i++) {"},{"lineNumber":182,"author":{"gitId":"Zhangyilin0203"},"content":"                calendarList.addEvent(new Lab(moduleCode, date, time, venue));"},{"lineNumber":183,"author":{"gitId":"LIU-YiFeng-1"},"content":"                date \u003d date.plusWeeks(1);"},{"lineNumber":184,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":188,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for Tutorial event example: tutorial CS1010 lt12 /at 090820 1000."},{"lineNumber":190,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":191,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the tutorial event to."},{"lineNumber":192,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param command      the attributes of the tutorial event."},{"lineNumber":193,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the module code is empty."},{"lineNumber":194,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"Zhangyilin0203"},"content":"    private void addTutorialEvent(CalendarList calendarList, String[] command) throws Exception {"},{"lineNumber":196,"author":{"gitId":"JiawenLyu"},"content":"        command \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":197,"author":{"gitId":"imhm"},"content":"        moduleCode \u003d command[0];"},{"lineNumber":198,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].split(\"-r\", 2);"},{"lineNumber":199,"author":{"gitId":"JiawenLyu"},"content":"        String[] temp \u003d command[0].split(\"@\");"},{"lineNumber":200,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].split(\"/\", 2);"},{"lineNumber":201,"author":{"gitId":"LIU-YiFeng-1"},"content":"        recurringCount \u003d Integer.parseInt(command[0].trim());"},{"lineNumber":202,"author":{"gitId":"JiawenLyu"},"content":"        venue \u003d temp[1].trim();"},{"lineNumber":203,"author":{"gitId":"imhm"},"content":"        dateTime \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":204,"author":{"gitId":"imhm"},"content":"        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"},{"lineNumber":205,"author":{"gitId":"imhm"},"content":"        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"},{"lineNumber":206,"author":{"gitId":"imhm"},"content":"        if (moduleCode.isEmpty()) {"},{"lineNumber":207,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"tutorial\");"},{"lineNumber":208,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (recurringCount \u003c 1 || recurringCount \u003e 13) {"},{"lineNumber":209,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Warning! The value for \u003cnumber of tutorial\u003e can only be in the range of 1 to 13. \\n\");"},{"lineNumber":210,"author":{"gitId":"LIU-YiFeng-1"},"content":"            throw new CommandException(\"tutorial\");"},{"lineNumber":211,"author":{"gitId":"JiawenLyu"},"content":"        } else if (venue.isEmpty()) {"},{"lineNumber":212,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"The \u003cvenue\u003e cannot be empty!\\n\");"},{"lineNumber":213,"author":{"gitId":"JiawenLyu"},"content":"            throw new CommandException(\"tutorial\");"},{"lineNumber":214,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":215,"author":{"gitId":"LIU-YiFeng-1"},"content":"            for (int i \u003d 0; i \u003c recurringCount; i++) {"},{"lineNumber":216,"author":{"gitId":"Zhangyilin0203"},"content":"                calendarList.addEvent(new Tutorial(moduleCode, date, time, venue));"},{"lineNumber":217,"author":{"gitId":"LIU-YiFeng-1"},"content":"                date \u003d date.plusWeeks(1);"},{"lineNumber":218,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":219,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":222,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for Lecture task example: lecture CS2113 LT2 /at 020202 1200."},{"lineNumber":224,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":225,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the lecture event to."},{"lineNumber":226,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param command      the attributes of the lecture event."},{"lineNumber":227,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the module code is empty."},{"lineNumber":228,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"Zhangyilin0203"},"content":"    private void addLectureEvent(CalendarList calendarList, String[] command) throws Exception {"},{"lineNumber":230,"author":{"gitId":"JiawenLyu"},"content":"        command \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":231,"author":{"gitId":"JiawenLyu"},"content":"        moduleCode \u003d command[0];"},{"lineNumber":232,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].split(\"-r\", 2);"},{"lineNumber":233,"author":{"gitId":"JiawenLyu"},"content":"        String[] temp \u003d command[0].split(\"@\");"},{"lineNumber":234,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].split(\"/\", 2);"},{"lineNumber":235,"author":{"gitId":"LIU-YiFeng-1"},"content":"        recurringCount \u003d Integer.parseInt(command[0].trim());"},{"lineNumber":236,"author":{"gitId":"JiawenLyu"},"content":"        venue \u003d temp[1].trim();"},{"lineNumber":237,"author":{"gitId":"JiawenLyu"},"content":"        dateTime \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":238,"author":{"gitId":"JiawenLyu"},"content":"        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"},{"lineNumber":239,"author":{"gitId":"JiawenLyu"},"content":"        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"},{"lineNumber":240,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":241,"author":{"gitId":"JiawenLyu"},"content":"        if (moduleCode.isEmpty()) {"},{"lineNumber":242,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"lecture\");"},{"lineNumber":243,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else if (recurringCount \u003c 1 || recurringCount \u003e 13) {"},{"lineNumber":244,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"Warning! The value for \u003cnumber of lecture\u003e can only be in the range of 1 to 13. \\n\");"},{"lineNumber":245,"author":{"gitId":"LIU-YiFeng-1"},"content":"            throw new CommandException(\"lecture\");"},{"lineNumber":246,"author":{"gitId":"JiawenLyu"},"content":"        } else if (venue.isEmpty()) {"},{"lineNumber":247,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"The \u003cvenue\u003e cannot be empty!\\n\");"},{"lineNumber":248,"author":{"gitId":"JiawenLyu"},"content":"            throw new CommandException(\"lecture\");"},{"lineNumber":249,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":250,"author":{"gitId":"LIU-YiFeng-1"},"content":"            for (int i \u003d 0; i \u003c recurringCount; i++) {"},{"lineNumber":251,"author":{"gitId":"Zhangyilin0203"},"content":"                calendarList.addEvent(new Lecture(moduleCode, date, time, venue));"},{"lineNumber":252,"author":{"gitId":"LIU-YiFeng-1"},"content":"                date \u003d date.plusWeeks(1);"},{"lineNumber":253,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":254,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":257,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for Exam task example: exam CS2113 BLK:EA LT2 /at 020202 1200."},{"lineNumber":259,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":260,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the exam to."},{"lineNumber":261,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param command      the attributes of the exam."},{"lineNumber":262,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the module code is empty."},{"lineNumber":263,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":264,"author":{"gitId":"Zhangyilin0203"},"content":"    private void addExamEvent(CalendarList calendarList, String[] command) throws Exception {"},{"lineNumber":265,"author":{"gitId":"JiawenLyu"},"content":"        command \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":266,"author":{"gitId":"JiawenLyu"},"content":"        moduleCode \u003d command[0];"},{"lineNumber":267,"author":{"gitId":"JiawenLyu"},"content":"        command \u003d command[1].split(\"/\", 2);"},{"lineNumber":268,"author":{"gitId":"JiawenLyu"},"content":"        String[] temp \u003d command[0].split(\"@\");"},{"lineNumber":269,"author":{"gitId":"JiawenLyu"},"content":"        venue \u003d temp[1].trim();"},{"lineNumber":270,"author":{"gitId":"JiawenLyu"},"content":"        dateTime \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":271,"author":{"gitId":"JiawenLyu"},"content":"        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"},{"lineNumber":272,"author":{"gitId":"JiawenLyu"},"content":"        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"},{"lineNumber":273,"author":{"gitId":"JiawenLyu"},"content":"        if (moduleCode.isEmpty()) {"},{"lineNumber":274,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"exam\");"},{"lineNumber":275,"author":{"gitId":"JiawenLyu"},"content":"        } else if (venue.isEmpty()) {"},{"lineNumber":276,"author":{"gitId":"JiawenLyu"},"content":"            System.out.println(\"The \u003cvenue\u003e cannot be empty!\\n\");"},{"lineNumber":277,"author":{"gitId":"JiawenLyu"},"content":"            throw new CommandException(\"exam\");"},{"lineNumber":278,"author":{"gitId":"JiawenLyu"},"content":"        } else {"},{"lineNumber":279,"author":{"gitId":"Zhangyilin0203"},"content":"            calendarList.addEvent(new Exam(moduleCode, date, time, venue));"},{"lineNumber":280,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":281,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":283,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":284,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for Activity event example: activity run training @sentosa / 020202 1200."},{"lineNumber":285,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":286,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the activity to."},{"lineNumber":287,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param command      the attributes of the activity."},{"lineNumber":288,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the description is empty."},{"lineNumber":289,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":290,"author":{"gitId":"Zhangyilin0203"},"content":"    private void addActivityEvent(CalendarList calendarList, String[] command) throws Exception {"},{"lineNumber":291,"author":{"gitId":"Zhangyilin0203"},"content":"        String eventDescription;"},{"lineNumber":292,"author":{"gitId":"Zhangyilin0203"},"content":"        command \u003d command[1].trim().split(\"@\", 2);"},{"lineNumber":293,"author":{"gitId":"Zhangyilin0203"},"content":"        eventDescription \u003d command[0].trim();"},{"lineNumber":294,"author":{"gitId":"Zhangyilin0203"},"content":"        command \u003d command[1].trim().split(\"/\", 2);"},{"lineNumber":295,"author":{"gitId":"Zhangyilin0203"},"content":"        venue \u003d command[0].trim();"},{"lineNumber":296,"author":{"gitId":"Zhangyilin0203"},"content":"        dateTime \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":297,"author":{"gitId":"Zhangyilin0203"},"content":"        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"},{"lineNumber":298,"author":{"gitId":"Zhangyilin0203"},"content":"        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"},{"lineNumber":299,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":300,"author":{"gitId":"LIU-YiFeng-1"},"content":"        if (eventDescription.isEmpty() || venue.isEmpty()) {"},{"lineNumber":301,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"The \u003cactivity description\u003e and \u003cvenue\u003e cannot be empty!\\n\");"},{"lineNumber":302,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"activity\");"},{"lineNumber":303,"author":{"gitId":"Zhangyilin0203"},"content":"        } else {"},{"lineNumber":304,"author":{"gitId":"Zhangyilin0203"},"content":"            calendarList.addEvent(new Activity(eventDescription, date, time, venue));"},{"lineNumber":305,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"imhm"},"content":""},{"lineNumber":308,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":309,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for Deadline task example: deadline project / 101020."},{"lineNumber":310,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":311,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the deadline task to."},{"lineNumber":312,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param command      the attributes of deadline task."},{"lineNumber":313,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return isTask      true if it is a task."},{"lineNumber":314,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the description is empty."},{"lineNumber":315,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":316,"author":{"gitId":"Zhangyilin0203"},"content":"    private boolean addDeadlineTask(CalendarList calendarList, String[] command) throws Exception {"},{"lineNumber":317,"author":{"gitId":"Zhangyilin0203"},"content":"        String taskDescription;"},{"lineNumber":318,"author":{"gitId":"Zhangyilin0203"},"content":"        boolean isTask;"},{"lineNumber":319,"author":{"gitId":"Zhangyilin0203"},"content":"        command \u003d command[1].split(\"/\");"},{"lineNumber":320,"author":{"gitId":"Zhangyilin0203"},"content":"        taskDescription \u003d command[0].trim();"},{"lineNumber":321,"author":{"gitId":"Zhangyilin0203"},"content":"        date \u003d DateTimeParser.inputDateProcessor(command[1].trim());"},{"lineNumber":322,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":323,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":324,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"The \u003ctask description\u003e and ddMMyy cannot be empty!\\n\");"},{"lineNumber":325,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"deadline\");"},{"lineNumber":326,"author":{"gitId":"Zhangyilin0203"},"content":"        } else {"},{"lineNumber":327,"author":{"gitId":"Zhangyilin0203"},"content":"            calendarList.addTask(new Deadline(taskDescription, date));"},{"lineNumber":328,"author":{"gitId":"Zhangyilin0203"},"content":"            isTask \u003d true;"},{"lineNumber":329,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":330,"author":{"gitId":"Zhangyilin0203"},"content":"        return isTask;"},{"lineNumber":331,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":333,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":334,"author":{"gitId":"Zhangyilin0203"},"content":"     * User input for todo task example: todo project."},{"lineNumber":335,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":336,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to add the todo task to."},{"lineNumber":337,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return isTask      to show that is is a task."},{"lineNumber":338,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws Exception if the description is empty."},{"lineNumber":339,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":340,"author":{"gitId":"Zhangyilin0203"},"content":"    private boolean addTodoTask(CalendarList calendarList, String s) throws Exception {"},{"lineNumber":341,"author":{"gitId":"Zhangyilin0203"},"content":"        String taskDescription;"},{"lineNumber":342,"author":{"gitId":"Zhangyilin0203"},"content":"        boolean isTask;"},{"lineNumber":343,"author":{"gitId":"Zhangyilin0203"},"content":"        taskDescription \u003d s.trim();"},{"lineNumber":344,"author":{"gitId":"Zhangyilin0203"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":345,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"todo\");"},{"lineNumber":346,"author":{"gitId":"Zhangyilin0203"},"content":"        } else {"},{"lineNumber":347,"author":{"gitId":"Zhangyilin0203"},"content":"            calendarList.addTask(new Todo(taskDescription));"},{"lineNumber":348,"author":{"gitId":"Zhangyilin0203"},"content":"            isTask \u003d true;"},{"lineNumber":349,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"Zhangyilin0203"},"content":"        return isTask;"},{"lineNumber":351,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":353,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":354,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Checks if the module code in the command is valid."},{"lineNumber":355,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":356,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @param command User input command."},{"lineNumber":357,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return isValid  True if the module code is valid, FALSE otherwise."},{"lineNumber":358,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private boolean isValid(String[] command) {"},{"lineNumber":360,"author":{"gitId":"LIU-YiFeng-1"},"content":"        ModuleChecker moduleChecker \u003d new ModuleChecker();"},{"lineNumber":361,"author":{"gitId":"LIU-YiFeng-1"},"content":"        command \u003d command[1].trim().split(\" \", 2);"},{"lineNumber":362,"author":{"gitId":"LIU-YiFeng-1"},"content":"        moduleCode \u003d command[0];"},{"lineNumber":363,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return moduleChecker.isModuleValid(moduleCode);"},{"lineNumber":364,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":80,"imhm":103,"JiawenLyu":50,"Zhangyilin0203":132}},{"path":"src/main/java/seedu/duke/command/AddInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":""},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"public class AddInfoCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":""},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    public AddInfoCommand(String command) {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        super(command);"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":""},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"     * Adds additional information to an event. Multiple additional information can be added to an event."},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * Saves the updated calendar list in the storage after the additional information is added."},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list containing the event."},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the additional info command is invalid."},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        String[] command;"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        int eventNumber \u003d 0;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        int calendarNumber;"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        String additionalInformation \u003d null;"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":""},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"            command \u003d userInput.split(\"-\", 2);"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"            additionalInformation \u003d command[1].trim();"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"            String[] split \u003d command[0].split(\"/a\", 2);"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"            eventNumber \u003d Integer.parseInt(split[1].trim());"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":""},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid add info\");"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        calendarNumber \u003d CalendarList.convertEventNumberToCalendarNumber(eventNumber, calendarList);"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"        if (additionalInformation.isEmpty()) {"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"missing add info\");"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        assert calendarNumber \u003e\u003d 0;"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":""},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"        Event event \u003d (Event) calendarList.getItem(calendarNumber);"},{"lineNumber":47,"author":{"gitId":"imhm"},"content":""},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"        assert event !\u003d null;"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":""},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"        event.setAdditionalInformation(additionalInformation);"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"        Ui.printLastAdditionalInformation(event);"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":54}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" * Represents an executable command."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    protected String userInput;"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    public Command(String userInput) {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        this.userInput \u003d userInput;"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":""},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * Executes the command and throws a CommandException when the command is invalid."},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"    public abstract void execute(CalendarList calendarList, Storage storage) throws CommandException;"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":""},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     * Returns true if the command is exit."},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    public boolean isExit() {"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":""},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":29}},{"path":"src/main/java/seedu/duke/command/CountdownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhangyilin0203"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":7,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":8,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.event.Exam;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"Zhangyilin0203"},"content":"import java.time.LocalDate;"},{"lineNumber":13,"author":{"gitId":"Zhangyilin0203"},"content":"import java.time.LocalTime;"},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":"import java.util.Date;"},{"lineNumber":15,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":16,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":17,"author":{"gitId":"Zhangyilin0203"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Zhangyilin0203"},"content":" * A countdown for exams and deadlines."},{"lineNumber":19,"author":{"gitId":"Zhangyilin0203"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"//@@author zhangyilin0203"},{"lineNumber":21,"author":{"gitId":"Zhangyilin0203"},"content":"public class CountdownCommand extends Command {"},{"lineNumber":22,"author":{"gitId":"Zhangyilin0203"},"content":"    private static SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":23,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":24,"author":{"gitId":"Zhangyilin0203"},"content":"    public CountdownCommand(String userInput) {"},{"lineNumber":25,"author":{"gitId":"Zhangyilin0203"},"content":"        super(userInput);"},{"lineNumber":26,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":28,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Zhangyilin0203"},"content":"     * Calculates the countdown for every unfinished deadline tasks and future exams."},{"lineNumber":30,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendarList to calculate the countdown for."},{"lineNumber":32,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param storage      the storage to store data to."},{"lineNumber":33,"author":{"gitId":"Zhangyilin0203"},"content":"     * @throws CommandException when there is an invalid command."},{"lineNumber":34,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Zhangyilin0203"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Zhangyilin0203"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":37,"author":{"gitId":"Zhangyilin0203"},"content":"        if (userInput.equals(\"countdown\")) {"},{"lineNumber":38,"author":{"gitId":"Zhangyilin0203"},"content":"            countdownDeadlines(calendarList);"},{"lineNumber":39,"author":{"gitId":"Zhangyilin0203"},"content":"            Ui.printBorder(false);"},{"lineNumber":40,"author":{"gitId":"Zhangyilin0203"},"content":"            countdownExams(calendarList);"},{"lineNumber":41,"author":{"gitId":"Zhangyilin0203"},"content":"        } else if (userInput.equals(\"countdown deadlines\")) {"},{"lineNumber":42,"author":{"gitId":"Zhangyilin0203"},"content":"            countdownDeadlines(calendarList);"},{"lineNumber":43,"author":{"gitId":"Zhangyilin0203"},"content":"        } else if (userInput.equals(\"countdown exams\")) {"},{"lineNumber":44,"author":{"gitId":"Zhangyilin0203"},"content":"            countdownExams(calendarList);"},{"lineNumber":45,"author":{"gitId":"Zhangyilin0203"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"Zhangyilin0203"},"content":"            throw new CommandException(\"invalid countdown\");"},{"lineNumber":47,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":50,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"     * Calculates the countdown for deadline tasks."},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendarList to calculate the countdown for."},{"lineNumber":54,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":"    public void countdownDeadlines(CalendarList calendarList) {"},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":57,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":58,"author":{"gitId":"Zhangyilin0203"},"content":"            if (item instanceof Deadline) {"},{"lineNumber":59,"author":{"gitId":"Zhangyilin0203"},"content":"                ((Deadline) item).setCountdown(countdown(item));"},{"lineNumber":60,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Zhangyilin0203"},"content":"        sortDeadlinesAndPrintCountdown(calendarList);"},{"lineNumber":63,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":65,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"     * Calculates the countdown for exams events."},{"lineNumber":67,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendarList to calculate the countdown for."},{"lineNumber":69,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Zhangyilin0203"},"content":"    public void countdownExams(CalendarList calendarList) {"},{"lineNumber":71,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":72,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"            if (item instanceof Exam) {"},{"lineNumber":74,"author":{"gitId":"Zhangyilin0203"},"content":"                if (item.getTime().isBefore(LocalTime.now())) {"},{"lineNumber":75,"author":{"gitId":"Zhangyilin0203"},"content":"                    ((Exam) item).setCountdown(countdown(item) - 1);"},{"lineNumber":76,"author":{"gitId":"Zhangyilin0203"},"content":"                } else {"},{"lineNumber":77,"author":{"gitId":"Zhangyilin0203"},"content":"                    ((Exam) item).setCountdown(countdown(item));"},{"lineNumber":78,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"        sortExamsAndPrintCountdown(calendarList);"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":84,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":"     * Calculates the countdown days."},{"lineNumber":86,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param item the calendar item we want to calculate the countdown."},{"lineNumber":88,"author":{"gitId":"Zhangyilin0203"},"content":"     * @return the countdown."},{"lineNumber":89,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Zhangyilin0203"},"content":"    public int countdown(CalendarItem item) {"},{"lineNumber":91,"author":{"gitId":"Zhangyilin0203"},"content":"        Date date \u003d null;"},{"lineNumber":92,"author":{"gitId":"Zhangyilin0203"},"content":"        Date now \u003d null;"},{"lineNumber":93,"author":{"gitId":"Zhangyilin0203"},"content":"        String itemDate;"},{"lineNumber":94,"author":{"gitId":"Zhangyilin0203"},"content":"        String nowDate;"},{"lineNumber":95,"author":{"gitId":"Zhangyilin0203"},"content":"        itemDate \u003d item.getDate().toString();"},{"lineNumber":96,"author":{"gitId":"Zhangyilin0203"},"content":"        nowDate \u003d LocalDate.now().toString();"},{"lineNumber":97,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"Zhangyilin0203"},"content":"            date \u003d format.parse(itemDate);"},{"lineNumber":99,"author":{"gitId":"Zhangyilin0203"},"content":"            now \u003d format.parse(nowDate);"},{"lineNumber":100,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (Exception e) {"},{"lineNumber":101,"author":{"gitId":"Zhangyilin0203"},"content":"            System.out.println(\"The input date is in the wrong format\");"},{"lineNumber":102,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Zhangyilin0203"},"content":"        int days \u003d (int) ((date.getTime() - now.getTime()) / (1000 * 3600 * 24));"},{"lineNumber":104,"author":{"gitId":"Zhangyilin0203"},"content":"        return days;"},{"lineNumber":105,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":107,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"Zhangyilin0203"},"content":"     * Sort the exam events according to their countdowns in ascending manner."},{"lineNumber":109,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendarList to calculate the countdown for."},{"lineNumber":111,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"Zhangyilin0203"},"content":"    public void sortExamsAndPrintCountdown(CalendarList calendarList) {"},{"lineNumber":113,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarList examList \u003d new CalendarList();"},{"lineNumber":114,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarList deadlineList \u003d new CalendarList();"},{"lineNumber":115,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":116,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":117,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem temp \u003d calendarList.getItem(i);"},{"lineNumber":118,"author":{"gitId":"Zhangyilin0203"},"content":"            if (temp instanceof Exam) {"},{"lineNumber":119,"author":{"gitId":"Zhangyilin0203"},"content":"                if (!((Exam) temp).getIsOver()) {"},{"lineNumber":120,"author":{"gitId":"Zhangyilin0203"},"content":"                    examList.addItem(temp);"},{"lineNumber":121,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":122,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":125,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c examList.getTotalItems() - 1; i++) {"},{"lineNumber":126,"author":{"gitId":"Zhangyilin0203"},"content":"            for (int j \u003d 0; j \u003c examList.getTotalItems() - i - 1; j++) {"},{"lineNumber":127,"author":{"gitId":"Zhangyilin0203"},"content":"                CalendarItem item1 \u003d examList.getCalendarList().get(j);"},{"lineNumber":128,"author":{"gitId":"Zhangyilin0203"},"content":"                CalendarItem item2 \u003d examList.getCalendarList().get(j + 1);"},{"lineNumber":129,"author":{"gitId":"Zhangyilin0203"},"content":"                if (((Exam) item1).getCountdown() \u003e ((Exam) item2).getCountdown()) {"},{"lineNumber":130,"author":{"gitId":"Zhangyilin0203"},"content":"                    examList.swapTasks(j, j + 1);"},{"lineNumber":131,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":132,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":135,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c examList.getTotalItems(); i++) {"},{"lineNumber":136,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem temp \u003d examList.getItem(i);"},{"lineNumber":137,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"Zhangyilin0203"},"content":"        Ui.printCountDownMessage(examList, 0);"},{"lineNumber":139,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":141,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"Zhangyilin0203"},"content":"     * Sort the deadline events according to their countdowns in ascending manner."},{"lineNumber":143,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendarList to calculate the countdown for."},{"lineNumber":145,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"Zhangyilin0203"},"content":"    public void sortDeadlinesAndPrintCountdown(CalendarList calendarList) {"},{"lineNumber":147,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarList deadlineList \u003d new CalendarList();"},{"lineNumber":148,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":149,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":150,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem temp \u003d calendarList.getItem(i);"},{"lineNumber":151,"author":{"gitId":"Zhangyilin0203"},"content":"            if (temp instanceof Deadline) {"},{"lineNumber":152,"author":{"gitId":"Zhangyilin0203"},"content":"                if (!((Deadline) temp).getIsDone()) {"},{"lineNumber":153,"author":{"gitId":"Zhangyilin0203"},"content":"                    deadlineList.addItem(temp);"},{"lineNumber":154,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":158,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c deadlineList.getTotalItems() - 1; i++) {"},{"lineNumber":159,"author":{"gitId":"Zhangyilin0203"},"content":"            for (int j \u003d 0; j \u003c deadlineList.getTotalItems() - i - 1; j++) {"},{"lineNumber":160,"author":{"gitId":"Zhangyilin0203"},"content":"                CalendarItem item1 \u003d deadlineList.getCalendarList().get(j);"},{"lineNumber":161,"author":{"gitId":"Zhangyilin0203"},"content":"                CalendarItem item2 \u003d deadlineList.getCalendarList().get(j + 1);"},{"lineNumber":162,"author":{"gitId":"Zhangyilin0203"},"content":"                if (((Deadline) item1).getCountdown() \u003e ((Deadline) item2).getCountdown()) {"},{"lineNumber":163,"author":{"gitId":"Zhangyilin0203"},"content":"                    deadlineList.swapTasks(j, j + 1);"},{"lineNumber":164,"author":{"gitId":"Zhangyilin0203"},"content":"                }"},{"lineNumber":165,"author":{"gitId":"Zhangyilin0203"},"content":"            }"},{"lineNumber":166,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":168,"author":{"gitId":"Zhangyilin0203"},"content":"        for (int i \u003d 0; i \u003c deadlineList.getTotalItems(); i++) {"},{"lineNumber":169,"author":{"gitId":"Zhangyilin0203"},"content":"            CalendarItem temp \u003d deadlineList.getItem(i);"},{"lineNumber":170,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"Zhangyilin0203"},"content":"        Ui.printCountDownMessage(deadlineList, 1);"},{"lineNumber":172,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"Zhangyilin0203"},"content":"}"}],"authorContributionMap":{"imhm":3,"Zhangyilin0203":170}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":""},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" * Deletes the task of task number specified by the user."},{"lineNumber":10,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    public DeleteCommand(String command) {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        super(command);"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":""},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * Deletes the task/event of task/event number specified by the user."},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     * Saves the updated calendar list in the storage after the task is deleted."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list to delete the task/event from."},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the delete command input is invalid."},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        int numberDelete \u003d 0;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        boolean isTask;"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        String[] command;"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":""},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"            if (userInput.startsWith(\"-t\")) {"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"                command \u003d userInput.split(\"-t\", 2);"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"                numberDelete \u003d Integer.parseInt(command[1].trim());"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"                isTask \u003d true;"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"            } else if (userInput.startsWith(\"-e\")) {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"                command \u003d userInput.split(\"-e\", 2);"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"                numberDelete \u003d Integer.parseInt(command[1].trim());"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"                isTask \u003d false;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"                throw new Exception(\"e\");"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"delete\");"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"        if (isTask) {"},{"lineNumber":48,"author":{"gitId":"Zhangyilin0203"},"content":"            deleteTask(calendarList, numberDelete);"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":""},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"Zhangyilin0203"},"content":"            deleteEvent(calendarList, numberDelete);"},{"lineNumber":52,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":54,"author":{"gitId":"Zhangyilin0203"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":55,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":56,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":58,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Zhangyilin0203"},"content":"     * Deletes the event of event number specified by the user."},{"lineNumber":60,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to delete the event from."},{"lineNumber":62,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param numberDelete the delete event number specified by the user."},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the delete command input is invalid."},{"lineNumber":64,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"    private void deleteEvent(CalendarList calendarList, int numberDelete) throws CommandException {"},{"lineNumber":66,"author":{"gitId":"Zhangyilin0203"},"content":"        int calendarNumber;"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"        calendarNumber \u003d CalendarList.convertEventNumberToCalendarNumber(numberDelete, calendarList);"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"        assert calendarNumber \u003e\u003d 0;"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"        Ui.printDeleteMessage(calendarNumber, calendarList);"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"        calendarList.deleteEvent(calendarNumber);"},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":""},{"lineNumber":73,"author":{"gitId":"Zhangyilin0203"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"Zhangyilin0203"},"content":"     * Deletes the task of task number specified by the user."},{"lineNumber":75,"author":{"gitId":"Zhangyilin0203"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param calendarList the calendar list to delete the task from."},{"lineNumber":77,"author":{"gitId":"Zhangyilin0203"},"content":"     * @param numberDelete the delete task number specified by the user."},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the delete command input is invalid."},{"lineNumber":79,"author":{"gitId":"Zhangyilin0203"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"imhm"},"content":"    private void deleteTask(CalendarList calendarList, int numberDelete) throws CommandException {"},{"lineNumber":81,"author":{"gitId":"Zhangyilin0203"},"content":"        int calendarNumber;"},{"lineNumber":82,"author":{"gitId":"Zhangyilin0203"},"content":"        calendarNumber \u003d CalendarList.convertTaskNumberToCalendarNumber(numberDelete, calendarList);"},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"        assert calendarNumber \u003e\u003d 0;"},{"lineNumber":84,"author":{"gitId":"imhm"},"content":""},{"lineNumber":85,"author":{"gitId":"Zhangyilin0203"},"content":"        Ui.printDeleteMessage(calendarNumber, calendarList);"},{"lineNumber":86,"author":{"gitId":"Zhangyilin0203"},"content":"        calendarList.deleteTask(calendarNumber);"},{"lineNumber":87,"author":{"gitId":"Zhangyilin0203"},"content":"        Ui.printTotalTaskNumber(calendarList);"},{"lineNumber":88,"author":{"gitId":"imhm"},"content":""},{"lineNumber":89,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":64,"Zhangyilin0203":26}},{"path":"src/main/java/seedu/duke/command/DeleteInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"public class DeleteInfoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    public DeleteInfoCommand(String userInput) {"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"        super(userInput);"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":""},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"     * Deletes an additional information from an event."},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"     * Saves the updated calendar list in the storage after the additional information is deleted."},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list containing the event."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the add command input is invalid."},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        String[] command;"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        int eventNumber \u003d 0;"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        int infoNumber \u003d 0;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":""},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"            command \u003d userInput.split(\"a\", 2);"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            String[] commandSplit \u003d command[0].split(\"/-\", 2);"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"            eventNumber \u003d Integer.parseInt(commandSplit[1].trim());"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"            infoNumber \u003d Integer.parseInt(command[1].trim());"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid delete info\");"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":""},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        int calendarNumber \u003d CalendarList.convertEventNumberToCalendarNumber(eventNumber, calendarList);"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        assert calendarNumber \u003e\u003d 0;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":""},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"        Event event \u003d (Event) calendarList.getItem(calendarNumber);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":""},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"        checkInfoNumberValidity(infoNumber, event);"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":""},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"        int indexInfo \u003d infoNumber - 1; // to account for arraylist index starting from 0."},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"        Ui.printAdditionalInformation(event, indexInfo);"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"        event.deleteAdditionalInformation(indexInfo);"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":""},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":""},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"    private void checkInfoNumberValidity(int infoNumber, Event event) throws CommandException {"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"        if (infoNumber \u003e event.getAdditionalInformationCount() || infoNumber \u003c\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid info action\");"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":58}},{"path":"src/main/java/seedu/duke/command/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":" * Sets the task of task number specified by the user as done."},{"lineNumber":11,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    public DoneCommand(String command) {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        super(command);"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":""},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * Sets the task of task number specified by the user as done."},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     * Saves the updated calendar list in the storage after the task is marked as done."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list that contains the task."},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the done command is invalid."},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        int taskNumberCompleted;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":""},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"            String[] command \u003d userInput.split(\"done\", 2);"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            taskNumberCompleted \u003d Integer.parseInt(command[1].trim());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"done\");"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":""},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"        if (taskNumberCompleted \u003e calendarList.getTotalTasks() || taskNumberCompleted \u003c\u003d 0) {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid task action\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        int calendarNumberCompleted \u003d CalendarList.convertTaskNumberToCalendarNumber(taskNumberCompleted, calendarList);"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":""},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"        if (((Task) calendarList.getItem(calendarNumberCompleted)).getIsDone()) {"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"task done\");"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":""},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"        assert calendarNumberCompleted \u003e\u003d 0;"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"        calendarList.markTaskAsDone(calendarNumberCompleted);"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"        Ui.printCompleteTaskMessage(calendarNumberCompleted, calendarList);"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":""},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":52}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":" * Saves the current calendar list locally before terminating the programme."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":""},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    public ExitCommand(String userInput) {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        super(userInput);"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":""},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"     * Saves the current calendar list locally."},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list to be saved."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        Ui.printExitMessage();"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":""},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"     * Sets the isExit flag to true."},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"        return true;"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":35}},{"path":"src/main/java/seedu/duke/command/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":""},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":""},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":" * Searches the task list for tasks that contains the keyword specified by the user and prints them."},{"lineNumber":14,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND_EVENT \u003d \"/fe\";"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND_TASK \u003d \"/ft\";"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"    public static final String COMMAND_FIND_EVENT_OR_TASK \u003d \"/f\";"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"    private String keyword;"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":""},{"lineNumber":21,"author":{"gitId":"imhm"},"content":""},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    public FindCommand(String userInput) {"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"        super(userInput);"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":""},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"     * Searches the calendar list for tasks that contains the keyword specified by the user and prints them."},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list to search from."},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"     * @param storage      not required."},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the keyword is not found or if the user inputs a wrong command."},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"        assert userInput.startsWith(COMMAND_FIND_EVENT_OR_TASK) : \"Find command invalid but passes\";"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"        String[] command;"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        String findCommand;"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"            command \u003d userInput.split(\" \", 2);"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"            findCommand \u003d command[0];"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"find\");"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":""},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"        switch (findCommand) {"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"        case COMMAND_FIND_EVENT:"},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"            find(COMMAND_FIND_EVENT, calendarList);"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"        case COMMAND_FIND_TASK:"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"            find(COMMAND_FIND_TASK, calendarList);"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"        case COMMAND_FIND_EVENT_OR_TASK:"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"            find(COMMAND_FIND_EVENT_OR_TASK, calendarList);"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"        default:"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"find\");"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"imhm"},"content":""},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"    private void find(String command, CalendarList calendarList) throws CommandException {"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"        boolean isFound \u003d false;"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"        String[] split;"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"            split \u003d userInput.split(\" \", 2);"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"            keyword \u003d split[1].trim();"},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"            if (keyword.isEmpty()) {"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"                throw new Exception();"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"missing keyword\");"},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":""},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"        int itemCount \u003d 0;"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":"        switch (command) {"},{"lineNumber":75,"author":{"gitId":"imhm"},"content":"        case COMMAND_FIND_EVENT:"},{"lineNumber":76,"author":{"gitId":"imhm"},"content":"            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":77,"author":{"gitId":"imhm"},"content":"                CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"                if (item instanceof Event) {"},{"lineNumber":79,"author":{"gitId":"imhm"},"content":"                    if (item.toString().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":80,"author":{"gitId":"imhm"},"content":"                        itemCount++;"},{"lineNumber":81,"author":{"gitId":"imhm"},"content":"                        Ui.printFindItemMessage(command, calendarList, isFound, i, itemCount);"},{"lineNumber":82,"author":{"gitId":"imhm"},"content":"                        isFound \u003d true;"},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"                    }"},{"lineNumber":84,"author":{"gitId":"imhm"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"imhm"},"content":""},{"lineNumber":87,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"imhm"},"content":"        case COMMAND_FIND_TASK:"},{"lineNumber":89,"author":{"gitId":"imhm"},"content":"            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":90,"author":{"gitId":"imhm"},"content":"                CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":91,"author":{"gitId":"imhm"},"content":"                if (item instanceof Task) {"},{"lineNumber":92,"author":{"gitId":"imhm"},"content":"                    if (item.toString().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":93,"author":{"gitId":"imhm"},"content":"                        itemCount++;"},{"lineNumber":94,"author":{"gitId":"imhm"},"content":"                        Ui.printFindItemMessage(command, calendarList, isFound, i, itemCount);"},{"lineNumber":95,"author":{"gitId":"imhm"},"content":"                        isFound \u003d true;"},{"lineNumber":96,"author":{"gitId":"imhm"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"imhm"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":100,"author":{"gitId":"imhm"},"content":"        case COMMAND_FIND_EVENT_OR_TASK:"},{"lineNumber":101,"author":{"gitId":"imhm"},"content":"            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":102,"author":{"gitId":"imhm"},"content":"                CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":103,"author":{"gitId":"imhm"},"content":"                if (item.toString().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":104,"author":{"gitId":"imhm"},"content":"                    itemCount++;"},{"lineNumber":105,"author":{"gitId":"imhm"},"content":"                    Ui.printFindItemMessage(command, calendarList, isFound, i, itemCount);"},{"lineNumber":106,"author":{"gitId":"imhm"},"content":"                    isFound \u003d true;"},{"lineNumber":107,"author":{"gitId":"imhm"},"content":"                }"},{"lineNumber":108,"author":{"gitId":"imhm"},"content":""},{"lineNumber":109,"author":{"gitId":"imhm"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"imhm"},"content":"        default:"},{"lineNumber":112,"author":{"gitId":"imhm"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"imhm"},"content":""},{"lineNumber":115,"author":{"gitId":"imhm"},"content":"        if (!isFound) {"},{"lineNumber":116,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"keyword not found\");"},{"lineNumber":117,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"imhm"},"content":""},{"lineNumber":119,"author":{"gitId":"imhm"},"content":""},{"lineNumber":120,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"imhm"},"content":""},{"lineNumber":122,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":122}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"    public HelpCommand(String userInput) {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":"        super(userInput);"},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"     * Lists all available commands to the user."},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"     * @param calendarList not required."},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"     * @param storage      not required."},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"        Ui.printHelpCommand();"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":22,"Zhangyilin0203":1}},{"path":"src/main/java/seedu/duke/command/PrintEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":" * Lists all event type of tasks (such as lecture, lab, tutorial and events)"},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" * in the calendar list to the user."},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":" */"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"public class PrintEventsCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public PrintEventsCommand(String userInput) {"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"        super(userInput);"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Lists all event (such as lecture, lab, tutorial, exam and activities)"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * in the calendar list to the user."},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list to list from."},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @param storage      not required."},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"        Ui.printEventsListView(calendarList);"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":23,"imhm":4}},{"path":"src/main/java/seedu/duke/command/PrintPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"public class PrintPriorityCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":"    public PrintPriorityCommand(String userInput) {"},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"        super(userInput);"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"     * Show all important tasks in the user\u0027s calendar list."},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the calendar list of all tasks and events"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"     * @param storage      not required"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"        Ui.printImportantTasks(calendarList);"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"JiawenLyu":22}},{"path":"src/main/java/seedu/duke/command/PrintProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":" * Show the progress of todos and deadlines to the user."},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"public class PrintProgressCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"    public PrintProgressCommand(String userInput) {"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":"        super(userInput);"},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"     * Show the progress of todos and deadlines to the user."},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the calendar list of all tasks and events"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"     * @param storage      not required"},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"        int numTotal \u003d calculateNumTotal(calendarList);"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"        int numFinished \u003d calculateNumFinished(calendarList);"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"        Ui.printProgress(numTotal, numFinished);"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":"     * Find the number of finished tasks in the list."},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of all calendar items."},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"     * @return integer of number of finished tasks."},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"    public int calculateNumFinished(CalendarList calendarList) {"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"        int numFinished \u003d 0;"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"            if (((Task) item).getIsDone()) {"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"                numFinished++;"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"        return numFinished;"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"     * Find the number of total tasks in the list."},{"lineNumber":52,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of all calendar items."},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"     * @return integer of number of total tasks."},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"    public int calculateNumTotal(CalendarList calendarList) {"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"        int numTotal \u003d 0;"},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":61,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"            numTotal++;"},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"        return numTotal;"},{"lineNumber":66,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"imhm":2,"JiawenLyu":66}},{"path":"src/main/java/seedu/duke/command/PrintSuggestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.task.Todo;"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"public class PrintSuggestionCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"    public PrintSuggestionCommand(String userInput) {"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":"        super(userInput);"},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"     * Give user suggestions about preparing which tasks."},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the calendar list of all tasks and events"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"     * @param storage      not required"},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"        Task earliestDeadline \u003d (Deadline) getEarliestDeadline(calendarList);"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"        Task earImportantDeadline \u003d (Deadline) getEarImportantDeadline(calendarList);"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"        Task firstTodo \u003d (Todo) getFirstTodo(calendarList);"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"        Task firImportantTodo \u003d (Todo) getFirImportantTodo(calendarList);"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"        Ui.printSuggestion(earliestDeadline, earImportantDeadline, firstTodo, firImportantTodo);"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"     * Get the ordinary deadline task with earliest due date."},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of all tasks and events"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"     * @return ordinary deadline task with earliest due date, null if no ordinary deadline task."},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"    public Task getEarliestDeadline(CalendarList calendarList) {"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"        int deadlineCount \u003d 0;"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"        Deadline earliestDeadline \u003d new Deadline(null, null);"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"            if (item instanceof Deadline \u0026\u0026 !((Task) item).getIsImportant() \u0026\u0026 !((Deadline) item).getIsDone()) {"},{"lineNumber":48,"author":{"gitId":"JiawenLyu"},"content":"                deadlineCount++;"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"                if (deadlineCount \u003d\u003d 1) {"},{"lineNumber":50,"author":{"gitId":"JiawenLyu"},"content":"                    earliestDeadline \u003d (Deadline) item;"},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"                } else if (item.getDate().isBefore(earliestDeadline.getDate())) {"},{"lineNumber":52,"author":{"gitId":"JiawenLyu"},"content":"                    earliestDeadline \u003d (Deadline) item;"},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"        if (deadlineCount \u003d\u003d 0) {"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":"            return null;"},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":"        return earliestDeadline;"},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"     * Get the important deadline task with earliest due date."},{"lineNumber":64,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of all tasks and events"},{"lineNumber":66,"author":{"gitId":"JiawenLyu"},"content":"     * @return important deadline task with earliest due date, null if no important deadline task."},{"lineNumber":67,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"JiawenLyu"},"content":"    public Task getEarImportantDeadline(CalendarList calendarList) {"},{"lineNumber":69,"author":{"gitId":"JiawenLyu"},"content":"        int count \u003d 0;"},{"lineNumber":70,"author":{"gitId":"JiawenLyu"},"content":"        Task earImportantDeadline \u003d new Deadline(null, null);"},{"lineNumber":71,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":72,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":73,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":74,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":75,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":76,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":78,"author":{"gitId":"JiawenLyu"},"content":"            if (item instanceof Deadline \u0026\u0026 ((Deadline) item).getIsImportant() \u0026\u0026 !((Deadline) item).getIsDone()) {"},{"lineNumber":79,"author":{"gitId":"JiawenLyu"},"content":"                count++;"},{"lineNumber":80,"author":{"gitId":"JiawenLyu"},"content":"                if (count \u003d\u003d 1) {"},{"lineNumber":81,"author":{"gitId":"JiawenLyu"},"content":"                    earImportantDeadline \u003d (Deadline) item;"},{"lineNumber":82,"author":{"gitId":"JiawenLyu"},"content":"                } else if (item.getDate().isBefore(earImportantDeadline.getDate())) {"},{"lineNumber":83,"author":{"gitId":"JiawenLyu"},"content":"                    earImportantDeadline \u003d (Deadline) item;"},{"lineNumber":84,"author":{"gitId":"JiawenLyu"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"JiawenLyu"},"content":"        if (count \u003d\u003d 0) {"},{"lineNumber":88,"author":{"gitId":"JiawenLyu"},"content":"            return null;"},{"lineNumber":89,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"JiawenLyu"},"content":"        return earImportantDeadline;"},{"lineNumber":91,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":93,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"JiawenLyu"},"content":"     * Get the first ordinary todo task in the list."},{"lineNumber":95,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of all tasks and events"},{"lineNumber":97,"author":{"gitId":"JiawenLyu"},"content":"     * @return first ordinary todo task, null if no ordinary task."},{"lineNumber":98,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"JiawenLyu"},"content":"    public Task getFirstTodo(CalendarList calendarList) {"},{"lineNumber":100,"author":{"gitId":"JiawenLyu"},"content":"        int count \u003d 0;"},{"lineNumber":101,"author":{"gitId":"JiawenLyu"},"content":"        Task firstTodo \u003d new Todo(null);"},{"lineNumber":102,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":103,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":104,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":105,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":106,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":107,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":109,"author":{"gitId":"JiawenLyu"},"content":"            if (item instanceof Todo \u0026\u0026 !((Todo) item).getIsImportant() \u0026\u0026 !((Todo) item).getIsDone()) {"},{"lineNumber":110,"author":{"gitId":"JiawenLyu"},"content":"                count++;"},{"lineNumber":111,"author":{"gitId":"JiawenLyu"},"content":"                firstTodo \u003d (Todo) item;"},{"lineNumber":112,"author":{"gitId":"JiawenLyu"},"content":"                break;"},{"lineNumber":113,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"JiawenLyu"},"content":"        if (count \u003d\u003d 0) {"},{"lineNumber":116,"author":{"gitId":"JiawenLyu"},"content":"            return null;"},{"lineNumber":117,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"JiawenLyu"},"content":"        return firstTodo;"},{"lineNumber":119,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":121,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"JiawenLyu"},"content":"     * Get the first important todo task in the list."},{"lineNumber":123,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of all tasks and events"},{"lineNumber":125,"author":{"gitId":"JiawenLyu"},"content":"     * @return first important todo task, null if no important task."},{"lineNumber":126,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"JiawenLyu"},"content":"    public Task getFirImportantTodo(CalendarList calendarList) {"},{"lineNumber":128,"author":{"gitId":"JiawenLyu"},"content":"        int count \u003d 0;"},{"lineNumber":129,"author":{"gitId":"JiawenLyu"},"content":"        Task firstTodo \u003d new Todo(null);"},{"lineNumber":130,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":131,"author":{"gitId":"JiawenLyu"},"content":"        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":132,"author":{"gitId":"JiawenLyu"},"content":"            CalendarItem item \u003d calendarList.getCalendarList().get(i);"},{"lineNumber":133,"author":{"gitId":"JiawenLyu"},"content":"            if (!(item instanceof Task)) {"},{"lineNumber":134,"author":{"gitId":"JiawenLyu"},"content":"                continue;"},{"lineNumber":135,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":137,"author":{"gitId":"JiawenLyu"},"content":"            if (item instanceof Todo \u0026\u0026 ((Todo) item).getIsImportant() \u0026\u0026 !((Todo) item).getIsDone()) {"},{"lineNumber":138,"author":{"gitId":"JiawenLyu"},"content":"                count++;"},{"lineNumber":139,"author":{"gitId":"JiawenLyu"},"content":"                firstTodo \u003d (Todo) item;"},{"lineNumber":140,"author":{"gitId":"JiawenLyu"},"content":"                break;"},{"lineNumber":141,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":144,"author":{"gitId":"JiawenLyu"},"content":"        if (count \u003d\u003d 0) {"},{"lineNumber":145,"author":{"gitId":"JiawenLyu"},"content":"            return null;"},{"lineNumber":146,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"JiawenLyu"},"content":"        return firstTodo;"},{"lineNumber":148,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"JiawenLyu":149}},{"path":"src/main/java/seedu/duke/command/PrintTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":" * Lists all tasks in the calendar list to the user."},{"lineNumber":9,"author":{"gitId":"imhm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"public class PrintTasksCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public PrintTasksCommand(String userInput) {"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"        super(userInput);"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":""},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Lists all tasks in the calendar list to the user."},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list to list from."},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     * @param storage      not required."},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"        Ui.printTaskListView(calendarList);"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":4,"imhm":21}},{"path":"src/main/java/seedu/duke/command/PrintTimelineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingming517"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.duke.DateTimeParser;"},{"lineNumber":5,"author":{"gitId":"Jingming517"},"content":"import seedu.duke.Storage;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.duke.calendar.CalendarItem;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.duke.calendar.task.Todo;"},{"lineNumber":9,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Prints the personal calendar for users."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Jingming517"},"content":"//@@author Jingming517"},{"lineNumber":18,"author":{"gitId":"Jingming517"},"content":"public class PrintTimelineCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"Jingming517"},"content":"    public PrintTimelineCommand(String userInput) {"},{"lineNumber":20,"author":{"gitId":"Jingming517"},"content":"        super(userInput);"},{"lineNumber":21,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":23,"author":{"gitId":"Jingming517"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Jingming517"},"content":"     * Prints out timeline of all items in calendarList."},{"lineNumber":25,"author":{"gitId":"Jingming517"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Jingming517"},"content":"     * @param calendarList the calendar list to print the timeline from."},{"lineNumber":27,"author":{"gitId":"Jingming517"},"content":"     * @param storage      the storage to input the data from."},{"lineNumber":28,"author":{"gitId":"Jingming517"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Jingming517"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Jingming517"},"content":"    public void execute(CalendarList calendarList, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"Jingming517"},"content":"        CalendarList timelineList \u003d new CalendarList();"},{"lineNumber":32,"author":{"gitId":"Jingming517"},"content":"        CalendarList todoList \u003d new CalendarList();"},{"lineNumber":33,"author":{"gitId":"Jingming517"},"content":"        LocalDate startDate \u003d LocalDate.now();"},{"lineNumber":34,"author":{"gitId":"Jingming517"},"content":"        LocalDate endDate \u003d null;"},{"lineNumber":35,"author":{"gitId":"Jingming517"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"Jingming517"},"content":"            endDate \u003d detectEndDate(userInput);"},{"lineNumber":37,"author":{"gitId":"Jingming517"},"content":"            if (calendarList.getTotalItems() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"Jingming517"},"content":"                System.out.println(\"Your calendar list is empty!\");"},{"lineNumber":39,"author":{"gitId":"Jingming517"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"Jingming517"},"content":"                if (endDate !\u003d null) {"},{"lineNumber":41,"author":{"gitId":"Jingming517"},"content":"                    //endDate \u003d startDate.plusDays(7);"},{"lineNumber":42,"author":{"gitId":"Jingming517"},"content":"                    for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":43,"author":{"gitId":"Jingming517"},"content":"                        if ((calendarList.getItem(i).getDate() \u003d\u003d null)"},{"lineNumber":44,"author":{"gitId":"Jingming517"},"content":"                                || ((calendarList.getItem(i).getDate().isAfter(startDate))"},{"lineNumber":45,"author":{"gitId":"Jingming517"},"content":"                                \u0026\u0026 (calendarList.getItem(i).getDate().isBefore(endDate)))) {"},{"lineNumber":46,"author":{"gitId":"Jingming517"},"content":"                            CalendarItem temp \u003d calendarList.getItem(i);"},{"lineNumber":47,"author":{"gitId":"Jingming517"},"content":"                            if (temp instanceof Todo) {"},{"lineNumber":48,"author":{"gitId":"Jingming517"},"content":"                                todoList.addItem(temp);"},{"lineNumber":49,"author":{"gitId":"Jingming517"},"content":"                            } else {"},{"lineNumber":50,"author":{"gitId":"Jingming517"},"content":"                                timelineList.addItem(temp);"},{"lineNumber":51,"author":{"gitId":"Jingming517"},"content":"                            }"},{"lineNumber":52,"author":{"gitId":"Jingming517"},"content":"                        }"},{"lineNumber":53,"author":{"gitId":"Jingming517"},"content":"                    }"},{"lineNumber":54,"author":{"gitId":"Jingming517"},"content":"                } else {"},{"lineNumber":55,"author":{"gitId":"Jingming517"},"content":"                    for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":56,"author":{"gitId":"Jingming517"},"content":"                        CalendarItem temp \u003d calendarList.getItem(i);"},{"lineNumber":57,"author":{"gitId":"Jingming517"},"content":"                        if (temp instanceof Todo) {"},{"lineNumber":58,"author":{"gitId":"Jingming517"},"content":"                            todoList.addItem(temp);"},{"lineNumber":59,"author":{"gitId":"Jingming517"},"content":"                        } else {"},{"lineNumber":60,"author":{"gitId":"Jingming517"},"content":"                            timelineList.addItem(temp);"},{"lineNumber":61,"author":{"gitId":"Jingming517"},"content":"                        }"},{"lineNumber":62,"author":{"gitId":"Jingming517"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"Jingming517"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":65,"author":{"gitId":"Jingming517"},"content":"                CalendarList sortedList \u003d sortByDateTime(timelineList);"},{"lineNumber":66,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":67,"author":{"gitId":"Jingming517"},"content":"                System.out.println(\"Here is your timeline:\");"},{"lineNumber":68,"author":{"gitId":"Jingming517"},"content":"                System.out.println(\"Timeline\\n|\");"},{"lineNumber":69,"author":{"gitId":"Jingming517"},"content":"                if (sortedList.getTotalItems() !\u003d 0) {"},{"lineNumber":70,"author":{"gitId":"Jingming517"},"content":"                    System.out.println(\"|__ \" + sortedList.getItem(0).getDate()"},{"lineNumber":71,"author":{"gitId":"Jingming517"},"content":"                            + \" \" + sortedList.getItem(0).getDate().getDayOfWeek());"},{"lineNumber":72,"author":{"gitId":"Jingming517"},"content":"                    if (sortedList.getItem(0).getTime() \u003d\u003d null) {"},{"lineNumber":73,"author":{"gitId":"Jingming517"},"content":"                        System.out.println(\"|            |_____ \" + \"23:59\");"},{"lineNumber":74,"author":{"gitId":"Jingming517"},"content":"                    } else {"},{"lineNumber":75,"author":{"gitId":"Jingming517"},"content":"                        System.out.println(\"|            |_____ \" + sortedList.getItem(0).getTime());"},{"lineNumber":76,"author":{"gitId":"Jingming517"},"content":"                    }"},{"lineNumber":77,"author":{"gitId":"Jingming517"},"content":"                    System.out.println(\"|                     |_____ \" + sortedList.getItem(0).getDescription());"},{"lineNumber":78,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":79,"author":{"gitId":"Jingming517"},"content":"                    for (int i \u003d 1; i \u003c sortedList.getTotalItems(); i++) {"},{"lineNumber":80,"author":{"gitId":"Jingming517"},"content":"                        LocalTime thisTime \u003d (sortedList.getItem(i).getTime() \u003d\u003d null"},{"lineNumber":81,"author":{"gitId":"Jingming517"},"content":"                                ? LocalTime.of(23, 59) : sortedList.getItem(i).getTime());"},{"lineNumber":82,"author":{"gitId":"Jingming517"},"content":"                        LocalTime prevTime \u003d (sortedList.getItem(i - 1).getTime() \u003d\u003d null"},{"lineNumber":83,"author":{"gitId":"Jingming517"},"content":"                                ? LocalTime.of(23, 59) : sortedList.getItem(i - 1).getTime());"},{"lineNumber":84,"author":{"gitId":"Jingming517"},"content":"                        if (!(sortedList.getItem(i - 1).getDate().isEqual(sortedList.getItem(i).getDate()))) {"},{"lineNumber":85,"author":{"gitId":"Jingming517"},"content":"                            System.out.println(\"|__ \" + sortedList.getItem(i).getDate()"},{"lineNumber":86,"author":{"gitId":"Jingming517"},"content":"                                    + \" \" + sortedList.getItem(i).getDate().getDayOfWeek());"},{"lineNumber":87,"author":{"gitId":"Jingming517"},"content":"                        }"},{"lineNumber":88,"author":{"gitId":"Jingming517"},"content":"                        if (!thisTime.equals(prevTime)) {"},{"lineNumber":89,"author":{"gitId":"Jingming517"},"content":"                            System.out.println(\"|            |_____ \" + thisTime);"},{"lineNumber":90,"author":{"gitId":"Jingming517"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"Jingming517"},"content":"                        System.out.println(\"|                     |_____ \""},{"lineNumber":92,"author":{"gitId":"Jingming517"},"content":"                                + sortedList.getItem(i).getDescription());"},{"lineNumber":93,"author":{"gitId":"Jingming517"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"Jingming517"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":96,"author":{"gitId":"Jingming517"},"content":"                System.out.println(\"|__ Todo items\");"},{"lineNumber":97,"author":{"gitId":"Jingming517"},"content":"                int index \u003d 1;"},{"lineNumber":98,"author":{"gitId":"Jingming517"},"content":"                if (todoList.getTotalItems() !\u003d 0) {"},{"lineNumber":99,"author":{"gitId":"Jingming517"},"content":"                    for (int i \u003d 0; i \u003c todoList.getTotalItems(); i++) {"},{"lineNumber":100,"author":{"gitId":"Jingming517"},"content":"                        System.out.println(index + \". \" + todoList.getItem(i).toString());"},{"lineNumber":101,"author":{"gitId":"Jingming517"},"content":"                        index++;"},{"lineNumber":102,"author":{"gitId":"Jingming517"},"content":"                    }"},{"lineNumber":103,"author":{"gitId":"Jingming517"},"content":"                    System.out.println(\"\\n\");"},{"lineNumber":104,"author":{"gitId":"Jingming517"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"Jingming517"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"Jingming517"},"content":"        } catch (Exception e) {"},{"lineNumber":107,"author":{"gitId":"Jingming517"},"content":"            System.out.println(\"Invalid input!\\n\""},{"lineNumber":108,"author":{"gitId":"Jingming517"},"content":"                    + \"Please key in the command in this format: \\n\""},{"lineNumber":109,"author":{"gitId":"Jingming517"},"content":"                    + \"1. print timeline\\n2. print timeline week\\n3. \""},{"lineNumber":110,"author":{"gitId":"Jingming517"},"content":"                    + \"print timeline month\\n4. print timeline date \u003cddMMyy\u003e\");"},{"lineNumber":111,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":114,"author":{"gitId":"Jingming517"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"Jingming517"},"content":"     * Sort the items in a CalendarList in time sequence."},{"lineNumber":116,"author":{"gitId":"Jingming517"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"Jingming517"},"content":"     * @param calendarList list to be sorted."},{"lineNumber":118,"author":{"gitId":"Jingming517"},"content":"     * @return sorted CalendarList."},{"lineNumber":119,"author":{"gitId":"Jingming517"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"Jingming517"},"content":"    public CalendarList sortByDateTime(CalendarList calendarList) {"},{"lineNumber":121,"author":{"gitId":"Jingming517"},"content":"        CalendarList sortingList \u003d calendarList;"},{"lineNumber":122,"author":{"gitId":"Jingming517"},"content":"        if (calendarList.getTotalItems() \u003d\u003d 0) {"},{"lineNumber":123,"author":{"gitId":"Jingming517"},"content":"            return calendarList;"},{"lineNumber":124,"author":{"gitId":"Jingming517"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"Jingming517"},"content":"            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"},{"lineNumber":126,"author":{"gitId":"Jingming517"},"content":"                for (int j \u003d i + 1; j \u003c calendarList.getTotalItems(); j++) {"},{"lineNumber":127,"author":{"gitId":"Jingming517"},"content":"                    if (calendarList.getItem(i).getDate() !\u003d null \u0026\u0026 calendarList.getItem(j).getDate() !\u003d null) {"},{"lineNumber":128,"author":{"gitId":"Jingming517"},"content":"                        if (calendarList.getItem(j).getDate().isBefore(calendarList.getItem(i).getDate())) {"},{"lineNumber":129,"author":{"gitId":"Jingming517"},"content":"                            sortingList.swapTasks(i, j);"},{"lineNumber":130,"author":{"gitId":"Jingming517"},"content":"                        } else if (calendarList.getItem(j).getDate().isEqual(calendarList.getItem(i).getDate())) {"},{"lineNumber":131,"author":{"gitId":"Jingming517"},"content":"                            LocalTime timeOfi \u003d (calendarList.getItem(i).getTime() \u003d\u003d null"},{"lineNumber":132,"author":{"gitId":"Jingming517"},"content":"                                    ? LocalTime.of(23, 59) : calendarList.getItem(i).getTime());"},{"lineNumber":133,"author":{"gitId":"Jingming517"},"content":"                            LocalTime timeOfj \u003d (calendarList.getItem(j).getTime() \u003d\u003d null"},{"lineNumber":134,"author":{"gitId":"Jingming517"},"content":"                                    ? LocalTime.of(23, 59) : calendarList.getItem(j).getTime());"},{"lineNumber":135,"author":{"gitId":"Jingming517"},"content":"                            if (timeOfj.isBefore(timeOfi)) {"},{"lineNumber":136,"author":{"gitId":"Jingming517"},"content":"                                sortingList.swapTasks(i, j);"},{"lineNumber":137,"author":{"gitId":"Jingming517"},"content":"                            }"},{"lineNumber":138,"author":{"gitId":"Jingming517"},"content":"                        }"},{"lineNumber":139,"author":{"gitId":"Jingming517"},"content":"                    }"},{"lineNumber":140,"author":{"gitId":"Jingming517"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"Jingming517"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"Jingming517"},"content":"            return sortingList;"},{"lineNumber":143,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":146,"author":{"gitId":"Jingming517"},"content":"    public LocalDate detectEndDate(String userInput) throws Exception {"},{"lineNumber":147,"author":{"gitId":"Jingming517"},"content":"        LocalDate startDate \u003d LocalDate.now();"},{"lineNumber":148,"author":{"gitId":"Jingming517"},"content":"        LocalDate endDate;"},{"lineNumber":149,"author":{"gitId":"Jingming517"},"content":"        String[] userInputSplit \u003d userInput.split(\" \");"},{"lineNumber":150,"author":{"gitId":"Jingming517"},"content":"        if (userInputSplit.length \u003d\u003d 2) {"},{"lineNumber":151,"author":{"gitId":"Jingming517"},"content":"            endDate \u003d null;"},{"lineNumber":152,"author":{"gitId":"Jingming517"},"content":"        } else if (userInputSplit.length \u003d\u003d 3) {"},{"lineNumber":153,"author":{"gitId":"Jingming517"},"content":"            if (userInputSplit[2].matches(\"week\")) {"},{"lineNumber":154,"author":{"gitId":"Jingming517"},"content":"                endDate \u003d startDate.plusDays(7);"},{"lineNumber":155,"author":{"gitId":"Jingming517"},"content":"            } else if (userInputSplit[2].matches(\"month\")) {"},{"lineNumber":156,"author":{"gitId":"Jingming517"},"content":"                endDate \u003d startDate.plusDays(31);"},{"lineNumber":157,"author":{"gitId":"Jingming517"},"content":"            } else {"},{"lineNumber":158,"author":{"gitId":"Jingming517"},"content":"                throw new CommandException(\"invalid command\");"},{"lineNumber":159,"author":{"gitId":"Jingming517"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"Jingming517"},"content":"        } else if (userInputSplit.length \u003d\u003d 4 \u0026\u0026 userInputSplit[2].matches(\"date\")) {"},{"lineNumber":161,"author":{"gitId":"Jingming517"},"content":"            String[] userInputSplitDate \u003d userInput.split(\"date\", 2);"},{"lineNumber":162,"author":{"gitId":"Jingming517"},"content":"            endDate \u003d DateTimeParser.inputDateProcessor(userInputSplit[3].trim());"},{"lineNumber":163,"author":{"gitId":"Jingming517"},"content":"        } else {"},{"lineNumber":164,"author":{"gitId":"Jingming517"},"content":"            throw new CommandException(\"invalid command\");"},{"lineNumber":165,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"Jingming517"},"content":"        return endDate;"},{"lineNumber":167,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Jingming517"},"content":"}"}],"authorContributionMap":{"imhm":1,"Jingming517":157,"-":10}},{"path":"src/main/java/seedu/duke/command/PrioritizeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.task.Task;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":" * Prioritize the task as important."},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"public class PrioritizeCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"    public PrioritizeCommand(String userInput) {"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":"        super(userInput);"},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"     * Mark the task as important."},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of user events and tasks."},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"     * @param storage      the storage to be saved to."},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the command is invalid."},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"        int index;"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"            if (userInput.startsWith(\"*t\")) {"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"                String[] command \u003d userInput.split(\"\\\\*t\", 2);"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"                index \u003d Integer.parseInt(command[1].trim());"},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":"            } else {"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"                throw new CommandException(\"prioritize\");"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":"        } catch (Exception e) {"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"prioritize\");"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"        markAsImportant(calendarList, index);"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"        storage.writeToFile(calendarList);"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"     * Mark the task with index as important."},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"     * @param calendarList the list of user events and tasks."},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"     * @param indexOfTask  the index of the task in the list."},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the index is invalid."},{"lineNumber":47,"author":{"gitId":"JiawenLyu"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"    public void markAsImportant(CalendarList calendarList, int indexOfTask) throws CommandException {"},{"lineNumber":49,"author":{"gitId":"JiawenLyu"},"content":"        if (indexOfTask \u003e calendarList.getTotalTasks() || indexOfTask \u003c 0) {"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid task action\");"},{"lineNumber":51,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"JiawenLyu"},"content":"        int calendarNumber \u003d CalendarList.convertTaskNumberToCalendarNumber(indexOfTask, calendarList);"},{"lineNumber":53,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":54,"author":{"gitId":"JiawenLyu"},"content":"        if (((Task) calendarList.getItem(calendarNumber)).getIsImportant()) {"},{"lineNumber":55,"author":{"gitId":"JiawenLyu"},"content":"            throw new CommandException(\"important task\");"},{"lineNumber":56,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":58,"author":{"gitId":"JiawenLyu"},"content":"        assert calendarNumber \u003e\u003d 0;"},{"lineNumber":59,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":60,"author":{"gitId":"JiawenLyu"},"content":"        calendarList.markTaskAsImportant(calendarNumber);"},{"lineNumber":61,"author":{"gitId":"JiawenLyu"},"content":"        Ui.printPrioritizeMessage(calendarList, calendarNumber);"},{"lineNumber":62,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"imhm":8,"JiawenLyu":55}},{"path":"src/main/java/seedu/duke/command/ViewInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import seedu.duke.CommandException;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.Ui;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.event.Event;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"public class ViewInfoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":""},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"    public ViewInfoCommand(String command) {"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        super(command);"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":""},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"     * Prints the list of additional information of a particular event."},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"     * @param calendarList the calendar list containing the event."},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"     * @param storage      not required."},{"lineNumber":22,"author":{"gitId":"imhm"},"content":"     * @throws CommandException if the view info command is invalid."},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"    public void execute(CalendarList calendarList, Storage storage) throws CommandException {"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        int eventNumber \u003d 0;"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        int calendarNumber;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            String[] command \u003d userInput.split(\"/v\", 2);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"            eventNumber \u003d Integer.parseInt(command[1].trim());"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"            throw new CommandException(\"invalid view info\");"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":"        calendarNumber \u003d CalendarList.convertEventNumberToCalendarNumber(eventNumber, calendarList);"},{"lineNumber":35,"author":{"gitId":"imhm"},"content":""},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"        assert calendarNumber \u003e\u003d 0;"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        Event event \u003d (Event) calendarList.getItem(calendarNumber);"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        ArrayList\u003cString\u003e additionalInformation \u003d event.getAdditionalInformation();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Ui.printAllAdditionalInformation(additionalInformation, event);"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":41}},{"path":"src/main/java/seedu/duke/resources/ModuleChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"package seedu.duke.resources;"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"import com.alibaba.fastjson.JSON;"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.io.BufferedReader;"},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.io.FileReader;"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.io.InputStreamReader;"},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.net.HttpURLConnection;"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.net.NoRouteToHostException;"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.net.URL;"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.net.URLConnection;"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.net.UnknownHostException;"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.util.HashMap;"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":" * A module checker class to check if the module code entered by the user is valid."},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":" */"},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"public class ModuleChecker {"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public static final String LINK \u003d \"https://api.nusmods.com/v2/2018-2019/moduleList.json\";"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private static final String LINE_SEPARATOR \u003d \" \";"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private boolean isValid;"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private boolean isOnWifi;"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public ModuleChecker() {"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"        this.isValid \u003d false;"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"        this.isOnWifi \u003d true;"},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Check if a given module code is valid with reference to the module list provided by NUSMod API."},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @param moduleCode the module code provided by the user."},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return isValid   true if it is valid, false otherwise."},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public boolean isModuleValid(String moduleCode) {"},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"        HashMap\u003cString, NusModule\u003e modListMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"        isOnWifi \u003d isConnectedToWifi();"},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"        modListMap \u003d generateNusModsMap(isOnWifi);"},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"        isValid \u003d modListMap.containsKey(moduleCode.toUpperCase());"},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":46,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return isValid;"},{"lineNumber":47,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":49,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Generate the NUS module HashMap using 2 different methods."},{"lineNumber":51,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * If there is internet connection, NUS module HashMap is generated from the NUSMod API directly."},{"lineNumber":52,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * If there is no internet, NUS module HashMap is generated from the local data file."},{"lineNumber":53,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return NUS module HashMap."},{"lineNumber":55,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private HashMap\u003cString, NusModule\u003e generateNusModsMap(boolean isOnWifi) {"},{"lineNumber":57,"author":{"gitId":"LIU-YiFeng-1"},"content":"        if (isOnWifi) {"},{"lineNumber":58,"author":{"gitId":"LIU-YiFeng-1"},"content":"            return generateNusModsMapFromOnlineApi();"},{"lineNumber":59,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"LIU-YiFeng-1"},"content":"            return generateNusModsMapUsingLocalData();"},{"lineNumber":61,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":64,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Checks if the user\u0027s computer is connected to wifi and make sure the HTTP request to NUSMod API is successful."},{"lineNumber":66,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return TRUE if there is internet connect, FALSE otherwise."},{"lineNumber":68,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private boolean isConnectedToWifi() {"},{"lineNumber":70,"author":{"gitId":"LIU-YiFeng-1"},"content":"        int httpEcho;"},{"lineNumber":71,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"LIU-YiFeng-1"},"content":"            URL url \u003d new URL(LINK);"},{"lineNumber":73,"author":{"gitId":"LIU-YiFeng-1"},"content":"            URLConnection myConnection \u003d url.openConnection();"},{"lineNumber":74,"author":{"gitId":"LIU-YiFeng-1"},"content":"            HttpURLConnection httpUrlConnection \u003d (HttpURLConnection) myConnection;"},{"lineNumber":75,"author":{"gitId":"LIU-YiFeng-1"},"content":"            httpEcho \u003d httpUrlConnection.getResponseCode();"},{"lineNumber":76,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (httpEcho !\u003d HttpURLConnection.HTTP_OK) {"},{"lineNumber":77,"author":{"gitId":"LIU-YiFeng-1"},"content":"                System.out.println(\"Cannot connect website!\");"},{"lineNumber":78,"author":{"gitId":"LIU-YiFeng-1"},"content":"                isOnWifi \u003d false;"},{"lineNumber":79,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (UnknownHostException e) {"},{"lineNumber":81,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"No internet connection! Verifying module code using local data....\\n\");"},{"lineNumber":82,"author":{"gitId":"LIU-YiFeng-1"},"content":"            isOnWifi \u003d false;"},{"lineNumber":83,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (NoRouteToHostException e) {"},{"lineNumber":84,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"No internet connection! Verifying module code using local data....\\n\");"},{"lineNumber":85,"author":{"gitId":"LIU-YiFeng-1"},"content":"            isOnWifi \u003d false;"},{"lineNumber":86,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (IOException e) {"},{"lineNumber":87,"author":{"gitId":"LIU-YiFeng-1"},"content":"            e.printStackTrace();"},{"lineNumber":88,"author":{"gitId":"LIU-YiFeng-1"},"content":"            isOnWifi \u003d false;"},{"lineNumber":89,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return isOnWifi;"},{"lineNumber":91,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":93,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Generate a hashmap which maps the module code to a NusModule object/class."},{"lineNumber":95,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Referred to the code example from programcreek."},{"lineNumber":96,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * (here is the link:https://www.programcreek.com/java-api-examples/?api\u003dcom.alibaba.fastjson.JSON)"},{"lineNumber":97,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return generatedNusModsList  a hash map containing the module code information only."},{"lineNumber":99,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private HashMap\u003cString, NusModule\u003e generateNusModsMapFromOnlineApi() {"},{"lineNumber":101,"author":{"gitId":"LIU-YiFeng-1"},"content":"        HashMap\u003cString, NusModule\u003e mappedNusModuleList \u003d new HashMap\u003c\u003e();"},{"lineNumber":102,"author":{"gitId":"LIU-YiFeng-1"},"content":"        int httpEcho;"},{"lineNumber":103,"author":{"gitId":"LIU-YiFeng-1"},"content":"        String generatedNusModsList;"},{"lineNumber":104,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":105,"author":{"gitId":"LIU-YiFeng-1"},"content":"            URL url \u003d new URL(LINK);"},{"lineNumber":106,"author":{"gitId":"LIU-YiFeng-1"},"content":"            URLConnection myConnection \u003d url.openConnection();"},{"lineNumber":107,"author":{"gitId":"LIU-YiFeng-1"},"content":"            HttpURLConnection httpUrlConnection \u003d (HttpURLConnection) myConnection;"},{"lineNumber":108,"author":{"gitId":"LIU-YiFeng-1"},"content":"            httpEcho \u003d httpUrlConnection.getResponseCode();"},{"lineNumber":109,"author":{"gitId":"LIU-YiFeng-1"},"content":"            if (httpEcho !\u003d HttpURLConnection.HTTP_OK) {"},{"lineNumber":110,"author":{"gitId":"LIU-YiFeng-1"},"content":"                System.out.println(\"Cannot connect website!\");"},{"lineNumber":111,"author":{"gitId":"LIU-YiFeng-1"},"content":"            } else {"},{"lineNumber":112,"author":{"gitId":"LIU-YiFeng-1"},"content":"                InputStreamReader inputStreamReader \u003d new InputStreamReader(myConnection.getInputStream());"},{"lineNumber":113,"author":{"gitId":"LIU-YiFeng-1"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(inputStreamReader);"},{"lineNumber":114,"author":{"gitId":"LIU-YiFeng-1"},"content":"                StringBuffer stringBuffer \u003d new StringBuffer();"},{"lineNumber":115,"author":{"gitId":"LIU-YiFeng-1"},"content":"                generatedNusModsList \u003d bufferedReader.readLine();"},{"lineNumber":116,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":117,"author":{"gitId":"LIU-YiFeng-1"},"content":"                while (generatedNusModsList !\u003d null) {"},{"lineNumber":118,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    stringBuffer.append(generatedNusModsList);"},{"lineNumber":119,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    stringBuffer.append(LINE_SEPARATOR);"},{"lineNumber":120,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    generatedNusModsList \u003d bufferedReader.readLine();"},{"lineNumber":121,"author":{"gitId":"LIU-YiFeng-1"},"content":"                }"},{"lineNumber":122,"author":{"gitId":"LIU-YiFeng-1"},"content":"                generatedNusModsList \u003d stringBuffer.toString();"},{"lineNumber":123,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":124,"author":{"gitId":"LIU-YiFeng-1"},"content":"                List\u003cNusModule\u003e moduleList \u003d JSON.parseArray(generatedNusModsList, NusModule.class);"},{"lineNumber":125,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":126,"author":{"gitId":"LIU-YiFeng-1"},"content":"                for (NusModule a : moduleList) {"},{"lineNumber":127,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    mappedNusModuleList.put(a.getModuleCode(), a);"},{"lineNumber":128,"author":{"gitId":"LIU-YiFeng-1"},"content":"                }"},{"lineNumber":129,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (IOException e) {"},{"lineNumber":131,"author":{"gitId":"LIU-YiFeng-1"},"content":"            isOnWifi \u003d false;"},{"lineNumber":132,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":134,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return mappedNusModuleList;"},{"lineNumber":135,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":137,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Generate a hashmap which maps the module code to a NusModule object/class."},{"lineNumber":139,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return generatedNusModsList  a hash map containing the module code information only."},{"lineNumber":141,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private HashMap\u003cString, NusModule\u003e generateNusModsMapUsingLocalData() {"},{"lineNumber":143,"author":{"gitId":"LIU-YiFeng-1"},"content":"        HashMap\u003cString, NusModule\u003e mappedNusModuleListWithLocalData \u003d new HashMap\u003c\u003e();"},{"lineNumber":144,"author":{"gitId":"LIU-YiFeng-1"},"content":"        String content \u003d \"\";"},{"lineNumber":145,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":146,"author":{"gitId":"LIU-YiFeng-1"},"content":"            FileReader fileReader \u003d new FileReader(\"NUS_Mod_info.json\");"},{"lineNumber":147,"author":{"gitId":"LIU-YiFeng-1"},"content":"            BufferedReader reader \u003d new BufferedReader(fileReader);"},{"lineNumber":148,"author":{"gitId":"LIU-YiFeng-1"},"content":"            StringBuffer buffer \u003d new StringBuffer();"},{"lineNumber":149,"author":{"gitId":"LIU-YiFeng-1"},"content":"            String line;"},{"lineNumber":150,"author":{"gitId":"LIU-YiFeng-1"},"content":"            line \u003d reader.readLine();"},{"lineNumber":151,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":152,"author":{"gitId":"LIU-YiFeng-1"},"content":"            while (line !\u003d null) {"},{"lineNumber":153,"author":{"gitId":"LIU-YiFeng-1"},"content":"                buffer.append(line);"},{"lineNumber":154,"author":{"gitId":"LIU-YiFeng-1"},"content":"                buffer.append(LINE_SEPARATOR);"},{"lineNumber":155,"author":{"gitId":"LIU-YiFeng-1"},"content":"                line \u003d reader.readLine();"},{"lineNumber":156,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":158,"author":{"gitId":"LIU-YiFeng-1"},"content":"            content \u003d buffer.toString();"},{"lineNumber":159,"author":{"gitId":"LIU-YiFeng-1"},"content":"            List\u003cNusModule\u003e modulesList \u003d JSON.parseArray(content, NusModule.class);"},{"lineNumber":160,"author":{"gitId":"LIU-YiFeng-1"},"content":"            for (NusModule a : modulesList) {"},{"lineNumber":161,"author":{"gitId":"LIU-YiFeng-1"},"content":"                mappedNusModuleListWithLocalData.put(a.getModuleCode(), a);"},{"lineNumber":162,"author":{"gitId":"LIU-YiFeng-1"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":164,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":165,"author":{"gitId":"LIU-YiFeng-1"},"content":"            System.out.println(\"The Json data file does not exist!\\n\""},{"lineNumber":166,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"In order to use `exam`, `lab`, `lect` and `tut` commands,\\n\""},{"lineNumber":167,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"please ensure either one of the following requirements is met:\\n\""},{"lineNumber":168,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \" 1. Re-establish your internet connection.\\n\""},{"lineNumber":169,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \" 2. Download the Json data file from our Github page.\\n\""},{"lineNumber":170,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"You may refer to `Quick Start` section in the User Guide for more info.\\n\""},{"lineNumber":171,"author":{"gitId":"LIU-YiFeng-1"},"content":"                    + \"Please omit the error message below and carry out the above mentioned steps!\\n\");"},{"lineNumber":172,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (IOException e) {"},{"lineNumber":173,"author":{"gitId":"LIU-YiFeng-1"},"content":"            e.printStackTrace();"},{"lineNumber":174,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return mappedNusModuleListWithLocalData;"},{"lineNumber":176,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"LIU-YiFeng-1"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":177}},{"path":"src/main/java/seedu/duke/resources/NusModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"package seedu.duke.resources;"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":" * This class is created to be used in ModuleChecker class only."},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":" * Here is a sample JSON data from NUSMod API:"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":" * {"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":" * \"moduleCode\": \"ACC1002\","},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":" * \"title\": \"Financial Accounting\","},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":" * \"semesters\": ["},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":" * 1,"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":" * 2"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":" * ]"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":" * }"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":" * We are only interested in the moduleCode and nothing else."},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":" * If need to retrieve more information from NUSMod API,"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":" * Amend the class methods accordingly."},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":" */"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"public class NusModule {"},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":"    private String moduleCode;"},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Default constructor is needed for ModuleChecker."},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Fastjson is used in ModuleChecker, and the parser method in the fastjson library requires this."},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public NusModule() {"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Method needed to set the module code as required by the fastjson library."},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @param moduleCode sets the moduleCode to the intended module code."},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public void setModuleCode(String moduleCode) {"},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"        this.moduleCode \u003d moduleCode;"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * Method getter to return the module code to be used in the subsequent mapping."},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * After parsing the json file from NUSMod API, the module code and the relevant information"},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * will be stored in a HashMap."},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"LIU-YiFeng-1"},"content":"     * @return moduleCode a string representing the module code."},{"lineNumber":44,"author":{"gitId":"LIU-YiFeng-1"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"LIU-YiFeng-1"},"content":"    public String getModuleCode() {"},{"lineNumber":46,"author":{"gitId":"LIU-YiFeng-1"},"content":"        return moduleCode;"},{"lineNumber":47,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"LIU-YiFeng-1"},"content":"}"},{"lineNumber":49,"author":{"gitId":"LIU-YiFeng-1"},"content":""}],"authorContributionMap":{"LIU-YiFeng-1":49}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"imhm":2,"-":10}},{"path":"src/test/java/seedu/duke/command/AddInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"class AddInfoCommandTest {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    void addInfoCommand_wrongCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        AddInfoCommand addInfoCommand \u003d new AddInfoCommand(\"/a1\");"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"            addInfoCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid add info\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    void addInfoCommand_eventNumberIsNotANumber_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        AddInfoCommand addInfoCommand \u003d new AddInfoCommand(\"/are - hello\");"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            addInfoCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid add info\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    void addInfoCommand_eventNumberMoreThanEvents_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        AddInfoCommand addInfoCommand \u003d new AddInfoCommand(\"/a1 - hello\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"            addInfoCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid event action\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":46}},{"path":"src/test/java/seedu/duke/command/CountdownCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhangyilin0203"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":3,"author":{"gitId":"Zhangyilin0203"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"Zhangyilin0203"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":7,"author":{"gitId":"Zhangyilin0203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":9,"author":{"gitId":"Zhangyilin0203"},"content":"//@@author zhangyilin0203"},{"lineNumber":10,"author":{"gitId":"Zhangyilin0203"},"content":"class CountdownCommandTest {"},{"lineNumber":11,"author":{"gitId":"Zhangyilin0203"},"content":""},{"lineNumber":12,"author":{"gitId":"Zhangyilin0203"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Zhangyilin0203"},"content":"    void execute_exceptionThrown() {"},{"lineNumber":14,"author":{"gitId":"Zhangyilin0203"},"content":"        CountdownCommand countdownCommand \u003d new CountdownCommand(\"countdown abs\");"},{"lineNumber":15,"author":{"gitId":"Zhangyilin0203"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":16,"author":{"gitId":"Zhangyilin0203"},"content":"        Storage storage \u003d null;"},{"lineNumber":17,"author":{"gitId":"Zhangyilin0203"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"Zhangyilin0203"},"content":"            countdownCommand.execute(calendarList, storage);"},{"lineNumber":19,"author":{"gitId":"Zhangyilin0203"},"content":"        } catch (Exception e) {"},{"lineNumber":20,"author":{"gitId":"Zhangyilin0203"},"content":"            assertEquals(\"invalid countdown\", e.getMessage());"},{"lineNumber":21,"author":{"gitId":"Zhangyilin0203"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Zhangyilin0203"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Zhangyilin0203"},"content":"}"}],"authorContributionMap":{"Zhangyilin0203":23}},{"path":"src/test/java/seedu/duke/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"class DeleteCommandTest {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    void deleteCommand_invalidCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-lalala\");"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"            assertEquals(\"delete\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    void deleteCommand_taskNumberIsNotANumber_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-tesjk2\");"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            assertEquals(\"delete\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    void deleteCommand_eventNumberIsNotANumber_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-e12jkm\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            assertEquals(\"delete\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"    void deleteCommand_taskNumberMoreThanTasks_exceptionThrown() {"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-t1\");"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":""},{"lineNumber":59,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"    void deleteCommand_negativeTaskNumber_exceptionThrown() {"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-t-2\");"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":""},{"lineNumber":71,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"imhm"},"content":"    void deleteCommand_taskNumberEqualsZero_exceptionThrown() {"},{"lineNumber":73,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-t0\");"},{"lineNumber":74,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":75,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":76,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":78,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":79,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":80,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"imhm"},"content":""},{"lineNumber":83,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"imhm"},"content":"    void deleteCommand_eventNumberMoreThanEvents_exceptionThrown() {"},{"lineNumber":85,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-e1\");"},{"lineNumber":86,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":87,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":88,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":90,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":91,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid event action\", e.getMessage());"},{"lineNumber":92,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"imhm"},"content":""},{"lineNumber":95,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"imhm"},"content":"    void deleteCommand_negativeEventNumber_exceptionThrown() {"},{"lineNumber":97,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-e-2\");"},{"lineNumber":98,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":99,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":100,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":102,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":103,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid event action\", e.getMessage());"},{"lineNumber":104,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"imhm"},"content":""},{"lineNumber":107,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":108,"author":{"gitId":"imhm"},"content":"    void deleteCommand_eventNumberEqualsZero_exceptionThrown() {"},{"lineNumber":109,"author":{"gitId":"imhm"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"-e0\");"},{"lineNumber":110,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":111,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":112,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"imhm"},"content":"            deleteCommand.execute(calendarList, storage);"},{"lineNumber":114,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":115,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid event action\", e.getMessage());"},{"lineNumber":116,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":118}},{"path":"src/test/java/seedu/duke/command/DeleteInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"class DeleteInfoCommandTest {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    void deleteInfoCommand_missingCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        DeleteInfoCommand deleteInfoCommand \u003d new DeleteInfoCommand(\"/-\");"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"            deleteInfoCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid delete info\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    void deleteInfoCommand_eventNumberIsNotANumber_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        DeleteInfoCommand deleteInfoCommand \u003d new DeleteInfoCommand(\"/-a2\");"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            deleteInfoCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid delete info\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    void deleteInfoCommand_eventNumberIsNotValid_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        DeleteInfoCommand deleteInfoCommand \u003d new DeleteInfoCommand(\"/-999a2\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"            deleteInfoCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid event action\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":47}},{"path":"src/test/java/seedu/duke/command/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"class DoneCommandTest {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    void doneCommand_invalidCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(\"done4   urehjsd\");"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"            doneCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"            assertEquals(\"done\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    void doneCommand_taskNumberMoreThanTasks_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(\"done 544\");"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            doneCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    void doneCommand_negativeTaskNumber_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(\"done-544\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"            doneCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"    void doneCommand_taskNumberEqualsZero_exceptionThrown() {"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(\"done0\");"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"            doneCommand.execute(calendarList, storage);"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":""},{"lineNumber":59,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":59}},{"path":"src/test/java/seedu/duke/command/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"class FindCommandTest {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    void findCommand_emptyKeywordWithoutSpace_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        FindCommand findCommand \u003d new FindCommand(\"/f\");"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"            findCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"            assertEquals(\"missing keyword\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    void findCommand_emptyKeywordWithSpace_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        FindCommand findCommand \u003d new FindCommand(\"/f \");"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            findCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            assertEquals(\"missing keyword\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    void findCommand_wrongCommand_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        FindCommand findCommand \u003d new FindCommand(\"/feruidfmkj\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"            findCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            assertEquals(\"find\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":""},{"lineNumber":47,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"imhm"},"content":"    void findCommand_wrongCommandNoKeyword_exceptionThrown() {"},{"lineNumber":49,"author":{"gitId":"imhm"},"content":"        FindCommand findCommand \u003d new FindCommand(\"/feruidfmkj \");"},{"lineNumber":50,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":51,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":52,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"imhm"},"content":"            findCommand.execute(calendarList, storage);"},{"lineNumber":54,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"imhm"},"content":"            assertEquals(\"find\", e.getMessage());"},{"lineNumber":56,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"imhm"},"content":""},{"lineNumber":59,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"imhm"},"content":"    void findCommand_wrongCommandWithKeyword_exceptionThrown() {"},{"lineNumber":61,"author":{"gitId":"imhm"},"content":"        FindCommand findCommand \u003d new FindCommand(\"/feruidfmkj haha\");"},{"lineNumber":62,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":63,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":64,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"imhm"},"content":"            findCommand.execute(calendarList, storage);"},{"lineNumber":66,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":67,"author":{"gitId":"imhm"},"content":"            assertEquals(\"find\", e.getMessage());"},{"lineNumber":68,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":70}},{"path":"src/test/java/seedu/duke/command/ModuleChecherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.resources.ModuleChecker;"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"public class ModuleChecherTest {"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void moduleChekcer_invalidModuleCodeExamle_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"        ModuleChecker moduleChecker \u003d new ModuleChecker();"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"        String modeleCode \u003d \"CS11111\";"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"            moduleChecker.isModuleValid(modeleCode);"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid module code\", e.getMessage());"},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void moduleChekcer_noModuleCode_exceptionThrown() {"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"        ModuleChecker moduleChecker \u003d new ModuleChecker();"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"        String modeleCode \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"            moduleChecker.isModuleValid(modeleCode);"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid module code\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":32,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void moduleChekcer_emptyModuleCode_exceptionThrown() {"},{"lineNumber":34,"author":{"gitId":"LIU-YiFeng-1"},"content":"        ModuleChecker moduleChecker \u003d new ModuleChecker();"},{"lineNumber":35,"author":{"gitId":"LIU-YiFeng-1"},"content":"        String modeleCode \u003d \" \";"},{"lineNumber":36,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"LIU-YiFeng-1"},"content":"            moduleChecker.isModuleValid(modeleCode);"},{"lineNumber":38,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid module code\", e.getMessage());"},{"lineNumber":40,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"LIU-YiFeng-1"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":42}},{"path":"src/test/java/seedu/duke/command/PrintEventsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"class PrintEventsCommandTest {"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void printEventsCommand_wrongCommandWithoutS_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"        PrintEventsCommand printEventsCommand \u003d new PrintEventsCommand(\"print event\");"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"            printEventsCommand.execute(calendarList, null);"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid command\", e.getMessage());"},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void printEventsCommand_wrongCommandWithExtraNumber_exceptionThrown() {"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"        PrintEventsCommand printEventsCommand \u003d new PrintEventsCommand(\"print events 5\");"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"            printEventsCommand.execute(calendarList, null);"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid command\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":31}},{"path":"src/test/java/seedu/duke/command/PrintTasksCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"class PrintTasksCommandTest {"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void printTasksCommand_wrongCommandWithoutS_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"        PrintTasksCommand printTasksCommand \u003d new PrintTasksCommand(\"print task\");"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"            printTasksCommand.execute(calendarList, null);"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid command\", e.getMessage());"},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"LIU-YiFeng-1"},"content":""},{"lineNumber":21,"author":{"gitId":"LIU-YiFeng-1"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"LIU-YiFeng-1"},"content":"    void printTasksCommand_wrongCommandWithExtraNumber_exceptionThrown() {"},{"lineNumber":23,"author":{"gitId":"LIU-YiFeng-1"},"content":"        PrintTasksCommand printTasksCommand \u003d new PrintTasksCommand(\"print tasks 5\");"},{"lineNumber":24,"author":{"gitId":"LIU-YiFeng-1"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":25,"author":{"gitId":"LIU-YiFeng-1"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"LIU-YiFeng-1"},"content":"            printTasksCommand.execute(calendarList, null);"},{"lineNumber":27,"author":{"gitId":"LIU-YiFeng-1"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"LIU-YiFeng-1"},"content":"            assertEquals(\"invalid command\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"LIU-YiFeng-1"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"LIU-YiFeng-1"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"LIU-YiFeng-1"},"content":"}"}],"authorContributionMap":{"LIU-YiFeng-1":31}},{"path":"src/test/java/seedu/duke/command/PrintTimelineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Jingming517"},"content":"//@@author Jingming517"},{"lineNumber":9,"author":{"gitId":"Jingming517"},"content":"class PrintTimelineCommandTest {"},{"lineNumber":10,"author":{"gitId":"Jingming517"},"content":""},{"lineNumber":11,"author":{"gitId":"Jingming517"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Jingming517"},"content":"    void printTimelineCommand_wrongCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"Jingming517"},"content":"        PrintTimelineCommand printTimelineCommand \u003d new PrintTimelineCommand(\"print timeline\");"},{"lineNumber":14,"author":{"gitId":"Jingming517"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"Jingming517"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"Jingming517"},"content":"            printTimelineCommand.execute(calendarList, null);"},{"lineNumber":17,"author":{"gitId":"Jingming517"},"content":"        } catch (Exception e) {"},{"lineNumber":18,"author":{"gitId":"Jingming517"},"content":"            assertEquals(\"invalid command\", e.getMessage());"},{"lineNumber":19,"author":{"gitId":"Jingming517"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"Jingming517"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jingming517"},"content":"}"}],"authorContributionMap":{"-":7,"Jingming517":14}},{"path":"src/test/java/seedu/duke/command/PrioritizeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JiawenLyu"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":3,"author":{"gitId":"JiawenLyu"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"JiawenLyu"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":7,"author":{"gitId":"JiawenLyu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":9,"author":{"gitId":"JiawenLyu"},"content":"public class PrioritizeCommandTest {"},{"lineNumber":10,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":11,"author":{"gitId":"JiawenLyu"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"JiawenLyu"},"content":"    void prioritizeCommand_messageIndex_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"JiawenLyu"},"content":"        PrioritizeCommand prioritizeCommand \u003d new PrioritizeCommand(\"*t kdjah\");"},{"lineNumber":14,"author":{"gitId":"JiawenLyu"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"JiawenLyu"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"JiawenLyu"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"JiawenLyu"},"content":"            prioritizeCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"JiawenLyu"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"JiawenLyu"},"content":"            assertEquals(\"prioritize\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":23,"author":{"gitId":"JiawenLyu"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JiawenLyu"},"content":"    void prioritizeCommand_negativeIndex_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"JiawenLyu"},"content":"        PrioritizeCommand prioritizeCommand \u003d new PrioritizeCommand(\"*t -1\");"},{"lineNumber":26,"author":{"gitId":"JiawenLyu"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"JiawenLyu"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"JiawenLyu"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"JiawenLyu"},"content":"            prioritizeCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"JiawenLyu"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"JiawenLyu"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JiawenLyu"},"content":""},{"lineNumber":35,"author":{"gitId":"JiawenLyu"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"JiawenLyu"},"content":"    void prioritizeCommand_outOfBoundIndex_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"JiawenLyu"},"content":"        PrioritizeCommand prioritizeCommand \u003d new PrioritizeCommand(\"*t 1\");"},{"lineNumber":38,"author":{"gitId":"JiawenLyu"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"JiawenLyu"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"JiawenLyu"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"JiawenLyu"},"content":"            prioritizeCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"JiawenLyu"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"JiawenLyu"},"content":"            assertEquals(\"invalid task action\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"JiawenLyu"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"JiawenLyu"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"JiawenLyu"},"content":"}"}],"authorContributionMap":{"JiawenLyu":46}},{"path":"src/test/java/seedu/duke/command/ViewInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"imhm"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"imhm"},"content":""},{"lineNumber":3,"author":{"gitId":"imhm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"imhm"},"content":"import seedu.duke.Storage;"},{"lineNumber":5,"author":{"gitId":"imhm"},"content":"import seedu.duke.calendar.CalendarList;"},{"lineNumber":6,"author":{"gitId":"imhm"},"content":""},{"lineNumber":7,"author":{"gitId":"imhm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"imhm"},"content":""},{"lineNumber":9,"author":{"gitId":"imhm"},"content":"class ViewInfoCommandTest {"},{"lineNumber":10,"author":{"gitId":"imhm"},"content":""},{"lineNumber":11,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"imhm"},"content":"    void viewInfoCommand_wrongCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"imhm"},"content":"        ViewInfoCommand viewInfoCommand \u003d new ViewInfoCommand(\"/v\");"},{"lineNumber":14,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":15,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":16,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"imhm"},"content":"            viewInfoCommand.execute(calendarList, storage);"},{"lineNumber":18,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid view info\", e.getMessage());"},{"lineNumber":20,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"imhm"},"content":""},{"lineNumber":23,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"imhm"},"content":"    void viewInfoCommand_eventNumberIsNotANumber_exceptionThrown() {"},{"lineNumber":25,"author":{"gitId":"imhm"},"content":"        ViewInfoCommand viewInfoCommand \u003d new ViewInfoCommand(\"/v4redf4\");"},{"lineNumber":26,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":27,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":28,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"imhm"},"content":"            viewInfoCommand.execute(calendarList, storage);"},{"lineNumber":30,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid view info\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"imhm"},"content":""},{"lineNumber":35,"author":{"gitId":"imhm"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"imhm"},"content":"    void viewInfoCommand_eventNumberMoreThanEvents_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"imhm"},"content":"        ViewInfoCommand viewInfoCommand \u003d new ViewInfoCommand(\"/v1\");"},{"lineNumber":38,"author":{"gitId":"imhm"},"content":"        CalendarList calendarList \u003d new CalendarList();"},{"lineNumber":39,"author":{"gitId":"imhm"},"content":"        Storage storage \u003d null;"},{"lineNumber":40,"author":{"gitId":"imhm"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"imhm"},"content":"            viewInfoCommand.execute(calendarList, storage);"},{"lineNumber":42,"author":{"gitId":"imhm"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"imhm"},"content":"            assertEquals(\"invalid event action\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"imhm"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"imhm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"imhm"},"content":"}"}],"authorContributionMap":{"imhm":46}},{"path":"text-ui-test/input.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"bye"}],"authorContributionMap":{"LIU-YiFeng-1":1}},{"path":"text-ui-test/input_reference.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"LIU-YiFeng-1"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"LIU-YiFeng-1"},"content":"todo hi"},{"lineNumber":3,"author":{"gitId":"LIU-YiFeng-1"},"content":"deadline project /101020"},{"lineNumber":4,"author":{"gitId":"LIU-YiFeng-1"},"content":"tut cs1010 @nus -r 4 /101020 1230"},{"lineNumber":5,"author":{"gitId":"LIU-YiFeng-1"},"content":"lect cs1010 @nus -r 3 /131020 1340"},{"lineNumber":6,"author":{"gitId":"LIU-YiFeng-1"},"content":"lab cs1010 @nus -r2 /141020 1440"},{"lineNumber":7,"author":{"gitId":"LIU-YiFeng-1"},"content":"/a3 - hello"},{"lineNumber":8,"author":{"gitId":"LIU-YiFeng-1"},"content":"/a3 - zoom link"},{"lineNumber":9,"author":{"gitId":"LIU-YiFeng-1"},"content":"/v3"},{"lineNumber":10,"author":{"gitId":"LIU-YiFeng-1"},"content":"print events"},{"lineNumber":11,"author":{"gitId":"LIU-YiFeng-1"},"content":"print tasks"},{"lineNumber":12,"author":{"gitId":"LIU-YiFeng-1"},"content":"print timeline"},{"lineNumber":13,"author":{"gitId":"LIU-YiFeng-1"},"content":"print timeline week"},{"lineNumber":14,"author":{"gitId":"LIU-YiFeng-1"},"content":"*t1"},{"lineNumber":15,"author":{"gitId":"LIU-YiFeng-1"},"content":"*t 2"},{"lineNumber":16,"author":{"gitId":"LIU-YiFeng-1"},"content":"suggestion"},{"lineNumber":17,"author":{"gitId":"LIU-YiFeng-1"},"content":"lab cs1010 @nus -r 1 /211020 1440"},{"lineNumber":18,"author":{"gitId":"LIU-YiFeng-1"},"content":"print events"},{"lineNumber":19,"author":{"gitId":"LIU-YiFeng-1"},"content":"bye"}],"authorContributionMap":{"LIU-YiFeng-1":19}}]
