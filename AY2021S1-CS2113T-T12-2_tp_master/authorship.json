[
  {
    "path": "data/tasks.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "LAB|false|cs1010|2020-10-10|10:00|lt11"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "EXAM|false|cs1010|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "LEC|false|cs1010|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "TUT|false|cs1010|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "ACT|false|CCA|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "ACT|false|cca|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "D|false|ho|2020-10-10"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "ACT|false|CCA|2020-10-10|13:20|NUS"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "EXAM|false|cca|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "T|false|howmuchareyou paid"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "EXAM|false|who1293|2020-10-08|16:00|nus"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "EXAM|false|cs2020|2020-12-20|15:00|nus"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "LEC|false|cs2020|2020-12-20|15:00|nus"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "D|false|meeting|2020-10-10"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "ACT|false|cca|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "D|false|hi|2020-10-10"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "ACT|false|cca|2020-10-10|12:30|nus"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "D|false|hi|2020-10-10"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 13,
      "imhm": 4,
      "JiawenLyu": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jingming | [Github](https://github.com/Jingming517/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "Jingming517": 1
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DateTimeParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Extracts dates input by the user. Returns a LocalDate."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Default date format is ddMMyy for fastest date input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class DateTimeParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    //@@author Jingming517 - reused with minor modification."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Converts date of a user input from a String to LocalDate."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param date string of date to process."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return date in LocalDate format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static LocalDate inputDateProcessor(String date) throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyy\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (date.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        LocalDate ld \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String valid \u003d ld.format(formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (!valid.equals(date)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return ld;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    //@@author Jingming517 */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static LocalTime inputTimeProcessor(String time) throws Exception {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (time.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        LocalTime lt \u003d LocalTime.parse(time, formatter);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String valid \u003d lt.format(formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (!valid.equals(time)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return lt;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 11,
      "Jingming517": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private CalendarList calendarList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Initializes the application and imports the data stored locally to the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param filePath Filepath of the storage data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList \u003d new CalendarList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "            storage.readFromFile(calendarList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.printFileNotFoundErrorMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Greets the user upon start up and exit."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Command c \u003d Parser.handleUserInput(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeBorder(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "                c.execute(calendarList, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeExceptionMessage(e, calendarList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeBorder(false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 45,
      "-": 9,
      "Zhangyilin0203": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Signals an error caused by an invalid command input by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        exception \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.command.PrintEventsCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.command.PrintProgressCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.command.PrintTasksCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.command.PrintTimelineCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Determines the type of command input by the user and calls for the respective command function."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"-\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"/f\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_PRINT_EVENTS \u003d \"print events\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_PRINT_TASKS \u003d \"print tasks\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String COMMAND_PRINT_TIMELINE \u003d \"print timeline\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String COMMAND_SHOW_PROGRESS \u003d \"print progress\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static Command handleUserInput(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (userInput.equals(COMMAND_EXIT)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new ExitCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.equals(COMMAND_HELP)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new HelpCommand(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else if (userInput.equals(COMMAND_PRINT_TASKS)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            return new PrintTasksCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else if (userInput.equals(COMMAND_PRINT_EVENTS)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            return new PrintEventsCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else if (userInput.equals(COMMAND_PRINT_TIMELINE)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            return new PrintTimelineCommand(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_SHOW_PROGRESS)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return new PrintProgressCommand(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "            /** An invalid command is catered for in AddCommand */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new AddCommand(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 8,
      "imhm": 36,
      "JiawenLyu": 5,
      "Jingming517": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarItem;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Activity;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Exam;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Lab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import seedu.duke.calendar.event.Lecture;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import seedu.duke.calendar.event.Tutorial;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import seedu.duke.calendar.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents the local file used to store the task list data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int TYPE \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int TASK_IS_DONE \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int TASK_DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int TASK_DATE \u003d 3;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int EVENT_MODULE_CODE \u003d 2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int DETAILS \u003d 2;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int EVENT_IS_OVER \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int EVENT_DATE \u003d 3;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int EVENT_TIME \u003d 4;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final int EVENT_VENUE \u003d 5;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private static ArrayList\u003cCalendarItem\u003e taskArrayList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static int countFileTasks \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Constructor of the Storage class."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Initialize file f and file path, if f does not exists, creat a new file f."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param filePath the path that is the destination of the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Creates a new storage file if the file does not exists."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param output Storage file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static void createFile(File output) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            if (output.exists()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            if (!output.getParentFile().exists()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                output.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            output.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.printFileCreateErrorMessage(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Write the data from taskList into file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list that the data is stored during running the program."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void writeToFile(CalendarList calendarList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            assert filePath !\u003d null : \"filePath should not be null\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            File output \u003d new File(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            createFile(output);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            FileWriter fw \u003d new FileWriter(output);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskArrayList \u003d calendarList.getCalendarList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (CalendarItem item : taskArrayList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": "                fw.write(item.printIntoFile() + \"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.printSaveDataErrorMessage(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Read data from file and store the data into the taskList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList A taskList that store the data read from file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void readFromFile(CalendarList calendarList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        LocalTime time;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        File input \u003d new File(filePath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        createFile(input);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        CalendarItem item \u003d null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            String[] taskInFile \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            assert taskInFile[TYPE] !\u003d null : \"the type of the task should not be null\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            switch (taskInFile[TYPE]) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Todo(taskInFile[TASK_DESCRIPTION]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                date \u003d LocalDate.parse(taskInFile[TASK_DATE].trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Deadline(taskInFile[TASK_DESCRIPTION], date);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"ACT\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Activity(taskInFile[DETAILS], date, time, taskInFile[EVENT_VENUE]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"LEC\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Lecture(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"TUT\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Tutorial(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"LAB\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Lab(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            case \"EXAM\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                date \u003d LocalDate.parse(taskInFile[EVENT_DATE].trim());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                time \u003d LocalTime.parse(taskInFile[EVENT_TIME].trim());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                item \u003d new Exam(taskInFile[EVENT_MODULE_CODE], date, time, taskInFile[EVENT_VENUE]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                Ui.printInvalidFileCommandMessage();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            countFileTasks++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            if (taskInFile[TASK_IS_DONE].equals(\"true\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                if (item instanceof Task) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    ((Task) item).markAsDone();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            if (item instanceof Task) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                calendarList.addTask((Task) item);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (item instanceof Event) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                calendarList.addEvent((Event) item);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 50,
      "Zhangyilin0203": 109
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarItem;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.calendar.event.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND_EVENT \u003d \"/fe\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND_TASK \u003d \"/ft\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND_EVENT_OR_TASK \u003d \"/f\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Lists all available commands to the user with the format of the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printHelpCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"List of available commands:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"1. todo \u003ctask description\u003e\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"2. deadline \u003ctask description\u003e /ddMMyy\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"3. act \u003cactivity description\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                + \"4. exam \u003cmodule code\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"5. lect \u003cmodule code\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"6. tut \u003cmodule code\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                + \"7. lab \u003cmodule code\u003e @\u003cvenue\u003e /ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"8. done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"9. -t \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"10. -e \u003cevent number\u003e\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"11. /f \u003ckeyword of task/event\u003e\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"12. /ft \u003ckeyword of task\u003e\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"11. /fe \u003ckeyword of event\u003e\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"12. print tasks\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"13. print events\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"14. print timeline\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"15. print progress\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDateParseError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Unable to parse date\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printTotalTaskNumber(CalendarList calendarList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Your total task(s): \" + calendarList.getTotalTasks());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the input of the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @return user\u0027s input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the Duke welcome message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Printing of 25/7 logo!!!!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"Welcome to 25/7 Task Manager!\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"Enter \u0027help\u0027 for the list of commands.\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //        String[]  HELLO_MESSAGE \u003d {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "         //"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "         \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   .-----------------.     .-----------------.              //    .-------------------.\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   |______________.  |     |  _______________|             //     |______________.   |\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"                  |  |     |  |                           //                    /   /\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"                  |  |     |  |                          //                    /   /\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   .---------------  |     |  |---------------.         //                    /   /\","
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   | ________________|     |________________  |        //                    /   /\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   | |                                     |  |       //                    /   /\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   | |                                     |  |      //                    /   /\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   | ----------------.     .---------------|  |     //                    /   /\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \"   |_________________|     |__________________|    //                    /___/\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \" \","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "         //"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "         \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \" Welcome to 25/7 Task Manager!\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \" What can I do for you?\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //                \" Enter \u0027help\u0027 for the list of commands.\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "         //"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": "         \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //        };"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         //        System.out.println(String.join(\"\\n\", HELLO_MESSAGE));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "         */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the Duke exit message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the border of the chat box."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param top set to true to print the top border. Else, set to false to print the bottom border"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDukeBorder(boolean top) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (top) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"............................. DUKE CHAT BOX ^^ ............................\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"...........................................................................\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the task deleted and the number of tasks left in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param numberDelete task number of the task to be deleted."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList task list of the task to be deleted."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDeleteMessage(int numberDelete, CalendarList calendarList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Deleted:\\n\" + calendarList.getCalendarList().get(numberDelete));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Shows the user the list of items in the calendar list,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * formatted as an indexed list starting from 1."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList tasks retrieved from this task list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printTaskListView(CalendarList calendarList) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskCounts \u003d 0;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"This is your list of task(s):\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (calendarList.getCalendarList().get(i) instanceof Task) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskCounts++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                System.out.printf(\"%d.\" + calendarList.getCalendarList().get(i) + \"\\n\", taskCounts);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (taskCounts \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"Oops, there are no tasks stored in your list!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Shows the user all the events in the calendar list,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * such as lecture, lab, tutorial and events."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList tasks retrieved from this task list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printEventsListView(CalendarList calendarList) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int eventCounts \u003d 0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"This is your list of event(s):\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (calendarList.getCalendarList().get(i) instanceof Event) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                eventCounts++;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "imhm"
        },
        "content": "                System.out.printf(\"%d.\" + calendarList.getCalendarList().get(i) + \"\\n\", eventCounts);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (eventCounts \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Oops, there are no events stored in your list!\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the task (that was indicated by the user) that was marked as done ."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarNumberCompleted calendar number of the task set as done."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList            calendar list that has the task marked as done."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printCompleteTaskMessage(int calendarNumberCompleted, CalendarList calendarList) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "imhm"
        },
        "content": "                \"Good work! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        + calendarList.getCalendarList().get(calendarNumberCompleted));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the task/event that was added."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list that the task was added to."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printAddMessage(CalendarList calendarList, boolean isTask) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String calendarItem;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (isTask) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "imhm"
        },
        "content": "            calendarItem \u003d \"task\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "imhm"
        },
        "content": "            calendarItem \u003d \"event\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this \" + calendarItem + \":\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "imhm"
        },
        "content": "        /* - 1 is catered for array list\u0027s index starting from 0. */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int lastCalendarItemIndex \u003d calendarList.getCalendarList().size() - 1;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(calendarList.getCalendarList().get(lastCalendarItemIndex));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the calendar task/event/item for FindCommand."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param command        command type."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList   the calendar list to search from."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param isFound        true if the first item has been found and printed."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param itemIndex      item index in the calendar list."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param printNumbering item index printed to the user."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFindTaskMessage(String command, CalendarList calendarList, boolean isFound,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "imhm"
        },
        "content": "                                            int itemIndex, int printNumbering) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (!isFound) { // first instance when keyword is found"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "imhm"
        },
        "content": "            String itemType \u003d \"\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "imhm"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "imhm"
        },
        "content": "            case COMMAND_FIND_EVENT:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "imhm"
        },
        "content": "                itemType \u003d \"event(s)\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "imhm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "imhm"
        },
        "content": "            case COMMAND_FIND_TASK:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "imhm"
        },
        "content": "                itemType \u003d \"task(s)\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "imhm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "imhm"
        },
        "content": "            case COMMAND_FIND_EVENT_OR_TASK:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "imhm"
        },
        "content": "                itemType \u003d \"item(s)\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "imhm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "imhm"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "imhm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Here are the matching \" + itemType + \" in your calendar:\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.printf(\"%d.\" + calendarList.getCalendarList().get(itemIndex) + \"\\n\", printNumbering);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Show the user\u0027s progress on deadlines and todos."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the list of user tasks."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printProgress(CalendarList calendarList) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        int numFinished \u003d 0;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        int numTotal \u003d 0;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "imhm"
        },
        "content": "            CalendarItem item \u003d calendarList.getCalendarList().get(i);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            if (!(item instanceof Task)) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            if (((Task) item).getTaskType().equals(\"D\") || ((Task) item).getTaskType().equals(\"T\")) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                numTotal++;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (((Task) item).getIsDone()) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    numFinished++;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (numTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"You have no deadlines or todos now!\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            float progress \u003d (float) numFinished / numTotal * 100;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"You have finished \" + numFinished + \"/\" + numTotal"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", progress) + \"%) deadlines and todos.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the error message based on the invalid command input by the user."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e            type of error."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the working calendar list."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDukeExceptionMessage(DukeException e, CalendarList calendarList) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (e.getException()) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"Error: Please key in the deadline in this format: deadline \u003ctask description\u003e /ddMMyy\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"activity\":"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"Error: Please follow this format: act \u003cactivity description\u003e @\u003cvenue\u003e /ddMMyy HHmm\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case \"lecture\":"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"Error: Please key in the lecture in this format: lect \u003cmodule code\u003e @\u003cvenue\u003e /\""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \"ddMMyy HHmm\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case \"tutorial\":"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"Error: Please key in the tutorial in this format: tut \u003cmodule code\u003e @\u003cvenue\u003e /\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \"ddMMyy HHmm\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        case \"lab\":"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"Error: Please key in the lab in this format: lab \u003cmodule code\u003e @\u003cvenue\u003e /\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "                    + \"ddMMyy HHmm\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"exam\":"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            System.out.println(\"Error: Please key in the exam in this format: exam \u003cmodule code\u003e @\u003cexam venue\u003e /\""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    + \"ddMMyy HHmm\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid command\":"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    + \"Type \\\"help\\\" to learn the different commands.\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid task action\":"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Total task(s): \" + calendarList.getTotalTasks());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid event action\":"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Total event(s): \" + calendarList.getTotalEvents());"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the command in this format: done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the command in this format: -t \u003ctask number\u003e \""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    + \"OR -e \u003cevent number\u003e\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"keyword not found\":"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"There are no tasks matching this keyword. Check that you have spelt it correctly.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        case \"file not found\":"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"The file can not be found\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid done number\":"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"You can only mark a task as done. An event cannot be marked as done.\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Unknown Error.\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the exception that occurred when creating a storage file."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e exception message."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFileCreateErrorMessage(IOException e) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Cannot create file; reason: \" + e.getMessage());"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows the user the exception that occurred when saving data to storage file."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param e exception message."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printSaveDataErrorMessage(IOException e) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Unable to save data. Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows the user the exception that occurred when finding the storage file."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printFileNotFoundErrorMessage() {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows the user the exception that occurred when when there is an invalid command message."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printInvalidFileCommandMessage() {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Invalid file command input\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 64,
      "imhm": 235,
      "JiawenLyu": 39,
      "Zhangyilin0203": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/CalendarItem.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class CalendarItem {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public abstract String printIntoFile();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract LocalTime getTime();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract String getDescription();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 5,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/CalendarList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.duke.calendar.event.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a calendar list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class CalendarList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private ArrayList\u003cCalendarItem\u003e calendarList; // contains all events and tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private int totalItems \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private int totalEvents \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public CalendarList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Adds a task to the calendar list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param task to be added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalItems++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Adds an event to the calendar list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param event to be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void addEvent(Event event) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList.add(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        totalEvents++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalItems++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addItem(CalendarItem item) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        calendarList.add(item);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        totalItems++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Deletes the task from the calendar list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarNumber of the task to be deleted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void deleteTask(int calendarNumber) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList.remove(calendarNumber);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalTasks--;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalItems--;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Deletes the event from the event list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarNumber of the event to be deleted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void deleteEvent(int calendarNumber) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList.remove(calendarNumber);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalEvents--;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalItems--;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Converts the task index to the calendar index."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumber   task index"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList calendar list of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @return calendar index of the task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static int convertTaskNumberToCalendarNumber(int taskNumber, CalendarList calendarList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int itemCount \u003d 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (CalendarItem s : calendarList.getCalendarList()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (s instanceof Task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskCount++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (taskNumber \u003d\u003d taskCount) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "            itemCount++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return itemCount;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Converts the event index to the calendar index."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param eventNumber  event index"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList calendar list of the task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @return calendar index of the event"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static int convertEventNumberToCalendarNumber(int eventNumber, CalendarList calendarList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int eventCount \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int itemCount \u003d 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (CalendarItem s : calendarList.getCalendarList()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (s instanceof Event) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": "                eventCount++;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (eventNumber \u003d\u003d eventCount) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "imhm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "imhm"
        },
        "content": "            itemCount++;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return itemCount;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarNumberCompleted of the task that is completed."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void markTaskAsDone(int calendarNumberCompleted) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (calendarList.get(calendarNumberCompleted) instanceof Task) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "imhm"
        },
        "content": "            ((Task) calendarList.get(calendarNumberCompleted)).markAsDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid done number\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Swaps two tasks with index i and index j."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param i the index of the first task to be swapped."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param j the index of the second task to be swapped."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void swapTasks(int i, int j) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        if (calendarList.get(i) !\u003d null \u0026\u0026 calendarList.get(j) !\u003d null) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Collections.swap(calendarList, i, j);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the total number of items in calendarList."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public int getTotalItems() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return totalItems;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the total number of tasks in calendarList."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the total number of events in the calendarList."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public int getTotalEvents() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return totalEvents;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the whole calendarList."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ArrayList\u003cCalendarItem\u003e getCalendarList() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return calendarList;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the specific item with index i."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param i the index of the item wanted."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return the item with index i."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public CalendarItem getItem(int i) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return calendarList.get(i);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 155,
      "-": 8,
      "Zhangyilin0203": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/Activity.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Activity extends Event {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String EVENT_FILE_SYMBOL \u003d \"ACT\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A constructor of an activity object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param details the description of the activity."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param date date of the activity."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param time time of the activity."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param venue venue of the activity."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Activity(String details, LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(date, time, venue);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        eventType \u003d \"ACT\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Checks whether the activity is over."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the activity is over"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsOver() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows whether the activity is over."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the activity is over"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [A] icon to indicate task as a event task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[A][\" + getIcon() + \"] \" + details + \" \" + super.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the activity description."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[A][\" + getIcon() + \"] \" + details + \" \" + super.getDescription();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /** Returns the respective event type. */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the activity into files."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return string contains the information about the activity event."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return EVENT_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + details"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the activity time."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the activity date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 2,
      "imhm": 28,
      "JiawenLyu": 32,
      "-": 10,
      "Jingming517": 3,
      "Zhangyilin0203": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarItem;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an event in the event list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Event extends CalendarItem {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String venue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected boolean isOver;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * A constructor for events."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param date  date of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param time  time of the event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param venue venue of the event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Event(LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.venue \u003d venue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Describe the event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return a string containing the information about the event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy E\")) + \" \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"h:mma\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \" (\" + venue + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return \" (\" + venue + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getVenue() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return venue;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isOver() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return isOver;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 46,
      "JiawenLyu": 15,
      "-": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/Exam.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an Exam event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Exam extends SchoolEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String EXAM_FILE_SYMBOL \u003d \"EXAM\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Exam(String moduleCode, LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(moduleCode, date, time, venue);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Checks whether the exam is over."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the exam is over"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsOver() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows whether the exam is over."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the exam is over"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [Exam] icon to indicate task as a Exam task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[Exam][\" + getIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the type of the event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[Exam][\" + getIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves exam into files."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return string contains the information about the exam."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return EXAM_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                + moduleCode + SEPARATOR + date + SEPARATOR + time + SEPARATOR + venue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the exam date."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the exam time."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 29,
      "JiawenLyu": 27,
      "-": 15,
      "Zhangyilin0203": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/Lab.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Represents a lab event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class Lab extends SchoolEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    private static final String LAB_FILE_SYMBOL \u003d \"LAB\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * A Constructor of a lab object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param moduleCode module code of the lab"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param date       date of the lab"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param time       time of the lab"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param venue      venue of the lab"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public Lab(String moduleCode, LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(moduleCode, date, time, venue);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        eventType \u003d \"LAB\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Checks whether the lab is over."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the lab is over"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsOver() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows whether the lab is over."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the lab is over"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Describes the lab event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return a string containing the information about the lab event"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[LAB]\" + \"[\" + getIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[LAB]\" + \"[\" + getIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the lab event into files."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return string contains the information about the lab event."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return LAB_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + moduleCode"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Returns the respective object type."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Get the date of the lab."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return date of the lab"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Get the time of the lab."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return time of the lab"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JiawenLyu": 96,
      "-": 5,
      "Zhangyilin0203": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/Lecture.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Represents a lecture event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Lecture extends SchoolEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String LECTURE_FILE_SYMBOL \u003d \"LEC\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * A Constructor of a lecture object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param moduleCode module code of the lecture"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param date       date of the lecture"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param time       time of the lecture"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param venue      venue of the lecture"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Lecture(String moduleCode, LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(moduleCode, date, time, venue);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        eventType \u003d \"LEC\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        isOver \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Checks whether the lecture is over."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the tutorial is over"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsOver() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows whether the lab is over."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the lab is over"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Describes the lecture event."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @Return a string to describe the lecture event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[LEC]\" + \"[\" + getIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the description of the lecture."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[LEC]\" + \"[\" + getIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the lecture event into files."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return string contains the information about the lecture event."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return LECTURE_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + moduleCode"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Gets the date of the lecture."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return date of the lecture"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the time of the lecture."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Returns the respective object type."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 10,
      "JiawenLyu": 75,
      "-": 6,
      "Zhangyilin0203": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/SchoolEvent.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a school based event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class SchoolEvent extends Event {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String moduleCode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public SchoolEvent(String moduleCode, LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(date, time, venue);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the status of the task and the description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return moduleCode + \" \" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return moduleCode + \" \" + super.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public abstract String printIntoFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 31,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/event/Tutorial.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.calendar.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Represents a tutorial event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class Tutorial extends SchoolEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    private static final String TUTORIAL_FILE_SYMBOL \u003d \"TUT\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * A Constructor of a tutorial object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param moduleCode module code of the tutorial"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param date       date of the tutorial"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param time       time of the tutorial"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param venue      venue of the tutorial"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public Tutorial(String moduleCode, LocalDate date, LocalTime time, String venue) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(moduleCode, date, time, venue);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        eventType \u003d \"TUT\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Checks whether the tutorial is over."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the tutorial is over"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsOver() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else if (date.isEqual(LocalDate.now()) \u0026\u0026 time.isBefore(LocalTime.now())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Shows whether the tutorial is over."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return whether the tutorial is over"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return (getIsOver() ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Describes the tutorial event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @Return a string to describe the tutorial event."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return \"[TUT]\" + \"[\" + getIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Gets the description of the tutorial."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return the description of the tutorial."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[TUT]\" + \"[\" + getIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the tutorial event into files."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return string contains the information about the tutorial event."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return TUTORIAL_FILE_SYMBOL + SEPARATOR + isOver + SEPARATOR + moduleCode"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                + SEPARATOR + this.date + SEPARATOR + this.time + SEPARATOR + venue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Returns the respective type."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Gets the date of the tutorial."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return date of the tutorial."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Gets the time of the tutorial."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return time of the tutorial"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JiawenLyu": 93,
      "-": 6,
      "Zhangyilin0203": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DEADLINE_FILE_SYMBOL \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [D] icon to indicate task as a deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"[D]\" + super.toString() + \" \" + by.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Returns the respective task type. */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the deadline task into files."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return string contains the information about the deadline task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return DEADLINE_FILE_SYMBOL + SEPARATOR + isDone + SEPARATOR + description + SEPARATOR + this.by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the date of the deadline."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the time of the deadline."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 9,
      "imhm": 23,
      "-": 12,
      "Jingming517": 3,
      "Zhangyilin0203": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarItem;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a Task in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Task extends CalendarItem {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String TASK_FILE_SYMBOL \u003d \"Task\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the status of the task and the description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a tick if the task is done. Returns a cross if the task is not done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns empty string, will be overridden in different task types by"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * the corresponding task type."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return default task type is empty."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the task into files."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return string contains the information about the activity event."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return TASK_FILE_SYMBOL + SEPARATOR + isDone + SEPARATOR + description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Gets the state of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @return the state of the task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the date of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the time of the task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 10,
      "imhm": 44,
      "JiawenLyu": 8,
      "Jingming517": 4,
      "-": 12,
      "Zhangyilin0203": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/calendar/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.calendar.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String TODO_FILE_SYMBOL \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [T] icon to indicate task as a todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[T]\" + super.getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the respective task type."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Saves the todo task into files."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return string contains the information about the todo task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return TODO_FILE_SYMBOL + SEPARATOR + isDone + SEPARATOR + description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the todo task date."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Returns the todo task time."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 7,
      "imhm": 23,
      "-": 18,
      "Zhangyilin0203": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Activity;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Exam;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Lab;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Lecture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Tutorial;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Adds a task to the task list, depending on what kind of task (event, deadline, todo) it is."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String ACTIVITY \u003d \"act\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String LECTURE \u003d \"lect\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String TUTORIAL \u003d \"tut\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public static final String LAB \u003d \"lab\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String EXAM \u003d \"exam\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static final int COMMAND_TYPE \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static final int DESCRIPTION \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private String venue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private String[] dateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public AddCommand(String userInput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Creates a task in the task list after determining what type of task (event, deadline, todo)."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the updated calendar list in the storage after the new task is added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list to add the new task to."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      the storage to be saved to."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the add command input is invalid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String[] command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isTask \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "        command \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String commandType \u003d command[COMMAND_TYPE];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                isTask \u003d addTodoTask(calendarList, command[DESCRIPTION]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                isTask \u003d addDeadlineTask(calendarList, command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case ACTIVITY:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                addActivityEvent(calendarList, command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"activity\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case EXAM:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                addExamEvent(calendarList, command);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                throw new DukeException(\"exam\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        case LECTURE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                addLectureEvent(calendarList, command);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                throw new DukeException(\"lecture\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        case TUTORIAL:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                addTutorialEvent(calendarList, command);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                throw new DukeException(\"tutorial\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        case LAB:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                addLabEvent(calendarList, command);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                throw new DukeException(\"lab\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"invalid command\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printAddMessage(calendarList, isTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if (isTask) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.printTotalTaskNumber(calendarList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        storage.writeToFile(calendarList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for Lab event example: lab CS1010 com1-b1-14 /at 100820 1400."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the lab event to."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param command the attributes of the lab event."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the module code is empty."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void addLabEvent(CalendarList calendarList, String[] command) throws Exception {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "        moduleCode \u003d command[0];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        String[] temp \u003d command[0].split(\"@\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        venue \u003d temp[1].trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": "        dateTime \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "imhm"
        },
        "content": "        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "imhm"
        },
        "content": "        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (moduleCode.isEmpty()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"lab\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addEvent(new Lab(moduleCode, date, time, venue));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for Tutorial event example: tutorial CS1010 lt12 /at 090820 1000."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the tutorial event to."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param command the attributes of the tutorial event."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the module code is empty."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void addTutorialEvent(CalendarList calendarList, String[] command) throws Exception {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "imhm"
        },
        "content": "        moduleCode \u003d command[0];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        String[] temp \u003d command[0].split(\"@\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        venue \u003d temp[1].trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "imhm"
        },
        "content": "        dateTime \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "imhm"
        },
        "content": "        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "imhm"
        },
        "content": "        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (moduleCode.isEmpty()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"tutorial\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addEvent(new Tutorial(moduleCode, date, time, venue));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for Lecture task example: lecture CS2113 LT2 /at 020202 1200."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the lecture event to."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param command the attributes of the lecture event."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the module code is empty."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void addLectureEvent(CalendarList calendarList, String[] command) throws Exception {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        moduleCode \u003d command[0];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        String[] temp \u003d command[0].split(\"@\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        venue \u003d temp[1].trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        dateTime \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (moduleCode.isEmpty()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"lecture\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addEvent(new Lecture(moduleCode, date, time, venue));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for Exam task example: exam CS2113 BLK:EA LT2 /at 020202 1200."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the exam to."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param command the attributes of the exam."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the module code is empty."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void addExamEvent(CalendarList calendarList, String[] command) throws Exception {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        moduleCode \u003d command[0];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        command \u003d command[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        String[] temp \u003d command[0].split(\"@\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        venue \u003d temp[1].trim();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        dateTime \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        if (moduleCode.isEmpty()) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"exam\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addEvent(new Exam(moduleCode, date, time, venue));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for Activity event example: activity run training @sentosa / 020202 1200."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the activity to."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param command the attributes of the activity."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the description is empty."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void addActivityEvent(CalendarList calendarList, String[] command) throws Exception {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String eventDescription;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        command \u003d command[1].trim().split(\"@\", 2);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        eventDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        command \u003d command[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        venue \u003d command[0].trim();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        dateTime \u003d command[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        date \u003d DateTimeParser.inputDateProcessor(dateTime[0].trim());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        time \u003d DateTimeParser.inputTimeProcessor(dateTime[1].trim());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if (eventDescription.isEmpty()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"activity\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addEvent(new Activity(eventDescription, date, time, venue));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for Deadline task example: deadline project / 101020."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the deadline task to."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param command the attributes of deadline task."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return to show that is is a task."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the description is empty."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private boolean addDeadlineTask(CalendarList calendarList, String[] command) throws Exception {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        boolean isTask;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        command \u003d command[1].split(\"/\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        taskDescription \u003d command[0].trim();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        date \u003d DateTimeParser.inputDateProcessor(command[1].trim());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addTask(new Deadline(taskDescription, date));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            isTask \u003d true;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return isTask;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * User input for todo task example: todo project."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to add the todo task to."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return to show that is is a task."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws Exception if the description is empty."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private boolean addTodoTask(CalendarList calendarList, String s) throws Exception {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        boolean isTask;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        taskDescription \u003d s.trim();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            calendarList.addTask(new Todo(taskDescription));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            isTask \u003d true;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return isTask;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 3,
      "imhm": 92,
      "JiawenLyu": 43,
      "Zhangyilin0203": 149
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Command(String userInput) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Executes the command and throws a Duke exception when the command is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public abstract void execute(CalendarList calendarList, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns true if the command is exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Deletes the task of task number specified by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Deletes the task/event of task/event number specified by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the updated calendar list in the storage after the task is deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list to delete the task/event from."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      the storage to be saved to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the delete command input is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int numberDelete \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isTask \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (userInput.startsWith(\"-t\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "                numberDelete \u003d Integer.parseInt(userInput.replace(\"-t\", \"\").trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "                isTask \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } else if (userInput.startsWith(\"-e\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "                numberDelete \u003d Integer.parseInt(userInput.replace(\"-e\", \"\").trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (isTask) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            deleteTask(calendarList, numberDelete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            deleteEvent(calendarList, numberDelete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        storage.writeToFile(calendarList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Deletes the event of event number specified by the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to delete the event from."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param numberDelete the delete event number specified by the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException if the delete command input is invalid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void deleteEvent(CalendarList calendarList, int numberDelete) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int calendarNumber;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (numberDelete \u003e calendarList.getTotalEvents() || numberDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid event action\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarNumber \u003d CalendarList.convertEventNumberToCalendarNumber(numberDelete, calendarList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printDeleteMessage(calendarNumber, calendarList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList.deleteEvent(calendarNumber);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Deletes the task of task number specified by the user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to delete the task from."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param numberDelete the delete task number specified by the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException if the delete command input is invalid."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private void deleteTask(CalendarList calendarList, int numberDelete) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int calendarNumber;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if (numberDelete \u003e calendarList.getTotalTasks() || numberDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException(\"invalid task action\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        calendarNumber \u003d CalendarList.convertTaskNumberToCalendarNumber(numberDelete, calendarList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Ui.printDeleteMessage(calendarNumber, calendarList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        calendarList.deleteTask(calendarNumber);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Ui.printTotalTaskNumber(calendarList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 53,
      "Zhangyilin0203": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Sets the task of task number specified by the user as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the task of task number specified by the user as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the updated calendar list in the storage after the task is marked as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list that contains the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      the storage to be saved to."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the done command is invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int taskNumberCompleted;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskNumberCompleted \u003d Integer.parseInt(userInput.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (taskNumberCompleted \u003e calendarList.getTotalTasks() || taskNumberCompleted \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid task action\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int calendarNumberCompleted \u003d CalendarList.convertTaskNumberToCalendarNumber(taskNumberCompleted, calendarList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        calendarList.markTaskAsDone(calendarNumberCompleted);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printCompleteTaskMessage(calendarNumberCompleted, calendarList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.writeToFile(calendarList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Saves the current calendar list locally before terminating the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ExitCommand(String userInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Saves the current calendar list locally."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list to be saved."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      the storage to be saved to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.writeToFile(calendarList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printExitMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Sets the isExit flag to true."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.event.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Searches the task list for tasks that contains the keyword specified by the user and prints them."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND_EVENT \u003d \"/fe\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND_TASK \u003d \"/ft\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String COMMAND_FIND_EVENT_OR_TASK \u003d \"/f\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Searches the calendar list for tasks that contains the keyword specified by the user and prints them."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list to search from."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      not required."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws DukeException if the keyword is not found."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (userInput.startsWith(COMMAND_FIND_EVENT)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "            find(COMMAND_FIND_EVENT, calendarList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_FIND_TASK)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "            find(COMMAND_FIND_TASK, calendarList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(COMMAND_FIND_EVENT_OR_TASK)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "            find(COMMAND_FIND_EVENT_OR_TASK, calendarList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private void find(String command, CalendarList calendarList) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "        keyword \u003d userInput.replace(command, \"\").trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int itemCount \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case COMMAND_FIND_EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "                CalendarItem item \u003d calendarList.getCalendarList().get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (item instanceof Event) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    if (item.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        itemCount++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        Ui.printFindTaskMessage(command, calendarList, isFound, i, itemCount);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        isFound \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case COMMAND_FIND_TASK:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "                CalendarItem item \u003d calendarList.getCalendarList().get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (item instanceof Task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    if (item.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        itemCount++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        Ui.printFindTaskMessage(command, calendarList, isFound, i, itemCount);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        isFound \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case COMMAND_FIND_EVENT_OR_TASK:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "                CalendarItem item \u003d calendarList.getCalendarList().get(i);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (item.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    itemCount++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    Ui.printFindTaskMessage(command, calendarList, isFound, i, itemCount);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    isFound \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 102
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public HelpCommand(String userInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Lists all available commands to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList not required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      not required."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printHelpCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 22,
      "Zhangyilin0203": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintEventsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Lists all event type of tasks (such as lecture, lab, tutorial and events)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * in the calendar list to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class PrintEventsCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public PrintEventsCommand(String userInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Lists all event (such as lecture, lab, tutorial, exam and activities)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * in the calendar list to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list to list from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param storage      not required."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Ui.printEventsListView(calendarList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 23,
      "imhm": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintProgressCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " * Show the progress of todos and deadlines to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "public class PrintProgressCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    public PrintProgressCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * Show the progress of todos and deadlines to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param calendarList the calendar list of all tasks and events"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     * @param storage      not required"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printProgress(calendarList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 3,
      "JiawenLyu": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintTasksCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Lists all tasks in the calendar list to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class PrintTasksCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public PrintTasksCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Lists all tasks in the calendar list to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param calendarList the calendar list to list from."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param storage      not required."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printTaskListView(calendarList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 4,
      "imhm": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PrintTimelineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.duke.calendar.CalendarItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.duke.calendar.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class PrintTimelineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public PrintTimelineCommand(String userInput) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Prints out timeline of all items in calendarList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param calendarList the calendar list to print the timeline from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param storage the storage to input the data from."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void execute(CalendarList calendarList, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        CalendarList timelineList \u003d new CalendarList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        CalendarList todoList \u003d new CalendarList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "            CalendarItem temp \u003d calendarList.getItem(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            if (temp instanceof Todo) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                todoList.addItem(temp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                timelineList.addItem(temp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        CalendarList sortedList \u003d sortByDateTime(timelineList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Here is your timeline:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Timeline\\n|\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"|__ \" + sortedList.getItem(0).getDate()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" \" + sortedList.getItem(0).getDate().getDayOfWeek());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sortedList.getItem(0).getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"|            |_____ \" + \"23:59\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"|            |_____ \" + sortedList.getItem(0).getTime());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"|                     |_____ \" + sortedList.getItem(0).getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 1; i \u003c sortedList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalTime thisTime \u003d (sortedList.getItem(i).getTime() \u003d\u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    ? LocalTime.of(23, 59) : sortedList.getItem(i).getTime());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalTime prevTime \u003d (sortedList.getItem(i - 1).getTime() \u003d\u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    ? LocalTime.of(23, 59) : sortedList.getItem(i - 1).getTime());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!(sortedList.getItem(i - 1).getDate().isEqual(sortedList.getItem(i).getDate()))) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"|__ \" + sortedList.getItem(i).getDate()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \" \" + sortedList.getItem(i).getDate().getDayOfWeek());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!thisTime.equals(prevTime)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"|            |_____ \" + thisTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"|                     |_____ \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    + sortedList.getItem(i).getDescription());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"|__________________ Todo items\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"|                     |_____ \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    + index + \". \" + todoList.getItem(i).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Sort the items in a CalendarList in time sequence."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param calendarList list to be sorted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return sorted CalendarList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public CalendarList sortByDateTime(CalendarList calendarList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "        CalendarList sortingList \u003d calendarList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarList.getTotalItems(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (int j \u003d i + 1; j \u003c calendarList.getTotalItems(); j++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                if (calendarList.getItem(i).getDate() !\u003d null \u0026\u0026 calendarList.getItem(j).getDate() !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (calendarList.getItem(j).getDate().isBefore(calendarList.getItem(i).getDate())) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                        sortingList.swapTasks(i, j);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else if (calendarList.getItem(j).getDate().isEqual(calendarList.getItem(i).getDate())) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                        LocalTime timeOfi \u003d (calendarList.getItem(i).getTime() \u003d\u003d null"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                ? LocalTime.of(23, 59) : calendarList.getItem(i).getTime());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                        LocalTime timeOfj \u003d (calendarList.getItem(j).getTime() \u003d\u003d null"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                                ? LocalTime.of(23, 59) : calendarList.getItem(j).getTime());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (timeOfj.isBefore(timeOfi)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": "                            sortingList.swapTasks(i, j);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return sortingList;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 22,
      "Jingming517": 20,
      "-": 53,
      "Zhangyilin0203": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//package seedu.duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//import seedu.duke.calendar.CalendarList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//    //Three part name for a test: methodUnderTest_inputGiven_expectedOutput"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//    CalendarList calendarList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//    Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//    void handleUserInput_helpCommand_returnsAllAvailableCommands() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        String input \u003d \"help\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        String actualOutput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        String expectedOutput \u003d(\"List of available commands:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"1. todo \u003ctask description\u003e\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"2. deadline \u003ctask description\u003e /by ddMMyy\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"3. activity \u003cactivity description\u003e \u003cvenue\u003e /at ddMMyy\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"4. exam \u003cmodule code\u003e \u003cvenue\u003e /at ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"5. lecture \u003cmodule code\u003e \u003cvenue\u003e /at ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"6. tutorial \u003cmodule code\u003e \u003cvenue\u003e /at ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"7. lab \u003cmodule code\u003e \u003cvenue\u003e /at ddMMyy HHmm\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"8. done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"9. delete \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"10. find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"11. print list\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"12. print events\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"13. print timeline\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//                + \"14. print progress\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        Parser testParser \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        Command c \u003d new Command(\"help\") {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//            @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//            public void execute(CalendarList calendarList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//        //assertEquals(expectedOutput, c.execute(calendarList, storage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "//}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 44
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "deadline project / 101020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "act CCA @NUS /101020 1230"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "lect cs2113 @lt12 /081020 1600"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "tut cs2113 @com1 /081020 1600"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JiawenLyu"
        },
        "content": "lab cs1010 @com1-bi-12 /101020 1000"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "print tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "print events"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "print timeline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 6,
      "JiawenLyu": 1,
      "-": 2,
      "Jingming517": 1
    }
  }
]
