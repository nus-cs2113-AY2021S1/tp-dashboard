[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    mainClassName \u003d \"seedu.duequest.DueQuest\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    archiveBaseName \u003d \"duequest\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "acyang97": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "# DueQuest"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "acyang97": 1
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "DueQuest is an application which helps NUS students manage their schedule in the semester"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "as well as tasks related to their modules that they are taking."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "1. Down the latest version of `DueQuest` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo` "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "## Adding a Task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a new task into the schedule manager according to which day the task stated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "A Task can be a Lesson, Event or Deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Lessons are classes that are held on every week in your timetable."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Events are one-off, they only take place on a single day."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Deadline are assignments where there is a due date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding a lesson: \u0027lesson\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a new Lesson into both your Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: `lesson d/DESCRIPTION M/MODULE_CODE /on d/DAY f/FREQUENCY s/START_TIME e/END_TIME`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The `DAY` is the Day Of Week when the lesson is conducted on. Type in an integer. If the lesson is held on Thursday, type in 4. If the lesson is held on Wednesday, type in 3."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The `START_TIME` and `END_TIME` are both in `HH:MM` format. You are only allowed to type in timings such that `MM` is `00`. For example, `18:00` is allowed but not `18:01`."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples of Usage:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* If you want to add a CS2113 online lecture lesson which starts at 4pm and ends at 6pm, held on every Friday (every 7 days): `lesson online lecture CS2113 /on 5 7 16:00 18:00`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* If you want to add a CS1234 online tutorial lesson which starts at 12pm and ends at 2pm, held on every Thursday (every 7 days): `lesson online tutorial CS1234 /on 4 7 12:00 14:00`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding an event: \u0027event\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds an Event into the Schedule Manager. If the Event is associated to a Module, it will be added to the Module Manager as well."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: `event m/MODULE_CODE d/DESCRIPTION /at d/DATE_OF_EVENT t/TIME l/LOCATION_OF_EVENT`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* `TIME` is in `HH:MM` format. (For now, since the display function only displays timings for every hour, the time of event is such that `MM` needs to be `00`)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* `DATE_OF_EVENT` is in `yyyy-mm-dd` format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* For now, `LOCATION_OF_EVENT` is one word only."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples of Usage:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* `event CS2113 final exam /at 2021-05-03 14:00 LT14`."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding a deadline: \u0027deadline\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a deadline of an assignment into the Schedule Manager and Module Manager. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "##Display task on the Screen"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "You can display the task and limit the scope using moduleCode and Date/ Date Range."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "###Display today\u0027s Schedule"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Display Today\u0027s Lesson and Task( Deadline and Event)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Format: `display`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Example of Usage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* `display`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " ###Display all the task in a module"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " Display task in a specific module"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " Format: `display  MODULECODE`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " Example of Usage"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * `display CS2113`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " ###Display all the task in a module on a date"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  Display task in a specific module on a specific Date"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  Format: `display  MODULECODE /date DATE`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  * The `DATE` must be in `YYYY/MM/DD`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  Example of Usage"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  * `display CS2113 /date 2020/10/12`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  * `display ST2334 /date 2021/01/12`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "###Display all the task on a date"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Display task on a specific Date"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Format: `display /date DATE`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* The `DATE` must be in `YYYY/MM/DD`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Example of Usage"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* `display /date 2020/10/12`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* `display /date 2021/01/12`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "###Display all the task on a range of date"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Display task on a specific range of days"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Format: `display /date STARTDATE-ENDDATE`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* The `STARTDATE/ENDDATE` must be in `YYYY/MM/DD`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* Do note the Dash `-` to indicate the end date"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Example of Usage"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* `display /date 2020/10/12-2020/12/12`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* `display /date 2020/10/12-2021/01/12`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "###"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 54,
      "-": 38,
      "acyang97": 39
    }
  },
  {
    "path": "src/main/java/seedu/DueQuestException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DukeException is used to represent duke-specific exceptions that are likely"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to occur."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuestException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    DueQuestExceptionType exceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuestExceptionType getExceptionType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return exceptionType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuestException(DueQuestExceptionType exceptionType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 17
    }
  },
  {
    "path": "src/main/java/seedu/DueQuestExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DukeExceptionType represents the different kind of Duke-specific Exceptions."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public enum DueQuestExceptionType {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    WRONG_INPUT_FORMAT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_DEADLINE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_EVENT_INFO,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    WRONG_DATE_FORMAT,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    MISSING_MODULE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 8,
      "acyang97": 7
    }
  },
  {
    "path": "src/main/java/seedu/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class for Module Management."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * moduleCode e.g. ST2132."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * title e.g. Statistics."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * aUNumber e.g. 4."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * teachingStaffs: e.g. [\"Dr.Lim(lim@e.nus.sg)\",]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * listOfTasks. e.g.list of tasks in the module."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * TODO"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *  - Should we separate the events and deadlines?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String moduleCode;  // e.g. ST2132"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String title;  // e.g. Statistics"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private int aUNumber;  // e.g. 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String[] teachingStaffs \u003d new String[5];  // e.g. [\"Dr.Lim(lim@e.nus.sg)\",]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks; // list of tasks in the module. Should we seperate the events and deadlines?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor when I am adding a task that has a module code that has not exist yet."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Useful as only need the module code to generate this."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * User can then update the other properties himself later on."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param moduleCode moduleCode of the module."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic Module(String moduleCode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tthis.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor for Module Object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param moduleCode moduleCode of the module."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param listOfTasks list of tasks under the module."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic Module(String moduleCode, ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructs new Module object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * It will print error message when AU number is not in integer."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param moduleCode module\u0027s code in string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param title module\u0027s title in string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param aUNumber the AU number for this module."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param teachingStaffs the list of teaching staffs with their contact (seems unnecessary)."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param listOfTasks list of tasks under the module."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * FIXME Add error handling"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic Module(String moduleCode, String title, int aUNumber, String[] teachingStaffs, ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.aUNumber \u003d aUNumber;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.teachingStaffs \u003d teachingStaffs;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void addTask(Task task){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tlistOfTasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getListOfTasks(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\treturn listOfTasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic String getModuleCode() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn this.moduleCode;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setTitle(String title) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setaUNumber(int aUNumber) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.aUNumber \u003d aUNumber;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setTeachingStaffs(String[] teachingStaffs) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.teachingStaffs \u003d teachingStaffs;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 33,
      "haroic1997": 19,
      "acyang97": 43
    }
  },
  {
    "path": "src/main/java/seedu/ModuleManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Class to keep track of all the Module that the user is taking."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Whenever an event or task is added into the ScheduleManager, we will add that task or event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * into the ModuleManager as well according to the Module Code."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class ModuleManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    ArrayList\u003cModule\u003e listOfModules;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ModuleManager() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfModules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ModuleManager(ArrayList\u003cModule\u003e listOfModules) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfModules \u003d listOfModules;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void addModule(Module module){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        listOfModules.add(module);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Module getModule(String moduleCode) throws DueQuestException{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m:listOfModules) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (m.getModuleCode()\u003d\u003dmoduleCode){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return m;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        throw new DueQuestException(DueQuestExceptionType.MISSING_MODULE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public int getModuleIndex(String moduleCode) throws DueQuestException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int indexCount \u003d0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m:listOfModules) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (m.getModuleCode()\u003d\u003dmoduleCode){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return indexCount;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                indexCount++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        throw new DueQuestException(DueQuestExceptionType.MISSING_MODULE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     public void addTaskToModule(String moduleCode, Task task, LocalDate date) throws DueQuestException{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "         try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "             listOfModules.get(getModuleIndex(moduleCode)).addTask(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "             ScheduleManager.updateSchedule(date,task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "         } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "             throw new DueQuestException(DueQuestExceptionType.MISSING_MODULE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "         }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    // Display all the task in a module"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void display(String moduleCode) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m:listOfModules) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (m.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "               ArrayList\u003cTask\u003e tasks \u003d m.getListOfTasks();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "               Ui.print(\"The list of task in \" + moduleCode + \":\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "               Ui.printListGenericType(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "               Ui.showDivider();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "               break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    // Display all the task in a module on a specific date"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void display(String moduleCode, LocalDate date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m : listOfModules) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (m.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                for (Task t : m.getListOfTasks()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        if (((Deadline) t).getDate().isEqual(date)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                            filteredTasks.add(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.print(\"The list of task in \" + moduleCode + \" on \" + date.toString() + \" :\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.printListGenericType(filteredTasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.showDivider();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ArrayList\u003cModule\u003e getListOfModules() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return listOfModules;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to get a list of Module Codes in String form."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the list of module codes."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public List\u003cString\u003e getListOfModuleCodes() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        List\u003cString\u003e listOfModuleCodes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (Module module: listOfModules) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            listOfModuleCodes.add(module.getModuleCode());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return listOfModuleCodes;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to check if a module exist in the list of modules based on a given module code."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode moduleCode of the module in String."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return true if module exist and false if it does not."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean checkIfModuleExist(String moduleCode) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        List\u003cString\u003e listOfModuleCodes \u003d this.getListOfModuleCodes();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (String code: listOfModuleCodes) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (moduleCode.equals(code)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to add a task to the module inside the list of the module manager."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This is executed in the AddCommand method, when a task is added to both."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * the module manager and schedule manager."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param task task to be added into the module manager."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode this is the modulecode of the task. Remember, moduleCode is an attribute of task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void addTaskToModule(Task task, String moduleCode) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (int i \u003d 0; i \u003c this.listOfModules.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (this.listOfModules.get(i).getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                this.listOfModules.get(i).addTask(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        // if we reach the end of the for loop, it means that the moduleCode does not exist"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        // hence, we create this module first, add the task to it and"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        // then add it to the module manager"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        module.addTask(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfModules.add(module);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 75,
      "acyang97": 71
    }
  },
  {
    "path": "src/main/java/seedu/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *Parser Object is used for translating String user input into."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * a actionable Command object for execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Parser(){}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Convert the given string input into a subclass of Command class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * return different subclass of Command class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a subclass of Command class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if invalid input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Command parse(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int taskNum;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (words[0].toLowerCase()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return  new DoneCommand(taskNum-1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "                return new DeleteCommand(input.substring(7));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                String[] sentence \u003d input.toLowerCase().split(\" \",2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                String keywords\u003dsentence[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new FindCommand(keywords);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ToDo todo \u003d validateToDo(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new AddCommand(todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Deadline deadline \u003d validateDeadline(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Event ev \u003d validateEvent(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new AddCommand(ev);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"display\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return validateDisplayCommand(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            case \"lesson\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Lesson lesson \u003d validateLesson(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                return new AddCommand(lesson);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                throw new DueQuestException(DueQuestExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Used to validate and check for any errors in the user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * for ToDo object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param  input representing user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return Todo object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static ToDo validateToDo(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ToDo t;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            t \u003d new ToDo(filteredInput[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Used to validate and check for any errors in the user input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * for DeadLine object."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param  input representing user input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return DeadLine object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static Deadline validateDeadline(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Deadline d;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }  else if (!filteredInput[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DEADLINE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] descriptByFilter \u003d filteredInput[1].split(\"/by\",2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String byInfo \u003d parseForDate(descriptByFilter[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            d \u003d new Deadline(descriptByFilter[0],byInfo);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This is the new validateEvent method for our TP."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param input the line input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return an Event object."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - Handle exceptions."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Event validateEvent(String input) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String filteredInput \u003d input.trim().split(\" \", 2)[1]; //get rid of event word in front"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode \u003d filteredInput.split(\" \")[0];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        boolean isEventForAModule \u003d verifyModuleCode(moduleCode);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (!isEventForAModule) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleCode \u003d \"\"; // then moduleCode make it an empty string."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // Aim is just to find a way such that this event wont be added to the module."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (isEventForAModule) { //get rid of the module code if it is valid, means event belongs to a module"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            filteredInput \u003d filteredInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] splitDescriptionAndDateTimeDetails \u003d filteredInput.split(\"/at\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String description \u003d splitDescriptionAndDateTimeDetails[0].trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String dateTimeLocationDetails \u003d splitDescriptionAndDateTimeDetails[1];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] splitDateTimeLocationDetails \u003d dateTimeLocationDetails.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String dateOfEvent \u003d splitDateTimeLocationDetails[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String timeOfEvent \u003d splitDateTimeLocationDetails[1];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String locationOfEvent \u003d splitDateTimeLocationDetails[2];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return new Event(description, moduleCode, locationOfEvent, timeOfEvent, dateOfEvent);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This is the old validateEvent method."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to validate and check for any errors in the user input"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * for Event object."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param  input representing user input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return Event object."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static Event validateEvent(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Event e;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }  else if (!filteredInput[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_EVENT_INFO);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] descriptAtFilter \u003d filteredInput[1].split(\"/at\",2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String atInfo \u003d parseForDate(descriptAtFilter[1]);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            e \u003d new Event(descriptAtFilter[0], atInfo);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * How to add a lesson object through input?"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * To Validate a lesson object."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Lesson description modulecode /on 4 (digit represent dayOfWeek), frequency, time."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Example: lesson lecture CS2113 /on 5 7 16:00 18:00."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param input the line of the input"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the Lesson object."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException settle later."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Lesson validateLesson(String input) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] descriptionWithModuleCode \u003d filteredInput[1].split(\"/on\", 2);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] frequncyAndTime \u003d descriptionWithModuleCode[1].trim().split(\" \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String description \u003d descriptionWithModuleCode[0].trim();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        descriptionWithModuleCode \u003d descriptionWithModuleCode[0].trim().split(\" \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        int size \u003d descriptionWithModuleCode.length;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode \u003d descriptionWithModuleCode[size - 1];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        description \u003d description.substring(0, description.length() - moduleCode.length()).trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        int[] frequency \u003d new int[2];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        frequency[0] \u003d Integer.parseInt(frequncyAndTime[0]);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        frequency[1] \u003d Integer.parseInt(frequncyAndTime[1]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String startTime \u003d frequncyAndTime[2];"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String endTime \u003d frequncyAndTime[3];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return new Lesson(description, moduleCode, frequency, startTime, endTime);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to validate the input in Display Command"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @throws DueQuestException"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static DisplayCommand validateDisplayCommand(String input) throws DueQuestException{"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String moduleCode \u003d \"\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if(filteredInput.length\u003d\u003d1){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            return new DisplayCommand(LocalDate.now());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] descriptionWithModuleCode \u003d filteredInput[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if( !descriptionWithModuleCode[0].equals(\"\")\u0026\u0026!descriptionWithModuleCode[0].contains(\"/date\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleCode \u003d descriptionWithModuleCode[0].trim().toUpperCase();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if( descriptionWithModuleCode.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new DisplayCommand(moduleCode);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (input.contains(\"/date\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            //split the filtered input into description and date info"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] dateDetails \u003d filteredInput[1].split(\"/date\",2);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (dateDetails[1].contains(\"-\")){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                String[] dateRange \u003d dateDetails[1].trim().split(\"-\", 2);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate startDate \u003d LocalDate.parse(dateRange[0].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate endDate \u003d LocalDate.parse(dateRange[1].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new DisplayCommand(startDate,endDate);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } catch (DateTimeException e){"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    throw new DueQuestException(DueQuestExceptionType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else if (!moduleCode.equals(\"\")) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate specificDate \u003d LocalDate.parse(dateDetails[1].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new DisplayCommand(moduleCode, specificDate);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    throw new DueQuestException(DueQuestExceptionType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate specificDate \u003d LocalDate.parse(dateDetails[1].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new DisplayCommand(specificDate);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    throw new DueQuestException(DueQuestExceptionType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.WRONG_INPUT_FORMAT);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static String parseForDate(String input)  throws DueQuestException {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            LocalDate dateFormatted \u003d LocalDate.parse(input.trim(), df);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            return dateFormatted.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to check if a given moduleCode in String format is a valid Module code."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * A valid Module examples. CS2113, CS2113T, DSA4211. Basically got 3 styles."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This method is mainly for the parser."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode moduleCode in string form that you want to verify if it is valid."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return true if valid, else false."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * \t- refractor this ugly code later."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static boolean verifyModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (moduleCode.length() \u003c 6 || moduleCode.length() \u003e 7) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        char[] charArray \u003d moduleCode.toCharArray();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (charArray.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            for (int i \u003d 0; i \u003c 2; i++) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                if (!(ch \u003e\u003d \u0027A\u0027 \u0026\u0026 ch \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            for (int i \u003d 2; i \u003c 6; i++) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                if (!(ch \u003e\u003d \u00270\u0027 \u0026\u0026 ch \u003c\u003d \u00279\u0027)) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (charArray.length \u003d\u003d 7) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // case of if it is like CS2113T"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (charArray[2] \u003e\u003d \u00270\u0027 \u0026\u0026 charArray[2] \u003c\u003d \u00279\u0027) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 0; i \u003c 2; i++) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u0027A\u0027 \u0026\u0026 ch \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 2; i \u003c 6; i++) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u00270\u0027 \u0026\u0026 ch \u003c\u003d \u00279\u0027)) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                if (!(charArray[6] \u003e\u003d \u0027A\u0027 \u0026\u0026 charArray[6] \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } else { // case if DSA 4211"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u0027A\u0027 \u0026\u0026 ch \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 3; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u00270\u0027 \u0026\u0026 ch \u003c\u003d \u00279\u0027)) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 169,
      "teachyourselfcoding": 1,
      "acyang97": 149
    }
  },
  {
    "path": "src/main/java/seedu/ScheduleManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * READ THIS FIRST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Class for ScheduleManager."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Contains the schedule for the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * We will assume that the ScheduleManager is built for AY 2020/2021 Semester 2."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class ScheduleManager {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic static HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e semesterSchedule \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor for ScheduleManager if a ScheduleManager already exist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param semesterSchedule"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic ScheduleManager(HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e semesterSchedule) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule \u003d semesterSchedule;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor for ScheduleManager if a ScheduleManager has yet to be created."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Main role is to populate the HashMap with the dates in the year as the \u0027key\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * and an empty list of task as the value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic ScheduleManager() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t// Now I will need to populate this hashmap because it is currently empty with no dates."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 10, 12); date.isBefore(LocalDate.of(2021, 6, 1)); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tthis.semesterSchedule.put(date, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Add lessons."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param lesson lesson to be added to the schedule manager."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void addLesson(Lesson lesson) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tDayOfWeek day \u003d lesson.getLessonDayInDayOfWeek();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (Map.Entry\u003cLocalDate, ArrayList\u003cTask\u003e\u003e entry : this.semesterSchedule.entrySet()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tLocalDate key \u003d entry.getKey();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (key.getDayOfWeek().equals(day)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tthis.semesterSchedule.get(key).add(lesson);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * Add lessons on specific days"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * @param lesson lesson to be added to the schedule manager."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void addLessonOnSpecificDays(Lesson lesson) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tsemesterSchedule.get(lesson.getDate()).add(lesson);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Deadline only got 1 day, so just filter for the"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * date where I need to add the deadline,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param deadline add deadline inside the list of tasks of the schedule manager."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void addDeadline(Deadline deadline) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Event only got 1 date, so just filter for the"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * date where I need to add the event."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param event add event inside the list of tasks of the schedule manager."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void addEvent(Event event) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalDate date \u003d LocalDate.parse(event.getDateOfEvent());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule.get(date).add(event);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void displayTodaySchedule(){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tLocalDate todayDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tUi.print( \"Today\u0027s Schedule:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tArrayList\u003cTask\u003e taskList \u003d semesterSchedule.get(todayDate);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tArrayList\u003cTask\u003e nonLessonList\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tString[] timing \u003d {\"08:00\",\"09:00\",\"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\",\"17:00\",\"18:00\",\"19:00\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t,\"20:00\",\"21:00\",\"22:00\",\"23:00\"};"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (Task t: taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tif (t instanceof Lesson){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tString startTime \u003d ((Lesson) t).getStartTime();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tString endTime \u003d ((Lesson) t).getEndTime();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tboolean hasStart\u003dfalse;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tboolean hasEnd \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tfor(int i \u003d 0; i\u003c timing.length;i++){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tif (timing[i].equals(startTime) ){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\thasStart \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i]+ \" \" + t.getDescription() + \", \" + t.getModuleCode();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t} else if(timing[i].equals(endTime)){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\thasEnd \u003d false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\thasStart \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t}else if(hasStart \u0026\u0026 !hasEnd) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \", \" + t.getModuleCode();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tnonLessonList.add(t);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (String i: timing){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tUi.print(i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tUi.print(\"\\n Today\u0027s task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tUi.printListGenericType(nonLessonList);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * Displays tasks on the specific days."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * @param specificDate the specific day"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * FIXME"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t *  - add code and output based on UG"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t *  - handle the task with frequency!"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void display(LocalDate specificDate){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tArrayList\u003cTask\u003e list \u003d  semesterSchedule.get(specificDate);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tif (list.size()!\u003d0){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tUi.print(\"List of task on \" + specificDate.toString() + \" :\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tUi.printListGenericType(list);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tUi.showDivider();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tUi.print(\"No Task on \" + Ui.convertDateToString(specificDate));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\t/*"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Displays tasks on the days within the range."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * The error message will be printed if startDay and endDay gives wrong range (e.g. endDay \u003c startDay)."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * @param startDate the start of the range."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * @param endDate the end of the range."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e upstream/master"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * FIXME"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t *  - add code and output based on UG"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t *  - handle the task with frequency!"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void editTask(String description, LocalDate date, String property, String newProperty){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(Task task :semesterSchedule.get(date)){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tswitch(property) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"description\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setDescription(newProperty);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"tasktype\":"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setTasktype(newProperty);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"modulecode\":"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t//Fall through"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"module code\":"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setModulecode(newProperty);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"time\":"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setTime(newProperty);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tdefault:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Invalid type\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void editTask(String description, LocalDate date, String property, int [] newFrequency){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(Task task : semesterSchedule.get(date)){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif(task.getDescription().equals(description)){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\ttask.setFrequency(newFrequency);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void editTask(String description, LocalDate date, String property, LocalDate newDate){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(Task task : semesterSchedule.get(date)){"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif(task.getDescription().equals(description)){"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\ttask.setDate(newDate);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void deleteTask(String description, LocalDate date){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tsemesterSchedule.get(date).removeIf(task -\u003e task.getDescription().equals(description));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\t\telse{"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tSystem.out.println(\"No task on this date\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void deleteTask(String description){"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 10, 12); date.isBefore(LocalDate.of(2021, 6, 1)); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tsemesterSchedule.get(date).removeIf(task -\u003e task.getDescription().equals(description));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void display(LocalDate startDate, LocalDate endDate){"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tUi.print(\"List of task from \" + startDate.toString() + \" to \" + endDate.toString());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 10, 12); date.isBefore(LocalDate.of(2021, 6, 1)); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tif (date.isAfter(startDate) \u0026\u0026 date.isBefore(endDate)){"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tUi.print(date.format(DateTimeFormatter.ofPattern(\"MMM d\"))"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\t\t+ \" schedule :\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tUi.printListGenericType(semesterSchedule.get(date));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Displays today\u0027s tasks."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * FIXME"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t *  - add code and output based on UG"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t *  - handle the task with frequency!"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void display() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * update the schedule upon adding new task through ModuleManager"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic static void updateSchedule(LocalDate date, Task task){"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tsemesterSchedule.get(date).add(task);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 92,
      "-": 65,
      "acyang97": 90
    }
  },
  {
    "path": "src/main/java/seedu/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Storage class is used for creating and saving file on the local hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Also used for loading saved data on startup."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * COMMENTED OUT FIRST, settle storage later"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Attempt to load saved information on the hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a list of Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws FileNotFoundException If there is no saved file in the specified location."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *   - ADD CASE FOR \u0027L\u0027, lesson."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int dashPosition;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int atPosition;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String taskIdentifiers;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String timedateInfo;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String contents \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            dashPosition \u003d contents.indexOf(\"-\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            taskIdentifiers \u003d contents.substring(0, dashPosition);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] words \u003d contents.split(\"|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (words[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                atPosition \u003d contents.indexOf(\"@\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description \u003d contents.substring(dashPosition + 1,atPosition);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                timedateInfo \u003d contents.substring(atPosition + 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if (taskIdentifiers.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Deadline(description.trim(),timedateInfo.trim(),true));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Deadline(description.trim(),timedateInfo.trim()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                atPosition \u003d contents.indexOf(\"@\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description \u003d contents.substring(dashPosition + 1, atPosition);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                timedateInfo \u003d contents.substring(atPosition + 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if (taskIdentifiers.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Event(description.trim(), timedateInfo.trim(),true));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Deadline(description.trim(), timedateInfo.trim()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description \u003d contents.substring(dashPosition + 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if (taskIdentifiers.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new ToDo(description.trim(),true));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new ToDo(description.trim()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            default: break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Creates a new \"duke.txt\" in the data directory for new users."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void createSavedFile() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"So we have create a duke.txt under the data directory\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        boolean isCreated \u003d f.mkdir();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        File g \u003d new File(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (isCreated) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                g.createNewFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                System.out.println(\"Sorry Couldnt create save file!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Sorry Couldn’t create save file\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Used to update or refresh the duke.txt contents for scenarios."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * where deletion or change in existing Information occurs."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param t newly updated list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException if the saved file is not found in its expected location."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void updateFileContents(ArrayList\u003cTask\u003e t) throws IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks \u003d t;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw0 \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw0.write(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (tasks.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType() + \"|\" + tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \" - \" + tasks.get(i).getDescription() + \" @ \" + ((Event) tasks.get(i)).getLocation()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else if (tasks.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType() + \"|\" + tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \" - \" + tasks.get(i).getDescription() + \" @ \" + ((Deadline) tasks.get(i)).getTimingInfo()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType() + \"|\" + tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \" - \" + tasks.get(i).getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to append to the duke.txt contents for scenarios"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * where adding of new data on top of existing data occurs."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param t newly updated list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException if the saved file is not found in its expected location."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void appendToFile(Task t) throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (t instanceof Event) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType() + \"|\" + t.getStatusIcon()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \" - \" + t.getDescription() + \" @ \" + ((Event) t).getLocation()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType() + \"|\" + t.getStatusIcon()"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \" - \" + t.getDescription() + \" @ \" + ((Deadline) t).getTimingInfo()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType() + \"|\" + t.getStatusIcon()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \" - \" + t.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 141,
      "acyang97": 17
    }
  },
  {
    "path": "src/main/java/seedu/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Represents the Class for functions related to the CLI User interface"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * and used to print out exception messages for troubleshooting purpose."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Ui() { in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *print out the on startup message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        logo +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String welcomeMessage \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"Whats up people! Duke is here to save the day\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"So, what can I do for you?\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.print(welcomeMessage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * print out the exit message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String byeMessage \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"Aye captain. This is Duke Signing out!\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.print(byeMessage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *print out a divider line for better readability of CLI."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void showDivider(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"_____________________________________________\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Scan and Read in user input on the CLI."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return String command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String command \u003d in.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints the Exception information based on the parameters."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param e DukeExceptionType"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void showError(DueQuestExceptionType e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        switch (e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_DEADLINE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Deadline!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_EVENT_INFO:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Event Information!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case WRONG_INPUT_FORMAT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Wrong Input format\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Description!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case WRONG_DATE_FORMAT:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Or Wrong Date Format! Enter in DD-MM-YYYY:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"No proper Commands Detected, retype again!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void print(String text){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static \u003cT\u003e void printListGenericType(ArrayList\u003cT\u003e lists) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (lists!\u003dnull) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for (T i: lists) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                print(i.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(\"\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * convert LocalDate object into String line that is easily readable"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static String convertDateToString(LocalDate date){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String stringDate \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 113,
      "acyang97": 7
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a command for adding different subclass of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class AddCommand  extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public AddCommand(Task task){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks.getList().add(tasks.getSize(), task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.getIndex(tasks.getSize() - 1).getTaskType() + \"[\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.getIndex(tasks.getSize() - 1).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.getIndex(tasks.getSize() - 1).getFullDescription()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \"\\nNow you have \"+ tasks.getSize() + \" tasks in the list.\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            storage.appendToFile(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to add the lesson into the schedule manager."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Exceptions settle later, check if method works first."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Main function is to add the lesson into the semesterSchedule of the ScheduleManager."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Note that everthing in the Lesson Object if it is a Lesson object is still in String form."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Convert it to LocalTime if necessary."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param scheduleManager scheduleManager that handles tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleManager moduleManager that handles modules where we need to add task into module."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param ui ui that helps with ui stuff."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - make this work for adding deadlines and events too."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add the tasks to the ModuleManager as well."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (task.getClass() \u003d\u003d Lesson.class) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            scheduleManager.addLesson((Lesson) task); //add the lesson to the schedule manager"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(\"Got it, added lesson to the schedule manager!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String moduleCode \u003d task.getModuleCode();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // if module code exist in the module manager, simply add the task into the module manager"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addTaskToModule(task, task.getModuleCode());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (task.getClass() \u003d\u003d Event.class) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            scheduleManager.addEvent((Event) task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // now check if the module code exist or is an empty string"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // look at the validateEvent method in Parser to understand that if the module code is invalid,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // meaning the user didnt key in a module code for his event, the moduleCode will be an empty string."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (!task.getModuleCode().equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                moduleManager.addTaskToModule(task, task.getModuleCode());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 39,
      "acyang97": 39
    }
  },
  {
    "path": "src/main/java/seedu/command/AddModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Represents a command for adding module."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class AddModuleCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 6,
      "acyang97": 20
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * the base for all other Command classes to inherit from."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Use this method to execute the commands first for our team project."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public abstract void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 16,
      "acyang97": 10
    }
  },
  {
    "path": "src/main/java/seedu/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DeleteCommand is used to delete a task in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    LocalDate date \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public DeleteCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public DeleteCommand(String description, LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (taskList.getSize() !\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            taskList.deleteItemFromList(taskNum, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"The list is empty! Nothing to delete!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        if(this.date \u003d\u003d null){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            scheduleManager.deleteTask(description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            scheduleManager.deleteTask(description,date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 24,
      "teachyourselfcoding": 20,
      "acyang97": 8
    }
  },
  {
    "path": "src/main/java/seedu/command/DisplayCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DisplayCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    LocalDate startDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    LocalDate endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    LocalDate specificDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    String moduleCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    String displayOptions; // used to determine what kind of information to display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(String moduleCode){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.moduleCode \u003d moduleCode.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"module\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(String moduleCode, LocalDate specificDate){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.specificDate \u003d specificDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"module with date\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(LocalDate specificDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.specificDate \u003d specificDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"date\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"date with range\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        switch (displayOptions) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"module\" : {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleManager.display(moduleCode);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"module with date\" : {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleManager.display(moduleCode,specificDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"date\" : {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (specificDate.equals(LocalDate.now())){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                scheduleManager.displayTodaySchedule();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                scheduleManager.display(specificDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"date with range\" : {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            scheduleManager.display(startDate,endDate);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 82
    }
  },
  {
    "path": "src/main/java/seedu/command/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DoneCommand is used when an task gets done and the user want to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * indicate the done status on the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DoneCommand(int taskNum){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        taskList.getIndex(taskNum).maskAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + taskList.getIndex(taskNum).getStatusIcon()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + taskList.getIndex(taskNum).getFullDescription()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            storage.updateFileContents(taskList.getList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Problem with saving file!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 37,
      "acyang97": 10
    }
  },
  {
    "path": "src/main/java/seedu/command/EditModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Commands to execute edit the module\u0027s information. This may be implemented by setter functions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * TODO add code"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EditModuleCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 9,
      "acyang97": 18
    }
  },
  {
    "path": "src/main/java/seedu/command/EditTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Commands to execute edit the task\u0027s information. This may be implemented by setter functions."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * TODO add code"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EditTaskCommand extends Command{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    LocalDate date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    LocalDate newDate \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    String newProperty;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    int[] newFrequency;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditTaskCommand(String description, String type, LocalDate date, String newProperty){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newProperty \u003d newProperty;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditTaskCommand(String description, String type, LocalDate date, LocalDate newDate){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date\u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newDate \u003d newDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditTaskCommand(String description, String type, LocalDate date, int[] newFrequency){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date\u003d date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newFrequency \u003d newFrequency;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"type\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"description\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"modulecode\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"module code\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"time\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                scheduleManager.editTask(description,date, type, newProperty);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"frequency\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                scheduleManager.editTask(description,date, type, newFrequency);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                scheduleManager.editTask(description,date, type, newDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Invalid type\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 9,
      "-": 51,
      "acyang97": 17
    }
  },
  {
    "path": "src/main/java/seedu/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for exiting the application"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 19,
      "acyang97": 6
    }
  },
  {
    "path": "src/main/java/seedu/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for searching tasks that match the given keywords."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public FindCommand(String keywords){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ArrayList\u003cTask\u003e list\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Task t: taskList.getList()){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (t.getDescription().contains(keywords)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int position\u003d1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Here are the matching Tasks in your list:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Task i: list) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(position + \".\" + \"[\" + i.getTaskType() + \"]\" + \"[\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + i.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + i.getFullDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            position++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 41,
      "acyang97": 6
    }
  },
  {
    "path": "src/main/java/seedu/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for listing all the tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    taskList.listContents();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 20,
      "acyang97": 6
    }
  },
  {
    "path": "src/main/java/seedu/duequest/DueQuest.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DueQuest class is the main class for running the DueQuest application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private ScheduleManager scheduleManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private ModuleManager moduleManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    static final String FILE_PATH \u003d \"data/duequest.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * for testing out purposes before saving stuff into a txt file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.ui.welcomeMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.scheduleManager \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//    public DueQuest(String FILE_PATH) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        ui.welcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//            tasks.listContents();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//            System.out.println(\"DueQuest couldn\u0027t find duequest.txt to load saved data from\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//            storage.createSavedFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Used to keep the Duke programme running on repeat until a Exit command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * is detected whereby the program will then exit."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * THE RUN METHOD FOR THE IP!!!"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                c.execute(scheduleManager,moduleManager,ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * The run method to execute the commands FOR OUR TP!!!!"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void runn() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        preloadData();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        predeleteData();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        testDisplayFunction();// used to test display function since add functionality not yet done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                c.execute(scheduleManager, moduleManager, ui);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * The main function to run the whole Duke app."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void main(String[] args) throws DueQuestException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        DueQuest dq \u003d new DueQuest();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        dq.runn();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //new DueQuest(FILE_PATH).run();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * FOR TESTING PURPOSE ONLY."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * use this to preload a set of data since our storage function not available yet."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * you can use this for Edit, Delete, add..."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public void predeleteData(){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        scheduleManager.deleteTask(\"v1.0\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void preloadData(){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        moduleManager.addModule(new seedu.Module(\"CS2113\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        moduleManager.addModule(new seedu.Module(\"EE2026\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        moduleManager.addModule(new Module(\"CS1231\"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleManager.addTaskToModule(\"CS2113\",new Deadline(\"v1.0\",\"2021-04-12\"),LocalDate.parse(\"2021-04-12\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleManager.addTaskToModule(\"CS2113\",new Deadline(\"v2.0\",\"2021-04-07\"),LocalDate.parse(\"2021-04-07\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleManager.addTaskToModule(\"CS2113\",new Deadline(\"v2.1\",\"2021-04-06\"),LocalDate.parse(\"2021-04-06\"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleManager.addTaskToModule(\"CS2113\",new Deadline(\"V1.0 Draft\",LocalDate.now().toString()),LocalDate.now());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            ui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        scheduleManager.addLessonOnSpecificDays(new Lesson(\"lecture\",\"CS2113\",LocalDate.now(),\"10:00\",\"12:00\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        scheduleManager.addLessonOnSpecificDays(new Lesson(\"Tutorial\",\"CS2113\",LocalDate.now(),\"13:00\",\"15:00\"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        scheduleManager.addLessonOnSpecificDays(new Lesson(\"Lab\",\"CS2113\",LocalDate.now(),\"16:00\",\"18:00\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * FOR TESTING PURPOSE ONLY"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to test that all the 4 display case works."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void testDisplayFunction(){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        moduleManager.display(\"CS2113\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        moduleManager.display(\"CS2113\", LocalDate.parse(\"2021-04-07\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        scheduleManager.display(LocalDate.parse(\"2021-04-07\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        scheduleManager.display(LocalDate.parse(\"2021-01-01\"),LocalDate.parse(\"2021-06-01\"));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        scheduleManager.displayTodaySchedule();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 102,
      "teachyourselfcoding": 5,
      "-": 6,
      "acyang97": 30
    }
  },
  {
    "path": "src/main/java/seedu/duequest/DueQuest1.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Class just for codetesting purposes for our ScheduleManager"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Handle the UI, Storage later. Try to make the other commands work first."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuest1 {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    ScheduleManager scheduleManager \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    ModuleManager moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                c.execute(scheduleManager, moduleManager, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                ui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * The main function to run the whole DueQuest app"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void main(String[] args) throws DueQuestException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(Parser.validateLesson(sc.next()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 41
    }
  },
  {
    "path": "src/main/java/seedu/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *Inherited from Task object, Deadline class has additional attributes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to store deadline timing."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Deadline(String description, String by,Boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTimingInfo() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return convertStringToDate(by);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public LocalDate convertStringToDate(String stringDate) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(stringDate.trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 49,
      "acyang97": 3
    }
  },
  {
    "path": "src/main/java/seedu/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *Inherited from Task object, Event class has additional attributes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to store logistical information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * FIXME"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *  - What is the members attribute for?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String timeOfEvent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String dateOfEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    //TODO add these extra attributes in constructors"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String members;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Event(String description, String moduleCode, String at, String timeOfEvent, String dateOfEvent) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(description, moduleCode);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.dateOfEvent \u003d dateOfEvent;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * toString method for the Event object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a string representing an Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * FIXME"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - may want to change how it is being representd."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return super.moduleCode + super.description + \" (\" + this.timeOfEvent + \" \" + this.dateOfEvent + \" at \" + this.at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getTimeOfEvent() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return timeOfEvent;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getDateOfEvent() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return dateOfEvent;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 2,
      "haroic1997": 16,
      "acyang97": 39
    }
  },
  {
    "path": "src/main/java/seedu/task/Lesson.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Lesson extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String startTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String endTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private LocalDate specificDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param description to say if it is a lecture or tutorial or lab etc"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode module code"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param frequency in an array, tells us the day of the week of the event and frequency"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param startTime the start time of the lesson"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param endTime the end time of the lesson"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Lesson(String description, String moduleCode, int[] frequency, String startTime, String endTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(description, moduleCode, frequency);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super.taskType \u003d \"L\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Lesson (String description, String moduleCode, LocalDate specificDate, String startTime, String endTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description,moduleCode);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"L\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.startTime\u003dstartTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.specificDate \u003d specificDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to get the day of the week where which the lesson will be held on."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return this will return me the day in DayOfWeek. eg, return MONDAY, TUESDAY, WEDNESDAY, etc."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DayOfWeek getLessonDayInDayOfWeek() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return DayOfWeek.of(this.frequency[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Note: frequency is in [dayOfWeek as in int, frequency]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Lets assume its weekly first, because if its biweekly, abit more"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * troublesome in terms of adding the lesson into the ShceduleManager."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Hence, frequncy will always be [an integer indicating day of week, 7] for now (where 7 represents 7 days."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getLessonDay() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return DayOfWeek.of(this.frequency[0]).toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - might want to change the representation of the toString method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return string representation of the Lesson Object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        return description + \" \" + moduleCode + \" \" + getLessonDay() + \" \" + startTime + \" \" + endTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" \" + moduleCode + \" \" + startTime + \" \" + endTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getStartTime(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getEndTime(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return specificDate;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 23,
      "acyang97": 53
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class that needs to be accessed by Schedule object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Task is a parent class for two child classes, Lesson and Deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Lesson helps to keep track of tasks that have a frequency (weekly)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Deadline acts like normal Deadline like in IP."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String taskType; // can be E or D for our project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String moduleCode; // Module this task belongs to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    // I think moduleCode should be a string first. This is just to search for the Module in the ModuleManager."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected int[] frequency; // frequency of the event. Weekly? Daily?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String time; //Time of the event in HH:MM format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String notes; // TODO add it in the constructor. ***Low priority, settle later."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    //FIXME add new event and deadlines to this list whenever created"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Creates new Task object, without frequency."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Error message will be printed if the module with the moduleCode doesn\u0027t exist."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param description the task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param moduleCode the code of the module this task relates to.* FIXME"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add searching module based on moduleCode(String). Need to search through the ModuleManager."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add error handling."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public Task(String description, String moduleCode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Creates new Task object, with frequency."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Error message will be printed if the module with the moduleCode doesn\u0027t exist or the frequency is invalid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param description the task description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode the code of the module this task relates to."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param frequency the frequency of the task (int[2]), e.g. the event happens on Thursday every 2 week"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *                  \u003d [4, 2] \u003d [dayOfWeek, interval]. *** Lets assume that the interval is every week only for now"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *                  \u003d [4, 2] \u003d [dayOfWeek, interval]."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * FIXME"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add searching module based on moduleCode(String)."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add error handling."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String description, String moduleCode, int[] frequency) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.moduleCode;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void maskAsDone() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setFrequency(int[] frequency) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setNotes(String notes) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setModulecode(String newModulecode){ this.moduleCode \u003d newModulecode; }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDate(LocalDate newDate){this.date \u003d newDate; }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTime( String newTime) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        int time \u003d Integer.parseInt(newTime);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        if(time \u003e 2359| (time/100)\u003e23|(time%100)\u003e59){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Invalid Time format\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            this.time \u003d newTime;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTasktype(String newTasktype){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        if(newTasktype.equals(\"D\") | newTasktype.equals(\"E\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            this.taskType \u003d newTasktype;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Invalid Task type\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 28,
      "haroic1997": 44,
      "-": 24,
      "acyang97": 33
    }
  },
  {
    "path": "src/main/java/seedu/task/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/****************** READ THIS FIRST"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * This class is no longer useful since the ScheduleManager is handling all the tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * We will need to implement the delete, edit and other commands stuff that are executed here"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * into the ScheduleManager instead."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Tasklist class contain all the relevant function such as Adding, deleting."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * and storing the list of task all in one object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private  ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Task getIndex(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Print out all the task in a list form."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void listContents() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"No list Detected, add some text!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for (int j \u003d 0; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                int position \u003d j + 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                System.out.println(position + \".\" + \"[\" + tasks.get(j).getTaskType() + \"]\" + \"[\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + tasks.get(j).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + tasks.get(j).getFullDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Based on the given index, delete corresponding item in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param index position for deletion of the task in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void deleteItemFromList(int index, Storage storage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\n\" + tasks.get(index).getTaskType()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(index).getStatusIcon()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(index).getFullDescription()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\nNow you have \" + (tasks.size() - 1)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \" tasks in the list.\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            storage.updateFileContents(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Problem with saving file!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 65,
      "acyang97": 16
    }
  },
  {
    "path": "src/main/java/seedu/task/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Inherited from Task object, Todo class represents a task object."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 24
    }
  },
  {
    "path": "src/test/java/seedu/duequest/DueQuestTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "class DueQuestTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "acyang97": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "#dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 1,
      "-": 22
    }
  }
]
