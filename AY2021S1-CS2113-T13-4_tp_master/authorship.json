[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    mainClassName \u003d \"seedu.duequest.DueQuest\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    archiveBaseName \u003d \"duequest\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "//create a single Jar with all dependencies"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "t170815518"
        },
        "content": "task fatJar(type: Jar) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        attributes \u0027Implementation-Title\u0027: \u0027DueQuest\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                \u0027Implementation-Version\u0027: \u0027v1.0\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                \u0027Main-Class\u0027: \u0027seedu.duequest.DueQuest\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    baseName \u003d project.name + \u0027-all\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    with jar"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "t170815518"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 33,
      "haroic1997": 1,
      "-": 44,
      "acyang97": 2
    }
  },
  {
    "path": "data/CS2113.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "module c/CS2113 a/4 s/Dr.Lim s/ChengChen"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": "lesson online lecture CS2113 /on 5 16:00 18:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "event CS2113 final exam /at 2021-05-03 14:00 16:00 LT14"
      }
    ],
    "authorContributionMap": {
      "acyang97": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "# DueQuest"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "acyang97": 1
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": "**DueQuest** is an application which helps NUS students manage their schedule in the semester"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "as well as tasks related to their modules that they are taking."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": "1. Ensure that you have Java 11 or above installed on the machine."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "1. Down the latest version of `DueQuest` from [here](http://link.to/duke), and put the jar file into a directory."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": "1. Type `java -jar DueQuest.jar` to start the app "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": "---"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Storage "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The storage directory is specified when launching `java -jar DueQuest.jar SPECIFIED_DIR`. By default, the directory is `data`. In the storage directory, each module will have a txt file that contains related information (e.g. information and tasks), and `additional.txt` is for commands such as delete certain tasks on certain dates. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The information will be imported and exported automatically by the app. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Add a Module: `module`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Format: `module c/MODULECODE  [t/TITLE] [a/AU_NUM] [s/TEACHING_STAFF]`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ `MODULECODE` must be given, and it should be unique. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "  + There are 3 types of valid module codes. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    * 6 characters long. The first 2 characters are alphabets. The last 4 characters are digits. Example: CS2113"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    * 7 characters long. The first 3 characters are alphabets. The last 4 characters are digits. Example: DSA4211"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    * 7 characters long. The first 2 characters are alphabets. The next 4 characters are digits. The last character is an alphabet. The  Example: CS2113T"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ `AU_NUM` must be non-negative integer. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example Usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": "`module c/ST2113 a/4 s/Dr.Lim s/ChengChen`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": "module c/ST2113 a/4 s/Dr.Lim s/ChengChen"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Successfully added to Module Manager! Have fun suffering from "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Course: ST2113"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Title: null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "AU: 4"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Teaching Staffs: [Dr.Lim, ChengChen]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Here are your modules you are currently taking! "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[ST2113]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "t170815518"
        },
        "content": "module c/ST2113"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The module with the same code already exists."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "A Task can be a Lesson, Event or Deadline."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Lessons are classes that are held **on every week** in your timetable."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Events are one-off, they only take place on a single day."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Deadline are assignments where there is a due date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Adding a lesson: `lesson`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a new Lesson into both your Schedule Manager and Module Manager."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Lesson will only be added into weeks when there are lessons conducted according to the NUS curriculum."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "This means that the lesson will not be added  into dates during Reading Weeks, Vacation, and Examination weeks. "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": "`lesson TITILE COURSECODE /on DAYOFWEEK  STARTTIME ENDTIME`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "t170815518"
        },
        "content": "* The `DAYOFWEEK` is the Day Of Week when the lesson is conducted on, starting from Monday (e.g. 1). Type is an integer. If the lesson is held on Thursday, type in 4. If the lesson is held on Wednesday, type in 3."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The `START_TIME` and `END_TIME` are both in `HH:MM` format. You are only allowed to type in timings such that `MM` is `00`. For example, `18:00` is allowed but not `18:01`."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples of Usage:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* If you want to add a CS2113 online lecture lesson which starts at 4pm and ends at 6pm, held on every Friday (every 7 days): `lesson online lecture CS2113 /on 5 16:00 18:00`."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* If you want to add a CS1234 online tutorial lesson which starts at 12pm and ends at 2pm, held on every Thursday (every 7 days): `lesson online tutorial CS1234 /on 4 08:00 10:00`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example Usage:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "lesson online lecture CS2113 /on 5 16:00 18:00"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added lesson to the schedule manager!"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "lesson online tutorial CS1234 /on 4 08:00 10:00"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added lesson to the schedule manager!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Adding an event: `event`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds an Event into the Schedule Manager. If the Event is associated to a Module, it will be added to the Module Manager as well."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Format: `event MODULE_CODE DESCRIPTION /at DATE_OF_EVENT START_TIME END_TIME LOCATION_OF_EVENT`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* `TIME` is in `HH:MM` format. (For now, since the display function only displays timings for every hour, the time of event is such that `MM` needs to be `00`)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* `DATE_OF_EVENT` is in `yyyy-mm-dd` format."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* For now, `LOCATION_OF_EVENT` is one word only."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example Usage:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "t170815518"
        },
        "content": "`event CS2113 final exam /at 2021-05-03 14:00 16:00 LT14`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "`event play football /at 2021-05-03 14:00 16:00 Ang Mo Kio`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "t170815518"
        },
        "content": "event CS2113 final exam /at 2021-05-03 14:00 16:00 LT14"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Event added to both Schedule manager and Module manager"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Adding a deadline: `deadline`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a deadline of an assignment into the Schedule Manager and Module Manager."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Format: `deadline COURSECODE DESCRIPTION /by DATE `"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Examples input:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "t170815518"
        },
        "content": "`deadline CS2113 TP version 1 /by 2021-04-04`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "t170815518"
        },
        "content": "deadline CS2113 TP version 1 /by 2021-04-04"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added deadline to Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Display today\u0027s Schedule: `display` "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Display Today\u0027s Lesson and Task( Deadline and Event)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Task that are in the same time slot are Separated with \"|\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Format: `display`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example input:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "t170815518"
        },
        "content": "`display`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example output:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Today\u0027s Schedule:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "t170815518"
        },
        "content": "08:00"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "t170815518"
        },
        "content": "09:00"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "10:00 quiz - CS2113 |"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "11:00 quiz - CS2113 | meeting - CS2113 |"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "12:00 lecture - CS2113 | meeting - CS2113 |"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "13:00 lecture - CS2113 | meeting - CS2113 |"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "14:00 lecture - CS2113 |"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "15:00 lecture - CS2113 |"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "t170815518"
        },
        "content": "16:00"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "t170815518"
        },
        "content": "17:00"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "t170815518"
        },
        "content": "18:00"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "t170815518"
        },
        "content": "19:00"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "t170815518"
        },
        "content": "20:00"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "t170815518"
        },
        "content": "21:00"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "t170815518"
        },
        "content": "22:00"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "t170815518"
        },
        "content": "23:00"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Today\u0027s task:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "t170815518"
        },
        "content": "You don\u0027t have any tasks!"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Display all the task in a module: `display  MODULECODE`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " Display task in a specific module"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " Format: `display  MODULECODE`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " Example of Usage"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * `display CS2113`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "t170815518"
        },
        "content": "display CS2113"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Course: CS2113"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Title: null"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "t170815518"
        },
        "content": "AU: 0"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Teaching Staffs: []"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The list of task in CS2113:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[E] CS2113 quiz (10:00 2020-10-21 at LT15)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[L] lecture - CS2113 WEDNESDAY 12:00 16:00"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[E] CS2113 meeting (11:00 2020-10-21 at LT16)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[D] TP version 1 - CS2113  (by: 2020-10-21)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Display all the task in a module on a date: `display  MODULECODE /date DATE`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  Display task in a specific module on a specific Date"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  Format: `display  MODULECODE /date DATE`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  * The `DATE` must be in `YYYY/MM/DD`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  Example of Usage"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "t170815518"
        },
        "content": "  * `display CS2113 /date 2020/10/15`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "display CS2113"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Course: CS2113"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Title: null"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "AU: 0"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Teaching Staffs: []"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "The list of task in CS2113:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[E] CS2113 quiz (10:00 2020-10-21 at LT15)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[L] lecture - CS2113 WEDNESDAY 12:00 16:00"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[E] CS2113 meeting (11:00 2020-10-21 at LT16)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[D] TP version 1 - CS2113  (by: 2020-10-21)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Display all the task on a date: `display /date DATE`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Display the schedule on a specific Date."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Also shows the all the upcoming deadlines one week from the specified date. "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Format: `display /date DATE`"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* The `DATE` must be in `YYYY/MM/DD`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Example of Usage"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "t170815518"
        },
        "content": "* `display /date 2020/10/15`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "display /date 2020/10/21"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Today\u0027s Schedule:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "t170815518"
        },
        "content": "08:00"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "t170815518"
        },
        "content": "09:00"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "10:00 quiz - CS2113 |"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "11:00 quiz - CS2113 | meeting - CS2113 |"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "12:00 lecture - CS2113 | meeting - CS2113 |"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "13:00 lecture - CS2113 | meeting - CS2113 |"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "14:00 lecture - CS2113 |"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "15:00 lecture - CS2113 |"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "t170815518"
        },
        "content": "16:00"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "t170815518"
        },
        "content": "17:00"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "t170815518"
        },
        "content": "18:00"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "t170815518"
        },
        "content": "19:00"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "t170815518"
        },
        "content": "20:00"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "t170815518"
        },
        "content": "21:00"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "t170815518"
        },
        "content": "22:00"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "t170815518"
        },
        "content": "23:00"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Upcoming deadlines:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "[D] TP version 1 - CS2113  (by: 2020-10-21)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Display all the task on a range of date: `display /date STARTDATE-ENDDATE`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Display task on a specific range of days"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Format: `display /date STARTDATE-ENDDATE`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* The `STARTDATE/ENDDATE` must be in `YYYY/MM/DD`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "* Do note the Dash `-` to indicate the end date"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "  "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "Example of Usage"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "t170815518"
        },
        "content": "* `display /date 2020/10/13-2020/10/16`"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "t170815518"
        },
        "content": "display /date 2020/10/13-2020/10/16"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "t170815518"
        },
        "content": "List of task from 2020-10-13 to 2020-10-16"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Oct 14 schedule :"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[L]Lecture ST2132 14:00 16:00"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Oct 15 schedule :"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[L]tutorial CS2113 13:00 14:00"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[D]CS2113 Tp version 1 (by: 2020-10-15)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Edit a task: `edit TASKNAME /date DATE /\t/ATTRIBUTES /NEW_VALUE`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "Edit the parameter(description, date, frequency, modulecode, time, tasktype) of a certain task"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Format: `edit TASKNAME /date DATE /ATTRIBUTES /NEW_VALUE`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example of Usage: "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "t170815518"
        },
        "content": "deadline CS2113 tp /by 2020-10-16"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added deadline to Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "t170815518"
        },
        "content": "edit tp /date 2020-10-16 /date /2020-10-15"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "t170815518"
        },
        "content": "2020-10-16"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "t170815518"
        },
        "content": "display CS2113"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Course: CS2113"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Title: null"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "t170815518"
        },
        "content": "AU: 0"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Teaching Staffs: []"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The list of task in CS2113:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[D]CS2113 tp (by: 2020-10-15)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Delete tasks of a description:  `delete DESCRIPTION` "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "Delete every task that fits the description regardless of date"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Format: `delete DESCRIPTION` "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Example of Usage:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "t170815518"
        },
        "content": "deadline CS2113 tp /by 2020-10-16"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added deadline to Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "t170815518"
        },
        "content": "delete tp"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "t170815518"
        },
        "content": "display CS2113"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Course: CS2113"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Title: null"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "t170815518"
        },
        "content": "AU: 0"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Teaching Staffs: []"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The list of task in CS2113:"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "t170815518"
        },
        "content": "You don\u0027t have any tasks!"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "t170815518"
        },
        "content": "## Delete all tasks of a description based on date: `delete DESCRIPTION /date DATE`"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "Delete every task that fits the description on that particular date"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Format: `delete DESCRIPTION /date DATE`"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "t170815518"
        },
        "content": "* The DATE must be in YYYY/MM/DD"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Example of Usage"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "t170815518"
        },
        "content": "deadline CS2113 tp /by 2020-10-15"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added deadline to Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "t170815518"
        },
        "content": "deadline CS2113 tp /by 2020-10-16"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added deadline to Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "t170815518"
        },
        "content": "deadline CS2113 tp /by 2020-10-15"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Got it, added deadline to Schedule Manager and Module Manager"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "t170815518"
        },
        "content": "delete tp /date 2020/10/16"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "t170815518"
        },
        "content": "display CS2113"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Course: CS2113"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Title: null"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "t170815518"
        },
        "content": "AU: 0"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Teaching Staffs: []"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "t170815518"
        },
        "content": "The list of task in CS2113:"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[D]CS2113 tp (by: 2020-10-15)"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "t170815518"
        },
        "content": "[D]CS2113 tp (by: 2020-10-15)"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Please type the command!"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "t170815518"
        },
        "content": "display /date 2020/10/16"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Here is your schedule on 2020-10-16!! :)"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "t170815518"
        },
        "content": "08:00"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "t170815518"
        },
        "content": "09:00"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "t170815518"
        },
        "content": "10:00"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "t170815518"
        },
        "content": "11:00"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "t170815518"
        },
        "content": "12:00"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "t170815518"
        },
        "content": "13:00"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "t170815518"
        },
        "content": "14:00"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "t170815518"
        },
        "content": "15:00"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "t170815518"
        },
        "content": "16:00"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "t170815518"
        },
        "content": "17:00"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "t170815518"
        },
        "content": "18:00"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "t170815518"
        },
        "content": "19:00"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "t170815518"
        },
        "content": "20:00"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "t170815518"
        },
        "content": "21:00"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "t170815518"
        },
        "content": "22:00"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "t170815518"
        },
        "content": "23:00"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "t170815518"
        },
        "content": "Deadlines on 2020-10-16:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "t170815518"
        },
        "content": "You don\u0027t have any tasks!"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "t170815518"
        },
        "content": "```"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "t170815518"
        },
        "content": "# Command Summary"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Add Module: `module c/MODULECODE  [t/TITLE] [a/AU_NUM] [s/TEACHING_STAFF]`"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Add Lesson: `lesson TITILE COURSECODE /on DAYOFWEEK 7 STARTTIME ENDTIME`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Add Event: `event MODULE_CODE DESCRIPTION /at DATE_OF_EVENT TIME LOCATION_OF_EVENT`"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Add Deadline: `deadline COURSECODE DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Display today\u0027s Schedule: `display` "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Display all the task in a module: `display  MODULECODE`"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Display all the task in a module on a date: `display  MODULECODE /date DATE`"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Display all the task on a date: `display /date DATE`"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Display all the task on a range of date: `display /date STARTDATE-ENDDATE`"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Edit a task: `edit TASKNAME /date DATE /\t/ATTRIBUTES /NEW_VALUE`"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Delete tasks of a description:  `delete DESCRIPTION` "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "t170815518"
        },
        "content": "+ Delete all tasks of a description based on date: `delete DESCRIPTION /date DATE`"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "t170815518": 305,
      "haroic1997": 67,
      "teachyourselfcoding": 9,
      "-": 22,
      "acyang97": 37
    }
  },
  {
    "path": "src/main/java/seedu/DueQuestException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DukeException is used to represent duke-specific exceptions that are likely"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to occur."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuestException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    DueQuestExceptionType exceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuestExceptionType getExceptionType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return exceptionType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuestException(DueQuestExceptionType exceptionType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 17
    }
  },
  {
    "path": "src/main/java/seedu/DueQuestExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DukeExceptionType represents the different kind of Duke-specific Exceptions."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public enum DueQuestExceptionType {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    WRONG_INPUT_FORMAT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_EVENT_INFO,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    WRONG_DATE_FORMAT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_MODULE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    INVALID_MODULE_CODE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    INVALID_DATE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    MISSING_LESSON_TIMING_DETAILS"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "haroic1997": 5,
      "acyang97": 12
    }
  },
  {
    "path": "src/main/java/seedu/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class for Module."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * moduleCode e.g. ST2132."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * title e.g. Statistics."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * aUNumber e.g. 4."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * teachingStaffs: e.g. [\"Dr.Lim(lim@e.nus.sg)\",]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * listOfTasks. e.g.list of tasks in the module."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate String moduleCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate String title;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate int aUNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate ArrayList\u003cString\u003e teachingStaffs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor when I am adding a task that has a module code that has not exist yet."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * TODO: check if moduleCode and other info is null."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic Module(String moduleCode, String title, int aUNumber, ArrayList\u003cString\u003e teachingStaffs) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.aUNumber \u003d aUNumber;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.teachingStaffs \u003d teachingStaffs;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic Module(String moduleCode) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void addTask(Task task){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tlistOfTasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getListOfTasks(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\treturn listOfTasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic String getModuleCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn this.moduleCode;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setTitle(String title) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tString information \u003d \"\\nCourse: \" + this.moduleCode + \"\\n\" + \"Title: \" + this.title + \"\\n\" + \"AU: \" + this.aUNumber"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t+ \"\\n\" + \"Teaching Staffs: \" + teachingStaffs.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\treturn information;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic boolean equals(Module module) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn module.getModuleCode().equals(this.moduleCode);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * Deletes the task with the specified description from the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param description"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void deleteTask(String description) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c this.listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tTask t \u003d this.listOfTasks.get(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tif (t.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tthis.listOfTasks.remove(t);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void deleteTask(String description, LocalDate date) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c this.listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tTask t \u003d this.listOfTasks.get(i);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tif (t.getDescription().equals(description) \u0026\u0026 date.isEqual(t.getDate())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tthis.listOfTasks.remove(t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * TODO: task list?"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @return"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tString export() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tassert !this.moduleCode.isEmpty();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tString export \u003d \"module c/\" + this.moduleCode;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (this.title !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\texport +\u003d \" t/\" + this.title;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (this.aUNumber \u003e\u003d 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\texport +\u003d \" a/\" + this.aUNumber;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (!this.teachingStaffs.isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c this.teachingStaffs.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\texport +\u003d \" s/\" + this.teachingStaffs.get(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\texport +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c this.listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tTask currentTask \u003d this.listOfTasks.get(i);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tif (currentTask instanceof Lesson) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\texport +\u003d \"lesson \" + currentTask.getDescription() + \" \" + this.moduleCode + \" /on \" + currentTask.getFrequency()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\t\t+ \" \" + ((Lesson) currentTask).getStartTime() + \" \" + ((Lesson) currentTask).getEndTime() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t} else if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\texport +\u003d \"event \" + this.moduleCode + \" \" + currentTask.getDescription()  + \" /at \" + ((Event) currentTask).getDateOfEvent() +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\t\t\" \" + ((Event) currentTask).getStartTimeOfEvent() + \" \" + ((Event) currentTask).getEndTimeOfEvent() + \" \" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\t\t((Event) currentTask).getAt() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t} else if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\texport +\u003d \"deadline \" + this.moduleCode + \" \" + currentTask.getDescription() + \" /by \" +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\t\t((Deadline) currentTask).getDeadline() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\treturn export;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 99,
      "haroic1997": 10,
      "acyang97": 27
    }
  },
  {
    "path": "src/main/java/seedu/ModuleManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.exception.ModuleAlreadyExistsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.exception.ModuleNotExistsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Class to keep track of all the Module that the user is taking."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Whenever an event or task is added into the ScheduleManager, we will add that task or event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * into the ModuleManager as well according to the Module Code."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class ModuleManager {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    ArrayList\u003cModule\u003e listOfModules;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ModuleManager() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfModules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ModuleManager(ArrayList\u003cModule\u003e listOfModules) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfModules \u003d listOfModules;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public int getNumberOfModules() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.listOfModules.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Add new module to the app."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * If the module with the same course code exists already, the message will be printed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param module new Module object to add"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void addModule(Module module) throws ModuleAlreadyExistsException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (!this.checkIfModuleExist(module)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            this.listOfModules.add(module);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            Ui.print(\"added: \"+ module.getModuleCode().toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            throw new ModuleAlreadyExistsException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Check if the module with the same module code already exists in the ModuleManager."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This is to check before adding in any modules."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param module module to be check if it already exist."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return ture if the module exist, false if it dosen\u0027t."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean checkIfModuleExist(Module module) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.getListOfModuleCodes().contains(module.getModuleCode());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Gets the module with specified module code from the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param moduleCode module code in string"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @return the Module object in list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @throws ModuleNotExistsException if nothing is found"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public Module getModule(String moduleCode) throws ModuleNotExistsException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m: listOfModules) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            if (m.getModuleCode().equals(moduleCode)){  // \u0027\u003d\u003d\u0027 cannot be used."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return m;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        throw new ModuleNotExistsException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param moduleCode"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @throws DueQuestException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Display the tasks of a module."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param moduleCode module code\u0027s string"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @throws ModuleNotExistsException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void display(String moduleCode) throws ModuleNotExistsException{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m: listOfModules) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (m.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ArrayList\u003cTask\u003e tasks \u003d m.getListOfTasks();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                System.out.println(m); // print the module\u0027s information"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.print(\"The list of task in \" + moduleCode + \":\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.printListGenericType(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                Ui.printSeparator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        throw new ModuleNotExistsException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    // Display all the task in a module on a specific date"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void display(String moduleCode, LocalDate date) throws ModuleNotExistsException{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ArrayList\u003cLesson\u003e lessons \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        DayOfWeek dayOfWeek \u003d date.getDayOfWeek();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Module m : listOfModules) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (m.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                for (Task t : m.getListOfTasks()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        if (((Deadline) t).getDate().isEqual(date)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                            filteredTasks.add(t);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    } else if (t instanceof Lesson) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        if (((Lesson) t).getLessonDayInDayOfWeek() \u003d\u003d dayOfWeek) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                            lessons.add((Lesson)t);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.print(moduleCode + \" - \" + Ui.convertDateToString(date));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.print(\"Events \u0026 Deadlines :\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.printListGenericType(filteredTasks);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.print(\"Lessons :\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Ui.printListGenericType(lessons);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                Ui.printSeparator();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        throw new ModuleNotExistsException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ArrayList\u003cModule\u003e getListOfModules() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return listOfModules;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to get a list of Module Codes in String form."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the list of module codes."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public List\u003cString\u003e getListOfModuleCodes() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        List\u003cString\u003e listOfModuleCodes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (Module module: listOfModules) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            listOfModuleCodes.add(module.getModuleCode());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return listOfModuleCodes;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Method to add a task to the module inside the list of the module manager."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * This is executed in the AddCommand method, when a task is added to both."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * the module manager and schedule manager."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param task task to be added into the module manager."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param moduleCode this is the modulecode of the task. Remember, moduleCode is an attribute of task."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void addTaskToModule(Task task, String moduleCode) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        for (int i \u003d 0; i \u003c this.listOfModules.size(); i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            if (this.listOfModules.get(i).getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                this.listOfModules.get(i).addTask(task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        // if we reach the end of the for loop, it means that the moduleCode does not exist"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        // hence, we create this module first, add the task to it and"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        // then add it to the module manager"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        module.addTask(task);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.listOfModules.add(module);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Finds the module contains the task with the specified description."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param description the description in string"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @return Module found"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    private Module findModuleContainsTask(String description) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        for (Module m: this.listOfModules) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            for (Task t: m.getListOfTasks()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                if (t.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return m;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    private Module findModuleContainsTask(String description, LocalDate date) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        for (Module m: this.listOfModules) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            for (Task t: m.getListOfTasks()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                if (t.getDescription().equals(description) \u0026\u0026 date.isEqual(t.getDate())) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return m;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void deleteTask(String description) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        Module module \u003d findModuleContainsTask(description);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        if (module !\u003d null) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            module.deleteTask(description);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void deleteTask(String description, LocalDate date) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        Module module \u003d findModuleContainsTask(description, date);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        if (module !\u003d null) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            module.deleteTask(description, date);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    String export() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String export \u003d \"\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        for (int i \u003d 0; i \u003c this.listOfModules.size(); i++) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            export \u003d this.listOfModules.get(i).export() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        return export;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 110,
      "haroic1997": 55,
      "acyang97": 52
    }
  },
  {
    "path": "src/main/java/seedu/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.AddModuleCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.command.DisplayCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.EditModuleCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.command.EditTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.EmptyArgumentException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidArgumentsException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidModuleCodeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.MissingLessonTimingException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidTimeFormatException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidFrequencyException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidDateException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.MissingEventDateAndTimeDetailsException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.WrongDateFormatException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.MissingDeadlineTimingDetailsException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidDateRangeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *Parser Object is used for translating String user input into."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * a actionable Command object for execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Convert the given string input into a subclass of Command class."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * return different subclass of Command class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a subclass of Command class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if invalid input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Command parse(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int taskNum;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (words[0].toLowerCase()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    //fallthrough"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new HelpCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    //Fallthrough"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    //Fallthrough"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "                    return validateDeleteCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    String[] sentence \u003d input.toLowerCase().split(\" \", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    String keywords \u003d sentence[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    //Fallthrough"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new FindCommand(keywords);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    Deadline deadline \u003d validateDeadline(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    //Fallthrough"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new AddCommand(deadline);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    Event ev \u003d validateEvent(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    //Fallthrough"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new AddCommand(ev);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"display\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return parseDisplayCommand(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                case \"lesson\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    Lesson lesson \u003d parseLesson(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return new AddCommand(lesson);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                case \"module\": // adding a module"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return new AddModuleCommand(Arrays.copyOfRange(words, 1, input.length()));  // only pass the arguments"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                case \"edit\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return validateEditTaskCommand(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    throw new DueQuestException(DueQuestExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (InvalidArgumentsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printInvalidArgumentsErrorMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (MissingLessonTimingException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printMissingLessonTimingMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (EmptyArgumentException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printEmptyArgumentMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (InvalidModuleCodeException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printInvalidModuleCode();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (WrongDateFormatException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printInvalidDateFormatMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (InvalidDateRangeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (InvalidDateException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printInvalidDateMessage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (MissingDeadlineTimingDetailsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printMissingDeadlineTimingDetailsMessage();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (MissingEventDateAndTimeDetailsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printMissingEventDateAndTimeDetailsMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (InvalidTimeFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printWrongTimeFormatMessage();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (InvalidFrequencyException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printInvalidFrequencyMessage();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        return null;  // the function must return something"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Used to validate and check for any errors in the user input."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * for DeadLine object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param  input representing user input."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return DeadLine object including the moduleCode of the deadline."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information or date is invalid."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Deadline validateDeadline(String input) throws WrongDateFormatException, InvalidDateException,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            EmptyArgumentException, MissingDeadlineTimingDetailsException, InvalidModuleCodeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (!filteredInput[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new MissingDeadlineTimingDetailsException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] moduleCodeAndDescription \u003d filteredInput[1].split(\"/by\",2)[0].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode \u003d moduleCodeAndDescription[0].trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (!verifyModuleCode(moduleCode)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidModuleCodeException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String description \u003d moduleCodeAndDescription[1].trim();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String byInfo \u003d filteredInput[1].split(\"/by\", 2)[1].trim();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (byInfo.length() !\u003d 10) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (LocalDate.parse(byInfo).isAfter(LocalDate.of(2021, 6, 1)) ||"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            LocalDate.parse(byInfo).isBefore(LocalDate.of(2020, 10, 12))) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return new Deadline(moduleCode, description, byInfo);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This is the new validateEvent method for our TP."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param input the line input."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return an Event object."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - ADD EXCEPTIONS."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Event validateEvent(String input) throws WrongDateFormatException, InvalidDateException,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            EmptyArgumentException, MissingEventDateAndTimeDetailsException, InvalidTimeFormatException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] filteredInputTest \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (filteredInputTest.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (!filteredInputTest[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new MissingEventDateAndTimeDetailsException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String filteredInput \u003d input.trim().split(\" \", 2)[1]; //get rid of event word in front"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode \u003d filteredInput.split(\" \")[0];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        boolean isEventForAModule \u003d verifyModuleCode(moduleCode);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (!isEventForAModule) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleCode \u003d \"\"; // then moduleCode make it an empty string."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // Aim is just to find a way such that this event wont be added to the module."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (isEventForAModule) { //get rid of the module code if it is valid, means event belongs to a module"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            filteredInput \u003d filteredInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] splitDescriptionAndDateTimeDetails \u003d filteredInput.split(\"/at\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String description \u003d splitDescriptionAndDateTimeDetails[0].trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String dateTimeLocationDetails \u003d splitDescriptionAndDateTimeDetails[1];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] splitDateTimeLocationDetails \u003d dateTimeLocationDetails.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (splitDateTimeLocationDetails.length !\u003d 4) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new MissingEventDateAndTimeDetailsException();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String dateOfEvent \u003d splitDateTimeLocationDetails[0];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (dateOfEvent.length() !\u003d 10) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (LocalDate.parse(dateOfEvent).isAfter(LocalDate.of(2021, 6, 1)) ||"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                LocalDate.parse(dateOfEvent).isBefore(LocalDate.of(2020, 10, 12))) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String startTime \u003d splitDateTimeLocationDetails[1];"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String endTime \u003d splitDateTimeLocationDetails[2];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String locationOfEvent \u003d splitDateTimeLocationDetails[3];"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (startTime.length() !\u003d 5 || endTime.length() !\u003d 5) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String hhStart \u003d startTime.substring(0, 2);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String mmStart \u003d startTime.substring(3);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            LocalTime.of(Integer.parseInt(hhStart), Integer.parseInt(mmStart));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String hhEnd \u003d startTime.substring(0, 2);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String mmEnd \u003d startTime.substring(3);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            LocalTime.of(Integer.parseInt(hhEnd), Integer.parseInt(mmEnd));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return new Event(description, moduleCode, locationOfEvent, startTime, endTime, dateOfEvent);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Parses the Lesson object from input."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Lesson description moduleCode /on 4 (digit represent dayOfWeek), frequency, time."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Example: lesson lecture CS2113 /on 5 7 16:00 18:00."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param input the line of the input"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @return the Lesson object"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Lesson parseLesson(String input) throws EmptyArgumentException, MissingLessonTimingException,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            InvalidModuleCodeException, InvalidTimeFormatException, InvalidFrequencyException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {  // e.g. lesson [empty_arguments]"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }  else if (!filteredInput[1].contains(\"/on\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            throw new MissingLessonTimingException();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] descriptionWithModuleCode \u003d filteredInput[1].split(\"/on\", 2);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String[] frequencyAndTime \u003d descriptionWithModuleCode[1].trim().split(\" \");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String description \u003d descriptionWithModuleCode[0].trim();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        descriptionWithModuleCode \u003d descriptionWithModuleCode[0].trim().split(\" \");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        int size \u003d descriptionWithModuleCode.length;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode \u003d descriptionWithModuleCode[size - 1].trim();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (!verifyModuleCode(moduleCode)) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            throw new InvalidModuleCodeException();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (frequencyAndTime.length !\u003d 3) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new MissingLessonTimingException();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        description \u003d description.substring(0, description.length() - moduleCode.length()).trim();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String freq \u003d frequencyAndTime[0];"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Integer.parseInt(freq);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidFrequencyException();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        int frequency \u003d Integer.parseInt(frequencyAndTime[0]);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (frequency \u003e 7 || frequency \u003c 1) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidFrequencyException();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String startTime \u003d frequencyAndTime[1];"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String endTime \u003d frequencyAndTime[2];"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (startTime.length() !\u003d 5 || endTime.length() !\u003d 5) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String hhStart \u003d startTime.substring(0, 2);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String mmStart \u003d startTime.substring(3);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            LocalTime.of(Integer.parseInt(hhStart), Integer.parseInt(mmStart));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String hhEnd \u003d startTime.substring(0, 2);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String mmEnd \u003d startTime.substring(3);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            LocalTime.of(Integer.parseInt(hhEnd), Integer.parseInt(mmEnd));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new InvalidTimeFormatException();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return new Lesson(description, moduleCode, frequency, startTime, endTime);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "     * Used to validate the input in Delete Command"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "     * @throws DueQuestException"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "     */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public static DeleteCommand validateDeleteCommand(String input)throws DueQuestException {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        if (!input.contains(\"/date\")) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            return new DeleteCommand(filteredInput[1]);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            String[] dateDetails \u003d filteredInput[1].split(\"/date\", 2);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            LocalDate specificDate \u003d LocalDate.parse(dateDetails[1].trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            return new DeleteCommand(dateDetails[0], specificDate);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Parses DisplayCommand from the input."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param input the user\u0027s input in string"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @return DisplayCommand"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @throws WrongDateFormatException if the date in wrong format and cannot be parsed"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @throws InvalidArgumentsException if the input gives the argument in wrong format"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static DisplayCommand parseDisplayCommand(String input) throws WrongDateFormatException, InvalidArgumentsException, InvalidDateRangeException{"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String moduleCode \u003d \"\";"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        if(filteredInput.length\u003d\u003d1){  // by default, the display time is now."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            return new DisplayCommand(LocalDate.now());"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] descriptionWithModuleCode \u003d filteredInput[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if(!descriptionWithModuleCode[0].equals(\"\") \u0026\u0026 !descriptionWithModuleCode[0].contains(\"/date\")) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            moduleCode \u003d descriptionWithModuleCode[0].trim().toUpperCase();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if( descriptionWithModuleCode.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new DisplayCommand(moduleCode);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (input.contains(\"/date\")) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            //split the filtered input into description and date info"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] dateDetails \u003d filteredInput[1].split(\"/date\",2);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (dateDetails[1].contains(\"-\")){"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                String[] dateRange \u003d dateDetails[1].trim().split(\"-\", 2);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate startDate \u003d LocalDate.parse(dateRange[0].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate endDate \u003d LocalDate.parse(dateRange[1].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new DisplayCommand(startDate,endDate);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } catch (DateTimeException e){"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else if (!moduleCode.equals(\"\")) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate specificDate \u003d LocalDate.parse(dateDetails[1].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new DisplayCommand(moduleCode, specificDate);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    LocalDate specificDate \u003d LocalDate.parse(dateDetails[1].trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    return new DisplayCommand(specificDate);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        throw new InvalidArgumentsException();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to check if a given moduleCode in String format is a valid Module code."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * A valid Module examples. CS2113, CS2113T, DSA4211. Basically got 3 styles."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This method is mainly for the parser."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode moduleCode in string form that you want to verify if it is valid."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return true if valid, else false."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * \t- refactor this ugly code later."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static boolean verifyModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (moduleCode.length() \u003c 6 || moduleCode.length() \u003e 7) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        moduleCode \u003d moduleCode.toUpperCase();"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        char[] charArray \u003d moduleCode.toCharArray();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (charArray.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            for (int i \u003d 0; i \u003c 2; i++) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                if (!(ch \u003e\u003d \u0027A\u0027 \u0026\u0026 ch \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            for (int i \u003d 2; i \u003c 6; i++) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                if (!(ch \u003e\u003d \u00270\u0027 \u0026\u0026 ch \u003c\u003d \u00279\u0027)) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (charArray.length \u003d\u003d 7) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // case of if it is like CS2113T"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (charArray[2] \u003e\u003d \u00270\u0027 \u0026\u0026 charArray[2] \u003c\u003d \u00279\u0027) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 0; i \u003c 2; i++) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u0027A\u0027 \u0026\u0026 ch \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 2; i \u003c 6; i++) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u00270\u0027 \u0026\u0026 ch \u003c\u003d \u00279\u0027)) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                if (!(charArray[6] \u003e\u003d \u0027A\u0027 \u0026\u0026 charArray[6] \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } else { // case if DSA4211"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u0027A\u0027 \u0026\u0026 ch \u003c\u003d \u0027Z\u0027)) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                for (int i \u003d 3; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    char ch \u003d charArray[i];"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    if (!(ch \u003e\u003d \u00270\u0027 \u0026\u0026 ch \u003c\u003d \u00279\u0027)) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static EditTaskCommand validateEditTaskCommand (String input) throws WrongDateFormatException {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String filteredInput \u003d input.substring(5);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String[] name \u003d filteredInput.trim().split(\"/date\",2);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String[] property \u003d name[1].trim().substring(10).trim().split(\"/\",3);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String description \u003d name[0].trim();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String type \u003d (property[1].toLowerCase()).trim();"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String newValue \u003d property[2].trim();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"description\":"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                //Fall through"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"tasktype\":"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                //Fall through"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"module code\":"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                //Fall through"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"modulecode\":"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                //Fall through"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"time\":"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(name[1].trim().substring(0, 10).trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return new EditTaskCommand(description, date, type, newValue);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }catch (DateTimeException e){"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"frequency\":"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                //int[] newFrequency \u003d new int[2];"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                //newFrequency[0] \u003d Integer.parseInt(newValue);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                int newFrequency \u003d Integer.parseInt(newValue);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(name[1].trim().substring(0, 10).trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return new EditTaskCommand(description, date, type, newFrequency);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }catch (DateTimeException e){"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(name[1].trim().substring(0, 10).trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    LocalDate newDate \u003d LocalDate.parse(newValue.trim().replace(\"/\",\"-\"));"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    return new EditTaskCommand(description, date, type, newDate);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }catch (DateTimeException e){"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                System.out.println(\"Wrong type\");"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                System.out.println(type);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 91,
      "haroic1997": 106,
      "teachyourselfcoding": 23,
      "acyang97": 246
    }
  },
  {
    "path": "src/main/java/seedu/ScheduleManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidStartEndDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * READ THIS FIRST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Class for ScheduleManager."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Contains the schedule for the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * We will assume that the ScheduleManager is built for AY 2020/2021 Semester 2."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * NonLessonDates includes - Winter Break, Reading weeks, Examination week."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Dates of the following are obtained from NUS website."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class ScheduleManager {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate static TreeMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e semesterSchedule \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t//private static final String[] timing \u003d {\"08:00\",\"09:00\",\"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\",\"17:00\",\"18:00\",\"19:00\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t//       ,\"20:00\",\"21:00\",\"22:00\",\"23:00\"};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate HashSet\u003cLocalDate\u003e listOfNonLessonDates \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor for ScheduleManager if a ScheduleManager already exist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param semesterSchedule"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic ScheduleManager(TreeMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e semesterSchedule) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule \u003d semesterSchedule;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Constructor for ScheduleManager if a ScheduleManager has yet to be created."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Main role is to populate the HashMap with the dates in the year as the \u0027key\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * and an empty list of task as the value."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic ScheduleManager() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t// Now I will need to populate this hashmap because it is currently empty with no dates."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 10, 12);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date.isBefore(LocalDate.of(2021, 6, 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tthis.semesterSchedule.put(date, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t// add winter break dates"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 12, 6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date.isBefore(LocalDate.of(2021, 1, 11));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tthis.listOfNonLessonDates.add(date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t// add first reading week dates"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2021, 2, 20);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date.isBefore(LocalDate.of(2021, 3, 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tthis.listOfNonLessonDates.add(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t// add second reading week and examination dates"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2021, 4, 17);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date.isBefore(LocalDate.of(2021, 5, 9));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tthis.listOfNonLessonDates.add(date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t// add remaining dates after examination week"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2021, 5, 9);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date.isBefore(LocalDate.of(2021, 6, 1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tthis.listOfNonLessonDates.add(date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Add lessons to the day of the week that the lesson is conducted in."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param lesson lesson to be added to the schedule manager."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void addLesson(Lesson lesson, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tDayOfWeek day \u003d lesson.getLessonDayInDayOfWeek();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tif (checkIfLessonToBeAddedClashesWithCurrentTimetable((lesson))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tString verifyIfReallyWantToAdd \u003d ui.readYesOrNo();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (verifyIfReallyWantToAdd.equals(\"No\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tui.print(\"Got it! Lesson is not added!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\treturn;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t} else if (!verifyIfReallyWantToAdd.equals(\"Yes\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tui.print(\"You need to type in Yes or No\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tui.print(\"Lesson is not added\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\treturn;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (Map.Entry\u003cLocalDate, ArrayList\u003cTask\u003e\u003e entry : this.semesterSchedule.entrySet()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tLocalDate key \u003d entry.getKey();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t// add lessons to weeks when there is school only."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (!this.listOfNonLessonDates.contains(key)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (key.getDayOfWeek().getValue() \u003d\u003d day.getValue()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\tthis.semesterSchedule.get(key).add(lesson);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tmoduleManager.addTaskToModule(lesson, lesson.getModuleCode());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tSystem.out.println(\"Got it, added lesson to the Schedule Manager and Module Manager!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic boolean checkIfLessonToBeAddedClashesWithCurrentTimetable(Lesson lesson) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tDayOfWeek day \u003d lesson.getLessonDayInDayOfWeek();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (Map.Entry\u003cLocalDate, ArrayList\u003cTask\u003e\u003e entry : this.semesterSchedule.entrySet()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tLocalDate key \u003d entry.getKey();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (!this.listOfNonLessonDates.contains(key)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (key.getDayOfWeek().getValue() \u003d\u003d day.getValue()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t// check if got a clash. immediately return true if there is"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\tif (checkIfLessonToBeAddedClashesInADate(lesson, key)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic boolean checkIfLessonToBeAddedClashesInADate(Lesson lesson, LocalDate date) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tArrayList\u003cTask\u003e listOfTasks \u003d this.semesterSchedule.get(date);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalTime startTimeOfLesson \u003d lesson.getStartTimeInLocalTime();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalTime endTimeOfLesson \u003d lesson.getEndTimeInLocalTime();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (task instanceof Lesson) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime startTimeOfTask \u003d ((Lesson)task).getStartTimeInLocalTime();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime endTimeOfTask \u003d ((Lesson)task).getEndTimeInLocalTime();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (startTimeOfLesson.isAfter(startTimeOfTask) \u0026\u0026 startTimeOfLesson.isBefore(endTimeOfTask)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (endTimeOfLesson.isAfter(startTimeOfTask)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (task instanceof Event) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime startTimeOfTask \u003d ((Event)task).getStartTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime endTimeOfTask \u003d ((Event)task).getEndTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (startTimeOfLesson.isAfter(startTimeOfTask) \u0026\u0026 startTimeOfLesson.isBefore(endTimeOfTask)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (endTimeOfLesson.isAfter(startTimeOfTask)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic boolean checkIfEventToBeAddedClashesInADate(Event event, LocalDate date) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tArrayList\u003cTask\u003e listOfTasks \u003d this.semesterSchedule.get(date);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalTime startTimeOfLesson \u003d event.getStartTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalTime endTimeOfLesson \u003d event.getEndTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (task instanceof Lesson) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime startTimeOfTask \u003d ((Lesson)task).getStartTimeInLocalTime();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime endTimeOfTask \u003d ((Lesson)task).getEndTimeInLocalTime();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (startTimeOfLesson.isAfter(startTimeOfTask) \u0026\u0026 startTimeOfLesson.isBefore(endTimeOfTask)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (endTimeOfLesson.isAfter(startTimeOfTask)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (task instanceof Event) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime startTimeOfTask \u003d ((Event)task).getStartTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tLocalTime endTimeOfTask \u003d ((Event)task).getEndTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (startTimeOfLesson.isAfter(startTimeOfTask) \u0026\u0026 startTimeOfLesson.isBefore(endTimeOfTask)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (endTimeOfLesson.isAfter(startTimeOfTask)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\treturn true;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Deadline only got 1 day, so just filter for the"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * date where I need to add the deadline,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param deadline add deadline inside the list of tasks of the schedule manager."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void addDeadline(Deadline deadline, ModuleManager moduleManager) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalDate date \u003d LocalDate.parse(deadline.getDeadline());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule.get(date).add(deadline);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tmoduleManager.addTaskToModule(deadline, deadline.getModuleCode());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Event only got 1 date, so just filter for the"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * date where I need to add the event."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param event add event inside the list of tasks of the schedule manager."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void addEvent(Event event,ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalDate date \u003d LocalDate.parse(event.getDateOfEvent());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalTime startTime \u003d event.getStartTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalTime endTime \u003d event.getEndTimeOfEventInLocalTime();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tif (checkIfEventToBeAddedClashesInADate(event, date)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tString verifyIfReallyWantYoAdd \u003d ui.readYesOrNo();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (verifyIfReallyWantYoAdd.equals(\"No\")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tui.print(\"Got it! Event is not Added!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\treturn;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t} else if (!verifyIfReallyWantYoAdd.equals(\"Yes\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tui.print(\"You need to type in Yes or No!\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tui.print(\"Event is not added!\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\treturn;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tthis.semesterSchedule.get(date).add(event);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tif (!event.getModuleCode().equals(\"\")){"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tmoduleManager.addTaskToModule(event, event.getModuleCode());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tif (!event.getModuleCode().equals(\"\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tSystem.out.println(\"Event added to both Schedule manager and Module manager\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tSystem.out.println(\"Event added to Schedule Manager only\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\tpublic void editTask(String name, LocalDate date, String type, String newProperty){"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(Task task :semesterSchedule.get(date)){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\tswitch(type) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"description\":"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(name)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setDescription(newProperty);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"tasktype\":"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(name)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setTasktype(newProperty);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"module code\":"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(name)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setModulecode(newProperty);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tcase \"time\":"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\t\tif (task.getDescription().equals(name)) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t\ttask.setTime(newProperty);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tdefault:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Invalid type\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void editTask(String description, LocalDate date, String property, int newFrequency){"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(Task task : semesterSchedule.get(date)){"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif(task.getDescription().equals(description)){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\ttask.setFrequency(newFrequency);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void editTask(String description, LocalDate date, String property, LocalDate newDate) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(Task task : semesterSchedule.get(date)){"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif(task.getDescription().equals(description)) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\tSystem.out.println(task.getDate());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\tthis.semesterSchedule.get(newDate).add(task);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\tfor (Task newTask : semesterSchedule.get(newDate)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\tif (newTask.getDescription().equals(description)){"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\t\t\tnewTask.setDate(newDate.toString()); //Need to change later"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "\t\tdeleteTask(description,date);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void deleteTask(String description, LocalDate date) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tsemesterSchedule.get(date).removeIf(task -\u003e task.getDescription().equals(description));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "\t\telse{"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tSystem.out.println(\"No task on this date\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void deleteTask(String description) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 10, 12); date.isBefore(LocalDate.of(2021, 6, 1)); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tsemesterSchedule.get(date).removeIf(task -\u003e task.getDescription().equals(description));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic void displayTodaySchedule() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalDate todayDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tUi.print( \"Today\u0027s Schedule:\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tArrayList\u003cTask\u003e taskList \u003d semesterSchedule.get(todayDate);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tArrayList\u003cTask\u003e nonLessonList\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tString[] timing \u003d {\"08:00\", \"09:00\",\"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\","
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\"};"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (Task t: taskList) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (t instanceof Lesson ){"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tString startTime \u003d ((Lesson) t).getStartTime();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tString endTime \u003d ((Lesson) t).getEndTime();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tboolean hasStart \u003d false;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tboolean hasEnd \u003d false;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tfor (int i \u003d 0; i \u003c timing.length; i++) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\tif (timing[i].substring(0, 5).equals(startTime) ) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasStart \u003d true;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i]+ \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" |\";"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t} else if(timing[i].substring(0, 5).equals(endTime)) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasEnd \u003d false;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasStart \u003d false;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t} else if(hasStart \u0026\u0026 !hasEnd) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" |\";"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t} else if(t instanceof Event){"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tString startTime \u003d ((Event) t).getStartTimeOfEvent();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tString endTime \u003d ((Event) t).getEndTimeOfEvent();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tboolean hasStart \u003d false;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tboolean hasEnd \u003d false;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tfor (int i \u003d 0; i \u003c timing.length; i++) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tif (timing[i].substring(0, 5).equals(startTime) ) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\thasStart \u003d true;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i]+ \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" |\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t} else if(timing[i].substring(0, 5).equals(endTime)) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\thasEnd \u003d false;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\thasStart \u003d false;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t} else if(hasStart \u0026\u0026 !hasEnd) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" |\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tnonLessonList.add(t);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (String i: timing){"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tUi.print(i);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tUi.print(\"\\n Today\u0027s task:\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tUi.printListGenericType(nonLessonList);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * Displays tasks on the days within the range."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * The error message will be printed if startDay and endDay gives wrong range (e.g. endDay \u003c startDay)."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * @param startDate the start of the range."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t * @param endDate the end of the range."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void display(LocalDate startDate, LocalDate endDate) throws InvalidStartEndDateException{"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tif (startDate.isAfter(endDate)){"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tthrow new InvalidStartEndDateException();"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tUi.print(\"List of task from \" + Ui.convertDateToStringWithYear(startDate) + \" to \" + Ui.convertDateToStringWithYear(endDate));"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tfor (LocalDate date \u003d LocalDate.of(2020, 10, 12); date.isBefore(LocalDate.of(2021, 6, 1)); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tif(date.isEqual(startDate)){"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tUi.print(date.format(DateTimeFormatter.ofPattern(\"MMM d\"))"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\t\t+ \" :\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tUi.printListGenericType(semesterSchedule.get(date));"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t} else if (date.isAfter(startDate) \u0026\u0026 date.isBefore(endDate)){"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tif(semesterSchedule.get(date).size() !\u003d 0){"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tUi.print(date.format(DateTimeFormatter.ofPattern(\"MMM d\"))"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\t\t+ \" :\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\tUi.printListGenericType(semesterSchedule.get(date));"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t} else if (date.isEqual(endDate)){"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tUi.print(date.format(DateTimeFormatter.ofPattern(\"MMM d\"))"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t\t\t+ \" :\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\tUi.printListGenericType(semesterSchedule.get(date));"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Method to display the schedule of 1 date."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param date that user wants to see the schedule of."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\tpublic void displayDate(LocalDate date) throws InvalidDateException {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tString startTime \u003d null;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tString endTime \u003d null;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tboolean taskIsLessonOrEvent \u003d false;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tArrayList\u003cTask\u003e taskList \u003d semesterSchedule.get(date);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tif (taskList\u003d\u003dnull){"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\tthrow new InvalidDateException();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\tUi.print(\"Here is your schedule on \" + date.toString() + \"!! :)\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tArrayList\u003cDeadline\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tString[] timing \u003d {\"08:00\", \"09:00\",\"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\","
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\"};"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (Task t: taskList) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tif (t instanceof Lesson ){"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tstartTime \u003d ((Lesson) t).getStartTime();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tendTime \u003d ((Lesson) t).getEndTime();"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tboolean hasStart \u003d false;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tboolean hasEnd \u003d false;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tfor (int i \u003d 0; i \u003c timing.length; i++) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\tif (timing[i].substring(0, 5).equals(startTime) ) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasStart \u003d true;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" |\";"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t} else if(timing[i].substring(0, 5).equals(endTime)) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasEnd \u003d false;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasStart \u003d false;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t} else if(hasStart \u0026\u0026 !hasEnd) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" |\";"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t} else if (t instanceof Event){"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tstartTime \u003d ((Event) t).getStartTimeOfEvent();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tendTime \u003d ((Event) t).getEndTimeOfEvent();"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tboolean hasStart \u003d false;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tboolean hasEnd \u003d false;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tfor (int i \u003d 0; i \u003c timing.length; i++) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\tif (timing[i].substring(0, 5).equals(startTime) ) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasStart \u003d true;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\tif (!t.getModuleCode().equals(\"\")) {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" at \""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\t\t\t+ ((Event) t).getAt() + \" |\";"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t} else {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + \"at \""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\t\t\t+ ((Event) t).getAt() + \" |\";"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t} else if (timing[i].substring(0, 5).equals(endTime)) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasEnd \u003d false;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\thasStart \u003d false;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t} else if (hasStart \u0026\u0026 !hasEnd) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\tif (!t.getModuleCode().equals(\"\")) {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + t.getModuleCode() + \" at \""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\t\t\t+ ((Event) t).getAt() + \" |\";"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t} else {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\ttiming[i] \u003d timing[i] + \" \" + t.getDescription() + \" - \" + \"at \""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t\t\t\t+ ((Event) t).getAt() + \" |\";"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t\t}"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tdeadlineList.add((Deadline)t);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (String i: timing){"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tUi.print(i);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tdeadlineList \u003d addToDeadlineList(date, deadlineList);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t//Ui.print(\"\\nDeadlines on \" + date.toString() + \":\" );"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tUi.print(\"\\nUpcoming Deadlines :\" );"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tUi.printListGenericType(deadlineList);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * Adds deadlines of the next 7 days from current day to the non lesson and event list"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param currentDate current date specified."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @param list list of the Deadlines where more deadlines will be added to."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t * @return list of Deadlins"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tprivate ArrayList\u003cDeadline\u003e addToDeadlineList(LocalDate currentDate, ArrayList\u003cDeadline\u003e list) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tLocalDate oneWeekAfterCurrentDate \u003d currentDate.plusDays(7);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tcurrentDate \u003d currentDate.plusDays(1);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\tfor (LocalDate date \u003d currentDate; date.isBefore(oneWeekAfterCurrentDate); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\tfor (Task task : this.semesterSchedule.get(date)) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\tif (task instanceof Deadline) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t\tlist.add((Deadline)task);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn list;"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\tpublic int getNumberOfTaskInADay(LocalDate date) {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t\treturn semesterSchedule.get(date).size();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "acyang97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "haroic1997": 75,
      "teachyourselfcoding": 17,
      "-": 53,
      "acyang97": 342
    }
  },
  {
    "path": "src/main/java/seedu/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.exception.ModuleNotExistsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class handles data storage for DueQuest."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * It is designed as Singleton."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic static final String DEFAULT_FILE_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate static Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate File directory;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate File additionalFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate boolean isImport;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param directoryPath the path of storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate Storage(String directoryPath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.isImport \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (!this.directory.isDirectory()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tthis.directory.mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tadditionalFile \u003d new File(this.directory.getAbsolutePath() + \"/additional.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (!additionalFile.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tadditionalFile.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t} catch (IOException ioException) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tSystem.out.println(\"Error: additional.txt file cannot be created.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void loadData(ScheduleManager scheduleManager, ModuleManager moduleManager,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\t\t  Ui ui) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tSystem.out.println(\"Loading data from the file...\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tFile [] files \u003d this.directory.listFiles();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tfor (File moduleFile : files) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tif (moduleFile.getName().contains(\"additional.txt\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\tcontinue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tprocessFile(scheduleManager, moduleManager, ui, moduleFile);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t} catch (NullPointerException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t// no file in dir, so just ignore the iteration"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tprocessFile(scheduleManager, moduleManager, ui, this.additionalFile);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tSystem.out.println(\"Loading completes.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.isImport \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tprivate void processFile(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui, File moduleFile) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tScanner scanner \u003d new Scanner(moduleFile);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\twhile (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tCommand command \u003d Parser.parse(scanner.nextLine());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tif (command !\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\t\tcommand.execute(scheduleManager, moduleManager, ui);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tSystem.out.println(\"Error: the file is not found.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t} catch (DueQuestException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * Exports the modules and tasks to the file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param moduleManager moduleManager of Duke"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void exportData(ModuleManager moduleManager, String moduleCode) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (isImport \u003d\u003d true) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\treturn; // avoid duplicate export"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tFile moduleFile \u003d new File(this.directory.getAbsolutePath() + \u0027/\u0027 + moduleCode + \".txt\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tif (!moduleFile.exists()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t\tmoduleFile.createNewFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tFileWriter moduleWriter \u003d new FileWriter(moduleFile, false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tmoduleWriter.write(moduleManager.getModule(moduleCode).export());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tmoduleWriter.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tSystem.out.println(\"Error: the file cannot be written.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t} catch (ModuleNotExistsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tSystem.out.printf(\"Error: the module %s cannot be written, because it doesn\u0027t exist.\", moduleCode);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void exportData(ModuleManager moduleManager) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (isImport \u003d\u003d true) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\treturn;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tfor (String moduleCode: moduleManager.getListOfModuleCodes()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\texportData(moduleManager, moduleCode);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void exportAdditionalData(String command) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tif (isImport \u003d\u003d true) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\treturn;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tFileWriter fileWriter \u003d new FileWriter(this.additionalFile, true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tfileWriter.write(command + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tfileWriter.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t\tSystem.out.println(\"Error: additional.file cannot be written.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * TODO: test empty directoryPath"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param directoryPath the path of storage directory"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @return newly created storage object"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic static Storage setUpStorage(String directoryPath) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tstorage \u003d new Storage(Objects.requireNonNullElse(directoryPath, DEFAULT_FILE_PATH));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\treturn storage;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic static Storage getStorage() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\treturn storage;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 112,
      "haroic1997": 28,
      "acyang97": 1
    }
  },
  {
    "path": "src/main/java/seedu/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Represents the Class for functions related to the CLI User interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * and used to print out exception messages for troubleshooting purpose."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private static String SEPARATOR\u003d\"\u003c--------------------------------------------------------------\u003e\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Constructor of Ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *print out the on startup message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String welcomeMessage \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"DueQuest for students by students\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"So, what can I do for you?\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.print(welcomeMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * print out the exit message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String byeMessage \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"Aye captain. This is Duke Signing out!\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.print(byeMessage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * print out the Help message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void printHelpGuide() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String helpMessage \u003d \" This is the list of Command Available, please refer to the User Guide\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \" display - display today\u0027s Schedule, module info, list of Task \\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \" module  - add a module\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \" add     - add a deadline, event, lesson\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \" edit    - edit information\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \" delete  - delete task in a module\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \" exit    - exit duequest\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(helpMessage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Scan and Read in user input on the CLI."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return String command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Please type the next command!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String commandString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        return commandString;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String readYesOrNo() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Clashes detected, are you sure you want to add the task? Answer Yes or No\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints the Exception information based on the parameters."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param e DukeExceptionType"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void showError(DueQuestExceptionType e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        switch (e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_DEADLINE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Deadline!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_EVENT_INFO:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Event Information!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case WRONG_INPUT_FORMAT:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Wrong Input format\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Description!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case WRONG_DATE_FORMAT:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Or Wrong Date Format! Enter in DD-MM-YYYY:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"No proper Commands Detected, retype again!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void print(String text){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to print any generic list"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param lists the provided list of generic type"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param \u003cT\u003e the object type"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static \u003cT\u003e void printListGenericType(ArrayList\u003cT\u003e lists) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (lists !\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for (T i: lists) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                print(i.toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (lists.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(\"You don\u0027t have any Deadlines!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(\"\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * convert LocalDate object into readable string format without year"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * E.g 12 JUN"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static String convertDateToString(LocalDate date){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String stringDate \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * convert LocalDate object into readable string format with year included"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * E.g 12 JUN 20"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static String convertDateToStringWithYear(LocalDate date){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String stringDate \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM YY\"));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printInvalidArgumentsErrorMessage() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(\"Sorry, please check your arguments again.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printModuleAlreadyExistMessage() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(\"The module with the same code already exists.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printModuleNotExistMessage() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.printf(\"The module does not exists.\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printMissingLessonTimingMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(\"The lesson\u0027s time information is missing.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printMissingDeadlineTimingDetailsMessage() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"The deadline\u0027s time information is missing.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printMissingEventDateAndTimeDetailsMessage() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"The event\u0027s date, time or location information is missing.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printEmptyArgumentMessage() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(\"The arguments for this command cannot be empty.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printWrongTimeFormatMessage() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"The format for time should be in HH:MM format.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printInvalidModuleCode() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"The module code is not valid or not typed in.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printInvalidDateFormatMessage() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(\"Please give the date in correct format.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void printInvalidStartEndDate() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"The Start date cannot be after End date\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printInvalidDateMessage() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Please give the date between 2020/10/21 and 2021/05/31.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printInvalidFrequencyMessage() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Frequency should be a digit from 1 to 7\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"E.g. 1 represents Monday, 3 represents Wednesday\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 63,
      "haroic1997": 131,
      "acyang97": 46
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.exception.InvalidReplyException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a command for adding different subclass of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class AddCommand  extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public AddCommand(Task task){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to add the lesson into the schedule manager."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Exceptions settle later, check if method works first."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Main function is to add the lesson into the semesterSchedule of the ScheduleManager."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Note that everthing in the Lesson Object if it is a Lesson object is still in String form."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Convert it to LocalTime if necessary."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param scheduleManager scheduleManager that handles tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleManager moduleManager that handles modules where we need to add task into module."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param ui ui that helps with ui stuff."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - make this work for adding deadlines and events too."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add the tasks to the ModuleManager as well."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (task instanceof Lesson) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            scheduleManager.addLesson((Lesson) task, moduleManager, ui); //add the lesson to the schedule manager"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            // if module code exist in the module manager, simply add the task into the module manager"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            scheduleManager.addEvent((Event) task,moduleManager, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            //System.out.println(moduleManager.getListOfModuleCodes());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            scheduleManager.addDeadline((Deadline) task,moduleManager);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(\"Got it, added deadline to Schedule Manager and Module Manager\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String moduleCode \u003d task.getModuleCode();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        Storage.getStorage().exportData(moduleManager, moduleCode);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        Ui.printSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "t170815518": 3,
      "haroic1997": 25,
      "acyang97": 32
    }
  },
  {
    "path": "src/main/java/seedu/command/AddModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Module;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.exception.InvalidArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.exception.ModuleAlreadyExistsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Represents a command for adding module."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class AddModuleCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    private final Module module;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Creates Module object from arguments given in string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Throws InvalidArgumentsException when the moduleCode is empty or au number is negative."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param strings the argument array in string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @throws InvalidArgumentsException if the argument is invalid or cannot be parsed correctly"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public AddModuleCommand(String[] strings) throws InvalidArgumentsException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String moduleCode \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        String title \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        int au_num \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        ArrayList\u003cString\u003e teachingStaffs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            for (int i \u003d 0; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                String argument \u003d strings[i];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                if (argument \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                switch (argument.substring(0, 2)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    case \"c/\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        moduleCode \u003d argument.substring(2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    case \"t/\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        title \u003d argument.substring(2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    case \"a/\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        au_num \u003d Integer.parseInt(argument.substring(2));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    case \"s/\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        teachingStaffs.add(argument.substring(2));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            throw new InvalidArgumentsException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        if ((moduleCode \u003d\u003d null) || (au_num \u003c 0)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            throw  new InvalidArgumentsException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.module \u003d new Module(moduleCode, title, au_num, teachingStaffs);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(this.module);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.print(\"Successfully added to Module Manager! Have fun suffering from \" + this.module);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(\"Here are your modules you are currently taking! \" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                    \"\\n\" + Arrays.toString(moduleManager.getListOfModuleCodes().toArray()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Storage.getStorage().exportData(moduleManager, this.module.getModuleCode());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printSeparator();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (ModuleAlreadyExistsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printModuleAlreadyExistMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 58,
      "acyang97": 20
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * the base for all other Command classes to inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Use this method to execute the commands first for our team project."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public abstract void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 12,
      "acyang97": 10
    }
  },
  {
    "path": "src/main/java/seedu/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DeleteCommand is used to delete a task in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public DeleteCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public DeleteCommand(String description, LocalDate date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        description \u003d description.strip();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        if(this.date \u003d\u003d null){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            scheduleManager.deleteTask(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            moduleManager.deleteTask(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Storage.getStorage().exportData(moduleManager);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "            scheduleManager.deleteTask(description, date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            moduleManager.deleteTask(description, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            String commandString \u003d \"delete \" + description + \" /date \" + this.date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Storage.getStorage().exportAdditionalData(commandString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 6,
      "haroic1997": 16,
      "teachyourselfcoding": 17,
      "acyang97": 8
    }
  },
  {
    "path": "src/main/java/seedu/command/DisplayCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidStartEndDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.exception.ModuleNotExistsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DisplayCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private LocalDate specificDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String displayOptions; // used to determine what kind of information to display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(String moduleCode){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.moduleCode \u003d moduleCode.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"module\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(String moduleCode, LocalDate specificDate){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.specificDate \u003d specificDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"module with date\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(LocalDate specificDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.specificDate \u003d specificDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"date\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DisplayCommand(LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        displayOptions \u003d \"date with range\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui)  {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (displayOptions) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"module\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    moduleManager.display(moduleCode);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"module with date\": {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    moduleManager.display(moduleCode, specificDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"date\": {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    if (specificDate.equals(LocalDate.now())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        scheduleManager.displayTodaySchedule();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                        scheduleManager.displayDate(specificDate);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                case \"date with range\": {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    scheduleManager.display(startDate, endDate);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (ModuleNotExistsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Ui.printModuleNotExistMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (InvalidStartEndDateException e){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            Ui.printInvalidStartEndDate();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (InvalidDateException e){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            Ui.printInvalidDateMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 6,
      "haroic1997": 70,
      "acyang97": 6
    }
  },
  {
    "path": "src/main/java/seedu/command/EditModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Commands to execute edit the module\u0027s information. This may be implemented by setter functions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * TODO add code"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EditModuleCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 9,
      "acyang97": 12
    }
  },
  {
    "path": "src/main/java/seedu/command/EditTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Commands to execute edit the task\u0027s information. This may be implemented by setter functions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * TODO add code"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EditTaskCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private LocalDate newDate \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String newProperty;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private int newFrequency;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public EditTaskCommand(String description,  LocalDate date, String type,String newProperty){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newProperty \u003d newProperty;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public EditTaskCommand(String description, LocalDate date, String type, LocalDate newDate){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date\u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newDate \u003d newDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public EditTaskCommand(String description, LocalDate date, String type, int newFrequency){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.date\u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newFrequency \u003d newFrequency;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"type\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"description\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"modulecode\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"module code\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"time\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                scheduleManager.editTask(description,date, type, newProperty);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"frequency\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                scheduleManager.editTask(description,date, type, newFrequency);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                scheduleManager.editTask(description,date, type, newDate);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Invalid type\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 9,
      "teachyourselfcoding": 2,
      "-": 42,
      "acyang97": 18
    }
  },
  {
    "path": "src/main/java/seedu/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for exiting the application"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 14,
      "acyang97": 5
    }
  },
  {
    "path": "src/main/java/seedu/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for searching tasks that match the given keywords."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public FindCommand(String keywords){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 18,
      "acyang97": 5
    }
  },
  {
    "path": "src/main/java/seedu/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(ScheduleManager scheduleManager, ModuleManager moduleManager, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui.printHelpGuide();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 17
    }
  },
  {
    "path": "src/main/java/seedu/duequest/DueQuest.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.DueQuestException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.ModuleManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DueQuest class is the main class for running the DueQuest application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private ScheduleManager scheduleManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private ModuleManager moduleManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    static final String FILE_PATH \u003d \"data/duequest.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    static Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * The main function to run the whole Duke app."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //assert false : \"dummy assertion set to fail\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        DueQuest dq \u003d new DueQuest();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            storage \u003d Storage.setUpStorage(args[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            storage \u003d Storage.setUpStorage(null);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        storage.loadData(dq.scheduleManager, dq.moduleManager, dq.ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        dq.run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuest() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.ui.welcomeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.scheduleManager \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * The run method to execute the commands FOR OUR TP!!!!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                c.execute(scheduleManager, moduleManager, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            } catch (NullPointerException e) {  // this has been handled within parser"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ScheduleManager getScheduleManager() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return scheduleManager;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ModuleManager getModuleManager() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return moduleManager;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 22,
      "haroic1997": 24,
      "-": 3,
      "acyang97": 29
    }
  },
  {
    "path": "src/main/java/seedu/exception/EmptyArgumentException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EmptyArgumentException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidArgumentsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class InvalidArgumentsException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidDateException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class InvalidDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidDateRangeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class InvalidDateRangeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidFrequencyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class InvalidFrequencyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidModuleCodeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class InvalidModuleCodeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidReplyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class InvalidReplyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidStartEndDateException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class InvalidStartEndDateException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidTimeFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class InvalidTimeFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/MissingDeadlineTimingDetailsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class MissingDeadlineTimingDetailsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/MissingEventDateAndTimeDetailsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class MissingEventDateAndTimeDetailsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/MissingLessonTimingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class MissingLessonTimingException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/ModuleAlreadyExistsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class ModuleAlreadyExistsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/ModuleNotExistsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class ModuleNotExistsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/exception/WrongDateFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class WrongDateFormatException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4
    }
  },
  {
    "path": "src/main/java/seedu/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *Inherited from Task object, Deadline class has additional attributes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to store deadline timing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Deadline(String moduleCode, String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(description, moduleCode);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return \"[D] \" + super.toString() + \" - \" + super.moduleCode + \" \"  + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTimingInfo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return convertStringToDate(by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public LocalDate convertStringToDate(String stringDate) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(stringDate.trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Deadline deadline \u003d (Deadline) o;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return Objects.equals(deadline.getDate(), this.getDate()) \u0026\u0026"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Objects.equals(deadline.getModuleCode(), super.getModuleCode()) \u0026\u0026"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Objects.equals(deadline.getDescription(), super.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 39,
      "acyang97": 23
    }
  },
  {
    "path": "src/main/java/seedu/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *Inherited from Task object, Event class has additional attributes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to store logistical information."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * FIXME"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " *  - What is the members attribute for?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String startTimeOfEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String dateOfEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String endTimeOfEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    //TODO add these extra attributes in constructors"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Event(String description, String moduleCode, String at, String startTimeOfEvent, String dateOfEvent) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(description, moduleCode);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.startTimeOfEvent \u003d startTimeOfEvent;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.dateOfEvent \u003d dateOfEvent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Event(String description, String moduleCode, String at, String startTimeOfEvent, String endTimeOfEvent, String dateOfEvent) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(description, moduleCode);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.startTimeOfEvent \u003d startTimeOfEvent;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.endTimeOfEvent \u003d endTimeOfEvent;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.dateOfEvent \u003d dateOfEvent;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //this.isDone \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * toString method for the Event object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a string representing an Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * FIXME"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - may want to change how it is being represent."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"[E] \" + super.moduleCode + \" \" + super.description + \" (\" + this.startTimeOfEvent + \" \" + this.dateOfEvent + \" at \" + this.at + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getStartTimeOfEvent() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return startTimeOfEvent;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LocalTime getStartTimeOfEventInLocalTime() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return LocalTime.parse(this.startTimeOfEvent);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getDateOfEvent() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return dateOfEvent;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getEndTimeOfEvent() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return endTimeOfEvent;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LocalTime getEndTimeOfEventInLocalTime() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return LocalTime.parse(this.endTimeOfEvent);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LocalDate getDateOfEventInLocalDate() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return convertStringToDate(dateOfEvent);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LocalDate convertStringToDate(String stringDate) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(stringDate.trim());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "t170815518": 2,
      "haroic1997": 16,
      "acyang97": 73
    }
  },
  {
    "path": "src/main/java/seedu/task/Lesson.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Lesson extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String startTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String endTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private LocalDate specificDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Constructor of Lesson object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param description to say if it is a lecture or tutorial or lab etc"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode module code"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param frequency tells us the day of the week. The lesson will be added to that particular day in every week."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param startTime the start time of the lesson"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param endTime the end time of the lesson"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Lesson(String description, String moduleCode, int frequency, String startTime, String endTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(description, moduleCode, frequency);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super.taskType \u003d \"L\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to get the day of the week where which the lesson will be held on."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return this will return me the day in DayOfWeek. eg, return MONDAY, TUESDAY, WEDNESDAY, etc."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DayOfWeek getLessonDayInDayOfWeek() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return DayOfWeek.of(this.frequency);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Get the day of the lesson in the week in a String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the day in String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getLessonDay() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return DayOfWeek.of(this.frequency).toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * TODO"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - might want to change the representation of the toString method."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return string representation of the Lesson Object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return \"[L] \" + description + \" - \" + moduleCode + \" \" + this.getLessonDayInDayOfWeek() +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                \" \" + startTime + \" \" + endTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getStartTime(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LocalTime getStartTimeInLocalTime() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return LocalTime.parse(this.startTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getEndTime(){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LocalTime getEndTimeInLocalTime() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return LocalTime.parse(this.endTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return specificDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (this \u003d\u003d o)  {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson lesson \u003d (Lesson) o;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return Objects.equals(startTime, lesson.startTime) \u0026\u0026"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Objects.equals(endTime, lesson.endTime) \u0026\u0026"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Objects.equals(lesson.getModuleCode(), super.getModuleCode()) \u0026\u0026"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Objects.equals(lesson.getFrequency(), super.getFrequency()) \u0026\u0026"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Objects.equals(lesson.getDescription(), super.getDescription());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 2,
      "haroic1997": 14,
      "acyang97": 75
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class that needs to be accessed by Schedule object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Task is a parent class for two child classes, Lesson and Deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Lesson helps to keep track of tasks that have a frequency (weekly)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Deadline acts like normal Deadline like in IP."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected boolean isDone; // should remove this since no longer seem to be useful in our tp."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String taskType; // can be E or D for our project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String moduleCode; // Module this task belongs to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String time; //Time of the event in HH:MM format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected int frequency;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String description, String moduleCode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Creates new Task object, without frequency."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Error message will be printed if the module with the moduleCode doesn\u0027t exist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param description the task description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param moduleCode the code of the module this task relates to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add searching module based on moduleCode(String). Need to search through the ModuleManager."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *  - add error handling."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String description, String moduleCode, int frequency) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //this.isDone \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.date \u003dnull;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //if (this.moduleCode.equals(\"\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //    return \"unMod\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.moduleCode;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public int getFrequency() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.frequency;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public LocalDate getDate(){ return date;}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void maskAsDone() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setModulecode(String newModulecode){ this.moduleCode \u003d newModulecode; }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    public void setDate(String newDate){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "        this.by \u003d newDate;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teachyourselfcoding"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTime( String newTime) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        int time \u003d Integer.parseInt(newTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        if(time \u003e 2359| (time/100)\u003e23|(time%100)\u003e59){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Invalid Time format\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            this.time \u003d newTime;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTasktype(String newTasktype){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        if(newTasktype.equals(\"D\") | newTasktype.equals(\"E\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            this.taskType \u003d newTasktype;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Invalid Task type\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void setFrequency(int newFrequency) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.frequency \u003d newFrequency;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 10,
      "haroic1997": 30,
      "teachyourselfcoding": 7,
      "-": 21,
      "acyang97": 40
    }
  },
  {
    "path": "src/test/java/seedu/ModuleManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.exception.ModuleAlreadyExistsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.ModuleNotExistsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "class ModuleManagerTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void checkIfModuleExist_module_trueIfExist() throws ModuleAlreadyExistsException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ModuleManager moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module1 \u003d new Module(\"CS2113\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module2 \u003d new Module(\"MA4270\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.checkIfModuleExist(module1), true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.checkIfModuleExist(module2), false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (Exception e) {  // ignore exception because this is a valid case"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void getTotalNumberOfModules_modules_numberOfModulesInModuleManager() throws ModuleAlreadyExistsException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ModuleManager moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module1 \u003d new Module(\"CS2113\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module2 \u003d new Module(\"MA4270\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module3 \u003d new Module(\"CS2102\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(moduleManager.getNumberOfModules(), 0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module3);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module3);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 3);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 3);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            moduleManager.addModule(module1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(moduleManager.getNumberOfModules(), 3);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (Exception e) {  // ignore exceptions temporarily"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    void display_displayNonExistentModule_expectException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ModuleManager mm \u003d new ModuleManager();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        assertThrows(ModuleNotExistsException.class,()-\u003e{mm.display(\"CS2113\");});"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    void display_displayNonExistentModuleWithDate_expectException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ModuleManager mm \u003d new ModuleManager();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        assertThrows(ModuleNotExistsException.class,()-\u003e{mm.display(\"CS2113\", LocalDate.now());});"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 6,
      "haroic1997": 16,
      "acyang97": 46
    }
  },
  {
    "path": "src/test/java/seedu/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateDeadline_validDeadlineLineInput_returnsDeadline() throws InvalidDateException,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            WrongDateFormatException, MissingDeadlineTimingDetailsException,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            EmptyArgumentException, InvalidModuleCodeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"deadline CS2113 TP version 1 /by 2021-04-04\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Deadline deadline \u003d Parser.validateDeadline(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(deadline.getModuleCode(), \"CS2113\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(deadline.getDate(), LocalDate.of(2021, 04, 04));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(deadline.getDescription(), \"TP version 1\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateDeadline_inputWithoutDescription_exceptException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"deadline   \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(EmptyArgumentException.class, () -\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateDeadline(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateDeadline_inputWithoutProperDeadline_expectException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"deadline MA3333 20-04-04\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(MissingDeadlineTimingDetailsException.class, () -\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateDeadline(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateDeadline_inputWithDateOutsideRange_expectException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"deadline CS2113 TP version 1 /by 2021-10-10\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidDateException.class, () -\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateDeadline(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input2 \u003d \"deadline CS2113 TP version 1 /by 2019-10-10\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidDateException.class, () -\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateDeadline(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void parseLesson_validLesson_returnsLesson() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input1 \u003d \"lesson online lecture CS2113 /on 5 16:00 18:00\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input2 \u003d \"lesson online lecture CS2113 5 16:00 18:00\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input3 \u003d \"lesson        \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Lesson lesson \u003d Parser.parseLesson(input1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(lesson.getLessonDayInDayOfWeek(), DayOfWeek.FRIDAY);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(lesson.getDescription(), \"online lecture\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(lesson.getModuleCode(), \"CS2113\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(lesson.getStartTime(), \"16:00\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            assertEquals(lesson.getEndTime(), \"18:00\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        } catch (Exception e) {  // ignore exceptions because this is a valid case "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(MissingLessonTimingException.class, () -\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Parser.parseLesson(input2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(EmptyArgumentException.class, () -\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Parser.parseLesson(input3);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void parseLesson_lessonWithInvalidModuleCode_expectException() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"lesson online lecture CS2113TTTT /on 5 16:00 18:00\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidModuleCodeException.class, () -\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Parser.parseLesson(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void parseLesson_lessonWithMissingTimingDetails_expectException() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"lesson online lecture CS2113T 5 18:00\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(MissingLessonTimingException.class, () -\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "t170815518"
        },
        "content": "            Parser.parseLesson(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void parseLesson_lessonWithWrongFrequency_expectException() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"lesson online lecture CS2113T /on 9 18:00 20:00\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidFrequencyException.class, () -\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.parseLesson(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void parseLesson_lessonWithWrongTimeFormat_expectException() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"lesson online lecture CS2113T /on 4 18:000 20:00\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidTimeFormatException.class, () -\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.parseLesson(input);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void verifyModuleCode_validModule_returnsTrue() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode1 \u003d \"MA2101\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode2 \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode3 \u003d \"DSA4211\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(Parser.verifyModuleCode(moduleCode1), true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(Parser.verifyModuleCode(moduleCode2), true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(Parser.verifyModuleCode(moduleCode3), true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void verifyModuleCode_invalidModule_returnsFalse() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode1 \u003d \"A1234\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode2 \u003d \"CS2113TTTT\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String moduleCode3 \u003d \"CS99999\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(Parser.verifyModuleCode(moduleCode1), false);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(Parser.verifyModuleCode(moduleCode2), false);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(Parser.verifyModuleCode(moduleCode3), false);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void parseLesson_validLesson_returnsTrue() throws"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            EmptyArgumentException, MissingLessonTimingException, InvalidModuleCodeException,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            InvalidTimeFormatException, InvalidFrequencyException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"lesson online lecture CS2113 /on 5 16:00 18:00\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson expectedLesson \u003d Parser.parseLesson(input);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson actualLesson \u003d new Lesson(\"online lecture\", \"CS2113\","
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                5, \"16:00\", \"18:00\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson wrongLesson \u003d new Lesson(\"online lecture\", \"CS2113T\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                5, \"16:00\", \"18:00\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(expectedLesson, actualLesson);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(expectedLesson.equals(wrongLesson), false);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateDeadline_validDeadline_returnsTrue() throws"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            WrongDateFormatException, InvalidDateException,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            EmptyArgumentException, MissingDeadlineTimingDetailsException, InvalidModuleCodeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"deadline CS2113 TP version 1 /by 2021-04-04\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Deadline expectedDeadline \u003d Parser.validateDeadline(input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Deadline actualDeadline \u003d new Deadline(\"CS2113\", \"TP version 1\", \"2021-04-04\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(expectedDeadline, actualDeadline);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateEvent_validEventLineInput_returnsEvent() throws InvalidDateException,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            MissingEventDateAndTimeDetailsException, WrongDateFormatException, InvalidTimeFormatException,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            EmptyArgumentException, MissingDeadlineTimingDetailsException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"event CS2113 final exam /at 2021-05-03 14:00 16:00 LT14\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Event event \u003d Parser.validateEvent(input);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        // check the properties of event"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(event.getDateOfEvent(), \"2021-05-03\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(event.getDateOfEventInLocalDate(), LocalDate.of(2021, 05, 03));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(event.getEndTimeOfEvent(), \"16:00\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(event.getAt(), \"LT14\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(event.getModuleCode(), \"CS2113\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(event.getDescription(), \"final exam\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateEvent_emptyEventInput_expectException() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"event   \";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(EmptyArgumentException.class, () -\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateEvent_missingAtEventInput_expectException() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"event CS2113 final exam 2021-05-03 14:00 16:00 LT14\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(MissingEventDateAndTimeDetailsException.class, () -\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateEvent_missingEventDateTimeDetails_expectException() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input \u003d \"event CS2113 final exam /at 2021-05-03 14:00 LT14\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(MissingEventDateAndTimeDetailsException.class, () -\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateEvent_invalidEventDate_expectException() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input1 \u003d \"event CS2113 final exam /at 2021-10-03 12:00 14:00 LT14\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input2 \u003d \"event CS2113 final exam /at 2018-10-03 12:00 14:00 LT14\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidDateException.class, () -\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input1);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidDateException.class, () -\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input2);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void validateEvent_invalidEventTime_expectException() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input1 \u003d \"event CS2113 final exam /at 2021-05-03 12:002 14:00 LT14\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input2 \u003d \"event CS2113 final exam /at 2021-05-03 12:00 14:003 LT14\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input3 \u003d \"event CS2113 final exam /at 2021-05-03 25:19 14:00 LT14\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input4 \u003d \"event CS2113 final exam /at 2021-05-03 12:00 bbbbs LT14\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidTimeFormatException.class, () -\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input1);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertThrows(InvalidTimeFormatException.class, () -\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Parser.validateEvent(input2);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 8,
      "acyang97": 227
    }
  },
  {
    "path": "src/test/java/seedu/ScheduleManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.exception.InvalidStartEndDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.exception.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.task.Lesson;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "class ScheduleManagerTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    //Three part name for a test: methodUnderTest_inputGiven_expectedOutput"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void display_longAgoDate_expectExceptions() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ScheduleManager sm \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        assertThrows(InvalidDateException.class,()-\u003e{ sm.displayDate(LocalDate.parse(\"2010-10-10\"));});"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void display_TooFarAhead_expectExceptions() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ScheduleManager sm \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        assertThrows(InvalidDateException.class,()-\u003e{ sm.displayDate(LocalDate.parse(\"2100-10-10\"));});"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void display_startAndEndDateSwap_expectExceptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ScheduleManager sm \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        assertThrows(InvalidStartEndDateException.class,()-\u003e{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            sm.display(LocalDate.parse(\"2020-11-28\"),LocalDate.parse(\"2020-10-20\"));});"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void checkIfLessonToBeAddedClashesWithCurrentTimetable_validLesson_true() throws"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            MissingLessonTimingException, EmptyArgumentException, InvalidModuleCodeException,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            InvalidTimeFormatException, InvalidFrequencyException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input1 \u003d \"lesson online lecture CS2113 /on 5 16:00 18:00\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson lesson \u003d Parser.parseLesson(input1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ScheduleManager scheduleManager \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ModuleManager moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        scheduleManager.addLesson(lesson, moduleManager, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        boolean result \u003d scheduleManager.checkIfLessonToBeAddedClashesWithCurrentTimetable(lesson);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(result, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void checkIfLessonToBeAddedClashesInADate_validLessonAndDate_true() throws"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            MissingLessonTimingException, EmptyArgumentException, InvalidModuleCodeException,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            InvalidTimeFormatException, InvalidFrequencyException, InvalidDateException,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            MissingEventDateAndTimeDetailsException, WrongDateFormatException,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            MissingDeadlineTimingDetailsException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input1 \u003d \"lesson online lecture CS2113 /on 5 16:00 18:00\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input2 \u003d \"event CS2113 final exam /at 2021-01-15 14:00 16:00 LT14\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson lesson \u003d Parser.parseLesson(input1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Event event \u003d Parser.validateEvent(input2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ScheduleManager scheduleManager \u003d new ScheduleManager();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ModuleManager moduleManager \u003d new ModuleManager();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        scheduleManager.addLesson(lesson, moduleManager, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        scheduleManager.addEvent(event, moduleManager, ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input3 \u003d \"lesson tutorial CS2113 /on 5 14:00 16:00\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson lesson2 \u003d Parser.parseLesson(input3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(true, scheduleManager.checkIfLessonToBeAddedClashesInADate("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                lesson2, LocalDate.of(2021, 1, 15)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input4 \u003d \"lesson tutorial CS2113 /on 5 14:00 17:00\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson lesson3 \u003d Parser.parseLesson(input4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(true, scheduleManager.checkIfLessonToBeAddedClashesInADate("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                lesson3, LocalDate.of(2021, 1, 15)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String input5 \u003d \"lesson tutorial CS2113 /on 5 13:00 17:00\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Lesson lesson4 \u003d Parser.parseLesson(input5);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(true, scheduleManager.checkIfLessonToBeAddedClashesInADate("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                lesson4, LocalDate.of(2021, 1, 15)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 34,
      "acyang97": 44
    }
  },
  {
    "path": "src/test/java/seedu/duequest/DueQuestTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.DueQuestException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.ScheduleManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.exception.InvalidTimeFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.exception.ModuleNotExistsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "class DueQuestTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void addingLesson_addAValidLesson_true() throws ModuleNotExistsException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        DueQuest dq \u003d new DueQuest();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String fullCommand \u003d \"lesson online lecture CS2113 /on 5 16:00 18:00\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        LocalDate date \u003d LocalDate.of(2021, 1, 15);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Command c \u003d  Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            c.execute(dq.getScheduleManager(), dq.getModuleManager(), dq.getUi());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NullPointerException e) {  // this has been handled within parser"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(dq.getScheduleManager().getNumberOfTaskInADay(date), 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(dq.getModuleManager().getNumberOfModules(), 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Module module \u003d dq.getModuleManager().getModule(\"CS2113\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(module.getListOfTasks().size(), 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void addingEvent_addAValidEvent_true() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        DueQuest dq \u003d new DueQuest();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String fullCommand \u003d \"event CS2113 final exam /at 2021-05-03 14:00 16:00 LT14\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        LocalDate date \u003d LocalDate.of(2021, 5, 3);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Command c \u003d  Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            c.execute(dq.getScheduleManager(), dq.getModuleManager(), dq.getUi());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String fullCommand2 \u003d \"event play football /at 2021-05-03 12:00 14:00 Ang Mo Kio\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Command c \u003d  Parser.parse(fullCommand2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            c.execute(dq.getScheduleManager(), dq.getModuleManager(), dq.getUi());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(dq.getScheduleManager().getNumberOfTaskInADay(date), 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    void addingDeadline_addAValidDeadline_true() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        DueQuest dq \u003d new DueQuest();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String fullCommand \u003d \"deadline CS2113 TP version 1 /by 2021-04-04\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        LocalDate date \u003d LocalDate.of(2021, 4, 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Command c \u003d  Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            c.execute(dq.getScheduleManager(), dq.getModuleManager(), dq.getUi());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        assertEquals(dq.getScheduleManager().getNumberOfTaskInADay(date), 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "acyang97": 72
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "#dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 1,
      "-": 22
    }
  }
]
