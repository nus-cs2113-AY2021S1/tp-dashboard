[
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "# DueQuest"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "acyang97": 1
    }
  },
  {
    "path": "src/main/java/seedu/DueQuestException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DukeException is used to represent duke-specific exceptions that are likely"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * to occur"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuestException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    DueQuestExceptionType exceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuestExceptionType getExceptionType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return exceptionType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuestException(DueQuestExceptionType exceptionType){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.exceptionType\u003dexceptionType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 16
    }
  },
  {
    "path": "src/main/java/seedu/DueQuestExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * DukeExceptionType represents the different kind of Duke-specific Exceptions"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public enum DueQuestExceptionType {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    MISSING_DESCRIPTION,WRONG_INPUT_FORMAT,MISSING_DEADLINE, MISSING_EVENT_INFO, INVALID_COMMAND, WRONG_DATE_FORMAT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 6,
      "acyang97": 1
    }
  },
  {
    "path": "src/main/java/seedu/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class for Module Management."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tString moduleCode;  // e.g. ST2132"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tString title;  // e.g. Statistics"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tint aUNumber;  // e.g. 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tString[] teachingStaffs \u003d new String[5];  // e.g. [\"Dr.Lim(lim@e.nus.sg)\",]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * Constructs new Course object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * It will print error message when AU number is not in integer."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param moduleCode module\u0027s code in string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param title module\u0027s title in string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param aUNumber the AU number for this module"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param teachingStaffs the list of teaching staffs with their contact"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * FIXME Add error handling"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic Module(String moduleCode, String title, int aUNumber, String[] teachingStaffs) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.aUNumber \u003d aUNumber;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.teachingStaffs \u003d teachingStaffs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setTitle(String title) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.title \u003d title;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setaUNumber(int aUNumber) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.aUNumber \u003d aUNumber;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tpublic void setTeachingStaffs(String[] teachingStaffs) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t\tthis.teachingStaffs \u003d teachingStaffs;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 43
    }
  },
  {
    "path": "src/main/java/seedu/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.FindCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Parser Object is used for translating String user input into"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * a actionable Command object for execution"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Parser(){}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Convert the given string input into a subclass of Command class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * return different subclass of Command class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return a subclass of Command class"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if invalid input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static Command parse(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int taskNum;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (words[0].toLowerCase()){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return  new DoneCommand(taskNum-1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new DeleteCommand(taskNum-1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                String[] sentence \u003d input.toLowerCase().split(\" \",2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                String keywords\u003dsentence[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new FindCommand(keywords);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ToDo todo \u003d validateToDo(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new AddCommand(todo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Deadline deadline \u003d validateDeadline(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Event ev \u003d validateEvent(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                return new AddCommand(ev);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                throw new DueQuestException(DueQuestExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to validate and check for any errors in the user input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * for ToDo object"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param  input representing user input"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return Todo object"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static ToDo validateToDo(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ToDo t;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            t \u003d new ToDo(filteredInput[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to validate and check for any errors in the user input"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * for DeadLine object"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param  input representing user input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return DeadLine object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static Deadline validateDeadline(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Deadline d;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }  else if (!filteredInput[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DEADLINE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] descriptByFilter \u003d filteredInput[1].split(\"/by\",2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String byInfo \u003d parseForDate(descriptByFilter[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            d \u003d new Deadline(descriptByFilter[0],byInfo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to validate and check for any errors in the user input"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * for Event object"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param  input representing user input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return Event object"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DueQuestException if missing information"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static Event validateEvent(String input) throws DueQuestException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Event e;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] filteredInput \u003d input.trim().split(\" \",2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (filteredInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }  else if (!filteredInput[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DueQuestException(DueQuestExceptionType.MISSING_EVENT_INFO);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] descriptAtFilter \u003d filteredInput[1].split(\"/at\",2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String atInfo \u003d parseForDate(descriptAtFilter[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            e \u003d new Event(descriptAtFilter[0],atInfo);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static String parseForDate(String input)  throws DueQuestException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        LocalDate dateFormatted \u003d LocalDate.parse(input.trim(), df);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return dateFormatted.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        throw new DueQuestException(DueQuestExceptionType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 143,
      "acyang97": 11
    }
  },
  {
    "path": "src/main/java/seedu/Schedule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package java.seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class for schedule management."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class Schedule {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * Displays tasks on the days within the range."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * The error message will be printed if startDay and endDay gives wrong range (e.g. endDay \u003c startDay)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param startDay the start of the range"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * @param endDay the end of the range"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * FIXME"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t *  - add code and output based on UG"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t *  - handle the task with frequency!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tvoid display(LocalDate startDay, LocalDate endDay){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * Displays today\u0027s tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t * FIXME"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t *  - add code and output based on UG"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t *  - handle the task with frequency!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\tvoid display() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "t170815518"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 31
    }
  },
  {
    "path": "src/main/java/seedu/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Storage class is used for creating and saving file on the local hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Also used for loading saved data on startup"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Attempt to load saved information on the hard disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return a list of Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @throws FileNotFoundException If there is no saved file in the specified location"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int dashPosition;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int atPosition;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String taskIdentifiers;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String timedateInfo;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String contents \u003d s.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            dashPosition \u003d contents.indexOf(\"-\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            taskIdentifiers \u003d contents.substring(0,dashPosition);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] words \u003d contents.split(\"|\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (words[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                atPosition \u003d contents.indexOf(\"@\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description \u003d contents.substring(dashPosition + 1,atPosition);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                timedateInfo \u003d contents.substring(atPosition + 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if (taskIdentifiers.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Deadline(description.trim(),timedateInfo.trim(),true));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Deadline(description.trim(),timedateInfo.trim()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                atPosition \u003d contents.indexOf(\"@\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description \u003d contents.substring(dashPosition + 1,atPosition);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                timedateInfo \u003d contents.substring(atPosition + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if (taskIdentifiers.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Event(description.trim(),timedateInfo.trim(),true));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new Deadline(description.trim(),timedateInfo.trim()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description \u003d contents.substring(dashPosition + 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if (taskIdentifiers.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new ToDo(description.trim(),true));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    tasks.add(new ToDo(description.trim()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            default: break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Creates a new \"duke.txt\" in the data directory for new users"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void createSavedFile() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"So we have create a duke.txt under the data directory\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        boolean isCreated \u003d f.mkdir();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        File g \u003d new File(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (isCreated) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                g.createNewFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                System.out.println(\"Sorry Couldnt create save file!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Sorry Couldn’t create save file\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to update or refresh the duke.txt contents for scenarios"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * where deletion or change in existing Information occurs"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param t newly updated list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @throws IOException if the saved file is not found in its expected location"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void updateFileContents(ArrayList\u003cTask\u003e t) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks \u003d t;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw0 \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw0.write(\"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (int i \u003d 0;i \u003c tasks.size();i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if (tasks.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType() + \"|\" + tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \" - \" + tasks.get(i).getDescription() + \" @ \" + ((Event) tasks.get(i)).getLocation()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else if (tasks.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType() + \"|\" + tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \" - \" + tasks.get(i).getDescription() + \" @ \" + ((Deadline) tasks.get(i)).getTimingInfo()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType() + \"|\" + tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \" - \" + tasks.get(i).getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to append to the duke.txt contents for scenarios"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * where adding of new data on top of existing data occurs."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param t newly updated list"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @throws IOException if the saved file is not found in its expected location"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void appendToFile(Task t) throws IOException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (t instanceof Event) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType() + \"|\" + t.getStatusIcon()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \" - \" + t.getDescription() + \" @ \" + ((Event) t).getLocation()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType() + \"|\" + t.getStatusIcon()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \" - \" + t.getDescription() + \" @ \" + ((Deadline) t).getTimingInfo()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType() + \"|\" + t.getStatusIcon()"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \" - \" + t.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 154
    }
  },
  {
    "path": "src/main/java/seedu/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Represents the Class for functions related to the CLI User interface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * and used to print out exception messages for troubleshooting purpose."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Ui() { in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *print out the on startup message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        logo +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String welcomeMessage \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"Whats up people! Duke is here to save the day\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"So, what can I do for you?\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.print(welcomeMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * print out the exit message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String byeMessage \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"Aye captain. This is Duke Signing out!\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.print(byeMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *print out a divider line for better readability of CLI"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void showDivider(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"_____________________________________________\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Scan and Read in user input on the CLI"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @return String command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String command\u003din.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Prints the Exception information based on the parameters"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param e DukeExceptionType"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void showError(DueQuestExceptionType e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        switch (e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Deadline!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_EVENT_INFO:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Event Information!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case WRONG_INPUT_FORMAT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Wrong Input Informat\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Description!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case WRONG_DATE_FORMAT:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Missing Or Wrong Date Format! Enter in DD-MM-YYYY:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"No proper Commands Detected, retype again!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 94,
      "acyang97": 1
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a command for adding different subclass of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class AddCommand  extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public AddCommand(Task task){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.task\u003dtask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks.getList().add(tasks.getSize(),task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.getIndex(tasks.getSize() - 1).getTaskType() + \"[\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.getIndex(tasks.getSize() - 1).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.getIndex(tasks.getSize() - 1).getFullDescription()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + \"\\nNow you have \"+ tasks.getSize()+\" tasks in the list.\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            storage.appendToFile(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Something went wrong: \"+ e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 42
    }
  },
  {
    "path": "src/main/java/seedu/command/AddModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Represents a command for adding module."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class AddModuleCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 7
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * the base for all other Command classes to inherit from"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 17
    }
  },
  {
    "path": "src/main/java/seedu/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * DeleteCommand is used to delete a task in the list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DeleteCommand(int taskNum){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.taskNum\u003dtaskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (taskList.getSize()!\u003d0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    taskList.deleteItemFromList(taskNum,storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    System.out.println(\"The list is empty! Nothing to delete!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 29
    }
  },
  {
    "path": "src/main/java/seedu/command/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * DoneCommand is used when an task gets done and the user want to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * indicate the done status on the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DoneCommand(int taskNum){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.taskNum\u003dtaskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        taskList.getIndex(taskNum).maskAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + taskList.getIndex(taskNum).getStatusIcon()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + taskList.getIndex(taskNum).getFullDescription()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            storage.updateFileContents(taskList.getList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Problem with saving file!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 39
    }
  },
  {
    "path": "src/main/java/seedu/command/EditModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Commands to execute edit the module\u0027s information. This may be implemented by setter functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * TODO add code"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EditModuleCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 9
    }
  },
  {
    "path": "src/main/java/seedu/command/EditTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "t170815518"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Commands to execute edit the task\u0027s information. This may be implemented by setter functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * TODO add code"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "t170815518"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": "public class EditTaskCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 9
    }
  },
  {
    "path": "src/main/java/seedu/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for exiting the application"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 20
    }
  },
  {
    "path": "src/main/java/seedu/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for searching tasks that match the given keywords."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public FindCommand(String keywords){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.keywords\u003dkeywords;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ArrayList\u003cTask\u003e list\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Task t: taskList.getList()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if(t.getDescription().contains(keywords)){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        int position\u003d1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Here are the matching Tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (Task i: list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(position + \".\" + \"[\" + i.getTaskType() + \"]\" + \"[\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + i.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + i.getFullDescription());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            position++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 42
    }
  },
  {
    "path": "src/main/java/seedu/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Represents a Command for listing all the tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    taskList.listContents();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 20
    }
  },
  {
    "path": "src/main/java/seedu/duequest/DueQuest.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import seedu.DueQuestException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Duke class is the main class for running the Duke application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DueQuest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    static final String FILE_PATH \u003d \"data/duequest.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DueQuest(String FILE_PATH) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            tasks.listContents();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"Duke couldn\u0027t find duke.txt to load saved data from\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            storage.createSavedFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Used to keep the Duke programme running on repeat until a Exit command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * is detected whereby the program will then exit"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } catch (DueQuestException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                ui.showError(e.getExceptionType());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * The main function to run the whole Duke app"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        new DueQuest(FILE_PATH).run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 48,
      "-": 7,
      "acyang97": 7
    }
  },
  {
    "path": "src/main/java/seedu/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Inherited from Task object, Deadline class has additional attributes"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * to store deadline timing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Deadline(String description, String by,Boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.isDone\u003disDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTimingInfo(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 37
    }
  },
  {
    "path": "src/main/java/seedu/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Inherited from Task object, Event class has additional attributes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * to store logistical information"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    //TODO add these extra attributes in constructors"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    protected String members;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Event(String description, String at,Boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.isDone\u003disDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getLocation(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 4,
      "haroic1997": 27
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import seedu.Module;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "t170815518"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "t170815518"
        },
        "content": " * Class that needs to be accessed by Schedule object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    protected Module moduleBelongTo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    protected int[] frequency;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    protected String notes; // TODO add it in the constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    //FIXME add new event and deadlines to this list whenever created"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Creates new Task object, without frequency."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Error message will be printed if the module with the moduleCode doesn\u0027t exist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param moduleCode the code of the module this task relates to"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * FIXME"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     *  - add searching module based on moduleCode(String)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     *  - add error handling"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public Task(String description, String moduleCode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Creates new Task object, with frequency."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * Error message will be printed if the module with the moduleCode doesn\u0027t exist or the frequency is invalid."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param moduleCode the code of the module this task relates to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * @param frequency the frequency of the task (int[2]), e.g. the event happens on Thursday every 2 week"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     *                  \u003d [4, 2] \u003d [dayOfWeek, interval]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     * FIXME"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     *  - add searching module based on moduleCode(String)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     *  - add error handling"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "t170815518"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public Task(String description, Module moduleCode, int[] frequency) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.moduleBelongTo \u003d moduleCode;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.description\u003d\"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone\u003dfalse;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return taskType ;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void maskAsDone(){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setModuleBelongTo(Module moduleBelongTo) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.moduleBelongTo \u003d moduleBelongTo;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setFrequency(int[] frequency) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "t170815518"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    public void setNotes(String notes) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "t170815518"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "t170815518"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "t170815518": 52,
      "haroic1997": 35
    }
  },
  {
    "path": "src/main/java/seedu/task/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * Tasklist class contain all the relevant function such as Adding, deleting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * and storing the list of task all in one object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    private  ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks\u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.tasks\u003dtasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Task getIndex(int index){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ArrayList\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Print out all the task in a list form"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void listContents() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(\"No list Detected, add some text!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            Ui.showDivider();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for (int j \u003d 0; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            int position \u003d j + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            System.out.println(position + \".\" + \"[\" + tasks.get(j).getTaskType() + \"]\" + \"[\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.get(j).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + tasks.get(j).getFullDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            Ui.showDivider();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * Based on the given index, delete corresponding item in the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param index position for deletion of the task in the list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     * @param storage Storage object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void deleteItemFromList(int index, Storage storage) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\n\" + tasks.get(index).getTaskType()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(index).getStatusIcon()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(index).getFullDescription()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\nNow you have \" + (tasks.size() - 1)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\" tasks in the list.\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    tasks.remove(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        storage.updateFileContents(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(\"Problem with saving file!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Ui.showDivider();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 77
    }
  },
  {
    "path": "src/main/java/seedu/task/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " *Inherited from Task object, Todo class represents a task object with no"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " * additional attributes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.isDone\u003disDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 21
    }
  },
  {
    "path": "src/test/java/seedu/duequest/DueQuestTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package seedu.duequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "class DueQuestTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "acyang97": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "#dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 1,
      "-": 22
    }
  }
]
