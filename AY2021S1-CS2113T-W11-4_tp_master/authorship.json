[
  {
    "path": "data/Quizzes/Misc/Jokes/Chicken.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Topic: Misc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Sub-topic: Jokes"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Question title: Chicken"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Question type: QNA"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "---"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Question: Why did the chicken cross the road?"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Answer: To get to the other side"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 7
    }
  },
  {
    "path": "data/history.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Username: John Doeh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Number of quizzes taken: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quizzes taken: 1 | 4 | 8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quiz: 1 | 10 | 5"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quiz: 4 | 20 | 10"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quiz: 8 | 20 | 10"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quiz: 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q1: 1 | 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q2: 1 | 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q3: 1 | 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q4: 1 | 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q5: 1 | 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q6: 1 | 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q7: 1 | 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q8: 1 | 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q9: 1 | 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q10: 1 | 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quiz: 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q1: 1 | 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q2: 1 | 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q3: 1 | 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q4: 1 | 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q5: 1 | 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q6: 1 | 0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q7: 1 | 0"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q8: 1 | 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q9: 1 | 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q10: 1 | 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q11: 1 | 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q12: 1 | 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q13: 1 | 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q14: 1 | 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q15: 1 | 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q16: 1 | 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q17: 1 | 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q18: 1 | 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q19: 1 | 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q20: 1 | 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Quiz: 8"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q1: 1 | 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q2: 1 | 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q3: 1 | 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q4: 1 | 1"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q5: 1 | 1"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q6: 1 | 0"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q7: 1 | 0"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q8: 1 | 0"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q9: 1 | 0"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q10: 1 | 0"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q11: 1 | 1"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q12: 1 | 1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q13: 1 | 1"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q14: 1 | 1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q15: 1 | 1"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q16: 1 | 0"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q17: 1 | 0"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q18: 1 | 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q19: 1 | 0"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Q20: 1 | 0"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      }
    ],
    "authorContributionMap": {
      "Promethees": 64
    }
  },
  {
    "path": "data/userSettings.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Username: John Doeh"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Vo Quang Hung | [Github](https://github.com/) | [Portfolio](team/johndoe.md) "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](team/johndoe.md) "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Amelia Tan | [Github](https://github.com/) | [Portfolio](team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Minh thong | [Github](https://github.com/) | [Portfolio](team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 5,
      "AmeliaTYR": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.duke.constants.Logos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.settings.Settings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.database.UserSettingsLoader.loadUserSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.ui.UI.printDivider;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.ui.UI.printFarewellMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.ui.UI.printHelloMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Settings set to defaults."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static final int NUMBER_OF_SETTINGS \u003d 1; // currently only username"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String username \u003d \"User\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static ArrayList\u003cString\u003e savedSettings \u003d new ArrayList\u003c\u003e(NUMBER_OF_SETTINGS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Main entry-point for the CLIcker application."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setUserSettingsArrayList(savedSettings, username);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        loadUserSettings(savedSettings);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        username \u003d savedSettings.get(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Take a quiz with\\n\" + Logos.DOTTED_CLICKER_LOGO);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printHelloMessage(username);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printFarewellMessage(username);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Set the values in the array for the saved settings."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param savedSettings Array of saved settings"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username      User input name"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void setUserSettingsArrayList(ArrayList\u003cString\u003e savedSettings, String username) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        savedSettings.add(username);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 29,
      "thngyuxuan": 3,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/ClickerMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClickerMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Greeting message formats. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FAREWELL_GREETING \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"Bye %1$s! Hope to see you again soon!\" + NEWLINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String HELLO_GREETING \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"Hello %1$s! Welcome to CLIcker!\" + NEWLINE + \"What can I do for you?\" + NEWLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Settings loader messages."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String ERROR_READING_FILE_ON_LINE_MSG_FORMAT \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"Error reading settings file! Error on line:\" + NEWLINE + \"%1$s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String LOADING_SETTINGS_MSG \u003d \"Loading userSettings.txt save file...\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String SETTINGS_FILE_EMPTY_MSG \u003d \"userSettings.txt save file empty\" + NEWLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            + \"No previous settings loaded\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String SETTINGS_FILE_NOT_FOUND_MSG \u003d \"userSettings.txt save file not found\" + NEWLINE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            + \"Creating new file...\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String LOADING_HISTORY_MSG \u003d \"Loading history.txt save file...\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String HISTORY_FILE_EMPTY_MSG \u003d \"history.txt save file empty\" + NEWLINE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            + \"No previous settings loaded\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String HISTORY_FILE_NOT_FOUND_MSG \u003d \"history.txt save file not found\" + NEWLINE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            + \"Creating new file...\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** File creator function messages.  */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NEW_FILE_CREATED_MSG_FORMAT \u003d \"New file created\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String IO_ERROR_WHEN_MAKING_FILE_MSG \u003d \"IO error when making file!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_ALREADY_EXISTS_MSG \u003d \"File already exists.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_CREATED_PATH_MSG \u003d \"File created\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String DIRECTORY_CREATED_SUCCESSFULLY_MSG \u003d \"Directory created successfully\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String COULD_NOT_CREATE_DIRECTORY_MSG \u003d \"Sorry, could not create specified directory\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_PATH_TO_DIRECTORY_INVALID_MSG \u003d \"File path to directory invalid!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_NOT_FOUND_MSG \u003d \"File does not exist.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_AUTO_CREATED_MSG \u003d \"Auto creating new file\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 27,
      "Promethees": 5,
      "-": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/DataFileConvention.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class DataFileConvention {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Separates different data components. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String COMPONENT_DIVIDER \u003d \"----------------------------\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/FilePaths.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Default file paths for save files."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FilePaths {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Default path to file for saving settings.  */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String DEFAULT_USER_SETTINGS_FILE_PATH \u003d \"data/userSettings.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Test file path to see where the files save. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String TEST_FILE_PATH \u003d \"testFile.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Path to store user past history. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String HISTORY_FILE_PATH \u003d \"data/history.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** The general path to store the statistics of the past quizzes. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String STATS \u003d \"data/Stats/stats\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 12,
      "Promethees": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/InputMarkers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Special symbols to mark specific strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class InputMarkers {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Used to mark off comment lines in the text-ui-test input.  */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String INPUT_COMMENT_MARKER \u003d \"#\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/RegexStrings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Regex strings used for comparison and format checking."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class RegexStrings {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Regex to detect a blank line. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BLANK_STRING_REGEX \u003d \"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/Tags.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class Tags {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Settings file loader tags. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    //public static final String DIVIDER_CHOICE_TAG \u003d \"Divider choice:\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String USERNAME_TAG \u003d \"Username:\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/database/Database.txt",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "MCQ: When a new topic is created \u003d\u003e"
      }
    ],
    "authorContributionMap": {
      "Promethees": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/database/FileFunctions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.FilePathInvalidException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.COULD_NOT_CREATE_DIRECTORY_MSG;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.DIRECTORY_CREATED_SUCCESSFULLY_MSG;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.FILE_ALREADY_EXISTS_MSG;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.FILE_AUTO_CREATED_MSG;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.FILE_CREATED_PATH_MSG;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.FILE_NOT_FOUND_MSG;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.FILE_PATH_TO_DIRECTORY_INVALID_MSG;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.IO_ERROR_WHEN_MAKING_FILE_MSG;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.NEW_FILE_CREATED_MSG_FORMAT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.InputMarkers.INPUT_COMMENT_MARKER;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.NEWLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.RegexStrings.BLANK_STRING_REGEX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FileFunctions {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Get a file from file path."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath given file path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return file object retrieved from the given file path"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static File getFileFromFilePath(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        File fileFound \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileFound;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * check if a file exists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param file a given file to check"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws FileNotFoundException the file to check was not found"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void checkFileExists(java.io.File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Writes a double new line to the file to create one blank line of space."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath given file path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws IOException unable to write to file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void writeDoubleNewlineToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        appendsStringToFile(NEWLINE, filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        appendsStringToFile(NEWLINE, filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Appends the string to the given file specified by filePath."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param textToAppend string to be appended to the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath filepath to the file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws IOException unable to write to file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void appendsStringToFile(String textToAppend, String filePath) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        java.io.FileWriter fw \u003d new java.io.FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Continue reading through a file until a specific string is found."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param stringSearched indicator string"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param fileScanner    scanner for scanning a file"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return return the line the string is on"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String readFileUntilLineContainsString(String stringSearched, Scanner fileScanner) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileInput \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // read each setting and return the variables accordingly"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileInput \u003d getFileNextLine(fileScanner);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (fileInput.contains(stringSearched)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileInput;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Read non-blank lines of the file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param fileScanner scanner to read through lines in the file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return return a non blank line read from the file"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String getFileNextLine(Scanner fileScanner) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileInput;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileInput \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } while (fileInput.matches(BLANK_STRING_REGEX)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                || fileInput.startsWith(INPUT_COMMENT_MARKER));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileInput;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Create a new file at the specified file path."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath specified file path"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return absolute path of the new path"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String autoCreateNewFile(String filePath) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        File newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FILE_AUTO_CREATED_MSG);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        filePath \u003d pathReplaceIllegalCharacters(filePath);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            checkFileExists(newFile);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            System.out.println(FILE_NOT_FOUND_MSG);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // make the directory"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String directoryPath;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String txtFileName;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // identify placements"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            int endOfDirectoryName \u003d filePath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            int endOfFileName \u003d filePath.indexOf(\".txt\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // check if placement is correct"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (endOfDirectoryName \u003d\u003d -1 || endOfFileName \u003d\u003d -1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                throw new FilePathInvalidException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    directoryPath \u003d filePath.substring(0, endOfDirectoryName);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    txtFileName \u003d filePath.substring(endOfDirectoryName + 1, endOfFileName).trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    throw new FilePathInvalidException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //Creating a File object"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            File file \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //Creating the directory"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            boolean isFileCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (isFileCreated) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                System.out.println(DIRECTORY_CREATED_SUCCESSFULLY_MSG);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                filePath \u003d directoryPath + \"/\" + txtFileName + \".txt\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                System.out.println(COULD_NOT_CREATE_DIRECTORY_MSG);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FilePathInvalidException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            System.out.println(FILE_PATH_TO_DIRECTORY_INVALID_MSG);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // make the file"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (newFile.createNewFile()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                System.out.println(FILE_CREATED_PATH_MSG);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                System.out.println(FILE_ALREADY_EXISTS_MSG);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            System.out.println(IO_ERROR_WHEN_MAKING_FILE_MSG);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(NEW_FILE_CREATED_MSG_FORMAT);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return newFile.getAbsolutePath();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Replace \u0027\\\u0027 with \u0027/\u0027 characters in file paths variables."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param path a file path with illegal characters"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return return the path without illegal characters"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String pathReplaceIllegalCharacters(String path) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return path.replace(\u0027\\\\\u0027, \u0027/\u0027);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 191
    }
  },
  {
    "path": "src/main/java/seedu/duke/database/FileLoaders.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FileLoaders {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4,
      "AmeliaTYR": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/database/FileSavers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FileSavers {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/database/HistoryLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.SettingObjectWrongFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.parsers.Parsers;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.ERROR_READING_FILE_ON_LINE_MSG_FORMAT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.LOADING_HISTORY_MSG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.HISTORY_FILE_NOT_FOUND_MSG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FilePaths.HISTORY_FILE_PATH;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.Tags.USERNAME_TAG;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.database.FileFunctions.autoCreateNewFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.database.FileFunctions.readFileUntilLineContainsString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class HistoryLoader {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void loadHistorySettings(ArrayList\u003cString\u003e savedHistory) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(LOADING_HISTORY_MSG);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            File userHistoryFile \u003d FileFunctions.getFileFromFilePath(HISTORY_FILE_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            FileFunctions.checkFileExists(userHistoryFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            readUserSettingsFile(savedHistory, userHistoryFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(HISTORY_FILE_NOT_FOUND_MSG);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            autoCreateNewFile(HISTORY_FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void readUserSettingsFile(ArrayList\u003cString\u003e savedHistory, File userHistoryfile)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Scanner userHistoryFileScanner \u003d new Scanner(userHistoryfile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String fileLine \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String username \u003d \"temp\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String parsedString;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            fileLine \u003d readFileUntilLineContainsString(USERNAME_TAG, userHistoryFileScanner);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            parsedString \u003d Parsers.parseFileObject(fileLine, USERNAME_TAG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (!parsedString.isBlank()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                username \u003d parsedString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                setUserHistoryArrayUsername(savedHistory, username);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (SettingObjectWrongFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.printf(ERROR_READING_FILE_ON_LINE_MSG_FORMAT, fileLine);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void setUserHistoryArrayUsername(ArrayList\u003cString\u003e savedHistory, String username) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        savedHistory.set(0, username);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/database/UserSettingsLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.SettingObjectWrongFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.parsers.Parsers;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.ERROR_READING_FILE_ON_LINE_MSG_FORMAT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.LOADING_SETTINGS_MSG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.SETTINGS_FILE_NOT_FOUND_MSG;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.FilePaths.DEFAULT_USER_SETTINGS_FILE_PATH;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.FilePaths.TEST_FILE_PATH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.USERNAME_TAG;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.database.FileFunctions.autoCreateNewFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.database.FileFunctions.readFileUntilLineContainsString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class UserSettingsLoader {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void loadUserSettings(ArrayList\u003cString\u003e savedSettings) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(LOADING_SETTINGS_MSG);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            File userSettingsFile \u003d FileFunctions.getFileFromFilePath(DEFAULT_USER_SETTINGS_FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            FileFunctions.checkFileExists(userSettingsFile);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            readUserSettingsFile(savedSettings, userSettingsFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            System.out.println(SETTINGS_FILE_NOT_FOUND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            autoCreateNewFile(DEFAULT_USER_SETTINGS_FILE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //autoCreateNewFile(TEST_FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void readUserSettingsFile(ArrayList\u003cString\u003e savedSettings, File userSettingsFile)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Scanner userSettingsFileScanner \u003d new Scanner(userSettingsFile);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileLine \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String username \u003d \"temp\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String parsedString;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileLine \u003d readFileUntilLineContainsString(USERNAME_TAG, userSettingsFileScanner);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedString \u003d Parsers.parseFileObject(fileLine, USERNAME_TAG);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (!parsedString.isBlank()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                username \u003d parsedString;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                setUserSettingsArrayUsername(savedSettings, username);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (SettingObjectWrongFormatException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            System.out.printf(ERROR_READING_FILE_ON_LINE_MSG_FORMAT, fileLine);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Sets the default settings to saved settings array."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param savedSettings array of saved settings"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username      user input name"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void setUserSettingsArrayUsername(ArrayList\u003cString\u003e savedSettings, String username) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        savedSettings.set(0, username);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 68
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/FileEmptyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FileEmptyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/FilePathInvalidException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FilePathInvalidException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/SettingObjectWrongFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class SettingObjectWrongFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/functions/CommandExecutor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.functions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.parsers.CommandChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class CommandExecutor {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void executeCommand(CommandChecker commandChecker) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        switch (commandChecker) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //print help function"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case SETTINGS:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //modify settings"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case ADD:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //add quiz question"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // list quiz questions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case HISTORY:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //print user history"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case STATS:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //print user stats"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case REVIEW:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //review questions under certain topics"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case QUIZ:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //take a quiz"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case CLEAR:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //clear all quizzes"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //close the program"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //print confused message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/parsers/CommandChecker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public enum CommandChecker {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    SETTINGS,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    ADD,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    HISTORY,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    STATS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    REVIEW,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    QUIZ,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    CLEAR,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    UNRECOGNISED;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *  Figure out the command type from userInput."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput string containing user input command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return the type of command detected"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static CommandChecker extractCommandType(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (userInput.toLowerCase().trim().startsWith(\"help\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.HELP;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"settings\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.SETTINGS;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"add\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.ADD;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.LIST;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"history\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.HISTORY;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"stats\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.STATS;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"review\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.REVIEW;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"quiz\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.QUIZ;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"clear\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.CLEAR;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"exit\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.EXIT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.UNRECOGNISED;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/parsers/Parsers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.SettingObjectWrongFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class Parsers {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Extract the value string from line in settings save file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param fileLine    a line read from the file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param objectTitle the string indicating the type of object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return returns the setting extracted from line in the settings file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws SettingObjectWrongFormatException the linel in the settings file was wrongly formatted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String parseFileObject(String fileLine, String objectTitle)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws SettingObjectWrongFormatException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int settingTitleLength \u003d objectTitle.length();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileObject;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // identify placements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int settingObjectPosition \u003d fileLine.indexOf(objectTitle);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // check if placement is correct"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (settingObjectPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new SettingObjectWrongFormatException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                fileObject \u003d fileLine.substring(settingObjectPosition + settingTitleLength).trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                throw new SettingObjectWrongFormatException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileObject;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/question/Mcq.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Mcq extends Question {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private String topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private String subTopic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    private String[] wrongAnswers \u003d new String[4];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    private String correctAnswer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    int numWrongAnswers;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public Mcq(String correctAnswer, String question, int numWrongAnswers) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(correctAnswer, question);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        setNumWrongAnswers(numWrongAnswers);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setNumWrongAnswers(int numWrongAnswers) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.numWrongAnswers \u003d numWrongAnswers;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setWrongAnswer1(String w1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.wrongAnswers[0] \u003d w1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setWrongAnswer2(String w2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.wrongAnswers[1] \u003d w2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setWrongAnswer3(String w3) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.wrongAnswers[2] \u003d w3;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setWrongAnswer4(String w4) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.wrongAnswers[3] \u003d w4;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getWrongAnswer1() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return wrongAnswers[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getWrongAnswer2() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return wrongAnswers[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getWrongAnswer3() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return wrongAnswers[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getWrongAnswer4() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return wrongAnswers[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean returnResult() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isCorrect;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setTopic(String topic) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * Create respective topic name folder in the database (might refer to the loaders)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param topic name of the stated topic"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void createFolder(String topic) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setSubTopic(String subTopic) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.subTopic \u003d subTopic;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 19,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/duke/questions/Question.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.questions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Question {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/quiz/QuizSuffle.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class QuizSuffle {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/settings/Settings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package seedu.duke.settings;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Settings {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected int dividerNum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Settings() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.name \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.dividerNum \u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Setter for name"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Setter for divider number"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public void setDividerNum(int divider) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if(divider \u003c 1 || divider \u003e 4) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(\"Enter a valid number 1 -4!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            this.dividerNum \u003d divider;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Getter for divider number"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public int getDividerNum() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.dividerNum;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Getter for divider itself"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getDivider() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return UI.getDivider(this.dividerNum);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Getter for name"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/UI.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.FAREWELL_GREETING;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.ClickerMessages.HELLO_GREETING;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Line divider set to default before settings are loaded. Default is the first one."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static String currentLineDivider \u003d getDivider(1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Main Help function"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpMessage(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        switch(input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpAdd();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"settings\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpSettings();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"history\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpHistory();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"stats\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpStats();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"review\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpReview();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"quiz\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpQuiz();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpClear();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelpExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                printHelp();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String[] listCommands \u003d {\"add\", \"settings\", \"list\", \"history\", \"stats\", \"review\", \"quiz\", \"clear\", \"exit\"};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Type \u0027help c\\\\\u003cfunction name here\u003e\u0027 to view help for each command.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Available commands:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        for (String listCommand : listCommands) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(listCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpSettings() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Use the following format for the \u0027settings\u0027 command:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"settings n\\\\\u003cname\u003e d\\\\\u003cdivider option\u003e\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Example: settings n\\\\Alice d\\\\3\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpAdd() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Use the following format for the \u0027help\u0027 command:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"add t\\\\\u003ctopic\u003e st\\\\\u003csubtopic\u003e n\\\\\u003cquiz name\u003e mcq\\\\\u003cnumber of MCQ questions\u003e qna\\\\\u003cnumber of QNA questions\u003e fb\\\\ \u003cnumber of fill in the blanks questions\u003e\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Example: add t\\\\Science st\\\\Chemistry n\\\\stoichiometry quiz 1 mcq\\\\3 mrq\\\\0 qna\\\\4 fb\\\\2\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"This adds a quiz of topic \u0027Science\u0027, subtopic \u0027Chemistry\u0027 and named \u0027stoichiometry quiz 1\u0027, with 3 MCQ questions, 0 MRQ questions, 4 QNA questions, and 2 fill in the blank questions.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpList() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"List all available quizzes by typing \u0027list\u0027.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpHistory() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Show history and results of quizzes taken in this session by typing \u0027history\u0027.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpStats() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Show your results and statistics of a specific quiz by typing \u0027quiz t\\\\QUIZ_INDEX\u0027.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Example: quiz t\\\\3\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpQuiz() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Start a quiz by typing \u0027quiz t\\\\QUIZ_INDEX\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Example: quiz t\\\\2 starts the quiz with QUIZ_INDEX 2.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpReview() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Show the answers for the selected quiz by typing \u0027review t\\\\QUIZ_INDEX\u0027.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"You can find the list of quizzes by QUIZ_INDEX by using the list command.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpClear() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Delete all your saved quizzes in CLIcker by typing \u0027clear\u0027. A warning prompt will be generated before deletion.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpExit() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Exit the program by typing \u0027exit\u0027.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static String getDivider(int input) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String divider;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if(input \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            divider \u003d \"‿︵‿︵‿︵‿︵︵‿︵‿︵‿︵‿︵‿︵‿︵︵‿︵‿︵‿︵‿︵‿︵\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else if (input \u003d\u003d 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            divider \u003d \"---------------------------------------------\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else if (input \u003d\u003d 3) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            divider \u003d \"\u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            divider \u003d \"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return divider;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Prints the personalised greeting message."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username user input name"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printHelloMessage(String username) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.print(String.format(HELLO_GREETING, username));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Prints the personalised farewell message."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username user indicated name"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printFarewellMessage(String username) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.printf(FAREWELL_GREETING, username);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the line divider to the console."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(currentLineDivider);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 28,
      "thngyuxuan": 110,
      "-": 6
    }
  }
]
