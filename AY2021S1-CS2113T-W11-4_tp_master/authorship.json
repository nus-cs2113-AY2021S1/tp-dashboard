[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        attributes \"Main-Class\": \"com.baeldung.fatjar.Application\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 1,
      "Promethees": 23,
      "-": 46
    }
  },
  {
    "path": "data/Names.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reiko Copher"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kim Mushrush"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rosalie Hux"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kesha Barrio"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Eliana Upshaw"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Manuela Naff"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Colleen Eaglin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Nerissa Masters"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Marlene Smullen"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tasia Noren"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Caryn Bibee"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kenisha Son"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Theresia Woody"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Chang Peterka"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Olive Juarbe"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Eneida Leisy"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Laurice Strozier"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dianna Bleakley"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Joeann Harbaugh"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jasmin Maupin"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lawana Cocklin"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Meggan Stoddart"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Santos Therrien"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Peg Wendel"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ian Begin"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arianne Ruggerio"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sharleen Carwile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Taylor Demar"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dortha Daly"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Coletta Jarrell"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jovita Lawry"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Elliott Joiner"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Forrest Moylan"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sammy Meriwether"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Emilee Hernadez"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Beatris Hodgin"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Danelle Randel"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Elijah Hebb"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Clint Riesgo"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Todd Edelman"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ingrid Harley"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Linwood Hennig"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Caroll Berger"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Vertie Scalzo"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Cecily Aaronson"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Luis Groh"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Li Hymer"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Billie Salazar"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hyun Lovern"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Barabara Geno"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Margaret Pickford"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kelli Pollan"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Myron Tison"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Elvera Desjardin"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lita Feinstein"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carmel Mcloud"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mickie Figaro"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Val Leitner"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rolando Hamamoto"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Albertine Hogsett"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Julianne Agudelo"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Pamala Yamashiro"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mohammad Teegarden"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reena Kimpel"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reed Carpenter"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Eusebia Jenson"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rochelle Miramontes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Desire Betty"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Cathi Dore"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bradford Gouin"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Allyn Bibee"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Isabell Rockhill"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Domingo Matzke"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Josefina Clairmont"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Antonio Dunker"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Margarita Casa"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Daina Woodhouse"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Korey Balog"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rosann Lapine"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carlena Reuss"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dianne Douglass"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Barabara Sporer"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mellisa Diederich"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Charline Mcgaha"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rebecca Necessary"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Antwan Reinoso"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Cindy Sachs"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Penney Collington"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Gaylord Featherstone"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alanna Levin"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Stephan Sisneros"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Spencer Toner"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kevin Woods"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Estell Iwamoto"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Gail Rapier"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jeanice Keithley"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Amal Hargrove"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Geri Dicks"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tien Matas"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Yuri Riemann"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bianca Cornish"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zainab Morley"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Molly Bouvet"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Angelo Blanchard"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Roberta Villarreal"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rafi Davila"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lilly-Rose Dougherty"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mikaela Cairns"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Milli Doyle"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Billy Singh"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Catrin Rankin"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Armaan Harris"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Suzannah Orozco"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Charley Clements"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Natalya Rangel"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Osman Britton"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Petra Kidd"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Trent Griffiths"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hajrah Timms"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tonya Knowles"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ellise Knox"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sasha Bowden"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Teddie Mccaffrey"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zuzanna Eastwood"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hughie Kramer"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Amy-Louise Rigby"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arian Frederick"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tarik Burt"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zayd Dennis"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sydney Espinoza"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jimmy Wardle"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Malak Hampton"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rick England"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Elara Beasley"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carolina Hayden"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bailey Glass"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Irene Whyte"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kloe Phillips"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Astrid Castro"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hina John"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Desiree Chapman"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shanay Plummer"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kristy Whittaker"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aaryan Burke"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jazmine Bridges"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kara Rodriquez"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kajetan Colon"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tyla Neal"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Selin Skinner"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sofia Burns"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arham Peralta"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hazel Vaughn"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Gabriela Rosa"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Huda Rogers"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arisha Snyder"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carl Dolan"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dean Jennings"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Iman Deacon"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dawn Keenan"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adina Fry"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adrianna Boyle"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Suman Marquez"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Demi Foreman"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Poppy-Rose Aldred"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sadia Rayner"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Yasir Walls"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jakob Gibbons"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bryson Huffman"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Yolanda Hoover"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kurt Marsden"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Suhayb Burnett"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Andre Paul"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Donald Castaneda"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Denny Mueller"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rickie Hawkins"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Summer-Rose Noel"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rosanna Edmonds"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shaquille Freeman"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Whitney Keith"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Owais Sawyer"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mehdi Gough"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Gianni Kerr"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jagoda Bains"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kane Vargas"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Stacey Brookes"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Misty Watkins"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Danial Spooner"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Abid Cole"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Natasha Coates"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Parris Lin"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mark Sutton"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lorelei Carver"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ronnie Reilly"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Toyah Stuart"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aleisha Jenkins"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sharmin Hurst"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lucinda Kearns"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Josh Welch"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sianna Kouma"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Pippa Morse"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mira Dunne"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Daisy-Mae Cortes"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ava Senior"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Addie Devine"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Savannah Oneill"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Anoushka Dunn"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Karam Frost"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rudi Navarro"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mckenzie Bowden"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Isadora Hogg"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alma Haynes"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Perry Winter"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Eshaan Leblanc"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Darius Smyth"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Morwenna Wilcox"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "John-James Ward"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kaan Torres"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Gwion Fenton"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Darcie Ferry"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Destiny Mosley"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sacha Hume"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jaiden Kelly"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tariq Peck"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zeeshan Mcconnell"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ella-Rose Harding"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aleksandra Marquez"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ann Hoffman"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reilly Collins"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Allison Frye"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kamil Mcgowan"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Wade Vega"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bonnie Ramsay"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Leo Mccaffrey"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Leela Robson"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ana Valentine"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sid Robles"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mert Rigby"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bear Case"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Yusra Orozco"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Erica Browne"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Danish Brook"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bobbie Ryan"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alexandria Bailey"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Diane Melton"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dexter Mejia"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dennis Allan"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Khadeejah Ramirez"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Fahim Frey"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shuaib Daly"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Angel Mccartney"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aaliya Austin"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Silas Cameron"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jake Wilkinson"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Borys Douglas"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zoey Molina"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ayub Owens"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rayhan Cooley"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Renee Bain"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ines Dunlop"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Davey Rich"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Izabela Odling"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bradleigh Black"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Karter Craft"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adelaide Legge"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reon Villegas"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Coco Lutz"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Don Herring"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Corrina Hopper"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shawn Clemons"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Asiya Chester"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Akash Dougherty"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Derry Young"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carley Knott"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Elliott Singh"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jozef Ventura"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Colby Stewart"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Priya Weiss"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hussein Macgregor"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adelle Little"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kay Nelson"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Montell Stone"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Haleemah Sosa"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Candice Shepherd"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rayhaan Neal"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jeremiah Rasmussen"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Yasemin Dalton"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Collette Carr"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kaine Bonner"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Liberty Roach"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ian Cruz"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Matei Cook"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arnav Dawson"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jodie Amin"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Grant Sears"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Daisie Lindsey"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Patrycja Lopez"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ophelia Braun"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mali Keeling"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tyron Snow"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Nabeel Bloggs"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kornelia Larsen"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ignacy Connor"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Theresa Melia"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zahra Ramsay"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alasdair Morrow"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Khadeejah Erickson"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Luisa Campos"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ahsan Choi"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lorelai Bains"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Samual Sadler"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kush Price"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mylah Kirkland"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ari Mustafa"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mohammad Power"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adele Arroyo"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Pixie Holt"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shyla Glass"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Clyde Wagstaff"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Gracie-Leigh Garcia"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mehdi Schmidt"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Koa Broadhurst"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Neive Milner"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Chenai Bernal"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kason Colley"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Avni Weber"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Phoebe Firth"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aj Holder"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ayah Kelley"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Candice Mcdougall"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Liam Kim"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Milton Stanley"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Glenda Woodcock"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lilli Soto"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mert Woodward"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Yanis Mccann"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Leonard Philip"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dario Williamson"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Markus Rice"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Siya Haworth"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zaynab Guthrie"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Paige Peck"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lawson Hudson"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Coral Coates"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Umair Robin"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ishaaq Tran"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Vickie Luna"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Daisy Farrell"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Muhammad Chaney"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Asha Hinton"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zac Holcomb"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bridie Ramirez"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kaif Shields"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sulaiman Walsh"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ellie-Rose Murphy"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alara Watkins"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Audrey Dupont"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zayaan Faulkner"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Daniela Browning"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Riccardo Bostock"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arfa Meyers"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Brenden Stout"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aiesha Jordan"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Giles Martins"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Joshua Robins"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rachel Reed"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Finnley Armitage"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jon-Paul Lin"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Meg Edge"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Leyton Magana"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jai Garner"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shawn Heaton"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Samirah Pike"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ioana Hartley"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jorden Blevins"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Darla Kinney"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Erik Mcarthur"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Clifford Stubbs"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bryson Jacobs"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Darren Gallegos"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lillie Stein"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Randall Herrera"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Keaton Owen"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Nisha Lawrence"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Austin Hassan"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ellis Huber"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carwyn Garrison"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mohammod Wynn"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Prisha Barton"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Riley-Jay Duran"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Nur Fox"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alanah Gentry"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Margot Mcleod"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Savannah Humphreys"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Danyal Montes"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ritik Bolton"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Niamh Spencer"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Carrie Bird"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Santino Mack"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mara Ballard"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Timur Joseph"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bogdan Patterson"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Momina Hail"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reece Prentice"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lesley Whitaker"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Alexia Esquivel"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Selena Marsh"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Darsh Webber"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jamal Dunkley"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aila Huang"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Cherise Fields"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Riccardo Trevino"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Anisa Diaz"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Diane Rigby"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zaki Doherty"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zoya Edwards"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hughie Roth"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jaden Bell"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Krystian Bush"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Miranda Kirkland"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Anne Sharples"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tamia Burnett"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adelina Luna"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ivy Nolan"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Betty Figueroa"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kaila Garrison"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sufyaan Chadwick"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Nahla Sheldon"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Christiana Woodard"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jon Velazquez"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bea Phillips"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aniya Dillard"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Arianne Wooten"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rahul Mckeown"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sasha Mackay"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sade Whyte"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sophia Reeve"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Luciano Chavez"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Clarence Goulding"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Holli Moore"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Barney Lindsey"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bridie Brewer"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kristi Forrest"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Buddy Mueller"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Mayur Lowery"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Junaid Aguilar"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Charis Houghton"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kuba Clarke"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tashan Hollis"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Reo Odling"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Dua Hussain"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zakary Stein"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Bonnie Robles"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tymoteusz Jarvis"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tarun Doyle"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rehaan Schwartz"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Maya Beattie"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kajol Kavanagh"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Avaya Lynn"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Linzi Soto"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aamir Wainwright"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Evelyn Keenan"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Iona Mcgregor"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Anish Flores"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Orla Mcnally"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ellouise Reeves"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Phoenix Oneil"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Monet Medrano"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sidney Pena"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Macaulay Frost"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Conna Daniels"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Leyton Mccartney"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rida Reese"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kit Brown"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Aurora Maxwell"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Faris Rawlings"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Fergus Pollard"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Olly Guevara"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lyndsey Cannon"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tyler-James Reilly"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "John Mcghee"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Hubert Johns"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zachariah Liu"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Anwar O\u0027Doherty"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Patrik Shepard"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Chaya Burgess"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tiago Povey"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Tahlia Neville"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Rimsha Britt"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Demi-Leigh Clay"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Milton Baxter"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Timur Robinson"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Ameena Hogg"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Kasey Seymour"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Santino Mullins"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Willard Dorsey"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Sama Marin"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Stephanie Gaines"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Laurence Hood"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Zackery Everett"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Jaya Allman"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 500
    }
  },
  {
    "path": "data/bunny.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "number of plot bunnies: 10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "1."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: bunny idea 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "2."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "3."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idae"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: hlpe"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "4."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: cool idea"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: cool"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "5."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: some fun idea"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: fun"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "6."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: kind of awesome idea"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: awesome"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "7."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: some random idea"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: awesome"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "8."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: funny idea"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: fun"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "9."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: some strange idea"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: mystery"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "10."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: idea example"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: unknown"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 42
    }
  },
  {
    "path": "data/characters.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "number of characters: 2"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "name:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "age:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "name:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "age:"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 7
    }
  },
  {
    "path": "data/userSettings.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Username: John Doe"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Divider Choice: 1"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 2
    }
  },
  {
    "path": "data/writings.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "There is/are currently 2 writing(s) in our database"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*id: 38"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Author: kdjfklasdj"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Type: Poem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Title: kjdfkdsjaf"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Topic: sdjafkdsjf"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Date: 10/11/2020"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Reminder: 20/12/2030"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Content: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "dskfjkdlsafj"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "kdajfkldsajflk"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "jfkadjfa"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*id: 583"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Author: dklsjfdksjf"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Type: Essay"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Title: dfkadjfk"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Topic: djkfajds"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Date: 10/11/2020"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Reminder: 21/12/2112"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "*Content: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "djfkladjsf"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "sdlkfjsdaklfj"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "asdlkfjsadklf"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "----------------------------"
      }
    ],
    "authorContributionMap": {
      "Promethees": 26
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ":--------:|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "![Vo Quang Hung](https://via.placeholder.com/100.png?text\u003dPhoto) | Vo Quang Hung | [Github](https://github.com/hungvo0603) | [Portfolio](team/hungvo0603.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "![Aw Yong Wee](https://via.placeholder.com/100.png?text\u003dPhoto) | Aw Yong Wee | [Github](https://github.com/) |  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "![Thng Yu Xuan](https://via.placeholder.com/100.png?text\u003dPhoto) | Thng Yu Xuan | [Github](https://github.com/thngyuxuan) | [Portfolio](team/thngyuxuan.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "![Amelia Tan](https://via.placeholder.com/100.png?text\u003dPhoto) | Amelia Tan | [Github](https://github.com/AmeliaTYR) | [Portfolio](team/ameliatyr.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cimg src \u003d \"graphics/profilePhoto/MinhThong.jpg\" alt \u003d \"Tra Quang Minh Thong\" width \u003d \"200\" height \u003d \"250\"/\u003e | Tra Quang Minh Thong | [Github](https://github.com/Promethees) | [Portfolio](team/promethees.md)"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 3,
      "Promethees": 3,
      "-": 3
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Introduction](#introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Background](#background) \u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Purpose](#purpose) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Scope](#scope) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Design Goals](#design-goals) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Maintainability](#maintainability) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Definitions](#definitions) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Setting up the project in your computer](#setting-up-the-project-in-your-computer) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Design](#design) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Technological view](#technological-overview) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Architecture](#architecture) \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Writing Manager Component](#writing-manager-component) \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Bunny Manager Component](#bunny-manager-component) \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Saving bunnies via the program commands](#saving-bunnies-via-the-program-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Loading bunnies directly into the bunny.txt file](#loading-bunnies-directly-into-the-bunnytxt-file) \u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Usage and storage](#usage-and-storage) \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Word Manager Component](#word-manager-component) \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Name Manager Component](#name-manager-component) \u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "[Implementation](#implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[User interaction overview](#user-interaction-overview) \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Writing Features](#writing-features) \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Constitution (member classes)](#constitution-member-classes) \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Getting reminder for writings scheduled on a specific date](#getting-reminder-for-writings-scheduled-on-a-specific-date) \u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Word Features](#word-features) \u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding a `noun`](#adding-a-noun) \u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding a `verb`](#adding-a-verb) \u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding an `adjective`](#adding-an-adjective) \u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Listing words](#listing-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Generating three random words](#generating-three-random-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Filtering words](#filtering-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Bunny class family overivew](#bunny-class-family-overivew) \u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[`BunnyList`, `BunnyFilter`, and `DeleteBunny` class overview](#bunnylist-bunnyfilter-and-deletebunny-class-overview) \u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`BunnySaver` and `BunnyLoader` class overview](#bunnysaver-and-bunnyloader-class-overview) \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[`GenBunny` class overview](#genbunny-class-overview) \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Bunny command implementations](#bunny-command-implementations) \u003cbr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Adding bunny idea `bunny`](#adding-bunny-idea-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Listing bunny ideas `list bunny`](#listing-bunny-ideas-list-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Filtering bunny ideas: `filter bunny`](#filtering-bunny-ideas-filter-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Saving bunny ideas: `save bunny`](#saving-bunny-ideas-save-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Deleting a bunny idea: `delete bunny`](#deleting-a-bunny-idea-delete-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Generating a random bunny idea: `random bunny`](#generating-a-random-bunny-idea-random-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Resetting the entire list of Bunny ideas: `reset bunny`](#resetting-the-entire-list-of-bunny-ideas-reset-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Names class family](#names-class-family) \u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Overview of main function](#overview-of-main-function) \u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`Names` Storage](#names-storage) \u003cbr\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`Names` Exception Handling](#names-exception-handling) \u003cbr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Names method implementation](#names-method-implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`getName` method](#getname-method) \u003cbr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`filterNames` method](#filternames-method) \u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`listNames` method](#listnames-method) \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`addName` method](#addname-method) \u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [`deleteName` method](#deletename-method) \u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[ClearLoader class](#clearloader-class) \u003cbr\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Aesthetic components](#aesthetic-components) \u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Changing line divider in Fluffle: `divider`](#changing-line-divider-in-fluffle-divider) \u003cbr\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "[Testing](#testing) \u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Using JUnit test](#using-junit-test) \u003cbr\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Using Gradle](#using-junit-test) \u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "[Appendices](#appendices) \u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Appendix A: Product scope](#appendix-a-product-scope) \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; [Target user profile](#target-user-profile) \u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Appendix B: Value proposition](#appendix-b-value-proposition) \u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Appendix C: User Stories](#appendix-c-user-stories) \u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Appendix D: Non-Functional Requirements](#appendix-d-non-functional-requirements) \u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Appendix E: Instructions for manual testing](#appendix-e-instructions-for-manual-testing) \u003cbr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Launch and Shutdown](#launch-and-shutdown) \u003cbr\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Background"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Fluffle is a **desktop app for creative writers**, optimized for use via a **Command Line Interface (CLI)**. It aids users in creating and managing their writings and ideas. As a fast-typing writer, this CLI app is highly suitable for you."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### Purpose"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "This document specified architecture and software design decisions for the creative writing assistant, Fluffle. "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### Scope"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "This describes the software architecture and software design decisions for the implementation of Fluffle. The intended audience of this document is the developers, designers, and software testers of Fluffle."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### Design Goals"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Our goal is to create an app which improves users’ ability of writing and creativity. Developers should work closely with CS2113T’s module instructors, who represent technical advisors and CS2101’s module instructors, who represent non-technical advisors. By adhering to these tutors’ specific requirements, which imitate industrial professional standards, beginner software engineers will be able to levitate their expertises and mindset in the process of developing and presenting a new product."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### Maintainability"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "With the aim of increasing maintainability of Fluffle, separated packages and classes were implemented in strict compliance with Object-oriented Programming. Since it is important to be able to easily change functionality of one class without disturbing other dependent classes, each class only serves one purpose to reduce dependency on other classes. With low coupling and high cohesion, subsequent developers can make minimal effort in maintaining Fluffle."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "## Definitions"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|Terminology|Explanation|"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|--------|----------|"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|Plot bunny|A story idea that refuses to go away until it is written down.|"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|Fluffle|A fluffle is a group of bunnies.| "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|CLI|Command-line Interface. \u003c/br\u003e\u003c/br\u003eA command-line interface (CLI) processes command to a computer program in the form of lines of text. The program in the computer will read the command and start proceeding.|"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|Gradle|A build tool used for automated testing. It checks for code style violations and runs unit tests to ensure the code is functional between iterations.| "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "|IntelliJ|An integrated development environment that used to write and test java code.|"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "## Setting up the project in your computer"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "**Prerequisites:**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* IntelliJ IDE"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Promethees"
        },
        "content": "⚠ **Caution:**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "You should follow the steps with caution. Otherwise, things will not work."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "First, **fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "If you plan to use Intellij IDEA (highly recommended):"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IntelliJ IDEA.\u003cbr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. **Verify the setup**:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "   1. In IntelliJ IDEA, choose to run `Duke.main()`. Gradle will need some time to build the project at first."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "   1. If your setup is correct, you should see something like below:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Write a story with"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ______ _        __  __ _"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |  ____| |      / _|/ _| |"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " | |__  | |_   _| |_| |_| | ___"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |  __| | | | | |  _|  _| |/ _ \\"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " | |    | | |_| | | | | | |  __/"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |_|    |_|\\__,_|_| |_| |_|\\___|"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Hello User! Welcome to Fluffle!"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "What is your name?"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Design"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The following sections describe the high-level overview of our application, Fluffle."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Technological overview"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The Integrated Development Environment, IntelliJ, is used to develop our program. The program is written in Java, and uses Gradle for building and testing purposes. Our source code is mostly original, with some functions imported from the java.util package. The remaining packages and classes which form the structure of our program are independently developed."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Project overview"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Fluffle is built using IntelliJ and all concepts for the user interfaces, as well as the backend data management of the application, was created by our team. Due to the restrictions of the project, the main file format used for storage is .txt. We opted to save the data in the text files in a user readable format as opposed to the comma separated format as it is easier for users to directly refer to and edit their saved files."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The following figure describes the overall architecture of Fluffle."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![UML Fluffle class diagram](graphics/diagrams/Architecture.PNG)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 1: Overview of Fluffle Architecture\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The design of Fluffle contains four main components:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Writing Manager component"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Bunny Manager component"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Word Manager component"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Name Manager component"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "All components can be accessed by the user through Fluffle\u0027s UI. On loading Fluffle, all components will be loaded from the storage. On exiting Fluffle, all components will be saved to the storage."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Writing Manager Component"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Given below is the overall architecture of Fluffle\u0027s writing component."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cimg align \u003d \"center\" alt \u003d \"Writing Manager Component\" src \u003d \"graphics/diagrams/WritingMangerComponent.PNG\"\u003e\u003c/img\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 2: Writing manager architecture\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "In Fluffle, the writings are saved in the local hard drive text file `writings.txt`. Up to now, Fluffle can hold two types of writing: `Poem` and `Essay`. Some operations that can be done on the writings are:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Adding writings to the database."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Deleting writings from the database."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Getting a reminder to continue some writings on a specific date."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Bunny Manager Component"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "There are two methods for the user to load their bunny ideas into the application: loading it using the app or directly editing the `bunny.txt` data file."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Saving bunnies via the program commands"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The bunny ideas can be loaded into Fluffle by the user using the `bunny` command. This command automatically adds these `Bunny` objects into the `bunniesList` ArrayList which can be found in the BunnyList class. the `bunny` command has separate arguments for the idea and genre so the user can easily key in the two components. "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Loading bunnies directly into the bunny.txt file"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The user may directly edit the `bunny.txt` file, though they must be careful to edit it in the correct format similar to how the program works. Specifically for each Bunny, the program will first search for the line with the `BUNNY_IDEA_TAG` as specified in the `Tags` class and parses the idea component of the Bunny. It then searches for the line with the `BUNNY_GENRE_TAG` also specified in the `Tags` class and parses the genre component of the Bunny from there. "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "A sample view of what the user might find in the bunny.txt file is as follows:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "number of plot bunnies: 2"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "1."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: some fantasy related idea"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: fantasy"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "2."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: some random idea"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Since the program only searches for the idea and genre tag, it is lenient when reading in the bunny such that if the user keys in the wrong line divider or index it can still read it in. It can excuse spacing and typo as long as each Bunny is listed with an idea tag followed by its corresponding genre tag. This makes it easy for the user to directly edit the `bunny.txt` file if they wish. It will read the file until it can no longer has a next line in `bunny.txt` to read from."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Usage and storage"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The diagram above is describes the storage of the Bunny ideas in Fluffle. "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "![Bunny Manager Component](graphics/diagrams/Bunny_manager_component.png)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 3: Bunny manager architecture\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Transferring `Bunny` ideas from the `bunniesList` to the `bunny.txt` file via the BunnySaver:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* When the user calls the `save bunny` command from the CLI, the Bunny from bunnies list are read by `saveAllBunny` command."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* The `bunniesList` ArrayList is passed by the `commandExecutor` function in the `CommandExecutor` class."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* The `saveAllBunny` command first prints the number of `Bunny` objects found in the `bunnyList` as follows:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "number of plot bunnies: 10"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* The `BunnySaver` class formats the idea and genre into neatly tagged strings, numbered following their index in the ArrayList and seperated by plain line dividers as follows:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "1."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: bunny idea 1"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "2."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 2"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Transferring `Bunny` ideas from the `bunny.txt` to the `bunniesList` file via the BunnyLoader:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* The `BunnyLoader` class handles the loading of saved `Bunny` objects from the `bunny.txt` file into the `bunniesList`. "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* The format of each `Bunny` object should consist of an idea and genre component, even if the genre component is \"none\". "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* For each of the `Bunny` objects in the printed list in `bunny.txt`, the parsed idea and genre are combined to create a `Bunny` object that is then added to the `bunniesList` ArrayList and can be managed by the user using the bunny related commands."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Note that all the other functions in the bunny related classes such as `BunnyList`, `DeleteBunny`, `BunnyFilter` and `GenBunny` can also access this `bunniesList` ArrayList to perform their various functions as it is passed by reference from the `commandExecutor` function, which imports the `bunniesList` from the `BunnyList` class. Find out more [here](#bunny-class-family)."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Word Manager Component"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Given below is the general architecture of our Word Manager Component."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![WordManagerComponent](graphics/diagrams/WordManagerComponent.PNG)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 4: Word Manager Architecture\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Promethees"
        },
        "content": "In Fluffle, the words list is stored in the local hard drive location `data/words.txt`. "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Fluffle can hold three types of word: `Noun`, `Verb` and `Adjective`. "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Promethees"
        },
        "content": "The operations that can be done on the words list are:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Viewing the words list."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Getting three random words."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Filtering words (by word types or by substrings)."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Name Manager Component"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Given below is the overall architecture of Name Component."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![NameComponent](graphics/diagrams/Names.PNG)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 5: Name Manager Architecture\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Fluffle can hold a list of names for your reference when writing. The names are stored in a text file named `Names.txt`. Some operations that can be done on names are:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Adding a new name."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Removing an exisiting name."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Generating a random name."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Implementation"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### User interaction overview"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "![UML sequence diagram for user interaction](graphics/diagrams/Sequence_diagram_general_command.png)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "After the initial logo printing and registration step, the `main` in the `Duke` class enters a while loop, which will only exit when the `exit` command is detected. This component handles the processing of various commands in Fluffle and makes it easier for developers to add new commands without interfering with implementation of other commands."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "For simplicity when the `CommandExecutor` class is referenced in later UML diagrams in this document, you may assume that it is a continuation of the `excecuteCommand` section of this diagram."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Writing Features"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Constitution (member classes)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Promethees"
        },
        "content": "WritingList: Represent the objects which are particular lists of Writings to be used in the application."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Writings: Represent the objects of the writings, created from user’s input and stored in a database as text. "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "This Writings class is also the parent of 2 subclasses which are Poem and Essay."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Poem: Represents the Writings objects which have type is Poem."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Essay: Represents the Writings objects which have type is Essay."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Promethees"
        },
        "content": "User: Represents the Users registered to the System"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![UML Class diagram for WritingList family](graphics/diagrams/classDiagram_WritingList.png)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 6: WritingList family UML diagram\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The above class diagram describes the overall architecture of Writings class functionalities and associations within the scope of related classes. By checking “start”, “type” command with checkStartCommand() then checkTypeCommand() methods on that sequence respectively, the user should be able to access the process of creating and saving new writings into the database. During this process, the user has the ability of choosing their preferred type of writings(which are either poem or essay at this stage)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Promethees"
        },
        "content": "![UML WritingList family sequence diagram](graphics/diagrams/writingList_whileAddingWriting.png)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 7: General interactions between member classes when generating a new writing\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Promethees"
        },
        "content": "**Implementation**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. The above sequence diagram illustrate the process of adding a new writing to the database of the application. "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. In this case, the database is created under the form of an ArrayList of Writings Objects. "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. At the beginning, the user can start the process by typing `start` into the terminal. "
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. After that, the app will repeatededly asking the using typing in `type` for entering type decision mode."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    1. During this mode, the user will only have options between `poem` and `essay` to choose before entering the main writing\u0027s attribute."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    1. After that, the user\u0027ll go to the stage of inputing the details of the writings such as `topic`, `content`, `reminder date`."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    1. The name of `author` attribute is taken by the name that the user registered at the beginning of the session."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Promethees"
        },
        "content": "The main purpose of this approach is not to make the process of configuring the modes more complicated but to prevent careless typos that usually occur while flags are used to indicate too many attributes."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Getting reminder for writings scheduled on a specific date"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "This feature allows users to be reminded of which writings they should continue on a specific date."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Implementation**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "When the user keys in the command `remind DATE`, where `DATE` is the date the user wants to be reminded about in form of `dd/MM/yyyy`, the program will check the validity of the command by using `CommandChecker.extractCommandType()`. Since the command is recognized, enumeration `REMIND` is returned. Then, the program flow is as follows:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. `WritingReminder.filterWritingsOnADate()` is called by `CommandExecutor.executeCommand()`."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. In `WritingReminder.filterWritingsOnADate()`, the `DATE` will be parsed by `LocalDate.parse()`."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. The Java stream is used to filter the list of writings and get which ones are scheduled for that `DATE`."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Private `WritingReminder.printWritingsOnADate()` will be called to print out the result."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Word Features"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Fluffle contains a word bank that stores words which are keyed in by the user, together with its meaning. The diagram"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "below shows the implementation of the words, as well as the word list classes in the program."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "![UML Words class diagram](graphics/diagrams/Words_UML_Diagram.png)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 8: Words UML Class Diagram\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`WordsList` is an ArrayList which stores the objects of `Words` class. Each object has the following attributes:"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- `Description`: the word itself"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- `Definition`: the definition of the word  "
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- Getters of the description and definition of the object."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Each `Words` object is further classified into `Noun`, `Verb`, or `Adjective` class, which have a getter for its type that "
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "identifies whether it is a `noun`, `verb`, or `adjective`."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "#### Adding a `noun`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows users to add a Noun into the word bank of Fluffle. When the user adds a noun using the `noun` command,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "an object of the `Noun` class is created and added into the ArrayList `WordList`."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "#### Adding a `verb` "
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows users to add a Verb into the word bank of Fluffle. When the user adds a verb using the `verb` command,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "an object of the `Verb` class is created and added into the ArrayList `WordList`."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "#### Adding an `adjective`"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows users to add an Adjective into the word bank of Fluffle. When the user adds an adjective using the `adj` command,"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "an object of the `Adj` class is created and added into the ArrayList `WordList`."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Listing words"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows users to list all the words that are currently stored in Fluffle."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Generating three random words"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature generates three random words for the user."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Filtering words"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "This feature allows users to getting words as they wish. The diagram below shows the overall architecture of filter words functionality."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![UML Filter word class diagram](graphics/diagrams/classDiagram_FilterWords.png)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 9: Filter word UML Class Diagram\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Implementation**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "When the user enters a `filter words` command, the program will check the validity of the command by using `CommandChecker.extractCommandType()`. Since the command is recognized, `FILTER_WORDS` will be returned. Then, the program flow is as follows:"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. `FilterExecutor.executeFilterCommand()` will be called by `CommandExecutor.executeCommand()``. "
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. In `FilterExecutor.executeFilterCommand()` method, the program will:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. Call `FilterType.getTypeOfFilter()` to get the filter type enumeration (`WORD_TYPE`, `STARTING_STRING` or `INCLUDING_STRING`). "
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. Call `FilterCommandSlicer.isNewFilter()` to determine whether the user wants to continue on the last filtered list or start a new filter on an entire word list. "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. Check whether the user has entered a print limit using `FilterCommandSlicer.getWordPrintLimitFromFilterCommand()`. "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. Depending on the filter type, `FilterCommandSlicer.getTargetedWordTypes()` or `FilterCommandSlicer.getTargetedStringTags()` will be called to get an array of strings containing the word types or strings required for the filter process."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. The array of strings will be passed to either one of the three methods `WordsFilter.filterByType()`, `WordsFilter.filterByStartingString()` or `WordsFilter.filterByIncludedString()` to process the filtering."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. Call `FilterList.printFilterList()` to print out the result."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The following sequence diagram shows how the components interact with each other for the scenario where the user issues the command `filter -continue by\\start limit\\10 -cs -cg.`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "![UML Filter word sequence diagram](graphics/diagrams/Sequence_FilterWords.png)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 10: Interactions between components for the command filter -continue by\\start limit\\10 -cs -cg\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "In **Figure 10** above, the flow of the program after it enters the filter process is as follows:"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. The `CommandExecutor` calls `FilterExecutor.executeFilterCommand()`."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. In the method `executeFilterCommand`, `FilterType.getTypeOfFilter()` is called to get the filter mode, which is `START`."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Then, `FilterCommandSlicer.isNewFilter()`, `FilterCommandSlicer.getWordPrintLimitFromFilterCommand()`, `FilterCommandSlicer.getTargetedStringTags()` is called to check whether the program should continue on the last filter list and to get print limit as well as the strings used for filtering."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. The returned result of `FilterCommandSlicer.isNewFilter()` is `true`."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. The returned result of `FilterCommandSlicer.getWordPrintLimitFromFilterCommand()` is an integer `10`."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. The returned result of `FilterCommandSlicer.getTargetedStringTags()` is the array `[\"cs\", \"cg\"]`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Since the filter type is `START`, the method `WordsFilter.filterByStartString()` class is called to execute the main filter process."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Filter list is printed by calling `FilterList.printFilterList()`."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. The filter process terminates."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "   "
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Bunny class family overivew"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "![UML Bunny class diagram](graphics/diagrams/Class_diagram_bunny.png)"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 11:  Bunny ideas UML Class Diagram\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The above class diagram describes the overall architecture of the bunny list functionalities. Recall that the term bunny refers to  plot ideas that have yet to be devloped. "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The above classes provide the functionality of storing such ideas in an organised manner that can easily be searched, saved and loaded."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### `BunnyList`, `BunnyFilter`, and `DeleteBunny` class overview"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The `BunnyList` class has the public ArrayList of bunnies `bunniesList` that is accessed by the `DeleteBunny` class method `deleteBunny` which removes a selected bunny from the `bunniesList` ArrayList. Similarly, `bunniesList` is also accessed by the `BunnyFilter` class which contains the `filterBunny` function which can filter through the list and obtain bunnies with specified keywords in the idea or the genre using the command `filter bunny i\\IDEA g\\GENRE`, where the user may choose to omit either the `IDEA` or the `GENRE` when running the command. "
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### `BunnySaver` and `BunnyLoader` class overview"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The `BunnySaver` class accesses the `bunniesList` and overwrites the current `bunny.txt` file in the data directory, saving all `Bunny` objects into the file using the `saveAllBunny`  method. Bunny objects saved in that file can then be read by the `BunnyLoader` class and added into the `bunniesList` ArrayList each time the program is started up, which is done by calling the `loadBunnyFile` method."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### `GenBunny` class overview"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The `GenBunny` class can access the `bunniesList` as well. The function `pickRandomBunny` from the `GenBunny` class first randomly generates an integer between 0 and the max number of `Bunny` idea in the `bunniesList` ArrayList. It then selects that indexed `Bunny` from the `bunniesList` and returns it to the user. This allows the user to easily choose an idea to start working on without struggling to decide which idea to use."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Bunny command implementations"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Adding bunny idea `bunny`"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "![UML BunnyList sequence diagram](graphics/diagrams/Sequence_diagram_bunny.png)"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003cb\u003e\u003ci\u003eFigure 12:  Bunny list UML Sequence Diagram\u003c/i\u003e\u003c/b\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The user may call upon the `bunny` command to add bunnies to the list. The user input is first processed by the `extractCommandType` method from the `CommandChecker` class, and the command type detected is sent to the `executeCommand` method from the `CommandExecutor` class. The `addBunny` function is called by this method accordingly. The `addBunny` command calls the `parseSingleCharacterTaggedParamsFromUserInput` method from the `Parsers` class to extract the `idea` and `genre` arguments from the command. These are then used to create a new `Bunny` object that is then added to the `bunniesList` ArrayList. The `addBunnyMessage` method from `UI` is then called to print the message that the `Bunny` idea object has been sucessfully added to the ArrayList."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Listing bunny ideas `list bunny` "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "This command works similar to how the `saveAllBunny` command in the `BunnySaver` class works. The function called by the `executeCommand` method is the `listBunny` command of the `BunnyList` class. It iterates through the `bunniesList` and passes each one to the `UI` class method `printBunnyInList`. Once all the `Bunny` objects in the list are printed, it concludes by printing the number of `Bunny` objects found in the list so the user can easily tell how many bunny ideas they have left."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Filtering bunny ideas: `filter bunny`"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The `filter bunny` command is implemented by the `executeCommand` method passing both the `userinput` String and the `bunniesList` ArrayList to the `filterBunny` method in the `BunnyFilter` class. It first checks that the `userinput` has the required arguments using the `parseSingleCharacterTaggedParamsFromUserInput` method to extract the arguments. It then uses streams to filter for the specified keywords in the idea component or the genre component of the `Bunny` and prints the filtered items using the `printFilteredBunny` from the `UI` class."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Saving bunny ideas: `save bunny`"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "When the `save bunny` command is detected by the `commandChecker` method of the `CommandChecker` class, it saves the `Bunny` objects from the `bunniesList` to the `bunny.txt` file as mentioned [above](#usage-and-storage)."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Deleting a bunny idea: `delete bunny`"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "To delete a bunny from the list of bunny, the `deleteBunny` method of the `DeleteBunny` class first parses the given user input string to determine the index of the `Bunny` the user wants to remove from the `bunniesList` ArrayList, then it simply uses the remove method on the ArrayList to remove the specified `Bunny` object."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Generating a random bunny idea: `random bunny`"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The `random bunny` command uses the `pickRandomBunny` method of the `GenBunny` class uses `Random` and the current time to generate a random number, the modulus is used to select the index of the `Bunny` from the `bunniesList`. The method `bunnyRandomlySelected` from the `UI` class handles the retrival and printing of the selected `Bunny`."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Resetting the entire list of Bunny ideas: `reset bunny`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The `reset bunny` command simply calls `clearAllBunny` function to clear the `bunniesList` in the current run of the program. To save the cleared list the function simply reminds the user that they should use the `save bunny` command mentioned above."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Names class family"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "![Names UML Class Diagram](graphics/diagrams/classDiagram_Names.png)"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003ci\u003e\u003cb\u003eFigure 13: Names UML Class Diagram\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Overview of main function"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The above class diagram (Figure 13) describes the overall architecture of the name list functionalities. The `Names` class has the protected ArrayList of names, `nameList`, that is accessed by the `Names` class method `getName` which randomly gets a selected name from the `nameList` ArrayList. Similarly, `nameList` is also accessed by the `Names` class which contains the `filterNames` function which can filter through the list and obtain names with specified keywords using the command `filter name \u003cNAME\u003e`, where the user may choose to omit the `NAME` when running the command. Similarly, `nameList` is also accessed by the `Names` class which contains the `listNames` function which displays all the names stored in the `nameList` ArrayList. This is the same as the `filterNames` function when given no input String. Similarly, `nameList` is also accessed by the `Names` class which contains the `addName` function which adds a name to the list of names stored in the `nameList` ArrayList using the command `add name \u003cNAME\u003e`. The `NAME` cannot be omitted. Similarly, `nameList` is also accessed by the `Names` class which contains the `deleteName` function which removes a name from the list of names stored in the `nameList` ArrayList. The command to do this is `delete name \u003cINDEX\u003e`. The `INDEX` cannot be omitted, and the range of the `INDEX` can be determined from the `listNames` function above."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### Names Storage"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "The `NamesDB` class accesses the `nameList` and overwrites the current `Names.txt` file in the data directory, saving all String objects in `nameList` into the file using the `updateDB` method. String objects saved in that file can then be read by the `NamesDB` class and saved into the `nameList` ArrayList using the `loadDB` method. In the event of the database `Names.txt` not existing, the `NamesDB` class will create the `Names.txt` database and populate the database with 500 names using the `loadDB` method."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### Names Exception Handling"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "As shown in Figure 13, both the NamesDB class and the Names class will create the `NameException` class. This is a subclass that inherits from the `Exception` superclass and passes the exception message to the superclass. In the event of an exception, it is thrown from the methods in `NamesDB` class and `Names` class and handled by the `NameException` class."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### Names method implementation"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### `getName` method"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Loads the database first so we are working with the latest version of the database. Generates a random number within a range and using that number, we can use it as an index and get a random name from `nameList`. Exceptions are also handled properly."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### `filterNames` method"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Loads the database first so we are working with the latest version of the database. Uses filtering to get the list of names matching the String provided. Returns a collection from the `filteredNames` and checks if any names were matched during the filter. If none, then outputs none and if any are found, all are printed. Exceptions are handled properly using the `NameException` class."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### `listNames` method"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Loads the database first so we are working with the latest version of the database. Prints the list of names found in the updated `nameList`. Checks if there are no names stored in `nameList` and prints an appropriate message."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### `addName` method"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Loads the database first so we are working with the latest version of the database. Strips the given name of all extra white spaces and adds it the ArrayList of names named `nameList`. `nameList` is then passed to `NamesDB`\u0027s method called `updateDB`. `updateDB` will then update the text file stored locally named `Names.txt`. Outputs the success of adding a name if successful and throws Exception to `NameException` if invalid."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### `deleteName` method"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Loads the database first so we are working with the latest version of the database. Using the index received, parse the index accordingly. Will handle exceptions in the case the index is not valid. The index will be used to remove the name entry at that index minus one in the `nameList` ArrayList. The updated `nameList` is then passed to the `NamesDB`\u0027s method called `updateDB`. `updateDB` will then update the text file stored locally named `Names.txt`. Outputs the success of deleting a name if successful and throws Exception to `NameException` if invalid."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### ClearLoader class"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Promethees"
        },
        "content": "![ClearLoader Class sequence diagram](graphics/diagrams/ClearLoader_Sequencediagram.png)"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003cp align \u003d \"center\"\u003e\u003cb\u003e\u003ci\u003eFigure 14: Sequence diagram of Clear Loader while operating the removing method for the app\u0027s writings and words\u003c/i\u003e\u003c/b\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Promethees"
        },
        "content": "**Implementation**"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. The above diagram illustare the mechanism of manipulating objects stored in the database by adding the ability of `clear` certain unwanted subjects from the database"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. The main targets of the clearing procedure are the writings and words stored in the database as array listes"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. The process begins when commandChecker detects the command `clear` enter by the users"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Promethees"
        },
        "content": "1. If the syntax is corrected in the form of `clear type\\\u003cTYPE_OF_OBJECT\u003e item\\\u003cFLAG (Optional)\u003e\u003cOBJECT_INDICATOR\u003e`, the process begin"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    1. If the `\u003cTYPE_OF_OBJECT\u003e` chosen by the user is `writing`, the machine is now going to consider the `\u003cFLAG\u003e`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1. If there is no flag, it is detected as the order of the writings stored in the database, the process is going to clear the writings with such order stated by `\u003cOBJECT_INDICATOR\u003e`"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1.If the flag is `-id`, the machine is going the clear the writing with respective `id` from the database"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1. Otherwise, the command is considered as invalid (mostly in case `\u003cOBJECT_INDICATOR\u003e` is not an integer or leads to out of bound objects"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    1. If the `\u003cTYPE_OF_OBJECT\u003e` chosen by the user is `word`, the machine is now goin to consider the `\u003cFLAG\u003e`. There are 3 cases of flags available for this mode"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1. `\u003cFLAG\u003e` is detected as `-noun`: Remove the corresponding item labelled by the followed `\u003cOBJECT_INDICATOR\u003e`"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1. `\u003cFLAG\u003e` is detected as `-adj`: Remove the corresponding item labelled by the followed `\u003cOBJECT_INDICATOR\u003e`"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1. `\u003cFLAG\u003e` is detected as `-verb`: Remove the corresponding item labelled by the followed `\u003cOBJECT_INDICATOR\u003e`"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        1. Otherwise, it is considered as invalid command if the `word` with respective `type` does not exist in the database."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "## Aesthetic components"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Changing line divider in Fluffle: `divider`"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The line divider is saved as a static string in the `UI` class. When the `divider` command is detected, the `changeLineDivider` method from the UI class is called to parse the selected line divider option and the `getDivider` method retrives the new divider String from the `Logos` class and saves it as the new `currentLineDivider` String in the `UI`."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "If you are using IntelliJ IDEA with Gradle, there are two ways to run tests for Fluffle."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Using JUnit test"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- To run all test, in IntelliJ, right click on `test/java/seedu.duke` and choose `Run Tests in \u0027seedu.duke\u0027`"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- To run test on a separate package/class/method, right click on that package/class/method in `test` directory and choose `Run \u0027NAME\u0027`."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Using Gradle"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- To run all test, open the terminal in IntelliJ IDEA, move to the root folder of the project and key in `gradlew clean test` for Windows (`./gradlew clean test` for Mac OS/Linux)."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Appendices"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Appendix A: Product scope"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Target user profile"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The target user group are creative writers."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Writers who enjoy digitally typing up their works and thus can integrate using our CLI based app into their workflow."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Writers who enjoy creating short pieces but lack the organisation to do so."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Writers who want to improve their creative writing skills and need a proper way to achieve it."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Appendix B: Value proposition"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The application aims to provide the writer with the following services:"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* Provide them with an organised way to store and select their plot ideas which may be otherwise abandoned"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* Provide them with customised prompt suggestions to inspire them to write"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* Provide them with a system to organise longer writing projects in a neat and logical manner to facilitate the writing of long works"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Appendix C: User Stories"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v1.0|user|I would like the app to have a word list|keep my list of favorite words and refer to them in my writings|"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v1.0|writer|choose the name of the character generated from the database|write without thinking a lot about my character\u0027s name|"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v1.0|writer|clear and edit the saved writings in my storage|easily change them later on|"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v1.0|writer|generate words from my word list based on word type or some substrings|find the ideas to continue my writings|"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v1.0|writer|continue to filter on my last filter list|narrow down the words I want to use|"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v1.0|writer with a lot of fleeting ideas|a place I can temporarily store all my short ideas |find them easily when I need them|"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|user|check my spelling automatically|don\u0027t spell wrongly|"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|writer|have an app that list all the statistics from my past writings|"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|user|get the inspiration from the app|improve my creative writing skills|"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|user|have a database of my writings|refer to them in the future|"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|writer who uses the filter function in v1.0|limit the filter words printed out on the screen|view them easily if the filter list has a lot of words|"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|writer who is bad at sticking to an upload schedule|be reminded by the app which pieces I need to work on next|continue to hold my writing spirit|"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|writer who frequently uses the app|save the words to local storage and load them when I start the app|save more words than usual|"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|writer facing writers block|generate a random idea from my bunny storage|warm up or brainstorms on my writings|"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "|v2.0|writer facing writers block|have an app that randomly generate the words|brainstorm for my writings based on those words|"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Appendix D: Non-Functional Requirements"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should be a Command-line Interface application."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should work on any common Operating System (Windows, Linux or OS-X platform) as long as Java 11 is installed in the system."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should be user-friendly to new and expert creative writers with average typing speed."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should help creative writers do their tasks faster by commands rather than any other programs that uses mouses and other pointing devices."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should display characters in ISO basic Latin alphabet and basic numbers correctly."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should have local storage of editable text files (.txt)."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should work without requiring an installer."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should work for single user."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Should work without Internet connection."
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### Appendix E: Instructions for manual testing"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Given below are the instructions to test Fluffle manually."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Launch and Shutdown"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Following are the instructions to launch and shutdown Fluffle"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Verify that you have `Java11` or above version installed by typing `java --version` to your computer\u0027s terminal (Command Prompt for Windows, Terminal for MacOS)"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "2. Get the lastest version of **Fluffle** from [here](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases/tag/v2.0)."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Fluffle."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "4. Type in the terminal `java -jar duke.jar` and press Enter. If the setup is correct, you should see something like below:"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Write a story with"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ______ _        __  __ _"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |  ____| |      / _|/ _| |"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " | |__  | |_   _| |_| |_| | ___"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |  __| | | | | |  _|  _| |/ _ \\"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " | |    | | |_| | | | | | |  __/"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |_|    |_|\\__,_|_| |_| |_|\\___|"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Hello User! Welcome to Fluffle!"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "What is your name?"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "5. After entering your name, try typing the `help` command and press Enter to get started."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "6. Some example commands you can try:"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. `noun computer d\\ a smart machine`: to add a noun to your word list."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. `list word`: to view your word list."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "7. If you want to shutdown Fluffle, use the command `exit`."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**For a more specific explanation and demonstration of the commands, visit our User Guide [here](https://ay2021s1-cs2113t-w11-4.github.io/tp/UserGuide.html).**"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#developer-guide)"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 46,
      "hungvo0603": 335,
      "AmeliaTYR": 110,
      "thngyuxuan": 22,
      "Promethees": 83,
      "-": 29
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Fluffle virtual buddy at NUS"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Fluffle is a desktop app for creative writers, optimized for use via a Command Line Interface (CLI). It aids users in creating and managing their writings and ideas. As a fast-typing writer, this CLI app is highly suitable for you."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 2,
      "-": 7
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "# Fluffle User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Introduction](#introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[About this document](#about-this-document) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Quick start](#quick-start) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Features](#features) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Basic CLI commands](#basic-cli-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Viewing help: `help`](#viewing-help-help) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Changing line divider in Fluffle: `divider`](#changing-line-divider-in-fluffle-divider) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Clearing certain object in the database: `clear`](#clearing-a-certain-object-in-the-database-clear) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Closing the program: `exit`](#closing-the-program-exit) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Words list commands](#words-list-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding a noun: `noun`](#adding-a-noun-noun) \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding a verb: `verb`](#adding-a-verb-verb) \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding an adjective: `adj`](#adding-an-adjective-adj) \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Listing words: `list words`](#listing-words-list-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Generating three random words: `three words`](#generating-three-random-words-three-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Filtering words in word list: `filter words`](#filtering-words-in-word-list-filter-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Listing your filter list: `list filter words`](#listing-your-filter-list-list-filter-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Clear all of words stored in the database: `reset words`](#clear-all-of-words-stored-in-the-database-reset-words) \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Bunnies list commands](#bunnies-list-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding bunny idea: `bunny`](#adding-a-bunny-idea-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Listing bunny ideas: `list bunny`](#listing-bunny-ideas-list-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Filtering bunny ideas: `filter bunny`](#filtering-bunny-ideas-filter-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Saving bunny ideas: `save bunny`](#saving-bunny-ideas-save-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Deleting a bunny idea: `delete bunny`](#deleting-a-bunny-idea-delete-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Generating a random bunny idea: `random bunny`](#generating-a-random-bunny-idea-random-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Resetting the entire list of Bunny ideas: `reset bunny`](#resetting-the-entire-list-of-bunny-ideas-reset-bunny) \u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Names list commands](#names-list-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Generating names from name database: `name`](#generating-names-from-name-database-name) \u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Listing names from name database: `list name`](#listing-names-from-name-database-list-name) \u003cbr\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Finding names from name database: `filter name`](#finding-names-from-name-database-filter-name) \u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding name to the name database: `add name`](#adding-names-from-name-database-add-name) \u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Removing a name from the name database: `delete name`](#removing-names-from-name-database-delete-name) \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Writings list commands](#writings-list-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Beginning your writing session: `start`](#beginning-your-writing-session-start) \u003cbr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Choosing the “type” of your writing: `type`](#choosing-the-type-of-your-writing-type) \u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Choosing the “topic” of your writing: `topic`](#choosing-the-topic-of-your-writing-topic) \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Tracking your past writings: `stats`](#tracking-your-past-writings-stats) \u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Getting reminders for your writings scheduled for a specific day: `remind`](#getting-reminders-for-your-writings-scheduled-for-a-specific-date-remind) \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Reset the entire writing list: `reset writings`](#reset-the-entire-writing-list-reset-writings) \u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[FAQ](#faq) \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Glossary](#glossary) \u003cbr\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Command summary](#command-summary) \u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Fluffle is a **desktop app for creative writers**, optimized for **use via a Command Line Interface** (CLI). "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "It aids users in creating and managing their writings and ideas. "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "As a fast-typing writer, this CLI app is highly suitable for you."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "## About This Document"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "This document aims to provide you with the best way to utilize Fluffle for your own writing experience. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "You may want to first have a look at the glossary to be clear on the terminology used in the document."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "If you are a first-time user of Fluffle, make use you follow the instructions below:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Check that your computer has `Java 11` installed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "2. Get the latest **Fluffle** from [here](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "4. Open a command prompt window in the folder by typing \u0027cmd\u0027 in the navigation bar at the top of the window."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "5. In the command prompt window, type`java -jar duke.jar` and press Enter. If the setup is correct, you should see something like below:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Write a story with"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ______ _        __  __ _"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |  ____| |      / _|/ _| |"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " | |__  | |_   _| |_| |_| | ___"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |  __| | | | | |  _|  _| |/ _ \\"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " | |    | | |_| | | | | | |  __/"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " |_|    |_|\\__,_|_| |_| |_|\\___|"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Hello User! Welcome to Fluffle!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "What is your name?"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "5. After entering your name, type the `help` command and press Enter to get started."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "6. Some example commands you can try:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    1. `list words`: List the vocabulary stored in the word list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    1. `filter bunny g\\fantasy`: Filters bunny ideas that are of the fantasy genre."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    1. `exit`: Exits the app."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "7. Refer to the [Features](#features) below for details of each command. A [Command Summary Table](#command-summary) is provided at the end of this User Guide."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "(Quang Hung)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This section includes five subsections which will guide you through all the commands in the five main components of Fluffle: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[`Basic CLI`](#basic-cli-commands), [`Words list`](#words-list-commands), [`Bunnies list`](#bunnies-list-commands), [`Names list`](#names-list-commands) and [`Writings list`](#writings-list-commands)."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "We will adhere to the following format in explaining the syntax of the commands in Fluffle."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "***"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Command format**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Words that are in `UPPER_CASE` are the compulsory parameters that you should provide for the command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  Example: in the command `noun WORD d\\ DESCRIPTION`, `WORD` and `DESCRIPTION` are compulsory parameters that you should key in to add a new noun to the words list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Words that are enclosed in `[square brackets]` are the optional parameters. You can either include or exclude them from your command without getting any errors."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  Example: in the command `list filter words [limit\\PRINT_LIMIT]`, `limit\\PRINT_LIMIT` is optional, and you won’t get any errors if you don’t provide it in the command."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Words that are followed by three dots `...` can be used as many times as you wish."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  Example: in the command `filter words by\\START -TARGET_STRING…`, you can provide as many target strings as you wish. "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  For more examples, please refer to the [filter words](#filtering-words-in-word-list-filter-words) command below."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "***"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Basic CLI Commands"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Basic CLI commands consist of commands that are standard CLI application commands such as help and exit, as well as an aesthetic option to change the line divider."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Viewing help: `help`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Shows a list of commands you can use and what the commands do. Prints the instructions at each stage of the program.  "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Output:  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Type \u0027help FUNCTION_NAME\u0027 to view help for each command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Available commands:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "- help"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "- divider"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- noun"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- verb"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- adj"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- three words"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- bunny"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- list bunny"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- filter bunny"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- save bunny"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- delete bunny"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- random bunny"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "- list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- list filter words"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "- start"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- filter words"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "- stats"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "- reset"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "- name"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "- list name"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "- filter name"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- add name"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- delete name"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- remind"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "- clear"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "- exit"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help [COMMAND_NAME]`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "`help filter name`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Example output: "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "help filter name"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Find all the names from the list of names"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Format: filter name NAME"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Changing line divider in Fluffle: `divider`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Allows the user to change the line divider used in Fluffle."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Format: `divider DIVIDER_OPTION`  "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "The `DIVIDER_OPTION` is a parameter indicating your preferred type of line divider, and can take values from 1 to 3. The list of dividers is:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. \\----------------------------------------------------------------"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "1. +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* `divider 1` changes divider option to 1"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Example output: "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "divider 1"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Changing line divider..."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "divider 3"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u003d^..^\u003d  \u003d^..^\u003d  \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Changing line divider..."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "#### Clearing a certain object in the database: `clear`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Deletes an item of choice from a list in Fluffle. A warning prompt will be generated before deletion.  "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "- `clear type\\TYPE_OF_ITEM item\\SPECIFICATION_MARK_OF_THE_OBJECT` "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Example usage:  "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Promethees"
        },
        "content": "`clear type\\word item\\-noungrass`  "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Example Output:  "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "`Are you sure you want to delete this item grass? Yes/no`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Promethees"
        },
        "content": "There are two major types of clearing:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Promethees"
        },
        "content": "**Clearing a writing:**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* \u003cstrong\u003eClear a writing with respective order in the arraylist (in which the counter starts from 0)\u003c/strong\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Format: `clear type\\writing item\\0`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected effect: Clear the first writing stored in the database (the writing stays on the top expected to see when use command `stats` before apply command `clear`)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* \u003cstrong\u003eClear a writing with respective ID number in the arraylist\u003c/strong\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Format: `clear type\\writing item\\-id5`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected effect: Clear the writing(s) with ID 5 in the database"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Promethees"
        },
        "content": "**Clearing a word:**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* \u003cstrong\u003eRemove a noun from the database\u003c/strong\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Format: `clear type\\word item\\-noungrass`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Expected effect: Check the existence of word \"grass\" with type \"noun\" in the database and then remove it"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* \u003cstrong\u003eRemove an adjective from the database\u003c/strong\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Format: `clear type\\word item\\-adjbeautiful`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Expected effect: Check the existence of word \"beautiful\" with type \"adj\" in the database and then remove it"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* \u003cstrong\u003eRemove a verb from the database\u003c/strong\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Format: `clear type\\word item\\-verbkill`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Expected effect: Check the existence of word \"kill\" with type \"verb\" in the database and then remove it"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Closing the program: `exit`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Exits the program. All data is auto-saved.  "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Words List Commands"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "(Yu Xuan)  "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Fluffle has a word list which stores the words that you wish to store. It can be used to store words that you wish to research more on, or words that you find interesting and may add value to your stories. The more words you add to it, the more useful it becomes."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Adding a noun: `noun`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "(Yu Xuan)  "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a noun, together with its meaning, into the word bank in the program.  "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `noun WORD d\\DESCRIPTION`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Adding a verb: `verb`"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "(Yu Xuan)  "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a verb, together with its meaning, into the word bank in the program.  "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `verb WORD d\\DESCRIPTION`"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Adding an adjective: `adj`"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "(Yu Xuan)  "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "Adds an adjective, together with its meaning, into the word bank in the program.  "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `adj WORD d\\DESCRIPTION`"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Listing words: `list words`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "(Yu Xuan)  "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lists all words stored in the program.  "
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Format: `list words`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Generating three random words: `three words`"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "(Yu Xuan)  "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Generates three random words from the Fluffle word bank. You may use this function when you need inspiration for story ideas.  "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `three words`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Filtering words in word list: `filter words`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "(Quang Hung)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Suppose you need to list out all the nouns in your word bank, or you want to find out the words starting with the "
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "strings “st” and “cg”. In such cases, you can use the `filter words` command to achieve your goal."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Note**: You must key in the parameters in order for the application to work properly."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `filter words [-continue] [limit\\PRINT_LIMIT] by\\TYPE_OF_FILTER -TARGET_STRING...`: "
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- `-continue` is an optional parameter. You can use this tag to tell the program to continue filtering on the last filter list. "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Without this tag, the previous filter list would be cleared, and the program will filter on the entire words list. "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- `limit\\PRINT_LIMIT` is an optional parameter. You can use this tag to indicate the number of words that you want to print "
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "from your filter list. If your filter list has more words than the expected limit, the program will ask whether "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "you want to print out all the words in the list, or you only want to print out the first PRINT_LIMIT words."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- `by\\TYPE_OF_FILTER`: "
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    1. If your `TYPE_OF_FILTER` is `type`, the next `TARGET_STRING` should be some combination of `-verb`, `-noun` and `-adjective`."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    2. If your `TYPE_OF_FILTER` is `start`, the next `-TARGET_STRING` can be one or many strings. "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    If you provide more than one target string, the strings should be separated by the dash symbol `-`."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    3. If your `TYPE_OF_FILTER` is `include`: the next `-TARGET_STRING` can be one or many strings. "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    If you provide more than one target string, the strings should be separated by the dash symbol `-`."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Step-by-step example usages and example outputs:**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Suppose you have a word list of ten words:"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  1. house: a building for people to live in, usually for one family"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  2. grass: a common wild plant with narrow green leaves and stems "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  3. eat: to put food in your mouth, bite it and swallow it."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  4. computer: an electronic machine that can store, organize and find information"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  5. class: a group of students who are taught together"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  6. study: the activity of learning or gaining knowledge"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  7. beautiful: having beauty; giving pleasure to the senses or to the mind"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  8. nice: pleasant or attractive"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  9. meaningful : important and serious"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  10. attack: to use violence to try to hurt or kill somebody"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Now you want to get all nouns and adjectives in your word list. You use the command `filter words by\\type -noun -adjective`"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "There are cases that"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- You didn\u0027t specify the print limit"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Your limit is not an integer"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The program will print out all the words in your filter list."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Printing all 7 word(s) from your filter list:"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  1. house: a building for people to live in, usually for one family"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  2. grass: a common wild plant with narrow green leaves and stems"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  3. computer: an electronic machine that can store, organize and find information"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  4. class: a group of students who are taught together"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  5. beautiful: having beauty; giving pleasure to the senses or to the mind"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  6. nice: pleasant or attractive"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  7. meaningful : important and serious"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Next, you want to get 3 words starting with “h”, “gr”, “co”, “ni”. You can use the command `filter words -continue limit\\3 by\\start -h -gr -co -ni`. "
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "After filtering, you get a total of 4 words, but your limit is 3. The program will ask again whether you would like to print all 4 words:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Your filter list has more than 3 word(s)"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Do you want to print all the words in the filter list? y/n"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* You want to print all the words, so you key in `y` or `yes`. The expected output is:"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Printing all 4 word(s) from your filter list:"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  1. house: a building for people to live in, usually for one family"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  2. grass: a common wild plant with narrow green leaves and stems"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  3. computer: an electronic machine that can store, organize and find information"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  4. nice: pleasant or attractive"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Now you want to get all the words that include the letter “a”. You use the command `filter words -continue limit\\1 by\\include -a`. "
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Since there is only one word, the program will just print it out:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Printing all 1 word(s) from your filter list:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  1. grass: a common wild plant with narrow green leaves and stems"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Listing your filter list: `list filter words`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "(Quang Hung)"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Suppose you want to refer back to the words that have just been filtered recently. "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "In this scenario, you can use the command `list filter words` to print out the filtered list."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Note**: You must key in the parameters in order for the application to work properly."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `list filter words [limit\\PRINT_LIMIT]`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- `limit\\PRINT_LIMIT` is an optional parameter. You can use this tag to indicate the number of words that you want"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " to print from your filtered list. If your filtered list has more words than the expected limit, the program will ask "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " again whether you want to print out all the words in the list, or you only want to print out the first PRINT_LIMIT words."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Example of usage and example outputs:**"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* In this example, suppose you have a filtered list of 5 words. If you want to print the first three words from your "
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "filtered list, you can use the command `list filter words limit\\3`. Since the list has 5 words, the program will ask for your confirmation."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Your filter list has more than 3 words"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Do you want to print all the words in the filter list? y/n"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Now that you don’t want to see the whole list, your input is `n` or `no`."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Printing 3 out of 5 word(s) from your filter list:"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  1. house: a building for people to live in, usually for one family"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  2. grass: a common wild plant with narrow green leaves and stems "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  3. computer: an electronic machine that can store, organize and find information"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Clear all of words stored in the database: `reset words`"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong)"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Remove all of your added words automatically"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "reset words"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Bunnies List Commands"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Bunnies List commands allows you to collate your list of ideas in one place, making it easy for you to find specific ideas. It can randomly pick one for you to work on so you don’t have to waste time deciding on one on your own."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Adding a bunny idea: `bunny`"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adds a bunny idea to the list of bunny ideas in the current run of the program."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "This list is not automatically saved.  "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `bunny i\\IDEA g\\[GENRE]`  "
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* If the `GENRE` is not indicated, it is set as \"none\" by default."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* The program allows duplicate bunnies as some users may have more than 1 idea for the same writing prompt."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "- `bunny i\\test idea 1`"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "- `bunny i\\test idea 2 g\\ fantasy`"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "bunny i\\test idea 2 g\\ fantasy  "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " --------------------------------------------------"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " New bunny added!"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "   idea: test idea 2"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "   genre:  fantasy"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " ---------------------------------------------------"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Listing bunny ideas: `list bunny`"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "If you want to view the list of plot bunnies you have collected, you can use the `list bunny` command to print the full list of bunnies."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `list bunny`  "
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "Example usage: `list bunny`  "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "list bunny"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "-----------------------------------------------------"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Here are the bunnies stored in the program:"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "1."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 1"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: fantasy"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "2."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 2"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: romance"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "3."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 3"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "------------------------------------------------------"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Filtering bunny ideas: `filter bunny`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Filters specific bunny ideas from the list by searching the idea or the genre for specific key terms.  "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Format: `filter bunny i\\[IDEA] g\\[GENRE]`  "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* If you indicate the tag but leave the parameter blank (eg `filter bunny i\\`) then it will not restrict the output of filter by that tag (ie in this case all ideas are selected by the filter)."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* You must include either the `i\\` or `g\\` tag in the command, but the remainder of the command can be left blank."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "- filter bunny i\\test idea 1  "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "- filter bunny i\\test idea 2 g\\ fantasy"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "Example output:"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "filter bunny g\\ fantasy"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "------------------------------------------------------"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "1."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: bunny idea 1"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: fantasy"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "2.  "
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 2"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: fantasy"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "number bunny filter: 2"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "-------------------------------------------------------"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Saving bunny ideas: `save bunny`"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Saves the current list of bunnies in the program into the designated text file. The existing text file is automatically read at the start of the program, and is overwritten when the save function is called."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `save bunny`  "
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "- `save bunny`"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "save bunny"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Bunny list saved!"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Deleting a bunny idea: `delete bunny`"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "You can delete a selected plot bunny from the list of bunny ideas when you have written it or are no longer interested in writing it."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Format: `delete bunny BUNNY_INDEX`"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* `BUNNY_INDEX` is the index of the plot bunny you want to delete from the list"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "- `delete bunny 2`"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "delete bunny 2"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Bunny deleted: "
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: test idea 2"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: none"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Generating a random bunny idea: `random bunny`"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The app can pick a random bunny from your list of plot bunnies for you to work on."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Format: `random bunny`"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "- `random bunny`"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "random bunny"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Random Bunny: "
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  idea: some very funny idea"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "  genre: humor"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "#### Resetting the entire list of Bunny ideas: `reset bunny`"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The app can help you clear the entire list of Bunny ideas if you decide that you want a fresh start with your ideas."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* There is a failsafe such that if you accidentally type in the `reset bunny` command, you can still prevent it from permanatly deleting your list of Bunny ideas saved in `bunny.txt` by typing in `no` when prompted to type save bunny as confirmation. Any Bunny you previously saved would still remain in the list."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Format: `reset bunny`"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "- `reset bunny`"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "reset bunny"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Type in \"save bunny\" to confirm your deletion of the bunny ideas!"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "save bunny"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Bunny list saved!"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Names List Commands"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "(Yong Wee)"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Names List commands allow you to look through a pre-built list of character names offline. You may also compile your own list, and the program can help you pick one out at random so you can start writing right away."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Generating names from name database: `name`"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "(Yong Wee)"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "You can generate a name randomly from the stored database of names."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `name`"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "name"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "name 2"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Listing names from name database: `list name`"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "(Yong Wee)"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "You can display all the names currently stored in the names database. "
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Format: `list name`"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- `list name`"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "list name"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "1. name 1"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "2. name 2"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "3. name 3"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "```"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Finding names from name database: `filter name`"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "(Yong Wee)"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "You can get the list of names after filtering from the stored list of names. "
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `filter name NAME`"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- `filter name 2`"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "filter name 2"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "name 2"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- `filter name name`"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "filter name name"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "1. name 1"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "2. name 2"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "3. name 3"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Adding names from name database: `add name`"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "(Yong Wee)"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "You can add a name to the list of names currently stored in the names database."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `add name NAME`"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- `add name name 3`"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "add name name 3"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "name 3 has been added to the Names list!"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Removing names from name database: `delete name`"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "(Yong Wee)"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "You can remove a name from the list of names currently stored in the names database."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Format: `delete name INDEX`"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example usages:"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- `delete name 3`"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example output:  "
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "delete name 3"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "name 3 has been deleted from the Names list!"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Writings List Commands"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Writings List allows you to keep a collection of short pieces within the program, and can help you track your writing statistics as motivation to consistently practice writing."
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Beginning your writing session: `start`"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong) "
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "Requires you to type the following commands for your writings’ configurations:"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "- `type`"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "- `topic`  "
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "After choosing the “type” and the “topic” configurations, we can start writing our poems and essays."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Choosing the “type” of your writing: `type`"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong)"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "Currently, our application offers you with 2 options of “type”, which are “poem” or “essay”."
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "Promethees"
        },
        "content": "#### Choosing the “topic” of your writing: `topic` "
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong)"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "Promethees"
        },
        "content": "#### (Reserved for v2.1, currently you are only able to choose any arbitrary topic for your writing)"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lists the available topics in the list and pop out the relevant keywords for your writing."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "start"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Please indicate your type by typing in \"type\" command"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "type"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Please let us know your type of writings, either poem or essay"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "poem"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Please let us know your preferred topic, the available are travelling, life story, ghost story, sci-fi, historical"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "ghost story"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Great! The words we have found for you are killing, death and terrify!"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Please let us know the title of your writing"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Der Erlkönig"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Now you can type your content, terminate by typing \"end\""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Wer reitet so spät durch Nacht und Wind?"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Es ist der Vater mit seinem Kind;"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Er hat den Knaben wohl in dem Arm,"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Er faßt ihn sicher, er hält ihn warm."
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Dem Vater grauset\u0027s; er reitet geschwind,"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Er hält in Armen das ächzende Kind,"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Erreicht den Hof mit Mühe und Not;"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "In seinen Armen das Kind war tot."
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "end"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Please indicate the date you want to continue with this writing by keying the date in the format \"dd/MM/yyyy\""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "01/12/2020"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "This Poem, Der Erlkönig has been added"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Done! We have added your writing to our storage! You can type \"stats\" for future reference!"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Tracking your past writings: `stats`"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong)"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Informs the user detailed specifications like IDs, authors, contents, and other attributes of the writings stored in the database. "
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "stats"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "This is a Poem"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Written by Goethe"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Id: 5"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "DER ERLKÖNIG"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Wer reitet so spät durch Nacht und Wind?"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Es ist der Vater mit seinem Kind;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Er hat den Knaben wohl in dem Arm,"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Er faßt ihn sicher, er hält ihn warm."
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Dem Vater grauset\u0027s; er reitet geschwind,"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Er hält in Armen das ächzende Kind,"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Erreicht den Hof mit Mühe und Not;"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "In seinen Armen das Kind war tot."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "This writing was created on 18/10/2020"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "You want to continue on this writing on 01/12/2020"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Getting reminders for your writings scheduled for a specific date: `remind`"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "(Quang Hung)"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Let’s say you are an absent-minded person, and you would like the program to remind you which writings you are about to continue on a specific day. In this scenario, you can use the `remind` command."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Format**: `remind DATE`"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* `DATE` is the date that you want to continue on some of your writings. `DATE` should be in the form of "
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "dd/MM/yyyy, where dd is a 2-digit day, MM is a 2-digit month, and yyyy is a 4-digit year."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Example usage and example output:**"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* You want to know which writings you want to continue on 01/11/2020, so you use the command `remind 01/11/2020`. "
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "The output is as follows:"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "On 01/11/2020, you should continue on the following writing(s):"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  Id: 5"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  Title: DER ERLKÖNIG"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### Reset the entire writing list: `reset writings`"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "Promethees"
        },
        "content": "(Minh Thong)"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Clear the whole writings stored in the database"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "reset writings"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "We have clear all data in the writings list"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "```"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "**Q**: How do I transfer my data to another Computer?"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data .txt files of your previous Fluffle home folder."
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "**Q**: Do I need to leave a space before each input tag?"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**A**: Yes, the space is necessary. (e.g., noun computer engineering d\\the best engineering major)"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "**Q**: Do the parameters need to be keyed in in order?"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**A**: No. Our code will detect the indicators in any order as long as they are properly spaced out. However, there are "
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "still some features that will require you to type in the command in the exact order for the program to work properly."
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "(Amelia Tan)"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "**Bunny** is a short form for the slang term plot bunny, often used in creative writing, which refers to short writing ideas that have yet to be written."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "The following table summarizes all the commands that you need to know when using Fluffle."
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "| Command      | Format, Examples                                                                                      |"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "|--------------|-------------------------------------------------------------------------------------------------------|"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| divider      | `divider DIVIDER_OPTION` \u003cbr\u003eExample: `divider 2` \u003cbr\u003e The list of dividers is: \u003cbr\u003e   1. -------------------------------------------------------------- \u003cbr\u003e  2. \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d \u003cbr\u003e  3. +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |  "
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| help         | `help` \u003cbr\u003e Look through help guide"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "| clear        | `clear`\u003cbr\u003e`clear type\\[TYPE_OF_ITEM] item\\[SPECIFICATION_MARK_OF_THE _OBJECT]`\u003cbr\u003eTYPE_OF_ITEM:\u003cbr\u003e- word: specify that you are trying to clear a word from word list\u003cbr\u003e- Writing: specify that you are trying to clear a writing from writing list\u003cbr\u003eSPECIFICATION_MARK\u003cbr\u003e- If the object is a word, then clear with the respective name\u003cbr\u003e- If the object is a writing, then clear with respective id|                                  |"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| exit         | `exit`\u003cbr\u003eExits the program.  "
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| noun         | `noun [WORD] d\\[DESCRIPTION]`\u003cbr\u003eExample: `noun bus d\\vehicle`                                       |"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| verb         | `verb [WORD] d\\[DESCRIPTION]`\u003cbr\u003eExample: `verb eat d\\to consume`                                    |"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| adjective    | `adj [WORD] d\\[DESCRIPTION]`\u003cbr\u003eExample: `adj hungry d\\having the desire to consume food`            |"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| three words  | `three words`\u003cbr\u003eGenerates three random words from the word list in the program.                     |"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| list words   | `list words`\u003cbr\u003eLists all the words stored in the program."
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "| filter words | `filter [-continue] [limit\\PRINT_LIMIT] by\\TYPE_OF_FILTER -TARGET_STRING...  `\u003cbr\u003e`-continue` (optional): If you want to continue with your last filter list, provide this argument in your command.\u003cbr\u003e`limit\\PRINT_LIMIT` (optional): indicate number of words that you want to print from your filter list\u003cbr\u003e`by\\TYPE_OF_FILTER`:\u003cbr\u003e- type: arguments can be `-verb`, `-noun` and `-adjective`\u003cbr\u003e- start: arguments can be -STRING\u003cbr\u003e- include: arguments can be -STRING|"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "| list filter words  | `list filter [limit\\PRINT_LIMIT]`\u003cbr\u003ePrint the filter list with a limited number of words indicated by `PRINT_LIMIT` (optional parameter)|"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| bunny        | `bunny i\\IDEA g\\[GENRE]`\u003cbr\u003eAdds a bunny idea to the list of bunnies in the current run.             |"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| list bunny   | `list bunny`\u003cbr\u003eLists all the bunny ideas.                                                           |"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| filter bunny | `filter bunny i\\IDEA g\\[GENRE]`\u003cbr\u003eFilters bunny by terms in idea or genre (must have at least 1 filter parameter)|"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| save bunny   | `save bunny`\u003cbr\u003eSaves all the bunny ideas into a text file.                                          |"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "| delete bunny | `delete bunny BUNNY_INDEX` \u003cbr\u003eDeletes a selected bunny from the list. \u003cbr\u003e`BUNNY_INDEX` is the index of the bunny in the list|"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| random bunny | `random bunny` \u003cbr\u003eSelects a random bunny from the list.|"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| name         | `name`\u003cbr\u003eGenerates a random name.                                                                   |"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| list name    | `list name`\u003cbr\u003eList all the stored names.                                                            |"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| filter name  | `filter name \u003cNAME\u003e`\u003cbr\u003eGets the list of names after filtering.                                      |"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| add name     | `add name \u003cNAME\u003e`\u003cbr\u003eAdds a name to the list of stored names.                                        |"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| delete name  | `delete name \u003cINDEX\u003e`\u003cbr\u003eRemoves a name from the list of stored names given the index.               |"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "| stats        | `stats`\u003cbr\u003eShow the content of past writings as well as their basic specifications, e.g: number of lines/sentences/type of the writings/date created/ …..\u003cbr\u003eThis is a poem  \u003cbr\u003eWritten by Goethe\u003cbr\u003eId: 5 \u003cbr\u003e DER ERLKÖNIG\u003cbr\u003eWer reitet so spät, durch Nacht und Wind?\u003cbr\u003eEs ist der Vater mit seinem Kind\u003cbr\u003eEr hält den Knaben wohl in den Armen.\u003cbr\u003eEr faßt ihn sicher, er hält ihn warm.\u003cbr\u003eThis writing was created on 18/10/2020\u003cbr\u003eThis poem has 4 lines, 31 words.\u003cbr\u003e----------------------------------------------------------------|"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "| remind       | `remind DATE`\u003cbr\u003e Show you which writings are scheduled on a specific day.\u003cbr\u003e Example usage: `remind 30/10/2020`|"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "| list         | `list`                                                                                                |"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "| reset        | `reset \u003cNAME_OF_CATEGORY\u003e`\u003cbr\u003eNAME_OF_CATEGORY:\u003cbr\u003e- Reset the respective input category database (e.g, bunny, writings, words,...) |                                                                                  |    "
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[Jump to top](#fluffle-user-guide)"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 134,
      "hungvo0603": 317,
      "AmeliaTYR": 172,
      "thngyuxuan": 103,
      "Promethees": 60,
      "-": 110
    }
  },
  {
    "path": "docs/team/0xz3ro.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "# Yong Wee - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "## 1. Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "After 7 weeks of coding and revisions, a group of 5 enthusiastic NUS Computing students, proudly present to you our newest product, in the scope of CS2113T-Software Engineering and Object Oriented Programming module, **FLUFFLE**!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "**FLUFFLE** is a writer\u0027s swiss army knife of writing tools, idea generation and organisation. While most writing applications provide the user with a GUI, Fluffle provides a CLI interface that is both lightweight and portable. Users can focus on their writing without distractions and can really help advance their writing."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "The latest release of Fluffle can be accessed from **[here](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases/tag/v2.1)**."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "## 2. Summary of Contributions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### 2.1 Code contributed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- The functional and test code contributed can be accessed via **[here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d0xz3ro\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)**."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### 2.2 Enhancement Implemented"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### 2.2.1 Main features enhancements"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Implemented `Names` feature"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- In the `Names` feature implemented, implemented randomization, storage, exception handling, addition, deletion, listing, filtering"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Implemented `SpellChecker` and `Dictionary` classes"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- In the `SpellChecker` feature implemented, implemented storage, parsing, checking spelling"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### 2.2.2 Miscellaneous enhancements"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Enhanced print format for some word-related `help` commands and in-line with the User Guide."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added JUnit test methods for all classes created. This includes the `Names` class and `SpellChecker` class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### 2.3 Contributions to documentation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### 2.3.1 Contributions to Javadoc comments"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Java-doc comments provided for most of the public classes and methods that are implemented."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### 2.3.2 Contributions to the User Guide"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added the Starting of the User Guide and the Quick Start of the guide."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Edited the `help` function based on feedback received"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added the `Names` family of the User Guide"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Helped to format document including team members\u0027 part"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added parts of the Command Summary"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Increased the navigability between sections in the User Guide (added a working Table of Contents, ...)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Proofread User Guide and gave feedback to team members."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "#### 2.3.3 Contributions to the Developer Guide"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added the `Names` class family"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added the overview of Fluffle which was later revised."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Added Figure 10 UML Class Diagram"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### 2.5 Contributions to team-based tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Setup the team repo as instructed by the details on the module website."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Provided helpful advice to team members when they asked questions."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Updated v1.0 and v2.0."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Reported issues and evaluated team members\u0027 code, helping them to fix their issues if needed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### 2.6 Contributions beyond the project team"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Reviewed and gave thoughtful feedback on other team\u0027s Developer Guide."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Reported bugs for other team\u0027s project."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "- Replied and gave suggestions to other teams who seeked clarification from me. [here](https://github.com/0xZ3RO/ped/issues/2)"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 55
    }
  },
  {
    "path": "docs/team/ameliatyr.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "# Amelia - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Within a time span of 7 weeks of hard work, we, a group of 5 enthusiatic NUS Computing students, proudly present to you our newest product, in the scope of CS2113T-Software Engineering and Object Oriented Programming module, **FLUFFLE**!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "**FLUFFLE** is the writers swiss army knife of writing tools and idea organisation. While most writing applications focus on providing the user with a GUI they can type their story in, Fluffle caters specifically to creative writers, with various functions to help the creative process along and make the writing process spontaneous and smooth as possible. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Code contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "tP Dashboard contribution can be found [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dtotalCommits\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dAmeliaTYR\u0026tabRepo\u003dAY2021S1-CS2113T-W11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Enhancements implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Summary: Most of the enhancements I implemented for this product was for maintaining the Bunny list, as well as some UI components for aesthetics purposes."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "More info on implementation and usage of the commands listed below can be found on the [User Guide](UserGuide.md) and [Developer Guide](DeveloperGuide.md), where I wrote the sections about these functions. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "####Bunny list enhancements"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "For context, a bunny is an idea that has yet to be fully written into a piece. The purpose of the bunnylist was to provide the creative writer using **Fluffle** store and organise these ideas, and to make it easy for user to find specific ideas. This was created to tackle the writers\u0027 problem of losing track of their loose ideas as they have too many ideas and no unified place to keep them."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Bunny commands implemented:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* bunny"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* list bunny"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* filter bunny"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* save bunny"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* delete bunny"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* random bunny"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* reset bunny"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "####Aesthetic enhancements"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "I implemented the segment of the code that printed out the logo art at the start of the application, as well as the functionality that enables the user to swap out the line dividers to one of the three options available. These components were an attempt to make the dull CLI look more entincing for the creative writer to use."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Aesthetic command: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* divider"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "####Miscellaneous enhancements"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "I implemented the segments of the help function related to the other commands I created as listed above."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "####Code quality"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "For the components I created I am also responsible for the junit tests, javadocs, assertions and logging implemented in those sections."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "Note: I wrote the function description and explanations for the all the bunny related commands as well as the `divider` command listed by the help function, which helps the user recall the various commands while using the Fluffle. The only bunny related command I did not implement was the `reset bunny` command. While I did not implement the `reset bunny` command of the bunny list commands, I did the UG, DG and help segments for it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Contributions to documentation"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* In the UG, my contributions are all the bunny related commands, the divider command and the help command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "       * this included the formatting and expected out puts under those segments"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I also did the Glossary, and the bunny segments of the command summary table."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Contributions to the DG"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* For the DG, I did the explanations for all the bunny related commands, the divider command explanation and some miscellaneous components (miscellaneous components refer to sections in the intro where we did it together and one person pasted it into the markdown from google docs so I do not take full credit for those). "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I also did the Bunny Manager Component and the bunny object storage and management components below it."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I also added most of the table of contents with hyperlinks in the DG. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I also added the segment on value proposition and target user audience segments, as well as a handful of the user stories."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I contributed 4 UML diagrams to the DG in total, which can be found in our diagrams folder under these names:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    * Bunny_manager_component"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    * Class_diagram_bunny"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    * Sequence_diagram_general_command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    * Sequence_diagram_bunny"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Contributions to team-based tasks "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I contributed some issues in the issue tracker at the end while checking code and functionality. "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I set up the project boards for the user stories earlier in the project. Most of the initial user stories were by me, which can be seen on the team repo issues list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I proposed the idea of a creative writing application changed from the quiz app to hopefully better meet the requirements and develop within the restrictions on the project."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "## Contributions beyond the project team"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I made sure to review as many of the iP as listed during the peer review earlier in the semester. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I also left comments on [this teams pull request](https://github.com/nus-cs2113-AY2021S1/tp/pull/36) and the iP pull requests: [1](https://github.com/nus-cs2113-AY2021S1/ip/pull/5) [2](https://github.com/nus-cs2113-AY2021S1/ip/pull/10) [3](https://github.com/nus-cs2113-AY2021S1/ip/pull/20) [4](https://github.com/nus-cs2113-AY2021S1/ip/pull/171)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "### Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I gave comprehensive reviews during the UG DG peer reviews."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "* I found 10 bugs in the PE-D and tried to comment as helpfully as possible."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "The latest release of Fluffle can be accessed from **[here](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases/tag/v2.1)**."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 80
    }
  },
  {
    "path": "docs/team/hungvo0603.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "# Vo Quang Hung - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## 1. Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Fluffle is a **desktop app for creative writers**, optimized for **use via a Command Line Interface** (CLI). It aids users in creating and managing their writings and ideas. As a fast-typing writer, this CLI app is highly suitable for you. This product is created on IntelliJ IDE with Java programming language."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The latest release of Fluffle can be accessed from **[here](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases/tag/v2.1)**."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## 2. Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 2.1 Code contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- The functional and test code contributed can be accessed via **[here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dhungvo0603\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)**."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 2.2 Enhancement Implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### 2.2.1 Main features enhancements"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Implemented storage for words by `WordsLoader` and `WordsSaver` classes. [#204](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/204)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Implemented `filter words` and `list filter words` commands. [#133](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/133) [#174](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/174)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Implemented `remind` command for writings. [#214](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/214)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### 2.2.2 Miscellaneous enhancements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Fixed print format for `noun`, `verb` and `adjective` commands. [#293](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/293)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Enhanced print format for some word-related `help` commands and made them in sync with the User Guide. [#306](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/306)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added JUnit test methods for filter-words-related classes. [#150](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/150)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 2.3 Contributions to documentation"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### 2.3.1 Contributions to Javadoc comments"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Java-doc comments are provided for most of the public classes and methods that I implemented. This helps subsequent developers to catch up with the project easily."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### 2.3.2 Contributions to the User Guide"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added the Preface and Command format sections for Feature section."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added \"Filtering words in word list: `filter word`\" and \"Listing your filter list: `list filter words`\" sections."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added \"Getting reminders for your writings scheduled for a specific date: `remind`\" section."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Increased the navigability between sections in the User Guide (add Table of Contents, Jump to top, ...)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Proofread User Guide and gave feedback to team members."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "#### 2.3.3 Contributions to the Developer Guide"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Provided the skeleton for the whole document (headings, subheadings, etc...) [#309](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/309)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added \"Introduction/Background\" section and modified \"Setting up the project in your computer\" section."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added \"Design/Architecture\" section together with \"Figure 1: Overview of Fluffle Architecture\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added \"Implementation/Writing Features/Getting reminder for writings scheduled on a specific date\" section."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added \"Implementation/Word Features/Filtering words\" section together with Figure 6 and Figure 7."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added v2.0 entries in \"Appendix C: User Stories\" table."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Added Appendix D and Appendix E."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 2.4 Contributions to team-based tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Setup the team repo as instructed by the details on the module website."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Kept an eye on the module\u0027s requirements and reminded team members to finish their tasks and got credit on the tP progress dashboard."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Assigned team members to their issues."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Released v1.0 and v2.0. [v1.0](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases/tag/v1.0) [v2.0](https://github.com/AY2021S1-CS2113T-W11-4/tp/releases/tag/v2.0)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Reported issues and evaluated team members\u0027 code, sometimes helped them fix the issues, too. [#187](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/187) [#223](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/223/files) [#274](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/274)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Refactored the packages to be more OOP. [#315](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/315)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 2.5 Contributions beyond the project team"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Reviewed and gave thoughtful feedback on other team\u0027s Developer Guide in tutorial. [#12](https://github.com/nus-cs2113-AY2021S1/tp/pull/12)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "- Reported bugs for other team\u0027s project in mock Practical Exam. [ped](https://github.com/hungvo0603/ped/issues)"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 55,
      "Promethees": 1
    }
  },
  {
    "path": "docs/team/promethees.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "# Minh Thong - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "## 1.Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### 1.1.Project overview"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Within a time span of 7 weeks of hard work, we, a group of 5 enthusiatic NUS Computing students, proudly present to you our newest product, in the scope of CS2113T-Software Engineering and Object Oriented Programming module, **FLUFFLE**!"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Fluffle is a **desktop app for creative writers**, optimized for **use via a Command Line Interface** (CLI). "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "It aids users in creating and managing their writings and ideas. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "As a fast-typing writer, this CLI app is highly suitable for you."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "This product is created on IntelliJ IDE with Java programming language."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### 1.2.Assignments:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* By making use of milestone and issue features on GitHub, we\u0027ve created detailed plans with assignments towards team\u0027s memebers for certain stage of the development."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* By accessing to the below link, you can get the track on the allocations within our team along the process of making **Fluffle**."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* [Issues discussion](https://github.com/AY2021S1-CS2113T-W11-4/tp/issues)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "## 2.Summary of my contributions"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### 2.1.Team\u0027s repo management covered"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Add Github verfication before merging in the settings. [settings](https://github.com/AY2021S1-CS2113T-W11-4/tp/settings)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Moderate the milestones and assign issues to the team, especially after the PE Dry Run [PE-D issues](https://github.com/AY2021S1-CS2113T-W11-4/tp/milestone/3?closed\u003d1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### 2.2.Features covered"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Designing and implementing the family of WritingList class, which is closely related to goal of the project(creating a writing assistant application)[#155](https://github.com/AY2021S1-CS2113T-W11-4/tp/commit/7e46a20273fe344853ccc900c1054e2890d19fcd)[#160](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/160)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Writings\u0027 general management (including adding writings to and extracting writings from the database)[#280](https://github.com/AY2021S1-CS2113T-W11-4/tp/commit/563f408ffb9fbeaf36a5988592b5c704b65b1760)[#230](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/230)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Reset and clear command [#202](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/202)[#303](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/303)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Registration protocol[#155](https://github.com/AY2021S1-CS2113T-W11-4/tp/commit/7e46a20273fe344853ccc900c1054e2890d19fcd)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Add JUnit tests [#314](https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/314)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### 2.3.Leadership/Mentorship covered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Helps other team\u0027s members be familiar with features that they\u0027ve overlooked on Github or on Intellij"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Always take an eye on module\u0027s requirements and remind other team\u0027s members on tasks needed to be done to get credits on module\u0027s tpProgressDashboard"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### 2.4.Contribution beyond the project requirement"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Give thoughtful reviews on our UG, DG during the tutorial [Quotesify](https://github.com/nus-cs2113-AY2021S1/tp/pull/12)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "* Provide feedback on other team\u0027s works during the PE Dry Run. [ped](https://github.com/Promethees/ped/issues) "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "### Link to code contribution"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "The link to my code contribution to the project can be found [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dpromethees\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      }
    ],
    "authorContributionMap": {
      "Promethees": 39
    }
  },
  {
    "path": "docs/team/thngyuxuan.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "# Yu Xuan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "## 1.Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 1.1. Project overview"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Fluffle is a **desktop app for creative writers**, optimized for **use via a Command Line Interface** (CLI). "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "It aids users in creating and managing their writings and ideas, especially for users who are novice writers and are "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "trying out creative writing. Fluffle aims to be the novice writers\u0027 companion and helper that guides them along their"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "journey on creative writing!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 1.2. Accessing Fluffle:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "By accessing this [link](https://github.com/AY2021S1-CS2113T-W11-4/tp/issues), you can download Fluffle, as well as view the progress that our team has made for Fluffle "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "for the past 7 weeks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "## 2. Summary of Contributions"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 2.1. Code Contributed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Implemented the Word List class, as well as the Words class, together with its sub classes, Noun, Verb, and Adjective."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Implemented the \"Three Words\" function, which generates three random words for the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Link to Code Contribution: [Here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dthngyuxuan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 2.2 Enhancements Implemented"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Implemented the \"Three Words\" function, which generates three random words for the user from the word bank in Fluffle."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Using a shuffled ArrayList based on the current wordList in the program, the \"Three Words\" function returns the first"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "three items in the shuffled WordList. It enables the user to get three random words that may provide inspiration and new ideas."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 2.3. Contributions to Documentation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Added the Words List Commands section in the User Guide, which comprises of: Noun, Verb, Adjective, List Words, "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "and Three Words."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Added and formatted the table of Command Summary in the User Guide."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Proofread and fix grammar and formatting issues in the User Guide."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 2.4 Contributions to DG"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Added the UML class diagram for the WordList class to show how Words objects are stored in the WordList, and how they "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "are implemented."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### 2.5 Contributions to Team-Based Tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "* Edited the help function for Fluffle."
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.commands.CommandChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.Logos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.FileFunctions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.writing.WritingsLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.common.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.WritingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyList.bunniesList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import static seedu.duke.commands.CommandChecker.UNRECOGNISED;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import static seedu.duke.commands.CommandChecker.extractCommandType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FilePaths.WRITING_FILE_PATH;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.bunny.BunnyLoader.loadBunnyFile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.UserSettingsLoader.loadUserSettings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.word.WordsLoader.loadWordsFile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.writing.WritingsLoader.loadWritings;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.writing.WritingsLoader.recordListToFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.commands.CommandExecutor.executeCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.common.Parsers.getUserInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import static seedu.duke.ui.UI.printAskForName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import static seedu.duke.ui.UI.printDivider;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import static seedu.duke.ui.UI.printFarewellMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import static seedu.duke.ui.UI.printHelloMessage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static final WritingsLoader loader \u003d new WritingsLoader();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Settings set to defaults."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static final int NUMBER_OF_SETTINGS \u003d 1; // currently only username"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String username \u003d \"User\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static ArrayList\u003cString\u003e savedSettings \u003d new ArrayList\u003c\u003e(NUMBER_OF_SETTINGS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static WritingList writings \u003d new WritingList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static User user;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Main entry-point for the Fluffle application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        setUserSettingsArrayList(savedSettings, username);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        loadUserSettings(savedSettings);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        loadBunnyFile(bunniesList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        loadWritings(writings);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        loadWordsFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        username \u003d savedSettings.get(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Write a story with\\n\" + Logos.BIG_FLUFFLE_LOGO);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        printHelloMessage(username);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        printAskForName(username);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        username \u003d getUserInput(SCANNER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        user \u003d new User(username);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        user.greetUser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        user.printInstruction();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        CommandChecker commandChecker \u003d UNRECOGNISED;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        while (commandChecker !\u003d CommandChecker.EXIT) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            userInput \u003d getUserInput(SCANNER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //echoInput(userInput); //for testing only"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            commandChecker \u003d extractCommandType(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            executeCommand(commandChecker, userInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        File f \u003d FileFunctions.getFileFromFilePath(WRITING_FILE_PATH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        recordListToFile(f, writings);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        printFarewellMessage(username);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Set the values in the array for the saved settings."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param savedSettings Array of saved settings"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username      User input name"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void setUserSettingsArrayList(ArrayList\u003cString\u003e savedSettings, String username) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        savedSettings.add(username);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 29,
      "hungvo0603": 23,
      "thngyuxuan": 9,
      "Promethees": 16,
      "-": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/bunny/Bunny.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.bunny;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * Class for plot bunny."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class Bunny {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** A brief description of the idea. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private String idea;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** The genre of the idea. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private String genre;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** The Characters used in the idea. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private ArrayList\u003cCharacter\u003e characters;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public Bunny(String idea) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setIdea(idea);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setGenre(\"none\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public Bunny(String idea, String genre) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setIdea(idea);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setGenre(genre);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public Bunny(String idea, String genre, ArrayList\u003cCharacter\u003e characters) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setIdea(idea);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setGenre(genre);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        setCharacters(characters);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public String getIdea() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return idea;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public void setIdea(String idea) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        this.idea \u003d idea;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public String getGenre() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return genre;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public void setGenre(String genre) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        this.genre \u003d genre;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public ArrayList\u003cCharacter\u003e getCharacters() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return characters;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public void setCharacters(ArrayList\u003cCharacter\u003e characters) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        this.characters \u003d characters;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    // todo: add character list in version 2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String description \u003d \"  idea: \" + idea + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        description \u003d description + \"  genre: \" + genre + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 62,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/bunnylist/BunnyFilter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.bunnylist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandInvalidException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.MissingFilterOptionsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.MissingParamsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.NoFilteredItemsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.GENRE_TAG;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.IDEA_TAG;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.common.Parsers.parseSingleCharacterTaggedParamsFromUserInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.ui.UI.printFilteredBunny;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyFilter {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** List of bunnies filtered with the corresponding index still attached. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static HashMap\u003cInteger, Bunny\u003e filteredBunny \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Filter specific bunny ideas from the list of bunnies."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput user input command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param bunniesList ArrayList of bunnies stored"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws MissingFilterOptionsException user command for filter bunny missing arguments"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws NoFilteredItemsException filter function found no bunnies matching the search criteria"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void filterBunny(String userInput, ArrayList\u003cBunny\u003e bunniesList)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws MissingFilterOptionsException, NoFilteredItemsException, CommandInvalidException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // for returning filter options parsed from the user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        HashMap\u003cString, String\u003e filterOptions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String componentUserInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String ideaSearchTerm \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String genreSearchTerm \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // flags for filters"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        boolean hasAtLeastOneFilterOption \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        boolean containsIdeaSearchTerm \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        boolean containsGenreSearchTerm \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // parse filter command into segments"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parseSingleCharacterTaggedParamsFromUserInput(userInput, filterOptions);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (MissingParamsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new MissingFilterOptionsException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new CommandInvalidException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (filterOptions.containsKey(IDEA_TAG)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            containsIdeaSearchTerm \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            ideaSearchTerm \u003d filterOptions.get(IDEA_TAG).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            hasAtLeastOneFilterOption \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (filterOptions.containsKey(GENRE_TAG)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            containsGenreSearchTerm \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            genreSearchTerm \u003d filterOptions.get(GENRE_TAG).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            hasAtLeastOneFilterOption \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!hasAtLeastOneFilterOption) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new MissingFilterOptionsException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        HashMap\u003cInteger, Bunny\u003e numberedBunny \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Set\u003cMap.Entry\u003cInteger, Bunny\u003e\u003e entries \u003d numberedBunny.entrySet();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        filteredBunny.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // add all the numbered tasks to a hashmap"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        for (i \u003d 1; i \u003c\u003d bunniesList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            numberedBunny.put(i, bunniesList.get(i - 1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // make filters final for filtering"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String finalIdeaSearchTerm \u003d ideaSearchTerm;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String finalGenreSearchTerm \u003d genreSearchTerm;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Stream\u003cMap.Entry\u003cInteger, Bunny\u003e\u003e entriesStream \u003d entries.stream();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        entriesStream.filter(containsIdeaSearchTerm ? entry -\u003e entry.getValue().getIdea().contains(finalIdeaSearchTerm)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                : entry -\u003e true)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                .filter(containsGenreSearchTerm ? entry -\u003e entry.getValue().getGenre().contains(finalGenreSearchTerm)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                : entry -\u003e true)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                .forEach(entry -\u003e filteredBunny.put(entry.getKey(), entry.getValue()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (filteredBunny.isEmpty()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new NoFilteredItemsException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printFilteredBunny(bunniesList.size(),  filteredBunny);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 94,
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/bunnylist/BunnyList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.bunnylist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyIdeaMissingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandInvalidException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandMissingArgumentsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.MissingParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.GENRE_TAG;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.IDEA_TAG;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.common.Parsers.parseSingleCharacterTaggedParamsFromUserInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static ArrayList\u003cBunny\u003e bunniesList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Adds a bunny to the list of bunny ideas."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput user input command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws CommandMissingArgumentsException The command for the adding a bunny is missing an argument"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws BunnyIdeaMissingException The idea argument of the add bunny command is missing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void addBunny(String userInput)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws CommandMissingArgumentsException, BunnyIdeaMissingException, CommandInvalidException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // for returning filter options parsed from the user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        HashMap\u003cString, String\u003e commandArguments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String idea \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String genre \u003d \"none\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // parse bunny command into segments"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parseSingleCharacterTaggedParamsFromUserInput(userInput, commandArguments);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (MissingParamsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new CommandMissingArgumentsException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new CommandInvalidException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // check if there is task type param"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!commandArguments.containsKey(IDEA_TAG)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new BunnyIdeaMissingException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!commandArguments.get(IDEA_TAG).isBlank()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            idea \u003d commandArguments.get(IDEA_TAG);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assert commandArguments.containsKey(IDEA_TAG) : \"Missing idea argument not handled!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (commandArguments.containsKey(GENRE_TAG)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (!commandArguments.get(GENRE_TAG).isBlank()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                genre \u003d commandArguments.get(GENRE_TAG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (idea.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new BunnyIdeaMissingException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Bunny newBunny \u003d new Bunny(idea.trim(), genre.trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        bunniesList.add(newBunny);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        UI.addBunnyMessage(newBunny.getDescription());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Prints a list of all the bunny ideas in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void listBunny() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (bunniesList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.bunnyListEmpty();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.listBunnyMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            for (int i \u003d 0; i \u003c bunniesList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.printBunnyInList((i + 1) + \".\\n\" + bunniesList.get(i).getDescription());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.printNumBunnies(numBunny());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assert !(bunniesList.size() \u003d\u003d 0) : \"Bunny list cannot be empty at this point\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Get the number of bunnies in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return number of bunnies in list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static int numBunny() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assert !(bunniesList.size() \u003c 0) : \"Bunny list cannot have negative size\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return bunniesList.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * Clear all bunnies stored in the storage and reset the bunny.txt"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearAllBunny() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        bunniesList.clear();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"Type in \\\"save bunny\\\" to confirm your deletion of the bunny ideas!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 5,
      "AmeliaTYR": 93,
      "Promethees": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/bunnylist/DeleteBunny.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.bunnylist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Functions to delete a bunny from the list of bunnies."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class DeleteBunny {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"DeleteBunny\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Delete a bunny from the list of bunnies."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput user input command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param bunniesList ArrayList containing all the bunnies"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws BunnyIndexOutOfBoundsException index of bunny provided by user is out of bounds"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void deleteBunny(String userInput, ArrayList\u003cBunny\u003e bunniesList)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws BunnyIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        ConsoleHandler ch \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        ch.setLevel(Level.SEVERE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.addHandler(ch);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int bunnyNum;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // try to parse Bunny index and check if it exists"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        bunnyNum \u003d getNumFromInput(userInput, BunnyList.numBunny());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // print response"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        UI.bunnyDeleted(bunnyNum);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        bunniesList.remove(bunnyNum - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.log(Level.FINEST, \"1 bunny was deleted from bunniesList\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Extract the index of the bunny to be deleted."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput user input command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param numBunnies number of bunnies in list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return index of bunny detected"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws BunnyIndexOutOfBoundsException the bunny index is out of bounds"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static int getNumFromInput(String userInput, int numBunnies) throws BunnyIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int bunnyNum;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            bunnyNum \u003d Integer.parseInt(userInput.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (bunnyNum \u003e numBunnies || bunnyNum \u003c 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                throw new BunnyIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new BunnyIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return bunnyNum;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 63,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/bunnylist/GenBunny.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.bunnylist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyListEmptyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class GenBunny {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Generate a random bunny from the list of bunnies in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param bunniesList ArrayList of bunnies"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void pickRandomBunny(ArrayList\u003cBunny\u003e bunniesList) throws BunnyListEmptyException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Random rand \u003d new Random(System.currentTimeMillis());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (bunniesList.size() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.bunnyRandomlySelected(Math.abs(rand.nextInt() % bunniesList.size()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new BunnyListEmptyException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 25,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CommandChecker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public enum CommandChecker {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    USERNAME,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    DIVIDER,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    NOUN,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    VERB,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    ADJ,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    LIST_WORDS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    FILTER_WORDS,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    LIST_FILTER,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    GEN_THREE_WORDS,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    GEN_NAME,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    ADD_NAME,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    DELETE_NAME,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    LIST_NAMES,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    FILTER_NAMES,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    BUNNY,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    LIST_BUNNY,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    FILTER_BUNNY,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    SAVE_BUNNY,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    DELETE_BUNNY,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    RANDOM_BUNNY,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    REMIND,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    CHARACTER,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    LIST_CHARACTER,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    FILTER_CHARACTER,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    START,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    TITLE,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    TYPE,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    WRITE,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    FINISH,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    POEM,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    ESSAY,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    COUNT_WRITINGS,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    RESET_WRITINGS,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    RESET_WORDS,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    RESET_BUNNY,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    CLEAR,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    STATS,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    SCENE,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    TOPIC,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    UNRECOGNISED;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Figures out the command type from userInput."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput string containing user input command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return the type of command detected"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static CommandChecker extractCommandType(String userInput) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (userInput.toLowerCase().trim().startsWith(\"help\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return CommandChecker.HELP;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"username\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.USERNAME;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"divider\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.DIVIDER;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"noun\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.NOUN;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"verb\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.VERB;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"adj\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.ADJ;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"remind \")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return CommandChecker.REMIND;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"list words\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.LIST_WORDS;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"three words\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            return CommandChecker.GEN_THREE_WORDS;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"bunny\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.BUNNY;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"list bunny\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.LIST_BUNNY;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"filter bunny\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.FILTER_BUNNY;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"save bunny\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.SAVE_BUNNY;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"delete bunny\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.DELETE_BUNNY;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"random bunny\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            return CommandChecker.RANDOM_BUNNY;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"exit\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return CommandChecker.EXIT;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"scene\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.SCENE;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"topic\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.TOPIC;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"name\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return CommandChecker.GEN_NAME;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"add name\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return CommandChecker.ADD_NAME;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"delete name\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return CommandChecker.DELETE_NAME;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"list name\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return CommandChecker.LIST_NAMES;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"list filter words\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return CommandChecker.LIST_FILTER;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"filter name\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return CommandChecker.FILTER_NAMES;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"filter words\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return CommandChecker.FILTER_WORDS;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"start\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.START;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"title\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.TITLE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"type\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.TYPE;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"write\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.WRITE;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"finish\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.FINISH;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"stats\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.STATS;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"poem\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.POEM;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"essay\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.ESSAY;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"count writings\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.COUNT_WRITINGS;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"reset writings\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.RESET_WRITINGS;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"reset words\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.RESET_WORDS;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"reset bunny\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.RESET_BUNNY;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (userInput.toLowerCase().trim().startsWith(\"clear\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return CommandChecker.CLEAR;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return CommandChecker.UNRECOGNISED;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 13,
      "hungvo0603": 27,
      "AmeliaTYR": 57,
      "thngyuxuan": 3,
      "Promethees": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CommandExecutor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.bunnylist.BunnyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunnylist.DeleteBunny;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunnylist.GenBunny;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.ClearLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.word.WordsSaver;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyIdeaMissingException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyListEmptyException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandInvalidException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandMissingArgumentsException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.DividerCommandWrongFormatException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.DividerIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.MissingFilterOptionsException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.nameexceptions.NameException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.NoFilteredItemsException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.WrongClearCommandFormat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterCommandSlicer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterExecutor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.names.Names;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.writing.WritingReminder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.wordlist.WordList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.WritingList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyList.bunniesList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.wordlist.WordList.wordList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.Duke.writings;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.bunny.BunnySaver.saveAllBunny;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.word.WordsSaver.saveWordsToFile;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyFilter.filterBunny;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.ui.UI.changeLineDivider;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.ui.UI.printHelpMessage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "//import static seedu.duke.database.ClearLoader.clearItems;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class CommandExecutor {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Executes the command as detected by the commandChecker function."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param commandChecker the type of command detected by the commandChecker function"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput the unprocessed user input string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void executeCommand(CommandChecker commandChecker, String userInput) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        switch (commandChecker) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] command \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            if (command.length \u003e 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                printHelpMessage(command[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                printHelpMessage(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case DIVIDER:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                changeLineDivider(userInput);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (DividerCommandWrongFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.dividerCommandWrongFormat();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (DividerIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.dividerIndexOutOfBounds();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case NOUN:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            WordList.addNoun(userInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            saveWordsToFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case VERB:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            WordList.addVerb(userInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            saveWordsToFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case ADJ:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            WordList.addAdjective(userInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            saveWordsToFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case GEN_THREE_WORDS:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            WordList.listThreeWords();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case LIST_WORDS:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            WordList.listWords();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case FILTER_WORDS:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterExecutor.executeFilterCommand(userInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case LIST_FILTER:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int printLimit \u003d FilterCommandSlicer.getWordPrintLimitFromListFilterCommand(userInput);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterList.printFilterList(printLimit);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case BUNNY:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                BunnyList.addBunny(userInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (CommandMissingArgumentsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnyWrongFormat();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (BunnyIdeaMissingException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnyMissingIdea();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (CommandInvalidException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.commandNotRecognisedMsg();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case LIST_BUNNY:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.listBunny();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case FILTER_BUNNY:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                filterBunny(userInput, bunniesList);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (MissingFilterOptionsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnyMissingFilterOption();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (NoFilteredItemsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnyFilterNoneFound();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (CommandInvalidException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.commandNotRecognisedMsg();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case SAVE_BUNNY:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                saveAllBunny(bunniesList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnySaved();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.failedToSaveBunny();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case DELETE_BUNNY:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                DeleteBunny.deleteBunny(userInput, bunniesList);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (BunnyIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnyIndexOutOfBounds();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case RANDOM_BUNNY:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                GenBunny.pickRandomBunny(bunniesList);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (BunnyListEmptyException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                UI.bunnyListEmpty();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case REMIND:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            WritingReminder.filterWritingsOnADate(userInput);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case GEN_NAME:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Names.getName();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (NameException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case ADD_NAME:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Names.addName(userInput);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (NameException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case DELETE_NAME:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Names.deleteName(userInput);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (NameException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case FILTER_NAMES:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Names.filterNames(userInput);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (NameException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case LIST_NAMES:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Names.listNames();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (NameException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case STATS:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WritingList.printWritings();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case START:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WritingList.checkStart(userInput);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case TYPE:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WritingList.checkType(userInput);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case COUNT_WRITINGS:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WritingList.printWritingSize();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case RESET_WRITINGS:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WritingList.clearAll();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case RESET_WORDS:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WordList.clearAllWords();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case RESET_BUNNY:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            BunnyList.clearAllBunny();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case CLEAR:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ClearLoader.clearItems(userInput, writings, wordList);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (WrongClearCommandFormat e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"The appropriate format is:\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        + \"clear type\\\\\u003cTYPE_OF_ELEMENT\u003e item\\\\\u003cINDICATOR_OF_ELEMENT\u003e\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            WordsSaver.saveWordsToFile();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //closes the program"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.commandNotRecognisedMsg();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 45,
      "hungvo0603": 31,
      "AmeliaTYR": 101,
      "thngyuxuan": 5,
      "Promethees": 38,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Parsers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.SettingObjectWrongFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.MissingParamsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.InputMarkers.INPUT_COMMENT_MARKER;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.RegexStrings.BLANK_STRING_REGEX;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class Parsers {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Extract the value string from line in settings save file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param fileLine    a line read from the file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param objectTitle the string indicating the type of object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return returns the setting extracted from line in the settings file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws SettingObjectWrongFormatException the linel in the settings file was wrongly formatted"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String parseFileObject(String fileLine, String objectTitle)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws SettingObjectWrongFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int settingTitleLength \u003d objectTitle.length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileObject;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // identify placements"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int settingObjectPosition \u003d fileLine.indexOf(objectTitle);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // check if placement is correct"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (settingObjectPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new SettingObjectWrongFormatException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                fileObject \u003d fileLine.substring(settingObjectPosition + settingTitleLength).trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                throw new SettingObjectWrongFormatException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileObject;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Gets user input, ignore comments and blank lines."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param scanner Scanner object for console inputs"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return raw user input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String getUserInput(Scanner scanner) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } while (userInput.matches(BLANK_STRING_REGEX)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                || userInput.startsWith(INPUT_COMMENT_MARKER));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Parse parameters for double letter tags."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput    line read from the console"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param parsedParams parameters parsed from the line with the tag as key and argument as value"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws MissingParamsException line has no missing parameters"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void parseDoubleCharacterTaggedParamsFromUserInput(String userInput,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                                                                     HashMap\u003cString, String\u003e parsedParams)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws MissingParamsException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String parsedOption;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String optionIndicator;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int startPositionIndex \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int endPositionIndex;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // clear filter options"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        parsedParams.clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!userInput.contains(\"\\\\\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new MissingParamsException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        while (userInput.indexOf(\"\\\\\", startPositionIndex) !\u003d -1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // identify placement"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            startPositionIndex \u003d userInput.indexOf(\"\\\\\", startPositionIndex + 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            endPositionIndex \u003d userInput.indexOf(\"\\\\\", startPositionIndex + 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // if reached end of string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (endPositionIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // extract the option"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedOption \u003d userInput.substring(startPositionIndex + 1, endPositionIndex - 2);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            optionIndicator \u003d userInput.substring(startPositionIndex - 2, startPositionIndex);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // store the option"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedParams.put(optionIndicator, parsedOption);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // extract the option"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        parsedOption \u003d userInput.substring(startPositionIndex + 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        optionIndicator \u003d userInput.substring(startPositionIndex - 2, startPositionIndex);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!parsedParams.containsKey(optionIndicator)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // store the option"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedParams.put(optionIndicator.toLowerCase(), parsedOption);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Parse parameters for single letter tags."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput    line read from the console"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param parsedParams parameters parsed from the line with the tag as key and argument as value"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws MissingParamsException line has no missing parameters"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void parseSingleCharacterTaggedParamsFromUserInput(String userInput,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                                                                     HashMap\u003cString, String\u003e parsedParams)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws MissingParamsException, StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String parsedOption;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String optionIndicator;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int startPositionIndex \u003d 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int endPositionIndex;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // clear filter options"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        parsedParams.clear();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!userInput.contains(\"\\\\\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new MissingParamsException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        while (userInput.indexOf(\"\\\\\", startPositionIndex) !\u003d -1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // identify placement"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            startPositionIndex \u003d userInput.indexOf(\"\\\\\", startPositionIndex + 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            endPositionIndex \u003d userInput.indexOf(\"\\\\\", startPositionIndex + 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // if reached end of string"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (endPositionIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // extract the option"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedOption \u003d userInput.substring(startPositionIndex + 1, endPositionIndex - 1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            optionIndicator \u003d userInput.substring(startPositionIndex - 1, startPositionIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (!parsedParams.containsKey(optionIndicator)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                // store the option"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                parsedParams.put(optionIndicator, parsedOption);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // extract the option"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        parsedOption \u003d userInput.substring(startPositionIndex + 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        optionIndicator \u003d userInput.substring(startPositionIndex - 1, startPositionIndex);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // store the option"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        parsedParams.put(optionIndicator.toLowerCase(), parsedOption);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Parse an integer from a string containing an integer."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param stringContainingInt string that contains an integer value"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return the interger value parsed"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws NumberFormatException unable to parse integer from given string"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static int getIntFromString(String stringContainingInt) throws NumberFormatException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return Integer.parseInt(stringContainingInt.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 9,
      "AmeliaTYR": 159
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Settings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Settings {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected int dividerNum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Settings() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.name \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.dividerNum \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Setter for name"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Setter for divider number"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public void setDividerNum(int divider) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (divider \u003c 1 || divider \u003e 4) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(\"Enter a valid number 1 -4!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            this.dividerNum \u003d divider;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Getter for divider number"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public int getDividerNum() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.dividerNum;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Getter for divider itself"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getDivider() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return UI.getDivider(this.dividerNum);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Getter for name"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 3,
      "thngyuxuan": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.LENGTH_OF_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.HELP_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private String registeredDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public User(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setName(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setRegisteredDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getRegisteredDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return registeredDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setRegisteredDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.registeredDate \u003d now.format(dtf);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"Hello \" + this.name + \". Welcome to Fluffle!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Your registration has been recorded on \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                + registeredDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printInstruction() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(HELP_MESSAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return \"Your username is: \" + name"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Your registeredDate is: \" + registeredDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 5,
      "AmeliaTYR": 1,
      "Promethees": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/DataFileConvention.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class DataFileConvention {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Separates different data components. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String WRITING_COMPONENT_DIVIDER \u003d \"----------------------------\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Marks one component of the writing class. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String WRITING_COMPONENT_MARK \u003d \"*\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Number of writing class component each section has in the database. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final int NUMBER_OF_WRITING_COMPONENT \u003d 8;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int POSITION_OF_ID \u003d 5;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int POSITION_OF_AUTHOR \u003d 9;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int POSITION_OF_TYPE \u003d 7;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int POSITION_OF_TITLE \u003d 8;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int POSITION_OF_TOPIC \u003d 8;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int POSITION_OF_DATE \u003d 7;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final int POSITION_OF_REMINDER_DATE \u003d 11;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String POEM \u003d \"Poem\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ESSAY \u003d \"Essay\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int LENGTH_OF_DATE \u003d 10;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int MAX_NUM_WRITINGS \u003d 1000;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 2,
      "Promethees": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/FilePaths.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Default file paths for save files."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FilePaths {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Default path to file for saving settings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static final String DEFAULT_USER_SETTINGS_FILE_PATH \u003d \"/data\" + File.separator + \"userSettings.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Default path to file for saved Bunny ideas."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String DEFAULT_BUNNY_FILE_PATH \u003d \"data/bunny.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Default path to file for word bank."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String WORDS_FILE_PATH \u003d \"data/words.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Test file path to see where the files save."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String TEST_FILE_PATH \u003d \"testFile.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Path to store user past history."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String WRITING_FILE_PATH \u003d \"data/writings.txt\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * The general path to store the statistics of the past quizzes."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String STATS \u003d \"data/Stats/stats\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 15,
      "AmeliaTYR": 14,
      "hungvo0603": 1,
      "thngyuxuan": 5,
      "Promethees": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/FluffleMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FluffleMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Greeting message formats. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FAREWELL_GREETING \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"Bye %1$s! Hope to see you again soon!\" + NEWLINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String HELLO_GREETING \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            \"Hello User! Welcome to Fluffle!\" + NEWLINE + \"What can I do for you?\" + NEWLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ASK_FOR_NAME \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            \"What is your name?\" + NEWLINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Settings loader messages."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String ERROR_READING_FILE_ON_LINE_MSG_FORMAT \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"Error reading settings file! Error on line:\" + NEWLINE + \"%1$s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String LOADING_SETTINGS_MSG \u003d \"Loading userSettings.txt save file...\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String SETTINGS_FILE_EMPTY_MSG \u003d \"userSettings.txt save file empty\" + NEWLINE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            + \"No previous settings loaded\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String SETTINGS_FILE_NOT_FOUND_MSG \u003d \"userSettings.txt save file not found\" + NEWLINE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            + \"Creating new file...\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** File creator function messages.  */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NEW_FILE_CREATED_MSG_FORMAT \u003d \"New file created\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String IO_ERROR_WHEN_MAKING_FILE_MSG \u003d \"IO error when making file!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_ALREADY_EXISTS_MSG \u003d \"File already exists.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_CREATED_PATH_MSG \u003d \"File created\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String DIRECTORY_CREATED_SUCCESSFULLY_MSG \u003d \"Directory created successfully\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String COULD_NOT_CREATE_DIRECTORY_MSG \u003d \"Sorry, could not create specified directory\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_PATH_TO_DIRECTORY_INVALID_MSG \u003d \"File path to directory invalid!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_NOT_FOUND_MSG \u003d \"File does not exist.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILE_AUTO_CREATED_MSG \u003d \"Auto creating new file\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String FILE_SAVE_ERROR_MSG \u003d \"Error saving file!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** New word added messages. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String ADD_NOUN_MSG \u003d \"Added the following noun: \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String ADD_VERB_MSG \u003d \"Added the following verb: \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String ADD_ADJECTIVE_MSG \u003d \"Added the following adjective: \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String LIST_WORDS_MSG \u003d \"Here are the words stored in the program:\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMPTY_WORDLIST_MSG \u003d \"Currently, there are no words in the words list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_INPUT_MSG \u003d \"Please enter a word and its description to save!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_DESC_MSG \u003d \"Please enter the word\u0027s description after typing \u0027d\\\\\u0027!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_NOUN_MSG \u003d \"Please use correct command format! Type \u0027help noun\u0027 for more info.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_VERB_MSG \u003d \"Please use correct command format! Type \u0027help verb\u0027 for more info.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_ADJ_MSG \u003d \"Please use correct command format! Type \u0027help adj\u0027 for more info.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /** Three Words Generator messages. */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String THREE_WORDS_MSG \u003d \"Here are three words selected randomly from the word bank:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String THREE_WORDS_ERROR_MSG \u003d \"Word bank has less than three words, please add more words!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** New bunny added messages. */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String ADD_BUNNY_MSG \u003d \"New bunny added!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String LIST_BUNNY_MSG \u003d \"Here are the bunnies stored in the program:\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_WRONG_FORMAT \u003d \"Bunny command wrong format\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_MISSING_IDEA_MSG \u003d \"Bunny command missing idea?\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Bunny deletion message. */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_DELETED_MSG \u003d \"Bunny deleted: \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Bunny filter messages. */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NUMBER_BUNNY_FILTERED_MSG \u003d \"number bunny filtered: \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FILTER_BUNNY_COMMAND_MISSING_FILTER_OPTIONS_MSG \u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"filter bunny command missing filter options.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NO_BUNNY_MATCHING_FILTER_OPTIONS_MSG \u003d \"No bunny matching filter options\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_INDEX_NOT_IN_LIST_MSG \u003d \"Bunny index is not in list.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String DIVIDER_COMMAND_OF_WRONG_FORMAT_MSG \u003d \"Divider command of wrong format\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String DIVIDER_INDEX_INDICATED_OUT_OF_BOUNDS_MSG \u003d \"Divider index indicated out of bounds\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Bunny listing messages. */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String LIST_BUNNIES_EMPTY_MSG \u003d \"List of bunnies is empty.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String TOTAL_BUNNIES_IN_LIST_MSG \u003d \"Total Bunnies in list: \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Bunny save and load messages. */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_LIST_SAVED_MSG \u003d \"Bunny list saved!\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String FAILED_TO_SAVE_BUNNY_LIST_MSG \u003d \"Failed to save bunny list\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String WRITING_TO_BUNNY_FILE_MSG \u003d \"Writing to bunny file\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NUM_BUNNY_LOADED_MSG \u003d \"%1$s of %2$s bunnies loaded!\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Bunny random selection message. */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_RANDOMLY_SELECTED_MSG \u003d \"Random Bunny: \\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** New character added messages. */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String ADD_CHARACTER_MSG \u003d \"New character added!\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String LIST_CHARACTER_MSG \u003d \"Here are the characters stored in the program:\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_CHARACTER_FORMAT \u003d \"Character command wrong format\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Filter messages. */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INVALID_FILTER_CODE \u003d \"invalid filter type in the code\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NO_FILTER_RESULT \u003d \"Nothing was found in the filter list!!\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String EMPTY_STRING_TAG \u003d \"At least an empty string tag is provided.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String FILTER_MESSAGE \u003d \"Printing all %d word(s) in your filter list:\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String FILTER_MESSAGE_LIMIT \u003d \"Printing the first %d out of %d word(s) \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"from your filter list:\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String FILTER_TYPE_TAG_MISSING \u003d \"Please provide a filter tag \\\"\\\\by\\\"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String PRINT_LIMIT_NOT_FOUND \u003d \"There are cases that\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"- You didn\u0027t specify the print limit\\n\" + \"- Your limit is not an integer\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"The program will print out all the words in your filter list.\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String FILTER_UNKNOWN_TYPE \u003d \"Filter type was not recognized in the command. \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"Available filter types are: type, start, include.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String LONG_FILTER_LIST_MESSAGE \u003d \"Your filter list has more than %d word(s)\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"Do you want to print all the words in the filter list? y/n\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String PROVIDE_STRING_TAG \u003d \"You must provide some string tags in the command\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String FILTER_WORDS_EMPTY_TARGET \u003d \"The command must provide some combination of\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \" the following tags: -noun, -verb, -adjective\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String AVAILABLE_WORD_TYPE \u003d \"Word type is not recognized. \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"Supported tags: -noun, -verb, -adjective\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INVALID_LIST_FILTER_ANSWER \u003d \"Your answer is not y/n. \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"The filter list will not be printed.\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"You can use \\\"list filter words\\\" command to print out the filter result.\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INVALID_LIMIT_LIST_FILTER_WORDS \u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            \"Your print limit is not valid so no words will be printed out.\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    + \"You can use \\\"list filter words\\\" command to print out the filter result.\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INVALID_PRINT_LIMIT_MESSAGE \u003d \"Your limit is invalid.\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Reminder messages. */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NO_WRITING_DUE \u003d \"You don\u0027t have any writings due that day!!!\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CONTINUE_WRITINGS \u003d \"On %s, you should continue on the following writing(s):\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String PARSE_DATETIME_EXCEPTION \u003d"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            \"Cannot parse date and time. Please enter date in a correct format (dd/MM/yyyy)\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    + \" with valid day, month and year.\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INVALID_REMINDER_DATE_EXCEPTION \u003d \"The date you entered is before today. \""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"Please give another date in your next try.\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Command not recognised message. */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String COMMAND_UNRECOGNISED_MSG \u003d \"Command is not recognised by Fluffle. \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"Please type \\\"help\\\" for a list of available command\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Writings parsing messages. */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ASSERTION_ID_ERROR \u003d \"This ID is invalid, please provide an ID from rage 0-1000\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String SUCCESSFUL_ADD_WRITING_TO_DATABASE \u003d \"Done! We have added your writing to our storage! \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            + \"You can type \\\"stats\\\" \" + \"for future reference!\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String INSTRUCTION_FOR_ADDING_NEW_WRITINGS \u003d \"Now you can type your content, \""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            + \"terminate by typing \\\"end\\\"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String TYPE_COMMAND_INSTRUCTION \u003d \"Please indicate your type by typing in \\\"type\\\" command\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ASKING_FOR_TITLE \u003d \"Please let us know the title of your writing\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ASKING_FOR_TYPE \u003d \"Please let us know your type of writings, either poem or essay\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ASKING_FOR_TOPIC \u003d \"Please indicate your topic below\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String ASKING_FOR_REMINDER \u003d \"Please indicate the date you want to continue with this writing \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            + \"by keying the date in the format \\\"dd/MM/yyyy\\\"\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String EMPTY_WRITING_MESSAGE \u003d \"The storage is currently empty, please type \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            + \"\\\"start\\\" command to add\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** User interactive messages. */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Please type in \\\"help\\\" command for information!\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Clear messages. */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CLEAR_SUCCESS_MESSAGE \u003d \"Nice! The %s \\\"%s\\\" has just been deleted from the database!\\n\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CLEAR_DATA_MESSAGE \u003d \"We have clear all data in the writings list\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Stop execution message. */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String STOP_START_COMMAND \u003d \"start command stopped\\nPlease give it another try.\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Change line divider message. */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String CHANGING_LINE_DIVIDER_MSG \u003d \"Changing line divider...\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 71,
      "hungvo0603": 48,
      "thngyuxuan": 15,
      "Promethees": 18,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/InputFormat.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class InputFormat {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INPUT_DATE_FORMAT \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/InputMarkers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Special symbols to mark specific strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class InputMarkers {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Used to mark off comment lines in the text-ui-test input.  */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String INPUT_COMMENT_MARKER \u003d \"#\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_COMMAND_KEYWORD \u003d \"bunny\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/Logos.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logos {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BIG_FLUFFLE_LOGO \u003d \"  ______ _        __  __ _\\n\" + \" |  ____| |      / _|/ \""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            + \"_| |\\n\" + \" | |__  | |_   _| |_| |_| | ___\\n\" + \" |  __| | | | | |  _|  _| |/ _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            + \" | |    |\" + \" | |_| | | | | | |  __/\\n\" + \" |_|    |_|\\\\__,_|_| |_| |_|\\\\___|\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    // line divider options"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PLAIN_TEXT_DIVIDER \u003d \"--------------------------------------------------------------\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String CAT_TEXT_DIVIDER \u003d \"\u003d^..^\u003d  \u003d^..^\u003d  \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FENCE_TEXT_DIVIDER \u003d \"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String custom_line_divider \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static final String VERSION \u003d \"Fluffle -Version 2.0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INPUT_COMMENT_MARKER \u003d \"#\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/RegexStrings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " * Regex strings used for comparison and format checking."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class RegexStrings {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Regex to detect a blank line. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BLANK_STRING_REGEX \u003d \"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/constants/Tags.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class Tags {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Settings file loader tags. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    //public static final String DIVIDER_CHOICE_TAG \u003d \"Divider choice:\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String USERNAME_TAG \u003d \"Username:\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Bunny file loader tags. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NUM_BUNNY_TAG \u003d \"number of plot bunnies:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_IDEA_TAG \u003d \"idea:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_GENRE_TAG \u003d \"genre:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String BUNNY_CHARACTERS_TAG \u003d \"characters:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Characters file loader tags. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    //public static final String DIVIDER_CHOICE_TAG \u003d \"Divider choice:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NUM_CHARACTER_TAG \u003d \"Username:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Tags for bunny command. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String IDEA_TAG \u003d \"i\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String GENRE_TAG \u003d \"g\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String CHARACTER_TAG \u003d \"g\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /** Tags for character command. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NAME_TAG \u003d \"na\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String AGE_TAG \u003d \"ag\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Tags for filter type identifier. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String TYPE_OF_FILTER_TAG \u003d \"by\\\\\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String LIMIT_WORD \u003d \" limit\\\\\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String BLANK \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String TYPE_TAG \u003d \"type\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String START_TAG \u003d \"start\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INCLUDE_TAG \u003d \"include\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Tags for filter slicer. */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String DASH \u003d \"-\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NOUN \u003d \"noun\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String VERB \u003d \"verb\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String ADJECTIVE \u003d \"adjective\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String Y \u003d \"y\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String YES \u003d \"yes\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String N \u003d \"n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NO \u003d \"no\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /** Tags for word list. */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String DESCRIPTION_TAG \u003d \" d\\\\\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 29,
      "hungvo0603": 19,
      "thngyuxuan": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/ClearLoaderException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class ClearLoaderException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/DividerCommandWrongFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class DividerCommandWrongFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/DividerIndexOutOfBoundsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class DividerIndexOutOfBoundsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidClearFormat.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class InvalidClearFormat extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/ItemNotFoundedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class ItemNotFoundedException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/MissingParamsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class MissingParamsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/SettingObjectWrongFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class SettingObjectWrongFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/WrongClearCommandFormat.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class WrongClearCommandFormat extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/BunnyCommandInvalidException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyCommandInvalidException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/BunnyIdeaMissingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyIdeaMissingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/BunnyIndexOutOfBoundsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyIndexOutOfBoundsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/BunnyListEmptyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyListEmptyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/CommandInvalidException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class CommandInvalidException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/CommandMissingArgumentsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class CommandMissingArgumentsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/MissingFilterOptionsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class MissingFilterOptionsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/bunnyexceptions/NoFilteredItemsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.bunnyexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class NoFilteredItemsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/nameexceptions/NameException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.nameexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class NameException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public NameException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 6,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/storageexceptions/FileEmptyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.storageexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FileEmptyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/storageexceptions/FilePathInvalidException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.storageexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FilePathInvalidException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "AmeliaTYR": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/wordexceptions/FilterCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.wordexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/wordexceptions/FilterEmptyStringTagException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.wordexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterEmptyStringTagException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/wordexceptions/FilterMissingTargetStringsTagException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.wordexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterMissingTargetStringsTagException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/wordexceptions/FilterMissingTargetWordTypeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.wordexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterMissingTargetWordTypeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/wordexceptions/FilterTypeTagMissingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.wordexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterTypeTagMissingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/wordexceptions/FilterWordsInvalidWordType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.wordexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterWordsInvalidWordType extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/writingexceptions/InvalidReminderDateException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.writingexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class InvalidReminderDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/writingexceptions/NotEnoughWritingComponentException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.exceptions.writingexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class NotEnoughWritingComponentException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "Promethees": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/loggings/Logging.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.loggings;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.writing.WritingsLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Logging {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    private static final Logger logWritingLoader \u003d Logger.getLogger(WritingsLoader.class.getName());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        logWritingLoader.log(Level.INFO, \"Your database has been up to date!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 2,
      "thngyuxuan": 1,
      "Promethees": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/names/Names.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package seedu.duke.names;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.name.NamesDB;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.nameexceptions.NameException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Names {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Returns a random name from the list of names stored in the database."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void getName() throws NameException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(nameList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (nameList.size() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Random randomGenerator \u003d new Random();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            int index \u003d randomGenerator.nextInt(nameList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            System.out.println(nameList.get(index));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new NameException(\"No stored Names! Try adding some names first!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Searches for names based on the given input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void filterNames(String match) throws NameException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(nameList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (nameList.size() \u003e 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            String toMatch \u003d match.toLowerCase().replace(\"filter name\", \"\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.println(\"Match: \" + toMatch);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            List\u003cString\u003e filteredNames \u003d (nameList.stream()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    .filter(x -\u003e x.toLowerCase().contains(toMatch))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (filteredNames.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new NameException(\"No names found! Try searching other names!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                for (int i \u003d 0; i \u003c filteredNames.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(i + 1 + \". \" + filteredNames.get(i));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new NameException(\"No stored Names! Try adding some names first!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Displays all names stored in the database."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void listNames() throws NameException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(nameList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (nameList.size() \u003e 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            for (int i \u003d 0; i \u003c nameList.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(i + 1 + \". \" + nameList.get(i));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new NameException(\"No stored Names! Try adding some names first!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Add name to the list of names."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void addName(String name) throws NameException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(nameList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String nameToAdd \u003d name.replaceAll(\"(?i)add name\", \"\").trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (nameToAdd.length() \u003e 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            assert nameToAdd.length() \u003e 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            nameList.add(nameToAdd);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            NamesDB.updateDB(nameList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            System.out.println(nameToAdd + \" has been added to the Names list!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new NameException(\"Please enter a valid name!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Delete name from the list of names."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void deleteName(String index) throws NameException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(nameList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (nameList.size() \u003e 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            assert nameList.size() \u003e 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                int indexToDelete \u003d Integer.parseInt(index.replaceAll(\"(?i)delete name\", \"\").trim()) - 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String nameToDelete \u003d nameList.get(indexToDelete);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                nameList.remove(indexToDelete);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                NamesDB.updateDB(nameList);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(nameToDelete + \" has been deleted from the Names list!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new NameException(\"Please enter a valid index!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new NameException(\"No stored Names! Try adding some names first!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 99,
      "hungvo0603": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/spellchecker/Dictionary.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package seedu.duke.spellchecker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.DictionaryLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Dictionary {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private ArrayList\u003cString\u003e wordList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    //Get the list of words"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public ArrayList\u003cString\u003e getWordList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return wordList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    //Set the list of words"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public void setWordList(ArrayList\u003cString\u003e wordList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.wordList \u003d wordList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    //create an object of Dictionary"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static Dictionary instance \u003d new Dictionary();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    //private constructor so that this class cannot be instantiated"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private Dictionary() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.wordList \u003d DictionaryLoader.getWordList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    //Get the only object available"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static Dictionary getInstance() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 32,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/spellchecker/SpellChecker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package seedu.duke.spellchecker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class SpellChecker {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static Dictionary dict \u003d Dictionary.getInstance();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static ArrayList\u003cString\u003e checkSpelling(String words) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        ArrayList\u003cString\u003e wrongList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String[] wordList \u003d words.trim().split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        ArrayList\u003cString\u003e dictList \u003d dict.getWordList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert dictList.size() \u003e 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        for (String word : wordList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            String wordToCheck \u003d word.trim().toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if ((!dictList.contains(wordToCheck)) \u0026\u0026 (isAlpha(wordToCheck))) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String wordNoS \u003d removeS(wordToCheck);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String wordNoES \u003d removeES(wordToCheck);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                if ((!dictList.contains(wordNoS)) \u0026\u0026 (!dictList.contains(wordNoES))) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    wrongList.add(word);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (wrongList.size() \u003e 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            System.out.println(\"Wrong words found:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            System.out.println(wrongList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return wrongList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static boolean isAlpha(String word) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return word.matches(\"[a-zA-Z]+\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static String removeS(String str) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (str !\u003d null \u0026\u0026 str.length() \u003e 1 \u0026\u0026 str.charAt(str.length() - 1) \u003d\u003d \u0027s\u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return str.substring(0, str.length() - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static String removeES(String str) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (str !\u003d null \u0026\u0026 str.length() \u003e 2 \u0026\u0026 str.charAt(str.length() - 1) \u003d\u003d \u0027s\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                \u0026\u0026 str.charAt(str.length() - 2) \u003d\u003d \u0027e\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return str.substring(0, str.length() - 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/ClearLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.storageexceptions.FileEmptyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.WrongClearCommandFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.ClearLoaderException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.InvalidClearFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.ItemNotFoundedException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.WritingList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.common.Parsers.getUserInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class ClearLoader {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearItems(String userInput, WritingList writings, ArrayList\u003cWords\u003e wordList)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throws WrongClearCommandFormat {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String item;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (!(words.length \u003d\u003d 3)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new WrongClearCommandFormat();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            type \u003d getType(words[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            item \u003d getItem(words[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                processing(type, item, writings, wordList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (ClearLoaderException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"The format is not correct!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String getType(String rawType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assert (rawType.contains(\"type\\\\\")) : \"Your format is incorrect\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return rawType.substring(\"type\\\\\".length()).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String getItem(String rawItem) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assert (rawItem.contains(\"item\\\\\")) : \"Your format is incorrect\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return rawItem.substring(\"item\\\\\".length()).trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void processing(String type, String item, WritingList writings, ArrayList\u003cWords\u003e wordList)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throws ClearLoaderException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (type.equalsIgnoreCase(\"writing\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                clearingWriting(item, writings);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else if (type.equalsIgnoreCase(\"word\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    clearingWord(item, wordList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (InvalidClearFormat e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"Please check your syntax again!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new ClearLoaderException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"The format of item number is inappropriate\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * To process the removal of the item from writing list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param item the item Identity to be removed"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param writings the writing list to be affected"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @throws NumberFormatException indicate that the item is not an integer number"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearingWriting(String item, WritingList writings) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (item.contains(\"-id\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String idNumber \u003d item.substring(\"-id\".length()).trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                processingWritingClearingID(idNumber, writings);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"Your item format is not an integer!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                processingWritingClearing(item, writings);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"Your item format is not an integer!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void processingWritingClearingID(String idNumber, WritingList writings) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            clearWritingWithID(idNumber, writings);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Your current inventory for the writing is empty!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearWritingWithID(String idNumber, WritingList writings) throws NullPointerException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (writings.getWritingSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int element \u003d Integer.parseInt(idNumber);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Do you want to delete this writing with ID: \" + element + \"Yes/No?\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String userAnswer \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (!(userAnswer.equalsIgnoreCase(\"yes\") || userAnswer.equalsIgnoreCase(\"no\"))) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"Do you want to delete this writing with ID: \" + element + \"Yes/No?\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                userAnswer \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (userAnswer.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"We have removed this item\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    writings.removeID(element);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (FileEmptyException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"Your current inventory for the writing is empty!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (ItemNotFoundedException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"Your ID does not match with any writing is currently in our inventory.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else if (userAnswer.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void processingWritingClearing(String item, WritingList writings) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            clearWritingWithIndex(item, writings);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Your current inventory for writing is empty!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearWritingWithIndex(String item, WritingList writings) throws NullPointerException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (writings.getWritingSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int element \u003d Integer.parseInt(item);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Do you want to delete this writing with ID: \" + element + \" Yes/No?\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String userAnswer \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (!(userAnswer.equalsIgnoreCase(\"yes\") || userAnswer.equalsIgnoreCase(\"no\"))) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"Do you want to delete this writing with ID: \" + element + \" Yes/No?\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                userAnswer \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (userAnswer.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"We have removed this item\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    writings.removeWriting(element);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (FileEmptyException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"Your current inventory for the writing is empty!\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else if (userAnswer.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearingWord(String item, ArrayList\u003cWords\u003e wordList) throws InvalidClearFormat {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (item.contains(\"-noun\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String word \u003d item.substring(\"-noun\".length());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    clearingWordNoun(word, wordList);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    UI.printClearCommandSuccess(\"noun\", word);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"There is nothing in your word list inventory\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (InvalidClearFormat e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"This noun is not founded!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (item.contains(\"-adj\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String word \u003d item.substring(\"-adj\".length());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    clearingWordAdjective(word, wordList);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    UI.printClearCommandSuccess(\"adjective\", word);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"There is nothing in your word list inventory\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (InvalidClearFormat e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"This adjective is not founded!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (item.contains(\"-verb\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String word \u003d item.substring(\"-verb\".length());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    clearingWordVerb(word, wordList);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    UI.printClearCommandSuccess(\"verb\", word);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"There is nothing in your word list inventory\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (InvalidClearFormat e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"This verb is not founded!\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new InvalidClearFormat();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearingWordNoun(String word, ArrayList\u003cWords\u003e wordList) throws InvalidClearFormat,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            NullPointerException {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (wordList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int wordFounded \u003d 0;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (i \u003c wordList.size()) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                if (wordList.get(i).getType().equals(\"noun\")"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        \u0026\u0026 wordList.get(i).getDescription().trim().equalsIgnoreCase(word)) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    wordList.remove(i);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    wordFounded \u003d 1;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (wordFounded \u003d\u003d 1) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new InvalidClearFormat();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearingWordAdjective(String word, ArrayList\u003cWords\u003e wordList) throws InvalidClearFormat,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            NullPointerException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (wordList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int wordFounded \u003d 0;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (i \u003c wordList.size()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                if (wordList.get(i).getType().equals(\"adjective\")"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        \u0026\u0026 wordList.get(i).getDescription().trim().equalsIgnoreCase(word)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    wordList.remove(i);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    wordFounded \u003d 1;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (wordFounded \u003d\u003d 1) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new InvalidClearFormat();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearingWordVerb(String word, ArrayList\u003cWords\u003e wordList) throws InvalidClearFormat,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            NullPointerException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (wordList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int wordFounded \u003d 0;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (i \u003c wordList.size()) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                if (wordList.get(i).getType().equals(\"verb\")"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        \u0026\u0026 wordList.get(i).getDescription().trim().equalsIgnoreCase(word)) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    wordList.remove(i);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    wordFounded \u003d 1;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (wordFounded \u003d\u003d 1) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new InvalidClearFormat();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 13,
      "Promethees": 258
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/DictionaryLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class DictionaryLoader {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static ArrayList\u003cString\u003e getWordList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        ArrayList\u003cString\u003e wordList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"a\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"abandon\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ability\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"able\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"abortion\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"about\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"above\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"abroad\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"absence\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"absolute\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"absolutely\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"absorb\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"abuse\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"academic\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"accept\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"access\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"accident\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"accompany\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"accomplish\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"according\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"account\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"accurate\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"accuse\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"achieve\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"achievement\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"acid\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"acknowledge\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"acquire\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"across\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"act\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"action\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"active\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"activist\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"activity\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"actor\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"actress\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"actual\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"actually\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ad\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adapt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"add\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"addition\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"additional\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"address\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adequate\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adjust\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adjustment\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"administration\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"administrator\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"admire\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"admission\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"admit\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adolescent\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adopt\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adult\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advance\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advanced\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advantage\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adventure\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advertising\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advice\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advise\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"adviser\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"advocate\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"affair\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"affect\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"afford\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"afraid\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"African\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"African-American\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"after\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"afternoon\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"again\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"against\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"age\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"agency\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"agenda\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"agent\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aggressive\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ago\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"agree\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"agreement\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"agricultural\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ah\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ahead\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aid\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aide\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"AIDS\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aim\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"air\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aircraft\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"airline\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"airport\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"album\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"alcohol\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"alive\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"all\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"alliance\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"allow\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ally\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"almost\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"alone\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"along\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"already\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"also\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"alter\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"alternative\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"although\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"always\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"AM\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"amazing\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"American\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"among\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"amount\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"analysis\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"analyst\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"analyze\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ancient\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"and\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anger\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"angle\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"angry\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"animal\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anniversary\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"announce\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"annual\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"another\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"answer\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anticipate\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anxiety\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"any\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anybody\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anymore\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anyone\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anything\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anyway\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"anywhere\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"apart\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"apartment\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"apparent\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"apparently\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appeal\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appear\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appearance\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"apple\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"application\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"apply\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appoint\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appointment\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appreciate\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"approach\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"appropriate\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"approval\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"approve\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"approximately\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Arab\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"architect\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"area\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"argue\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"argument\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arise\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arm\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"armed\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"army\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"around\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arrange\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arrangement\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arrest\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arrival\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"arrive\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"art\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"article\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"artist\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"artistic\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"as\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Asian\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aside\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ask\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"asleep\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aspect\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assault\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assert\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assess\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assessment\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"asset\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assign\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assignment\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assist\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assistance\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assistant\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"associate\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"association\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assume\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assumption\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"assure\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"at\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"athlete\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"athletic\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"atmosphere\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attach\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attack\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attempt\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attend\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attention\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attitude\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attorney\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attract\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attractive\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"attribute\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"audience\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"author\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"authority\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"auto\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"available\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"average\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"avoid\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"award\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"aware\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"awareness\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"away\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"awful\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"baby\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"back\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"background\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bad\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"badly\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bag\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bake\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"balance\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ball\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ban\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"band\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bank\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bar\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"barely\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"barrel\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"barrier\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"base\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"baseball\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"basic\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"basically\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"basis\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"basket\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"basketball\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bathroom\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"battery\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"battle\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"be\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beach\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bean\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bear\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beat\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beautiful\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beauty\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"because\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"become\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bed\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bedroom\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beer\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"before\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"begin\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beginning\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"behavior\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"behind\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"being\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"belief\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"believe\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bell\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"belong\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"below\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"belt\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bench\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bend\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beneath\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"benefit\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beside\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"besides\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"best\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bet\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"better\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"between\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"beyond\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Bible\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"big\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bike\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bill\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"billion\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bind\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"biological\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bird\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"birth\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"birthday\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bit\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bite\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"black\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blade\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blame\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blanket\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blind\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"block\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blood\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blow\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"blue\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"board\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boat\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"body\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bomb\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bombing\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bond\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bone\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"book\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boom\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boot\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"border\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"born\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"borrow\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boss\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"both\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bother\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bottle\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bottom\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boundary\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bowl\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"box\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boy\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"boyfriend\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brain\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"branch\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brand\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bread\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"break\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"breakfast\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"breast\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"breath\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"breathe\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brick\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bridge\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brief\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"briefly\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bright\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brilliant\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bring\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"British\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"broad\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"broken\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brother\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brown\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"brush\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"buck\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"budget\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"build\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"building\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bullet\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bunch\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"burden\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"burn\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bury\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"bus\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"business\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"busy\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"but\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"butter\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"button\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"buy\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"buyer\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"by\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cabin\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cabinet\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cable\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cake\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"calculate\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"call\");"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"camera\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"camp\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"campaign\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"campus\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"can\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Canadian\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cancer\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"candidate\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cap\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"capability\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"capable\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"capacity\");"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"capital\");"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"captain\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"capture\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"car\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"carbon\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"card\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"care\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"career\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"careful\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"carefully\");"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"carrier\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"carry\");"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"case\");"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cash\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cast\");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cat\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"catch\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"category\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Catholic\");"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cause\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ceiling\");"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"celebrate\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"celebration\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"celebrity\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cell\");"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"center\");"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"central\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"century\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"CEO\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ceremony\");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"certain\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"certainly\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chain\");"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chair\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chairman\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"challenge\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chamber\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"champion\");"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"championship\");"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chance\");"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"change\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"changing\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"channel\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chapter\");"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"character\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"characteristic\");"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"characterize\");"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"charge\");"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"charity\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chart\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chase\");"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cheap\");"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"check\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cheek\");"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cheese\");"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chef\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chemical\");"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chest\");"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chicken\");"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chief\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"child\");"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"childhood\");"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Chinese\");"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chip\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"chocolate\");"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"choice\");"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cholesterol\");"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"choose\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Christian\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Christmas\");"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"church\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cigarette\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"circle\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"circumstance\");"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cite\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"citizen\");"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"city\");"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"civil\");"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"civilian\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"claim\");"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"class\");"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"classic\");"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"classroom\");"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clean\");"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clear\");"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clearly\");"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"client\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"climate\");"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"climb\");"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clinic\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clinical\");"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clock\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"close\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"closely\");"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"closer\");"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clothes\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clothing\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cloud\");"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"club\");"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"clue\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cluster\");"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coach\");"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coal\");"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coalition\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coast\");"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coat\");"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"code\");"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coffee\");"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cognitive\");"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cold\");"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"collapse\");"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"colleague\");"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"collect\");"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"collection\");"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"collective\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"college\");"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"colonial\");"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"color\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"column\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"combination\");"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"combine\");"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"come\");"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"comedy\");"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"comfort\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"comfortable\");"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"command\");"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"commander\");"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"comment\");"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"commercial\");"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"commission\");"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"commit\");"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"commitment\");"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"committee\");"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"common\");"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"communicate\");"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"communication\");"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"community\");"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"company\");"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"compare\");"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"comparison\");"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"compete\");"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"competition\");"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"competitive\");"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"competitor\");"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"complain\");"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"complaint\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"complete\");"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"completely\");"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"complex\");"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"complicated\");"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"component\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"compose\");"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"composition\");"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"comprehensive\");"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"computer\");"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concentrate\");"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concentration\");"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concept\");"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concern\");"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concerned\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concert\");"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conclude\");"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conclusion\");"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"concrete\");"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"condition\");"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conduct\");"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conference\");"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"confidence\");"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"confident\");"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"confirm\");"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conflict\");"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"confront\");"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"confusion\");"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Congress\");"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"congressional\");"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"connect\");"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"connection\");"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consciousness\");"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consensus\");"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consequence\");"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conservative\");"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consider\");"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"considerable\");"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consideration\");"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consist\");"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consistent\");"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"constant\");"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"constantly\");"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"constitute\");"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"constitutional\");"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"construct\");"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"construction\");"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consultant\");"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consume\");"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consumer\");"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"consumption\");"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contact\");"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contain\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"container\");"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contemporary\");"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"content\");"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contest\");"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"context\");"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"continue\");"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"continued\");"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contract\");"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contrast\");"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contribute\");"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"contribution\");"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"control\");"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"controversial\");"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"controversy\");"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"convention\");"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conventional\");"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conversation\");"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"convert\");"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"conviction\");"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"convince\");"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cook\");"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cookie\");"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cooking\");"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cool\");"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cooperation\");"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cop\");"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cope\");"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"copy\");"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"core\");"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"corn\");"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"corner\");"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"corporate\");"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"corporation\");"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"correct\");"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"correspondent\");"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cost\");"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cotton\");"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"couch\");"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"could\");"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"council\");"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"counselor\");"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"count\");"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"counter\");"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"country\");"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"county\");"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"couple\");"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"courage\");"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"course\");"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"court\");"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cousin\");"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cover\");"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"coverage\");"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cow\");"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crack\");"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"craft\");"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crash\");"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crazy\");"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cream\");"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"create\");"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"creation\");"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"creative\");"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"creature\");"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"credit\");"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crew\");"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crime\");"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"criminal\");"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crisis\");"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"criteria\");"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"critic\");"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"critical\");"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"criticism\");"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"criticize\");"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crop\");"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cross\");"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crowd\");"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"crucial\");"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cry\");"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cultural\");"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"culture\");"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cup\");"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"curious\");"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"current\");"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"currently\");"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"curriculum\");"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"custom\");"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"customer\");"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cut\");"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"cycle\");"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dad\");"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"daily\");"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"damage\");"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dance\");"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"danger\");"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dangerous\");"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dare\");"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dark\");"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"darkness\");"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"data\");"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"date\");"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"daughter\");"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"day\");"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dead\");"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deal\");"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dealer\");"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dear\");"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"death\");"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"debate\");"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"debt\");"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"decade\");"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"decide\");"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"decision\");"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deck\");"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"declare\");"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"decline\");"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"decrease\");"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deep\");"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deeply\");"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deer\");"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"defeat\");"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"defend\");"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"defendant\");"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"defense\");"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"defensive\");"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deficit\");"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"define\");"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"definitely\");"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"definition\");"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"degree\");"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"delay\");"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deliver\");"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"delivery\");"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"demand\");"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"democracy\");"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Democrat\");"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"democratic\");"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"demonstrate\");"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"demonstration\");"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deny\");"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"department\");"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"depend\");"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dependent\");"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"depending\");"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"depict\");"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"depression\");"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"depth\");"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deputy\");"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"derive\");"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"describe\");"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"description\");"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"desert\");"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"deserve\");"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"design\");"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"designer\");"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"desire\");"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"desk\");"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"desperate\");"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"despite\");"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"destroy\");"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"destruction\");"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"detail\");"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"detailed\");"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"detect\");"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"determine\");"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"develop\");"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"developing\");"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"development\");"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"device\");"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"devote\");"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dialogue\");"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"die\");"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"diet\");"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"differ\");"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"difference\");"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"different\");"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"differently\");"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"difficult\");"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"difficulty\");"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dig\");"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"digital\");"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dimension\");"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dining\");"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dinner\");"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"direct\");"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"direction\");"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"directly\");"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"director\");"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dirt\");"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dirty\");"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"disability\");"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"disagree\");"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"disappear\");"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"disaster\");"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discipline\");"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discourse\");"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discover\");"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discovery\");"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discrimination\");"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discuss\");"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"discussion\");"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"disease\");"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dish\");"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dismiss\");"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"disorder\");"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"display\");"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dispute\");"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distance\");"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distant\");"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distinct\");"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distinction\");"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distinguish\");"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distribute\");"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"distribution\");"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"district\");"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"diverse\");"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"diversity\");"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"divide\");"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"division\");"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"divorce\");"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"DNA\");"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"do\");"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"doctor\");"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"document\");"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dog\");"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"domestic\");"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dominant\");"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dominate\");"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"door\");"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"double\");"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"doubt\");"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"down\");"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"downtown\");"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dozen\");"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"draft\");"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drag\");"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drama\");"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dramatic\");"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dramatically\");"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"draw\");"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drawing\");"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dream\");"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dress\");"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drink\");"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drive\");"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"driver\");"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drop\");"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"drug\");"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dry\");"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"due\");"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"during\");"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"dust\");"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"duty\");"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"each\");"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eager\");"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ear\");"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"early\");"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"earn\");"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"earnings\");"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"earth\");"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ease\");"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"easily\");"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"east\");"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eastern\");"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"easy\");"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eat\");"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"economic\");"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"economics\");"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"economist\");"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"economy\");"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"edge\");"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"edition\");"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"editor\");"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"educate\");"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"education\");"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"educational\");"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"educator\");"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"effect\");"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"effective\");"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"effectively\");"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"efficiency\");"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"efficient\");"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"effort\");"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"egg\");"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eight\");"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"either\");"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"elderly\");"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"elect\");"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"election\");"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"electric\");"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"electricity\");"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"electronic\");"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"element\");"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"elementary\");"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eliminate\");"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"elite\");"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"else\");"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"elsewhere\");"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"e-mail\");"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"embrace\");"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emerge\");"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emergency\");"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emission\");"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emotion\");"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emotional\");"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emphasis\");"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"emphasize\");"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"employ\");"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"employee\");"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"employer\");"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"employment\");"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"empty\");"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enable\");"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"encounter\");"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"encourage\");"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"end\");"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enemy\");"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"energy\");"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enforcement\");"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"engage\");"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"engine\");"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"engineer\");"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"engineering\");"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"English\");"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enhance\");"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enjoy\");"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enormous\");"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enough\");"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ensure\");"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enter\");"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"enterprise\");"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"entertainment\");"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"entire\");"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"entirely\");"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"entrance\");"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"entry\");"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"environment\");"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"environmental\");"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"episode\");"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"equal\");"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"equally\");"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"equipment\");"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"era\");"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"error\");"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"escape\");"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"especially\");"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"essay\");"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"essential\");"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"essentially\");"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"establish\");"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"establishment\");"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"estate\");"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"estimate\");"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"etc\");"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ethics\");"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ethnic\");"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"European\");"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"evaluate\");"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"evaluation\");"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"even\");"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"evening\");"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"event\");"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eventually\");"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ever\");"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"every\");"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"everybody\");"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"everyday\");"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"everyone\");"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"everything\");"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"everywhere\");"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"evidence\");"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"evolution\");"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"evolve\");"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exact\");"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exactly\");"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"examination\");"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"examine\");"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"example\");"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exceed\");"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"excellent\");"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"except\");"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exception\");"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exchange\");"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exciting\");"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"executive\");"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exercise\");"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exhibit\");"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exhibition\");"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exist\");"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"existence\");"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"existing\");"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expand\");"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expansion\");"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expect\");"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expectation\");"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expense\");"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expensive\");"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"experience\");"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"experiment\");"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expert\");"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"explain\");"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"explanation\");"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"explode\");"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"explore\");"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"explosion\");"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expose\");"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"exposure\");"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"express\");"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"expression\");"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extend\");"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extension\");"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extensive\");"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extent\");"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"external\");"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extra\");"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extraordinary\");"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extreme\");"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"extremely\");"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"eye\");"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fabric\");"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"face\");"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"facility\");"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fact\");"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"factor\");"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"factory\");"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"faculty\");"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fade\");"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fail\");"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"failure\");"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fair\");"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fairly\");"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"faith\");"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fall\");"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"false\");"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"familiar\");"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"family\");"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"famous\");"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fan\");"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fantasy\");"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"far\");"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"farm\");"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"farmer\");"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fashion\");"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fast\");"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fat\");"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fate\");"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"father\");"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fault\");"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"favor\");"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"favorite\");"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fear\");"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"feature\");"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"federal\");"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fee\");"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"feed\");"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"feel\");"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"feeling\");"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fellow\");"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"female\");"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fence\");"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"few\");"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fewer\");"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fiber\");"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fiction\");"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"field\");"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fifteen\");"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fifth\");"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fifty\");"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fight\");"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fighter\");"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fighting\");"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"figure\");"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"file\");"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fill\");"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"film\");"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"final\");"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"finally\");"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"finance\");"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"financial\");"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"find\");"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"finding\");"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fine\");"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"finger\");"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"finish\");"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fire\");"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"firm\");"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"first\");"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fish\");"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fishing\");"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fit\");"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fitness\");"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"five\");"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fix\");"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flag\");"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flame\");"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flat\");"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flavor\");"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flee\");"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flesh\");"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flight\");"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"float\");"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"floor\");"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flow\");"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"flower\");"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fly\");"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"focus\");"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"folk\");"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"follow\");"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"following\");"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"food\");"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"foot\");"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"football\");"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"for\");"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"force\");"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"foreign\");"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"forest\");"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"forever\");"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"forget\");"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"form\");"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"formal\");"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"formation\");"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"former\");"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"formula\");"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"forth\");"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fortune\");"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"forward\");"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"found\");"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"foundation\");"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"founder\");"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"four\");"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fourth\");"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fox\");"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"frame\");"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"framework\");"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"free\");"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"freedom\");"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"freeze\");"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"French\");"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"frequency\");"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"frequent\");"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"frequently\");"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fresh\");"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"friend\");"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"friendly\");"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"friendship\");"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"from\");"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"front\");"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fruit\");"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"frustration\");"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fuel\");"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"full\");"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fully\");"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fun\");"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"function\");"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fund\");"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"fundamental\");"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"funding\");"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"funeral\");"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"funny\");"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"furniture\");"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"furthermore\");"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"future\");"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gain\");"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"galaxy\");"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gallery\");"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"game\");"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gang\");"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gap\");"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"garage\");"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"garden\");"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"garlic\");"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gas\");"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gate\");"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gather\");"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gay\");"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gaze\");"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gear\");"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gender\");"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gene\");"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"general\");"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"generally\");"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"generate\");"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"generation\");"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"genetic\");"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gentleman\");"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gently\");"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"German\");"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gesture\");"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"get\");"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ghost\");"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"giant\");"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gift\");"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gifted\");"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"girl\");"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"girlfriend\");"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"give\");"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"given\");"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"glad\");"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"glance\");"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"glass\");"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"global\");"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"glove\");"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"go\");"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"goal\");"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"God\");"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gold\");"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"golden\");"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"golf\");"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"good\");"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"government\");"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"governor\");"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grab\");"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grade\");"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gradually\");"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"graduate\");"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grain\");"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grand\");"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grandfather\");"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grandmother\");"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grant\");"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grass\");"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grave\");"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gray\");"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"great\");"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"greatest\");"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"green\");"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grocery\");"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ground\");"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"group\");"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"grow\");"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"growing\");"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"growth\");"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guarantee\");"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guard\");"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guess\");"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guest\");"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guide\");"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guideline\");"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guilty\");"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"gun\");"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"guy\");"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"habit\");"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"habitat\");"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hair\");"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"half\");"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hall\");"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hand\");"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"handful\");"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"handle\");"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hang\");"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"happen\");"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"happy\");"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hard\");"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hardly\");"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hat\");"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hate\");"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"have\");"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"he\");"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"head\");"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"headline\");"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"headquarters\");"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"health\");"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"healthy\");"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hear\");"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hearing\");"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heart\");"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heat\");"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heaven\");"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heavily\");"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heavy\");"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heel\");"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"height\");"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"helicopter\");"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hell\");"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hello\");"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"help\");"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"helpful\");"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"her\");"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"here\");"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"heritage\");"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hero\");"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"herself\");"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hey\");"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hi\");"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hide\");"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"high\");"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"highlight\");"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"highly\");"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"highway\");"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hill\");"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"him\");"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"himself\");"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hip\");"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hire\");"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"his\");"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"historian\");"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"historic\");"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"historical\");"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"history\");"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hit\");"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hold\");"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hole\");"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"holiday\");"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"holy\");"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"home\");"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"homeless\");"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"honest\");"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"honey\");"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"honor\");"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hope\");"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"horizon\");"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"horror\");"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"horse\");"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hospital\");"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"host\");"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hot\");"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hotel\");"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hour\");"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"house\");"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"household\");"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"housing\");"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"how\");"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"however\");"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"huge\");"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"human\");"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"humor\");"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hundred\");"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hungry\");"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hunter\");"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hunting\");"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hurt\");"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"husband\");"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"hypothesis\");"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"I\");"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ice\");"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"idea\");"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ideal\");"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"identification\");"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"identify\");"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"identity\");"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ie\");"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"if\");"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ignore\");"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ill\");"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"illegal\");"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"illness\");"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"illustrate\");"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"image\");"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"imagination\");"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"imagine\");"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"immediate\");"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"immediately\");"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"immigrant\");"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"immigration\");"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"impact\");"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"implement\");"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"implication\");"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"imply\");"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"importance\");"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"important\");"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"impose\");"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"impossible\");"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"impress\");"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"impression\");"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"impressive\");"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"improve\");"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"improvement\");"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"in\");"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"incentive\");"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"incident\");"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"include\");"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"including\");"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"income\");"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"incorporate\");"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"increase\");"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"increased\");"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"increasing\");"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"increasingly\");"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"incredible\");"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"indeed\");"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"independence\");"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"independent\");"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"index\");"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Indian\");"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"indicate\");"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"indication\");"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"individual\");"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"industrial\");"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"industry\");"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"infant\");"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"infection\");"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"inflation\");"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"influence\");"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"inform\");"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"information\");"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ingredient\");"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"initial\");"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"initially\");"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"initiative\");"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"injury\");"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"inner\");"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"innocent\");"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"inquiry\");"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"inside\");"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"insight\");"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"insist\");"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"inspire\");"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"install\");"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"instance\");"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"instead\");"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"institution\");"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"institutional\");"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"instruction\");"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"instructor\");"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"instrument\");"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"insurance\");"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intellectual\");"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intelligence\");"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intend\");"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intense\");"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intensity\");"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intention\");"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interaction\");"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interest\");"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interested\");"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interesting\");"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"internal\");"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"international\");"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Internet\");"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interpret\");"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interpretation\");"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"intervention\");"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"interview\");"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"into\");"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"introduce\");"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"introduction\");"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"invasion\");"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"invest\");"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"investigate\");"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"investigation\");"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"investigator\");"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"investment\");"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"investor\");"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"invite\");"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"involve\");"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"involved\");"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"involvement\");"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Iraqi\");"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Irish\");"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"iron\");"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Islamic\");"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"island\");"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Israeli\");"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"issue\");"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"it\");"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Italian\");"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"item\");"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"its\");"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"itself\");"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"jacket\");"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"jail\");"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Japanese\");"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"jet\");"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Jew\");"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Jewish\");"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"job\");"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"join\");"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"joint\");"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"joke\");"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"journal\");"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"journalist\");"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"journey\");"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"joy\");"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"judge\");"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"judgment\");"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"juice\");"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"jump\");"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"junior\");"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"jury\");"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"just\");"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"justice\");"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"justify\");"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"keep\");"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"key\");"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"kick\");"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"kid\");"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"kill\");"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"killer\");"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"killing\");"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"kind\");"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"king\");"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"kiss\");"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"kitchen\");"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"knee\");"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"knife\");"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"knock\");"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"know\");"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"knowledge\");"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lab\");"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"label\");"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"labor\");"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"laboratory\");"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lack\");"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lady\");"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lake\");"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"land\");"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"landscape\");"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"language\");"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lap\");"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"large\");"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"largely\");"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"last\");"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"late\");"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"later\");"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Latin\");"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"latter\");"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"laugh\");"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"launch\");"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"law\");"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lawn\");"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lawsuit\");"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lawyer\");"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lay\");"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"layer\");"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lazy\");"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lead\");"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leader\");"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leadership\");"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leading\");"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leaf\");"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"league\");"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lean\");"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"learn\");"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"learning\");"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"least\");"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leather\");"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leave\");"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"left\");"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"leg\");"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"legacy\");"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"legal\");"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"legend\");"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"legislation\");"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"legitimate\");"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lemon\");"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"length\");"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"less\");"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lesson\");"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"let\");"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"letter\");"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"level\");"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"liberal\");"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"library\");"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"license\");"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lie\");"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"life\");"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lifestyle\");"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lifetime\");"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lift\");"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"light\");"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"like\");"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"likely\");"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"limit\");"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"limitation\");"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"limited\");"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"line\");"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"link\");"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lip\");"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"list\");"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"listen\");"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"literally\");"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"literary\");"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"literature\");"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"little\");"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"live\");"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"living\");"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"load\");"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"loan\");"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"local\");"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"locate\");"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"location\");"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lock\");"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"long\");"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"long-term\");"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"look\");"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"loose\");"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lose\");"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"loss\");"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lost\");"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lot\");"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lots\");"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"loud\");"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"love\");"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lovely\");"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lover\");"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"low\");"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lower\");"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"luck\");"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lucky\");"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lunch\");"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"lung\");"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"machine\");"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mad\");"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"magazine\");"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mail\");"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"main\");"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mainly\");"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"maintain\");"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"maintenance\");"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"major\");"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"majority\");"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"make\");"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"maker\");"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"makeup\");"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"male\");"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mall\");"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"man\");"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"manage\");"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"management\");"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"manager\");"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"manner\");"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"manufacturer\");"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"manufacturing\");"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"many\");"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"map\");"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"margin\");"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mark\");"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"market\");"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"marketing\");"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"marriage\");"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"married\");"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"marry\");"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mask\");"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mass\");"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"massive\");"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"master\");"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"match\");"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"material\");"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"math\");"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"matter\");"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"may\");"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"maybe\");"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mayor\");"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"me\");"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meal\");"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mean\");"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meaning\");"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meanwhile\");"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"measure\");"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"measurement\");"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meat\");"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mechanism\");"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"media\");"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"medical\");"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"medication\");"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"medicine\");"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"medium\");"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meet\");"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meeting\");"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"member\");"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"membership\");"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"memory\");"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mental\");"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mention\");"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"menu\");"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mere\");"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"merely\");"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mess\");"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"message\");"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"metal\");"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"meter\");"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"method\");"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Mexican\");"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"middle\");"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"might\");"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"military\");"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"milk\");"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"million\");"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mind\");"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mine\");"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"minister\");"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"minor\");"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"minority\");"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"minute\");"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"miracle\");"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mirror\");"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"miss\");"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"missile\");"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mission\");"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mistake\");"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mix\");"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mixture\");"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mm-hmm\");"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mode\");"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"model\");"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"moderate\");"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"modern\");"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"modest\");"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mom\");"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"moment\");"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"money\");"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"monitor\");"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"month\");"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mood\");"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"moon\");"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"moral\");"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"more\");"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"moreover\");"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"morning\");"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mortgage\");"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"most\");"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mostly\");"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mother\");"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"motion\");"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"motivation\");"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"motor\");"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mount\");"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mountain\");"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mouse\");"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mouth\");"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"move\");"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"movement\");"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"movie\");"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Mr\");"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Mrs\");"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Ms\");"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"much\");"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"multiple\");"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"murder\");"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"muscle\");"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"museum\");"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"music\");"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"musical\");"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"musician\");"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Muslim\");"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"must\");"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mutual\");"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"my\");"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"myself\");"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"mystery\");"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"myth\");"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"naked\");"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"name\");"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"narrative\");"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"narrow\");"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nation\");"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"national\");"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"native\");"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"natural\");"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"naturally\");"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nature\");"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"near\");"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nearby\");"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nearly\");"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"necessarily\");"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"necessary\");"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"neck\");"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"need\");"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"negative\");"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"negotiate\");"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"negotiation\");"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"neighbor\");"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"neighborhood\");"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"neither\");"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nerve\");"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nervous\");"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"net\");"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"network\");"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"never\");"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nevertheless\");"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"new\");"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"newly\");"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"news\");"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"newspaper\");"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"next\");"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nice\");"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"night\");"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nine\");"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"no\");"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nobody\");"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nod\");"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"noise\");"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nomination\");"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"none\");"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nonetheless\");"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nor\");"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"normal\");"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"normally\");"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"north\");"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"northern\");"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nose\");"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"not\");"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"note\");"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nothing\");"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"notice\");"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"notion\");"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"novel\");"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"now\");"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nowhere\");"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"n\u0027t\");"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nuclear\");"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"number\");"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"numerous\");"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nurse\");"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"nut\");"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"object\");"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"objective\");"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"obligation\");"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"observation\");"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"observe\");"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"observer\");"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"obtain\");"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"obvious\");"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"obviously\");"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"occasion\");"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"occasionally\");"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"occupation\");"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"occupy\");"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"occur\");"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ocean\");"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"odd\");"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"odds\");"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"of\");"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"off\");"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"offense\");"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"offensive\");"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"offer\");"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"office\");"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"officer\");"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"official\");"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"often\");"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"oh\");"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"oil\");"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ok\");"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"okay\");"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"old\");"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Olympic\");"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"on\");"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"once\");"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"one\");"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ongoing\");"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"onion\");"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"online\");"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"only\");"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"onto\");"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"open\");"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"opening\");"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"operate\");"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"operating\");"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"operation\");"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"operator\");"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"opinion\");"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"opponent\");"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"opportunity\");"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"oppose\");"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"opposite\");"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"opposition\");"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"option\");"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"or\");"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"orange\");"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"order\");"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ordinary\");"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"organic\");"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"organization\");"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"organize\");"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"orientation\");"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"origin\");"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"original\");"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"originally\");"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"other\");"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"others\");"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"otherwise\");"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ought\");"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"our\");"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ourselves\");"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"out\");"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"outcome\");"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"outside\");"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"oven\");"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"over\");"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"overall\");"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"overcome\");"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"overlook\");"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"owe\");"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"own\");"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"owner\");"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pace\");"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pack\");"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"package\");"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"page\");"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pain\");"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"painful\");"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"paint\");"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"painter\");"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"painting\");"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pair\");"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pale\");"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Palestinian\");"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"palm\");"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pan\");"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"panel\");"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pant\");"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"paper\");"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"parent\");"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"park\");"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"parking\");"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"part\");"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"participant\");"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"participate\");"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"participation\");"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"particular\");"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"particularly\");"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"partly\");"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"partner\");"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"partnership\");"
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"party\");"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pass\");"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"passage\");"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"passenger\");"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"passion\");"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"past\");"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"patch\");"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"path\");"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"patient\");"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pattern\");"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pause\");"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pay\");"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"payment\");"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"PC\");"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"peace\");"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"peak\");"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"peer\");"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"penalty\");"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"people\");"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pepper\");"
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"per\");"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perceive\");"
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"percentage\");"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perception\");"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perfect\");"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perfectly\");"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perform\");"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"performance\");"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perhaps\");"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"period\");"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"permanent\");"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"permission\");"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"permit\");"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"person\");"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"personal\");"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"personality\");"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"personally\");"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"personnel\");"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"perspective\");"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"persuade\");"
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pet\");"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"phase\");"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"phenomenon\");"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"philosophy\");"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"phone\");"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"photo\");"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"photograph\");"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"photographer\");"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"phrase\");"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"physical\");"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"physically\");"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"physician\");"
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"piano\");"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pick\");"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"picture\");"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pie\");"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"piece\");"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pile\");"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pilot\");"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pine\");"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pink\");"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pipe\");"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pitch\");"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"place\");"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plan\");"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plane\");"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"planet\");"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"planning\");"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plant\");"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plastic\");"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plate\");"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"platform\");"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"play\");"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"player\");"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"please\");"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pleasure\");"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plenty\");"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plot\");"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"plus\");"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"PM\");"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pocket\");"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"poem\");"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"poet\");"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"poetry\");"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"point\");"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pole\");"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"police\");"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"policy\");"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"political\");"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"politically\");"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"politician\");"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"politics\");"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"poll\");"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pollution\");"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pool\");"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"poor\");"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pop\");"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"popular\");"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"population\");"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"porch\");"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"port\");"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"portion\");"
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"portrait\");"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"portray\");"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pose\");"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"position\");"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"positive\");"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"possess\");"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"possibility\");"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"possible\");"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"possibly\");"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"post\");"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pot\");"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"potato\");"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"potential\");"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"potentially\");"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pound\");"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pour\");"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"poverty\");"
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"powder\");"
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"power\");"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"powerful\");"
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"practical\");"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"practice\");"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pray\");"
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prayer\");"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"precisely\");"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"predict\");"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prefer\");"
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"preference\");"
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pregnancy\");"
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pregnant\");"
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"preparation\");"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prepare\");"
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prescription\");"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"presence\");"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"present\");"
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"presentation\");"
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"preserve\");"
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"president\");"
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"presidential\");"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"press\");"
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pressure\");"
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pretend\");"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pretty\");"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prevent\");"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"previous\");"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"previously\");"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"price\");"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pride\");"
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"priest\");"
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"primarily\");"
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"primary\");"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prime\");"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"principal\");"
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"principle\");"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"print\");"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prior\");"
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"priority\");"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prison\");"
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prisoner\");"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"privacy\");"
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"private\");"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"probably\");"
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"problem\");"
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"procedure\");"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proceed\");"
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"process\");"
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"produce\");"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"producer\");"
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"product\");"
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"production\");"
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"profession\");"
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"professional\");"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"professor\");"
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"profile\");"
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"profit\");"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"program\");"
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"progress\");"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"project\");"
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prominent\");"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"promise\");"
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"promote\");"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prompt\");"
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proof\");"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proper\");"
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"properly\");"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"property\");"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proportion\");"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proposal\");"
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"propose\");"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proposed\");"
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prosecutor\");"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prospect\");"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"protect\");"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"protection\");"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"protein\");"
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"protest\");"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"proud\");"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"prove\");"
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"provide\");"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"provider\");"
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"province\");"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"provision\");"
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"psychological\");"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"psychologist\");"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"psychology\");"
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"public\");"
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"publication\");"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"publicly\");"
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"publish\");"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"publisher\");"
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pull\");"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"punishment\");"
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"purchase\");"
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pure\");"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"purpose\");"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"pursue\");"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"push\");"
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"put\");"
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"qualify\");"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quality\");"
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quarter\");"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quarterback\");"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"question\");"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quick\");"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quickly\");"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quiet\");"
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quietly\");"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quit\");"
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quite\");"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"quote\");"
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"race\");"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"racial\");"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"radical\");"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"radio\");"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rail\");"
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rain\");"
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"raise\");"
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"range\");"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rank\");"
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rapid\");"
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rapidly\");"
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rare\");"
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rarely\");"
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rate\");"
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rather\");"
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rating\");"
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ratio\");"
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"raw\");"
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reach\");"
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"react\");"
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reaction\");"
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"read\");"
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reader\");"
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reading\");"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ready\");"
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"real\");"
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reality\");"
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"realize\");"
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"really\");"
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reason\");"
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reasonable\");"
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recall\");"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"receive\");"
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recent\");"
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recently\");"
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recipe\");"
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recognition\");"
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recognize\");"
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recommend\");"
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recommendation\");"
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"record\");"
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recording\");"
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recover\");"
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recovery\");"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"recruit\");"
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"red\");"
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reduce\");"
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reduction\");"
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"refer\");"
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reference\");"
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reflect\");"
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reflection\");"
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reform\");"
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"refugee\");"
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"refuse\");"
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regard\");"
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regarding\");"
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regardless\");"
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regime\");"
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"region\");"
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regional\");"
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"register\");"
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regular\");"
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regularly\");"
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regulate\");"
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"regulation\");"
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reinforce\");"
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reject\");"
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relate\");"
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relation\");"
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relationship\");"
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relative\");"
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relatively\");"
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relax\");"
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"release\");"
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relevant\");"
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"relief\");"
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"religion\");"
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"religious\");"
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rely\");"
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remain\");"
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remaining\");"
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remarkable\");"
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remember\");"
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remind\");"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remote\");"
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"remove\");"
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"repeat\");"
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"repeatedly\");"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"replace\");"
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reply\");"
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"report\");"
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reporter\");"
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"represent\");"
      },
      {
        "lineNumber": 2229,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"representation\");"
      },
      {
        "lineNumber": 2230,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"representative\");"
      },
      {
        "lineNumber": 2231,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Republican\");"
      },
      {
        "lineNumber": 2232,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reputation\");"
      },
      {
        "lineNumber": 2233,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"request\");"
      },
      {
        "lineNumber": 2234,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"require\");"
      },
      {
        "lineNumber": 2235,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"requirement\");"
      },
      {
        "lineNumber": 2236,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"research\");"
      },
      {
        "lineNumber": 2237,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"researcher\");"
      },
      {
        "lineNumber": 2238,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resemble\");"
      },
      {
        "lineNumber": 2239,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reservation\");"
      },
      {
        "lineNumber": 2240,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resident\");"
      },
      {
        "lineNumber": 2241,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resist\");"
      },
      {
        "lineNumber": 2242,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resistance\");"
      },
      {
        "lineNumber": 2243,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resolution\");"
      },
      {
        "lineNumber": 2244,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resolve\");"
      },
      {
        "lineNumber": 2245,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resort\");"
      },
      {
        "lineNumber": 2246,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"resource\");"
      },
      {
        "lineNumber": 2247,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"respect\");"
      },
      {
        "lineNumber": 2248,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"respond\");"
      },
      {
        "lineNumber": 2249,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"respondent\");"
      },
      {
        "lineNumber": 2250,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"response\");"
      },
      {
        "lineNumber": 2251,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"responsibility\");"
      },
      {
        "lineNumber": 2252,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"responsible\");"
      },
      {
        "lineNumber": 2253,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rest\");"
      },
      {
        "lineNumber": 2254,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"restaurant\");"
      },
      {
        "lineNumber": 2255,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"restore\");"
      },
      {
        "lineNumber": 2256,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"restriction\");"
      },
      {
        "lineNumber": 2257,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"result\");"
      },
      {
        "lineNumber": 2258,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"retain\");"
      },
      {
        "lineNumber": 2259,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"retire\");"
      },
      {
        "lineNumber": 2260,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"retirement\");"
      },
      {
        "lineNumber": 2261,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"return\");"
      },
      {
        "lineNumber": 2262,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"reveal\");"
      },
      {
        "lineNumber": 2263,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"revenue\");"
      },
      {
        "lineNumber": 2264,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"review\");"
      },
      {
        "lineNumber": 2265,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"revolution\");"
      },
      {
        "lineNumber": 2266,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rhythm\");"
      },
      {
        "lineNumber": 2267,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rice\");"
      },
      {
        "lineNumber": 2268,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rich\");"
      },
      {
        "lineNumber": 2269,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rid\");"
      },
      {
        "lineNumber": 2270,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ride\");"
      },
      {
        "lineNumber": 2271,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rifle\");"
      },
      {
        "lineNumber": 2272,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"right\");"
      },
      {
        "lineNumber": 2273,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ring\");"
      },
      {
        "lineNumber": 2274,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rise\");"
      },
      {
        "lineNumber": 2275,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"risk\");"
      },
      {
        "lineNumber": 2276,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"river\");"
      },
      {
        "lineNumber": 2277,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"road\");"
      },
      {
        "lineNumber": 2278,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rock\");"
      },
      {
        "lineNumber": 2279,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"role\");"
      },
      {
        "lineNumber": 2280,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"roll\");"
      },
      {
        "lineNumber": 2281,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"romantic\");"
      },
      {
        "lineNumber": 2282,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"roof\");"
      },
      {
        "lineNumber": 2283,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"room\");"
      },
      {
        "lineNumber": 2284,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"root\");"
      },
      {
        "lineNumber": 2285,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rope\");"
      },
      {
        "lineNumber": 2286,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rose\");"
      },
      {
        "lineNumber": 2287,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rough\");"
      },
      {
        "lineNumber": 2288,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"roughly\");"
      },
      {
        "lineNumber": 2289,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"round\");"
      },
      {
        "lineNumber": 2290,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"route\");"
      },
      {
        "lineNumber": 2291,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"routine\");"
      },
      {
        "lineNumber": 2292,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"row\");"
      },
      {
        "lineNumber": 2293,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rub\");"
      },
      {
        "lineNumber": 2294,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rule\");"
      },
      {
        "lineNumber": 2295,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"run\");"
      },
      {
        "lineNumber": 2296,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"running\");"
      },
      {
        "lineNumber": 2297,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rural\");"
      },
      {
        "lineNumber": 2298,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"rush\");"
      },
      {
        "lineNumber": 2299,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Russian\");"
      },
      {
        "lineNumber": 2300,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sacred\");"
      },
      {
        "lineNumber": 2301,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sad\");"
      },
      {
        "lineNumber": 2302,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"safe\");"
      },
      {
        "lineNumber": 2303,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"safety\");"
      },
      {
        "lineNumber": 2304,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sake\");"
      },
      {
        "lineNumber": 2305,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"salad\");"
      },
      {
        "lineNumber": 2306,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"salary\");"
      },
      {
        "lineNumber": 2307,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sale\");"
      },
      {
        "lineNumber": 2308,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sales\");"
      },
      {
        "lineNumber": 2309,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"salt\");"
      },
      {
        "lineNumber": 2310,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"same\");"
      },
      {
        "lineNumber": 2311,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sample\");"
      },
      {
        "lineNumber": 2312,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sanction\");"
      },
      {
        "lineNumber": 2313,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sand\");"
      },
      {
        "lineNumber": 2314,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"satellite\");"
      },
      {
        "lineNumber": 2315,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"satisfaction\");"
      },
      {
        "lineNumber": 2316,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"satisfy\");"
      },
      {
        "lineNumber": 2317,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sauce\");"
      },
      {
        "lineNumber": 2318,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"save\");"
      },
      {
        "lineNumber": 2319,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"saving\");"
      },
      {
        "lineNumber": 2320,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"say\");"
      },
      {
        "lineNumber": 2321,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scale\");"
      },
      {
        "lineNumber": 2322,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scandal\");"
      },
      {
        "lineNumber": 2323,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scared\");"
      },
      {
        "lineNumber": 2324,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scenario\");"
      },
      {
        "lineNumber": 2325,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scene\");"
      },
      {
        "lineNumber": 2326,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"schedule\");"
      },
      {
        "lineNumber": 2327,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scheme\");"
      },
      {
        "lineNumber": 2328,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scholar\");"
      },
      {
        "lineNumber": 2329,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scholarship\");"
      },
      {
        "lineNumber": 2330,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"school\");"
      },
      {
        "lineNumber": 2331,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"science\");"
      },
      {
        "lineNumber": 2332,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scientific\");"
      },
      {
        "lineNumber": 2333,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scientist\");"
      },
      {
        "lineNumber": 2334,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scope\");"
      },
      {
        "lineNumber": 2335,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"score\");"
      },
      {
        "lineNumber": 2336,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"scream\");"
      },
      {
        "lineNumber": 2337,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"screen\");"
      },
      {
        "lineNumber": 2338,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"script\");"
      },
      {
        "lineNumber": 2339,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sea\");"
      },
      {
        "lineNumber": 2340,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"search\");"
      },
      {
        "lineNumber": 2341,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"season\");"
      },
      {
        "lineNumber": 2342,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seat\");"
      },
      {
        "lineNumber": 2343,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"second\");"
      },
      {
        "lineNumber": 2344,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"secret\");"
      },
      {
        "lineNumber": 2345,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"secretary\");"
      },
      {
        "lineNumber": 2346,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"section\");"
      },
      {
        "lineNumber": 2347,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sector\");"
      },
      {
        "lineNumber": 2348,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"secure\");"
      },
      {
        "lineNumber": 2349,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"security\");"
      },
      {
        "lineNumber": 2350,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"see\");"
      },
      {
        "lineNumber": 2351,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seed\");"
      },
      {
        "lineNumber": 2352,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seek\");"
      },
      {
        "lineNumber": 2353,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seem\");"
      },
      {
        "lineNumber": 2354,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"segment\");"
      },
      {
        "lineNumber": 2355,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seize\");"
      },
      {
        "lineNumber": 2356,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"select\");"
      },
      {
        "lineNumber": 2357,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"selection\");"
      },
      {
        "lineNumber": 2358,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"self\");"
      },
      {
        "lineNumber": 2359,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sell\");"
      },
      {
        "lineNumber": 2360,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Senate\");"
      },
      {
        "lineNumber": 2361,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"senator\");"
      },
      {
        "lineNumber": 2362,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"send\");"
      },
      {
        "lineNumber": 2363,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"senior\");"
      },
      {
        "lineNumber": 2364,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sense\");"
      },
      {
        "lineNumber": 2365,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sensitive\");"
      },
      {
        "lineNumber": 2366,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sentence\");"
      },
      {
        "lineNumber": 2367,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"separate\");"
      },
      {
        "lineNumber": 2368,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sequence\");"
      },
      {
        "lineNumber": 2369,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"series\");"
      },
      {
        "lineNumber": 2370,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"serious\");"
      },
      {
        "lineNumber": 2371,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seriously\");"
      },
      {
        "lineNumber": 2372,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"serve\");"
      },
      {
        "lineNumber": 2373,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"service\");"
      },
      {
        "lineNumber": 2374,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"session\");"
      },
      {
        "lineNumber": 2375,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"set\");"
      },
      {
        "lineNumber": 2376,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"setting\");"
      },
      {
        "lineNumber": 2377,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"settle\");"
      },
      {
        "lineNumber": 2378,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"settlement\");"
      },
      {
        "lineNumber": 2379,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"seven\");"
      },
      {
        "lineNumber": 2380,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"several\");"
      },
      {
        "lineNumber": 2381,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"severe\");"
      },
      {
        "lineNumber": 2382,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sex\");"
      },
      {
        "lineNumber": 2383,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sexual\");"
      },
      {
        "lineNumber": 2384,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shade\");"
      },
      {
        "lineNumber": 2385,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shadow\");"
      },
      {
        "lineNumber": 2386,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shake\");"
      },
      {
        "lineNumber": 2387,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shall\");"
      },
      {
        "lineNumber": 2388,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shape\");"
      },
      {
        "lineNumber": 2389,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"share\");"
      },
      {
        "lineNumber": 2390,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sharp\");"
      },
      {
        "lineNumber": 2391,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"she\");"
      },
      {
        "lineNumber": 2392,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sheet\");"
      },
      {
        "lineNumber": 2393,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shelf\");"
      },
      {
        "lineNumber": 2394,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shell\");"
      },
      {
        "lineNumber": 2395,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shelter\");"
      },
      {
        "lineNumber": 2396,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shift\");"
      },
      {
        "lineNumber": 2397,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shine\");"
      },
      {
        "lineNumber": 2398,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ship\");"
      },
      {
        "lineNumber": 2399,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shirt\");"
      },
      {
        "lineNumber": 2400,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shit\");"
      },
      {
        "lineNumber": 2401,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shock\");"
      },
      {
        "lineNumber": 2402,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shoe\");"
      },
      {
        "lineNumber": 2403,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shoot\");"
      },
      {
        "lineNumber": 2404,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shooting\");"
      },
      {
        "lineNumber": 2405,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shop\");"
      },
      {
        "lineNumber": 2406,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shopping\");"
      },
      {
        "lineNumber": 2407,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shore\");"
      },
      {
        "lineNumber": 2408,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"short\");"
      },
      {
        "lineNumber": 2409,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shortly\");"
      },
      {
        "lineNumber": 2410,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shot\");"
      },
      {
        "lineNumber": 2411,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"should\");"
      },
      {
        "lineNumber": 2412,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shoulder\");"
      },
      {
        "lineNumber": 2413,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shout\");"
      },
      {
        "lineNumber": 2414,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"show\");"
      },
      {
        "lineNumber": 2415,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shower\");"
      },
      {
        "lineNumber": 2416,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shrug\");"
      },
      {
        "lineNumber": 2417,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"shut\");"
      },
      {
        "lineNumber": 2418,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sick\");"
      },
      {
        "lineNumber": 2419,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"side\");"
      },
      {
        "lineNumber": 2420,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sigh\");"
      },
      {
        "lineNumber": 2421,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sight\");"
      },
      {
        "lineNumber": 2422,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sign\");"
      },
      {
        "lineNumber": 2423,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"signal\");"
      },
      {
        "lineNumber": 2424,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"significance\");"
      },
      {
        "lineNumber": 2425,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"significant\");"
      },
      {
        "lineNumber": 2426,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"significantly\");"
      },
      {
        "lineNumber": 2427,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"silence\");"
      },
      {
        "lineNumber": 2428,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"silent\");"
      },
      {
        "lineNumber": 2429,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"silver\");"
      },
      {
        "lineNumber": 2430,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"similar\");"
      },
      {
        "lineNumber": 2431,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"similarly\");"
      },
      {
        "lineNumber": 2432,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"simple\");"
      },
      {
        "lineNumber": 2433,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"simply\");"
      },
      {
        "lineNumber": 2434,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sin\");"
      },
      {
        "lineNumber": 2435,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"since\");"
      },
      {
        "lineNumber": 2436,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sing\");"
      },
      {
        "lineNumber": 2437,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"singer\");"
      },
      {
        "lineNumber": 2438,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"single\");"
      },
      {
        "lineNumber": 2439,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sink\");"
      },
      {
        "lineNumber": 2440,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sir\");"
      },
      {
        "lineNumber": 2441,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sister\");"
      },
      {
        "lineNumber": 2442,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sit\");"
      },
      {
        "lineNumber": 2443,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"site\");"
      },
      {
        "lineNumber": 2444,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"situation\");"
      },
      {
        "lineNumber": 2445,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"six\");"
      },
      {
        "lineNumber": 2446,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"size\");"
      },
      {
        "lineNumber": 2447,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ski\");"
      },
      {
        "lineNumber": 2448,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"skill\");"
      },
      {
        "lineNumber": 2449,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"skin\");"
      },
      {
        "lineNumber": 2450,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sky\");"
      },
      {
        "lineNumber": 2451,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slave\");"
      },
      {
        "lineNumber": 2452,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sleep\");"
      },
      {
        "lineNumber": 2453,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slice\");"
      },
      {
        "lineNumber": 2454,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slide\");"
      },
      {
        "lineNumber": 2455,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slight\");"
      },
      {
        "lineNumber": 2456,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slightly\");"
      },
      {
        "lineNumber": 2457,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slip\");"
      },
      {
        "lineNumber": 2458,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slow\");"
      },
      {
        "lineNumber": 2459,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"slowly\");"
      },
      {
        "lineNumber": 2460,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"small\");"
      },
      {
        "lineNumber": 2461,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"smart\");"
      },
      {
        "lineNumber": 2462,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"smell\");"
      },
      {
        "lineNumber": 2463,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"smile\");"
      },
      {
        "lineNumber": 2464,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"smoke\");"
      },
      {
        "lineNumber": 2465,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"smooth\");"
      },
      {
        "lineNumber": 2466,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"snap\");"
      },
      {
        "lineNumber": 2467,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"snow\");"
      },
      {
        "lineNumber": 2468,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"so\");"
      },
      {
        "lineNumber": 2469,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"so-called\");"
      },
      {
        "lineNumber": 2470,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soccer\");"
      },
      {
        "lineNumber": 2471,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"social\");"
      },
      {
        "lineNumber": 2472,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"society\");"
      },
      {
        "lineNumber": 2473,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soft\");"
      },
      {
        "lineNumber": 2474,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"software\");"
      },
      {
        "lineNumber": 2475,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soil\");"
      },
      {
        "lineNumber": 2476,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"solar\");"
      },
      {
        "lineNumber": 2477,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soldier\");"
      },
      {
        "lineNumber": 2478,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"solid\");"
      },
      {
        "lineNumber": 2479,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"solution\");"
      },
      {
        "lineNumber": 2480,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"solve\");"
      },
      {
        "lineNumber": 2481,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"some\");"
      },
      {
        "lineNumber": 2482,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"somebody\");"
      },
      {
        "lineNumber": 2483,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"somehow\");"
      },
      {
        "lineNumber": 2484,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"someone\");"
      },
      {
        "lineNumber": 2485,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"something\");"
      },
      {
        "lineNumber": 2486,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sometimes\");"
      },
      {
        "lineNumber": 2487,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"somewhat\");"
      },
      {
        "lineNumber": 2488,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"somewhere\");"
      },
      {
        "lineNumber": 2489,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"son\");"
      },
      {
        "lineNumber": 2490,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"song\");"
      },
      {
        "lineNumber": 2491,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soon\");"
      },
      {
        "lineNumber": 2492,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sophisticated\");"
      },
      {
        "lineNumber": 2493,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sorry\");"
      },
      {
        "lineNumber": 2494,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sort\");"
      },
      {
        "lineNumber": 2495,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soul\");"
      },
      {
        "lineNumber": 2496,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sound\");"
      },
      {
        "lineNumber": 2497,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"soup\");"
      },
      {
        "lineNumber": 2498,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"source\");"
      },
      {
        "lineNumber": 2499,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"south\");"
      },
      {
        "lineNumber": 2500,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"southern\");"
      },
      {
        "lineNumber": 2501,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Soviet\");"
      },
      {
        "lineNumber": 2502,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"space\");"
      },
      {
        "lineNumber": 2503,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Spanish\");"
      },
      {
        "lineNumber": 2504,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"speak\");"
      },
      {
        "lineNumber": 2505,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"speaker\");"
      },
      {
        "lineNumber": 2506,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"special\");"
      },
      {
        "lineNumber": 2507,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"specialist\");"
      },
      {
        "lineNumber": 2508,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"species\");"
      },
      {
        "lineNumber": 2509,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"specific\");"
      },
      {
        "lineNumber": 2510,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"specifically\");"
      },
      {
        "lineNumber": 2511,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"speech\");"
      },
      {
        "lineNumber": 2512,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"speed\");"
      },
      {
        "lineNumber": 2513,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spend\");"
      },
      {
        "lineNumber": 2514,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spending\");"
      },
      {
        "lineNumber": 2515,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spin\");"
      },
      {
        "lineNumber": 2516,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spirit\");"
      },
      {
        "lineNumber": 2517,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spiritual\");"
      },
      {
        "lineNumber": 2518,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"split\");"
      },
      {
        "lineNumber": 2519,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spokesman\");"
      },
      {
        "lineNumber": 2520,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sport\");"
      },
      {
        "lineNumber": 2521,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spot\");"
      },
      {
        "lineNumber": 2522,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spread\");"
      },
      {
        "lineNumber": 2523,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"spring\");"
      },
      {
        "lineNumber": 2524,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"square\");"
      },
      {
        "lineNumber": 2525,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"squeeze\");"
      },
      {
        "lineNumber": 2526,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stability\");"
      },
      {
        "lineNumber": 2527,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stable\");"
      },
      {
        "lineNumber": 2528,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"staff\");"
      },
      {
        "lineNumber": 2529,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stage\");"
      },
      {
        "lineNumber": 2530,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stair\");"
      },
      {
        "lineNumber": 2531,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stake\");"
      },
      {
        "lineNumber": 2532,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stand\");"
      },
      {
        "lineNumber": 2533,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"standard\");"
      },
      {
        "lineNumber": 2534,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"standing\");"
      },
      {
        "lineNumber": 2535,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"star\");"
      },
      {
        "lineNumber": 2536,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stare\");"
      },
      {
        "lineNumber": 2537,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"start\");"
      },
      {
        "lineNumber": 2538,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"state\");"
      },
      {
        "lineNumber": 2539,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"statement\");"
      },
      {
        "lineNumber": 2540,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"station\");"
      },
      {
        "lineNumber": 2541,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"statistics\");"
      },
      {
        "lineNumber": 2542,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"status\");"
      },
      {
        "lineNumber": 2543,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stay\");"
      },
      {
        "lineNumber": 2544,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"steady\");"
      },
      {
        "lineNumber": 2545,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"steal\");"
      },
      {
        "lineNumber": 2546,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"steel\");"
      },
      {
        "lineNumber": 2547,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"step\");"
      },
      {
        "lineNumber": 2548,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stick\");"
      },
      {
        "lineNumber": 2549,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"still\");"
      },
      {
        "lineNumber": 2550,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stir\");"
      },
      {
        "lineNumber": 2551,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stock\");"
      },
      {
        "lineNumber": 2552,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stomach\");"
      },
      {
        "lineNumber": 2553,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stone\");"
      },
      {
        "lineNumber": 2554,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stop\");"
      },
      {
        "lineNumber": 2555,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"storage\");"
      },
      {
        "lineNumber": 2556,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"store\");"
      },
      {
        "lineNumber": 2557,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"storm\");"
      },
      {
        "lineNumber": 2558,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"story\");"
      },
      {
        "lineNumber": 2559,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"straight\");"
      },
      {
        "lineNumber": 2560,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strange\");"
      },
      {
        "lineNumber": 2561,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stranger\");"
      },
      {
        "lineNumber": 2562,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strategic\");"
      },
      {
        "lineNumber": 2563,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strategy\");"
      },
      {
        "lineNumber": 2564,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stream\");"
      },
      {
        "lineNumber": 2565,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"street\");"
      },
      {
        "lineNumber": 2566,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strength\");"
      },
      {
        "lineNumber": 2567,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strengthen\");"
      },
      {
        "lineNumber": 2568,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stress\");"
      },
      {
        "lineNumber": 2569,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stretch\");"
      },
      {
        "lineNumber": 2570,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strike\");"
      },
      {
        "lineNumber": 2571,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"string\");"
      },
      {
        "lineNumber": 2572,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strip\");"
      },
      {
        "lineNumber": 2573,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stroke\");"
      },
      {
        "lineNumber": 2574,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strong\");"
      },
      {
        "lineNumber": 2575,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"strongly\");"
      },
      {
        "lineNumber": 2576,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"structure\");"
      },
      {
        "lineNumber": 2577,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"struggle\");"
      },
      {
        "lineNumber": 2578,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"student\");"
      },
      {
        "lineNumber": 2579,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"studio\");"
      },
      {
        "lineNumber": 2580,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"study\");"
      },
      {
        "lineNumber": 2581,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stuff\");"
      },
      {
        "lineNumber": 2582,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"stupid\");"
      },
      {
        "lineNumber": 2583,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"style\");"
      },
      {
        "lineNumber": 2584,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"subject\");"
      },
      {
        "lineNumber": 2585,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"submit\");"
      },
      {
        "lineNumber": 2586,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"subsequent\");"
      },
      {
        "lineNumber": 2587,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"substance\");"
      },
      {
        "lineNumber": 2588,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"substantial\");"
      },
      {
        "lineNumber": 2589,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"succeed\");"
      },
      {
        "lineNumber": 2590,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"success\");"
      },
      {
        "lineNumber": 2591,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"successful\");"
      },
      {
        "lineNumber": 2592,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"successfully\");"
      },
      {
        "lineNumber": 2593,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"such\");"
      },
      {
        "lineNumber": 2594,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sudden\");"
      },
      {
        "lineNumber": 2595,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suddenly\");"
      },
      {
        "lineNumber": 2596,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sue\");"
      },
      {
        "lineNumber": 2597,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suffer\");"
      },
      {
        "lineNumber": 2598,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sufficient\");"
      },
      {
        "lineNumber": 2599,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sugar\");"
      },
      {
        "lineNumber": 2600,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suggest\");"
      },
      {
        "lineNumber": 2601,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suggestion\");"
      },
      {
        "lineNumber": 2602,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suicide\");"
      },
      {
        "lineNumber": 2603,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suit\");"
      },
      {
        "lineNumber": 2604,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"summer\");"
      },
      {
        "lineNumber": 2605,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"summit\");"
      },
      {
        "lineNumber": 2606,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sun\");"
      },
      {
        "lineNumber": 2607,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"super\");"
      },
      {
        "lineNumber": 2608,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"supply\");"
      },
      {
        "lineNumber": 2609,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"support\");"
      },
      {
        "lineNumber": 2610,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"supporter\");"
      },
      {
        "lineNumber": 2611,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suppose\");"
      },
      {
        "lineNumber": 2612,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"supposed\");"
      },
      {
        "lineNumber": 2613,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"Supreme\");"
      },
      {
        "lineNumber": 2614,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sure\");"
      },
      {
        "lineNumber": 2615,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surely\");"
      },
      {
        "lineNumber": 2616,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surface\");"
      },
      {
        "lineNumber": 2617,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surgery\");"
      },
      {
        "lineNumber": 2618,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surprise\");"
      },
      {
        "lineNumber": 2619,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surprised\");"
      },
      {
        "lineNumber": 2620,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surprising\");"
      },
      {
        "lineNumber": 2621,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surprisingly\");"
      },
      {
        "lineNumber": 2622,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"surround\");"
      },
      {
        "lineNumber": 2623,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"survey\");"
      },
      {
        "lineNumber": 2624,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"survival\");"
      },
      {
        "lineNumber": 2625,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"survive\");"
      },
      {
        "lineNumber": 2626,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"survivor\");"
      },
      {
        "lineNumber": 2627,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"suspect\");"
      },
      {
        "lineNumber": 2628,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sustain\");"
      },
      {
        "lineNumber": 2629,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"swear\");"
      },
      {
        "lineNumber": 2630,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sweep\");"
      },
      {
        "lineNumber": 2631,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"sweet\");"
      },
      {
        "lineNumber": 2632,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"swim\");"
      },
      {
        "lineNumber": 2633,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"swing\");"
      },
      {
        "lineNumber": 2634,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"switch\");"
      },
      {
        "lineNumber": 2635,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"symbol\");"
      },
      {
        "lineNumber": 2636,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"symptom\");"
      },
      {
        "lineNumber": 2637,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"system\");"
      },
      {
        "lineNumber": 2638,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"table\");"
      },
      {
        "lineNumber": 2639,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tablespoon\");"
      },
      {
        "lineNumber": 2640,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tactic\");"
      },
      {
        "lineNumber": 2641,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tail\");"
      },
      {
        "lineNumber": 2642,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"take\");"
      },
      {
        "lineNumber": 2643,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tale\");"
      },
      {
        "lineNumber": 2644,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"talent\");"
      },
      {
        "lineNumber": 2645,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"talk\");"
      },
      {
        "lineNumber": 2646,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tall\");"
      },
      {
        "lineNumber": 2647,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tank\");"
      },
      {
        "lineNumber": 2648,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tap\");"
      },
      {
        "lineNumber": 2649,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tape\");"
      },
      {
        "lineNumber": 2650,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"target\");"
      },
      {
        "lineNumber": 2651,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"task\");"
      },
      {
        "lineNumber": 2652,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"taste\");"
      },
      {
        "lineNumber": 2653,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tax\");"
      },
      {
        "lineNumber": 2654,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"taxpayer\");"
      },
      {
        "lineNumber": 2655,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tea\");"
      },
      {
        "lineNumber": 2656,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"teach\");"
      },
      {
        "lineNumber": 2657,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"teacher\");"
      },
      {
        "lineNumber": 2658,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"teaching\");"
      },
      {
        "lineNumber": 2659,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"team\");"
      },
      {
        "lineNumber": 2660,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tear\");"
      },
      {
        "lineNumber": 2661,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"teaspoon\");"
      },
      {
        "lineNumber": 2662,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"technical\");"
      },
      {
        "lineNumber": 2663,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"technique\");"
      },
      {
        "lineNumber": 2664,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"technology\");"
      },
      {
        "lineNumber": 2665,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"teen\");"
      },
      {
        "lineNumber": 2666,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"teenager\");"
      },
      {
        "lineNumber": 2667,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"telephone\");"
      },
      {
        "lineNumber": 2668,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"telescope\");"
      },
      {
        "lineNumber": 2669,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"television\");"
      },
      {
        "lineNumber": 2670,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tell\");"
      },
      {
        "lineNumber": 2671,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"temperature\");"
      },
      {
        "lineNumber": 2672,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"temporary\");"
      },
      {
        "lineNumber": 2673,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ten\");"
      },
      {
        "lineNumber": 2674,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tend\");"
      },
      {
        "lineNumber": 2675,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tendency\");"
      },
      {
        "lineNumber": 2676,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tennis\");"
      },
      {
        "lineNumber": 2677,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tension\");"
      },
      {
        "lineNumber": 2678,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tent\");"
      },
      {
        "lineNumber": 2679,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"term\");"
      },
      {
        "lineNumber": 2680,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"terms\");"
      },
      {
        "lineNumber": 2681,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"terrible\");"
      },
      {
        "lineNumber": 2682,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"territory\");"
      },
      {
        "lineNumber": 2683,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"terror\");"
      },
      {
        "lineNumber": 2684,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"terrorism\");"
      },
      {
        "lineNumber": 2685,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"terrorist\");"
      },
      {
        "lineNumber": 2686,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"test\");"
      },
      {
        "lineNumber": 2687,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"testify\");"
      },
      {
        "lineNumber": 2688,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"testimony\");"
      },
      {
        "lineNumber": 2689,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"testing\");"
      },
      {
        "lineNumber": 2690,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"text\");"
      },
      {
        "lineNumber": 2691,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"than\");"
      },
      {
        "lineNumber": 2692,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thank\");"
      },
      {
        "lineNumber": 2693,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thanks\");"
      },
      {
        "lineNumber": 2694,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"that\");"
      },
      {
        "lineNumber": 2695,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"the\");"
      },
      {
        "lineNumber": 2696,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"theater\");"
      },
      {
        "lineNumber": 2697,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"their\");"
      },
      {
        "lineNumber": 2698,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"them\");"
      },
      {
        "lineNumber": 2699,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"theme\");"
      },
      {
        "lineNumber": 2700,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"themselves\");"
      },
      {
        "lineNumber": 2701,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"then\");"
      },
      {
        "lineNumber": 2702,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"theory\");"
      },
      {
        "lineNumber": 2703,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"therapy\");"
      },
      {
        "lineNumber": 2704,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"there\");"
      },
      {
        "lineNumber": 2705,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"therefore\");"
      },
      {
        "lineNumber": 2706,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"these\");"
      },
      {
        "lineNumber": 2707,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"they\");"
      },
      {
        "lineNumber": 2708,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thick\");"
      },
      {
        "lineNumber": 2709,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thin\");"
      },
      {
        "lineNumber": 2710,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thing\");"
      },
      {
        "lineNumber": 2711,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"think\");"
      },
      {
        "lineNumber": 2712,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thinking\");"
      },
      {
        "lineNumber": 2713,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"third\");"
      },
      {
        "lineNumber": 2714,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thirty\");"
      },
      {
        "lineNumber": 2715,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"this\");"
      },
      {
        "lineNumber": 2716,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"those\");"
      },
      {
        "lineNumber": 2717,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"though\");"
      },
      {
        "lineNumber": 2718,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thought\");"
      },
      {
        "lineNumber": 2719,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thousand\");"
      },
      {
        "lineNumber": 2720,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"threat\");"
      },
      {
        "lineNumber": 2721,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"threaten\");"
      },
      {
        "lineNumber": 2722,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"three\");"
      },
      {
        "lineNumber": 2723,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"throat\");"
      },
      {
        "lineNumber": 2724,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"through\");"
      },
      {
        "lineNumber": 2725,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"throughout\");"
      },
      {
        "lineNumber": 2726,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"throw\");"
      },
      {
        "lineNumber": 2727,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"thus\");"
      },
      {
        "lineNumber": 2728,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ticket\");"
      },
      {
        "lineNumber": 2729,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tie\");"
      },
      {
        "lineNumber": 2730,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tight\");"
      },
      {
        "lineNumber": 2731,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"time\");"
      },
      {
        "lineNumber": 2732,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tiny\");"
      },
      {
        "lineNumber": 2733,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tip\");"
      },
      {
        "lineNumber": 2734,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tire\");"
      },
      {
        "lineNumber": 2735,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tired\");"
      },
      {
        "lineNumber": 2736,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tissue\");"
      },
      {
        "lineNumber": 2737,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"title\");"
      },
      {
        "lineNumber": 2738,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"to\");"
      },
      {
        "lineNumber": 2739,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tobacco\");"
      },
      {
        "lineNumber": 2740,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"today\");"
      },
      {
        "lineNumber": 2741,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"toe\");"
      },
      {
        "lineNumber": 2742,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"together\");"
      },
      {
        "lineNumber": 2743,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tomato\");"
      },
      {
        "lineNumber": 2744,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tomorrow\");"
      },
      {
        "lineNumber": 2745,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tone\");"
      },
      {
        "lineNumber": 2746,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tongue\");"
      },
      {
        "lineNumber": 2747,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tonight\");"
      },
      {
        "lineNumber": 2748,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"too\");"
      },
      {
        "lineNumber": 2749,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tool\");"
      },
      {
        "lineNumber": 2750,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tooth\");"
      },
      {
        "lineNumber": 2751,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"top\");"
      },
      {
        "lineNumber": 2752,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"topic\");"
      },
      {
        "lineNumber": 2753,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"toss\");"
      },
      {
        "lineNumber": 2754,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"total\");"
      },
      {
        "lineNumber": 2755,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"totally\");"
      },
      {
        "lineNumber": 2756,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"touch\");"
      },
      {
        "lineNumber": 2757,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tough\");"
      },
      {
        "lineNumber": 2758,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tour\");"
      },
      {
        "lineNumber": 2759,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tourist\");"
      },
      {
        "lineNumber": 2760,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tournament\");"
      },
      {
        "lineNumber": 2761,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"toward\");"
      },
      {
        "lineNumber": 2762,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"towards\");"
      },
      {
        "lineNumber": 2763,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tower\");"
      },
      {
        "lineNumber": 2764,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"town\");"
      },
      {
        "lineNumber": 2765,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"toy\");"
      },
      {
        "lineNumber": 2766,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trace\");"
      },
      {
        "lineNumber": 2767,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"track\");"
      },
      {
        "lineNumber": 2768,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trade\");"
      },
      {
        "lineNumber": 2769,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tradition\");"
      },
      {
        "lineNumber": 2770,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"traditional\");"
      },
      {
        "lineNumber": 2771,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"traffic\");"
      },
      {
        "lineNumber": 2772,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tragedy\");"
      },
      {
        "lineNumber": 2773,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trail\");"
      },
      {
        "lineNumber": 2774,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"train\");"
      },
      {
        "lineNumber": 2775,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"training\");"
      },
      {
        "lineNumber": 2776,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"transfer\");"
      },
      {
        "lineNumber": 2777,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"transform\");"
      },
      {
        "lineNumber": 2778,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"transformation\");"
      },
      {
        "lineNumber": 2779,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"transition\");"
      },
      {
        "lineNumber": 2780,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"translate\");"
      },
      {
        "lineNumber": 2781,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"transportation\");"
      },
      {
        "lineNumber": 2782,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"travel\");"
      },
      {
        "lineNumber": 2783,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"treat\");"
      },
      {
        "lineNumber": 2784,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"treatment\");"
      },
      {
        "lineNumber": 2785,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"treaty\");"
      },
      {
        "lineNumber": 2786,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tree\");"
      },
      {
        "lineNumber": 2787,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tremendous\");"
      },
      {
        "lineNumber": 2788,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trend\");"
      },
      {
        "lineNumber": 2789,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trial\");"
      },
      {
        "lineNumber": 2790,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tribe\");"
      },
      {
        "lineNumber": 2791,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trick\");"
      },
      {
        "lineNumber": 2792,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trip\");"
      },
      {
        "lineNumber": 2793,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"troop\");"
      },
      {
        "lineNumber": 2794,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trouble\");"
      },
      {
        "lineNumber": 2795,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"truck\");"
      },
      {
        "lineNumber": 2796,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"true\");"
      },
      {
        "lineNumber": 2797,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"truly\");"
      },
      {
        "lineNumber": 2798,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"trust\");"
      },
      {
        "lineNumber": 2799,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"truth\");"
      },
      {
        "lineNumber": 2800,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"try\");"
      },
      {
        "lineNumber": 2801,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tube\");"
      },
      {
        "lineNumber": 2802,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"tunnel\");"
      },
      {
        "lineNumber": 2803,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"turn\");"
      },
      {
        "lineNumber": 2804,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"TV\");"
      },
      {
        "lineNumber": 2805,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"twelve\");"
      },
      {
        "lineNumber": 2806,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"twenty\");"
      },
      {
        "lineNumber": 2807,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"twice\");"
      },
      {
        "lineNumber": 2808,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"twin\");"
      },
      {
        "lineNumber": 2809,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"two\");"
      },
      {
        "lineNumber": 2810,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"type\");"
      },
      {
        "lineNumber": 2811,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"typical\");"
      },
      {
        "lineNumber": 2812,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"typically\");"
      },
      {
        "lineNumber": 2813,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ugly\");"
      },
      {
        "lineNumber": 2814,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ultimate\");"
      },
      {
        "lineNumber": 2815,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"ultimately\");"
      },
      {
        "lineNumber": 2816,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unable\");"
      },
      {
        "lineNumber": 2817,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"uncle\");"
      },
      {
        "lineNumber": 2818,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"under\");"
      },
      {
        "lineNumber": 2819,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"undergo\");"
      },
      {
        "lineNumber": 2820,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"understand\");"
      },
      {
        "lineNumber": 2821,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"understanding\");"
      },
      {
        "lineNumber": 2822,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unfortunately\");"
      },
      {
        "lineNumber": 2823,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"uniform\");"
      },
      {
        "lineNumber": 2824,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"union\");"
      },
      {
        "lineNumber": 2825,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unique\");"
      },
      {
        "lineNumber": 2826,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unit\");"
      },
      {
        "lineNumber": 2827,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"United\");"
      },
      {
        "lineNumber": 2828,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"universal\");"
      },
      {
        "lineNumber": 2829,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"universe\");"
      },
      {
        "lineNumber": 2830,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"university\");"
      },
      {
        "lineNumber": 2831,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unknown\");"
      },
      {
        "lineNumber": 2832,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unless\");"
      },
      {
        "lineNumber": 2833,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unlike\");"
      },
      {
        "lineNumber": 2834,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unlikely\");"
      },
      {
        "lineNumber": 2835,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"until\");"
      },
      {
        "lineNumber": 2836,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"unusual\");"
      },
      {
        "lineNumber": 2837,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"up\");"
      },
      {
        "lineNumber": 2838,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"upon\");"
      },
      {
        "lineNumber": 2839,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"upper\");"
      },
      {
        "lineNumber": 2840,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"urban\");"
      },
      {
        "lineNumber": 2841,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"urge\");"
      },
      {
        "lineNumber": 2842,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"us\");"
      },
      {
        "lineNumber": 2843,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"use\");"
      },
      {
        "lineNumber": 2844,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"used\");"
      },
      {
        "lineNumber": 2845,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"useful\");"
      },
      {
        "lineNumber": 2846,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"user\");"
      },
      {
        "lineNumber": 2847,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"usual\");"
      },
      {
        "lineNumber": 2848,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"usually\");"
      },
      {
        "lineNumber": 2849,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"utility\");"
      },
      {
        "lineNumber": 2850,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vacation\");"
      },
      {
        "lineNumber": 2851,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"valley\");"
      },
      {
        "lineNumber": 2852,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"valuable\");"
      },
      {
        "lineNumber": 2853,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"value\");"
      },
      {
        "lineNumber": 2854,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"variable\");"
      },
      {
        "lineNumber": 2855,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"variation\");"
      },
      {
        "lineNumber": 2856,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"variety\");"
      },
      {
        "lineNumber": 2857,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"various\");"
      },
      {
        "lineNumber": 2858,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vary\");"
      },
      {
        "lineNumber": 2859,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vast\");"
      },
      {
        "lineNumber": 2860,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vegetable\");"
      },
      {
        "lineNumber": 2861,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vehicle\");"
      },
      {
        "lineNumber": 2862,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"venture\");"
      },
      {
        "lineNumber": 2863,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"version\");"
      },
      {
        "lineNumber": 2864,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"versus\");"
      },
      {
        "lineNumber": 2865,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"very\");"
      },
      {
        "lineNumber": 2866,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vessel\");"
      },
      {
        "lineNumber": 2867,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"veteran\");"
      },
      {
        "lineNumber": 2868,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"via\");"
      },
      {
        "lineNumber": 2869,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"victim\");"
      },
      {
        "lineNumber": 2870,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"victory\");"
      },
      {
        "lineNumber": 2871,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"video\");"
      },
      {
        "lineNumber": 2872,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"view\");"
      },
      {
        "lineNumber": 2873,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"viewer\");"
      },
      {
        "lineNumber": 2874,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"village\");"
      },
      {
        "lineNumber": 2875,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"violate\");"
      },
      {
        "lineNumber": 2876,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"violation\");"
      },
      {
        "lineNumber": 2877,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"violence\");"
      },
      {
        "lineNumber": 2878,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"violent\");"
      },
      {
        "lineNumber": 2879,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"virtually\");"
      },
      {
        "lineNumber": 2880,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"virtue\");"
      },
      {
        "lineNumber": 2881,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"virus\");"
      },
      {
        "lineNumber": 2882,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"visible\");"
      },
      {
        "lineNumber": 2883,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vision\");"
      },
      {
        "lineNumber": 2884,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"visit\");"
      },
      {
        "lineNumber": 2885,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"visitor\");"
      },
      {
        "lineNumber": 2886,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"visual\");"
      },
      {
        "lineNumber": 2887,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vital\");"
      },
      {
        "lineNumber": 2888,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"voice\");"
      },
      {
        "lineNumber": 2889,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"volume\");"
      },
      {
        "lineNumber": 2890,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"volunteer\");"
      },
      {
        "lineNumber": 2891,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vote\");"
      },
      {
        "lineNumber": 2892,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"voter\");"
      },
      {
        "lineNumber": 2893,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vs\");"
      },
      {
        "lineNumber": 2894,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"vulnerable\");"
      },
      {
        "lineNumber": 2895,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wage\");"
      },
      {
        "lineNumber": 2896,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wait\");"
      },
      {
        "lineNumber": 2897,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wake\");"
      },
      {
        "lineNumber": 2898,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"walk\");"
      },
      {
        "lineNumber": 2899,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wall\");"
      },
      {
        "lineNumber": 2900,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wander\");"
      },
      {
        "lineNumber": 2901,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"want\");"
      },
      {
        "lineNumber": 2902,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"war\");"
      },
      {
        "lineNumber": 2903,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"warm\");"
      },
      {
        "lineNumber": 2904,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"warn\");"
      },
      {
        "lineNumber": 2905,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"warning\");"
      },
      {
        "lineNumber": 2906,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wash\");"
      },
      {
        "lineNumber": 2907,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"waste\");"
      },
      {
        "lineNumber": 2908,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"watch\");"
      },
      {
        "lineNumber": 2909,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"water\");"
      },
      {
        "lineNumber": 2910,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wave\");"
      },
      {
        "lineNumber": 2911,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"way\");"
      },
      {
        "lineNumber": 2912,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"we\");"
      },
      {
        "lineNumber": 2913,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weak\");"
      },
      {
        "lineNumber": 2914,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wealth\");"
      },
      {
        "lineNumber": 2915,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wealthy\");"
      },
      {
        "lineNumber": 2916,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weapon\");"
      },
      {
        "lineNumber": 2917,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wear\");"
      },
      {
        "lineNumber": 2918,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weather\");"
      },
      {
        "lineNumber": 2919,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wedding\");"
      },
      {
        "lineNumber": 2920,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"week\");"
      },
      {
        "lineNumber": 2921,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weekend\");"
      },
      {
        "lineNumber": 2922,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weekly\");"
      },
      {
        "lineNumber": 2923,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weigh\");"
      },
      {
        "lineNumber": 2924,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"weight\");"
      },
      {
        "lineNumber": 2925,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"welcome\");"
      },
      {
        "lineNumber": 2926,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"welfare\");"
      },
      {
        "lineNumber": 2927,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"well\");"
      },
      {
        "lineNumber": 2928,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"west\");"
      },
      {
        "lineNumber": 2929,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"western\");"
      },
      {
        "lineNumber": 2930,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wet\");"
      },
      {
        "lineNumber": 2931,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"what\");"
      },
      {
        "lineNumber": 2932,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whatever\");"
      },
      {
        "lineNumber": 2933,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wheel\");"
      },
      {
        "lineNumber": 2934,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"when\");"
      },
      {
        "lineNumber": 2935,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whenever\");"
      },
      {
        "lineNumber": 2936,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"where\");"
      },
      {
        "lineNumber": 2937,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whereas\");"
      },
      {
        "lineNumber": 2938,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whether\");"
      },
      {
        "lineNumber": 2939,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"which\");"
      },
      {
        "lineNumber": 2940,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"while\");"
      },
      {
        "lineNumber": 2941,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whisper\");"
      },
      {
        "lineNumber": 2942,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"white\");"
      },
      {
        "lineNumber": 2943,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"who\");"
      },
      {
        "lineNumber": 2944,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whole\");"
      },
      {
        "lineNumber": 2945,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whom\");"
      },
      {
        "lineNumber": 2946,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"whose\");"
      },
      {
        "lineNumber": 2947,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"why\");"
      },
      {
        "lineNumber": 2948,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wide\");"
      },
      {
        "lineNumber": 2949,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"widely\");"
      },
      {
        "lineNumber": 2950,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"widespread\");"
      },
      {
        "lineNumber": 2951,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wife\");"
      },
      {
        "lineNumber": 2952,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wild\");"
      },
      {
        "lineNumber": 2953,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"will\");"
      },
      {
        "lineNumber": 2954,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"willing\");"
      },
      {
        "lineNumber": 2955,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"win\");"
      },
      {
        "lineNumber": 2956,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wind\");"
      },
      {
        "lineNumber": 2957,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"window\");"
      },
      {
        "lineNumber": 2958,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wine\");"
      },
      {
        "lineNumber": 2959,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wing\");"
      },
      {
        "lineNumber": 2960,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"winner\");"
      },
      {
        "lineNumber": 2961,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"winter\");"
      },
      {
        "lineNumber": 2962,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wipe\");"
      },
      {
        "lineNumber": 2963,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wire\");"
      },
      {
        "lineNumber": 2964,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wisdom\");"
      },
      {
        "lineNumber": 2965,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wise\");"
      },
      {
        "lineNumber": 2966,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wish\");"
      },
      {
        "lineNumber": 2967,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"with\");"
      },
      {
        "lineNumber": 2968,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"withdraw\");"
      },
      {
        "lineNumber": 2969,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"within\");"
      },
      {
        "lineNumber": 2970,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"without\");"
      },
      {
        "lineNumber": 2971,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"witness\");"
      },
      {
        "lineNumber": 2972,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"woman\");"
      },
      {
        "lineNumber": 2973,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wonder\");"
      },
      {
        "lineNumber": 2974,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wonderful\");"
      },
      {
        "lineNumber": 2975,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wood\");"
      },
      {
        "lineNumber": 2976,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wooden\");"
      },
      {
        "lineNumber": 2977,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"word\");"
      },
      {
        "lineNumber": 2978,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"work\");"
      },
      {
        "lineNumber": 2979,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"worker\");"
      },
      {
        "lineNumber": 2980,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"working\");"
      },
      {
        "lineNumber": 2981,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"works\");"
      },
      {
        "lineNumber": 2982,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"workshop\");"
      },
      {
        "lineNumber": 2983,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"world\");"
      },
      {
        "lineNumber": 2984,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"worried\");"
      },
      {
        "lineNumber": 2985,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"worry\");"
      },
      {
        "lineNumber": 2986,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"worth\");"
      },
      {
        "lineNumber": 2987,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"would\");"
      },
      {
        "lineNumber": 2988,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wound\");"
      },
      {
        "lineNumber": 2989,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wrap\");"
      },
      {
        "lineNumber": 2990,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"write\");"
      },
      {
        "lineNumber": 2991,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"writer\");"
      },
      {
        "lineNumber": 2992,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"writing\");"
      },
      {
        "lineNumber": 2993,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"wrong\");"
      },
      {
        "lineNumber": 2994,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yard\");"
      },
      {
        "lineNumber": 2995,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yeah\");"
      },
      {
        "lineNumber": 2996,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"year\");"
      },
      {
        "lineNumber": 2997,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yell\");"
      },
      {
        "lineNumber": 2998,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yellow\");"
      },
      {
        "lineNumber": 2999,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yes\");"
      },
      {
        "lineNumber": 3000,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yesterday\");"
      },
      {
        "lineNumber": 3001,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yet\");"
      },
      {
        "lineNumber": 3002,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yield\");"
      },
      {
        "lineNumber": 3003,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"you\");"
      },
      {
        "lineNumber": 3004,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"young\");"
      },
      {
        "lineNumber": 3005,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"your\");"
      },
      {
        "lineNumber": 3006,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yours\");"
      },
      {
        "lineNumber": 3007,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"yourself\");"
      },
      {
        "lineNumber": 3008,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"youth\");"
      },
      {
        "lineNumber": 3009,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        wordList.add(\"zone\");"
      },
      {
        "lineNumber": 3010,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return wordList;"
      },
      {
        "lineNumber": 3011,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 3012,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 3011,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/FileFunctions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.storageexceptions.FilePathInvalidException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.InputMarkers.INPUT_COMMENT_MARKER;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.NEWLINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.RegexStrings.BLANK_STRING_REGEX;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class FileFunctions {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Get a file from file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath given file path"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return file object retrieved from the given file path"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static File getFileFromFilePath(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        File fileFound \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileFound;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * check if a file exists."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param file a given file to check"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws FileNotFoundException the file to check was not found"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void checkFileExists(java.io.File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Writes a double new line to the file to create one blank line of space."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath given file path"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws IOException unable to write to file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void writeDoubleNewlineToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        appendsStringToFile(NEWLINE, filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        appendsStringToFile(NEWLINE, filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Appends the string to the given file specified by filePath."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param textToAppend string to be appended to the file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath filepath to the file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws IOException unable to write to file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void appendsStringToFile(String textToAppend, String filePath) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        java.io.FileWriter fw \u003d new java.io.FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Continue reading through a file until a specific string is found."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param stringSearched indicator string"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param fileScanner    scanner for scanning a file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return return the line the string is on"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String readFileUntilLineContainsString(String stringSearched, Scanner fileScanner) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileInput \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // read each setting and return the variables accordingly"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileInput \u003d getFileNextLine(fileScanner);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (fileInput.contains(stringSearched)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileInput;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Read non-blank lines of the file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param fileScanner scanner to read through lines in the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return return a non blank line read from the file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String getFileNextLine(Scanner fileScanner) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileInput;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileInput \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } while (fileInput.matches(BLANK_STRING_REGEX)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                || fileInput.startsWith(INPUT_COMMENT_MARKER));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return fileInput;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Create a new file at the specified file path."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filePath specified file path"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return absolute path of the new path"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String autoCreateNewFile(String filePath) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        File newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        //System.out.println(FILE_AUTO_CREATED_MSG);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        filePath \u003d pathReplaceIllegalCharacters(filePath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            checkFileExists(newFile);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.println(FILE_NOT_FOUND_MSG);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // make the directory"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String directoryPath;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String txtFileName;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // identify placements"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            int endOfDirectoryName \u003d filePath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            int endOfFileName \u003d filePath.indexOf(\".txt\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            // check if placement is correct"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (endOfDirectoryName \u003d\u003d -1 || endOfFileName \u003d\u003d -1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                throw new FilePathInvalidException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    directoryPath \u003d filePath.substring(0, endOfDirectoryName);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    txtFileName \u003d filePath.substring(endOfDirectoryName + 1, endOfFileName).trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    throw new FilePathInvalidException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //Creating a File object"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            File file \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //Creating the directory"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            boolean isFileCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (isFileCreated) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                //System.out.println(DIRECTORY_CREATED_SUCCESSFULLY_MSG);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                filePath \u003d directoryPath + \"/\" + txtFileName + \".txt\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                //System.out.println(COULD_NOT_CREATE_DIRECTORY_MSG);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FilePathInvalidException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.println(FILE_PATH_TO_DIRECTORY_INVALID_MSG);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // make the file"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (newFile.createNewFile()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                //System.out.println(FILE_CREATED_PATH_MSG);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                //System.out.println(FILE_ALREADY_EXISTS_MSG);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.println(IO_ERROR_WHEN_MAKING_FILE_MSG);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        //System.out.println(NEW_FILE_CREATED_MSG_FORMAT);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return newFile.getAbsolutePath();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Replace \u0027\\\u0027 with \u0027/\u0027 characters in file paths variables."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param path a file path with illegal characters"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return return the path without illegal characters"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String pathReplaceIllegalCharacters(String path) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return path.replace(\u0027\\\\\u0027, \u0027/\u0027);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 9,
      "hungvo0603": 2,
      "AmeliaTYR": 170
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/UserSettingsLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.SettingObjectWrongFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.common.Parsers;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.FilePaths.DEFAULT_USER_SETTINGS_FILE_PATH;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.USERNAME_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.FileFunctions.autoCreateNewFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.FileFunctions.readFileUntilLineContainsString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class UserSettingsLoader {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void loadUserSettings(ArrayList\u003cString\u003e savedSettings) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        //System.out.println(LOADING_SETTINGS_MSG);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            File userSettingsFile \u003d FileFunctions.getFileFromFilePath(DEFAULT_USER_SETTINGS_FILE_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.println(userSettingsFile.getAbsolutePath());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            FileFunctions.checkFileExists(userSettingsFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            readUserSettingsFile(savedSettings, userSettingsFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.println(SETTINGS_FILE_NOT_FOUND_MSG);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            autoCreateNewFile(DEFAULT_USER_SETTINGS_FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            //autoCreateNewFile(TEST_FILE_PATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void readUserSettingsFile(ArrayList\u003cString\u003e savedSettings, File userSettingsFile)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Scanner userSettingsFileScanner \u003d new Scanner(userSettingsFile);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileLine \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String username \u003d \"temp\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String parsedString;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileLine \u003d readFileUntilLineContainsString(USERNAME_TAG, userSettingsFileScanner);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedString \u003d Parsers.parseFileObject(fileLine, USERNAME_TAG);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (!parsedString.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                username \u003d parsedString;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                setUserSettingsArrayUsername(savedSettings, username);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (SettingObjectWrongFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            //System.out.printf(ERROR_READING_FILE_ON_LINE_MSG_FORMAT, fileLine);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Sets the default settings to saved settings array."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param savedSettings array of saved settings"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username      user input name"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void setUserSettingsArrayUsername(ArrayList\u003cString\u003e savedSettings, String username) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        savedSettings.set(0, username);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 4,
      "hungvo0603": 4,
      "AmeliaTYR": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/bunny/BunnyLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage.bunny;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.SettingObjectWrongFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.common.Parsers;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.FileFunctions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.FilePaths.DEFAULT_BUNNY_FILE_PATH;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.BUNNY_GENRE_TAG;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.BUNNY_IDEA_TAG;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.NUM_BUNNY_TAG;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.FileFunctions.autoCreateNewFile;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.FileFunctions.readFileUntilLineContainsString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.common.Parsers.getIntFromString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyLoader {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"BunnyLoader\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void loadBunnyFile(ArrayList\u003cBunny\u003e bunniesList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        ConsoleHandler ch \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        ch.setLevel(Level.SEVERE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.addHandler(ch);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.log(Level.FINEST, \"Start loading bunny.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            File bunnyFile \u003d FileFunctions.getFileFromFilePath(DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            FileFunctions.checkFileExists(bunnyFile);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            readBunnyFile(bunnyFile, bunniesList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            autoCreateNewFile(DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void readBunnyFile(File bunnyFile, ArrayList\u003cBunny\u003e bunniesList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        Scanner bunnyFileScanner \u003d new Scanner(bunnyFile);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String fileLine \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int numBunnies \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int numBunniesLoaded \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        logger.log(Level.FINER, \"read in expected number of bunnies\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String parsedString;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            fileLine \u003d readFileUntilLineContainsString(NUM_BUNNY_TAG, bunnyFileScanner);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            parsedString \u003d Parsers.parseFileObject(fileLine, NUM_BUNNY_TAG);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (!parsedString.isBlank()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                numBunnies \u003d getIntFromString(parsedString.trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (SettingObjectWrongFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            logger.log(Level.INFO, \"bunny.txt format error detected\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // load individual bunnies"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        while (bunnyFileScanner.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                String parsedString;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                logger.log(Level.FINE, \"read idea\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                String idea \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                fileLine \u003d readFileUntilLineContainsString(BUNNY_IDEA_TAG, bunnyFileScanner);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                parsedString \u003d Parsers.parseFileObject(fileLine, BUNNY_IDEA_TAG);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                if (!parsedString.isBlank()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    idea \u003d parsedString.trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                logger.log(Level.FINE, \"read genre\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                String genre \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                fileLine \u003d readFileUntilLineContainsString(BUNNY_GENRE_TAG, bunnyFileScanner);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                parsedString \u003d Parsers.parseFileObject(fileLine, BUNNY_GENRE_TAG);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                if (!parsedString.isBlank()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                    genre \u003d parsedString.trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                // add new bunny to list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                Bunny newBunny \u003d new Bunny(idea.trim(), genre.trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                bunniesList.add(newBunny);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                numBunniesLoaded++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            } catch (SettingObjectWrongFormatException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                logger.log(Level.INFO, \"bunny.txt format error detected while reading\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 6,
      "AmeliaTYR": 91
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/bunny/BunnySaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage.bunny;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.FileFunctions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.FilePaths.DEFAULT_BUNNY_FILE_PATH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Tags.NUM_BUNNY_TAG;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnySaver {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void saveAllBunny(ArrayList\u003cBunny\u003e bunniesList)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        File allTasksFile \u003d new File(DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (allTasksFile.createNewFile()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.createNewBunnyFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // clear the file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        new FileWriter(DEFAULT_BUNNY_FILE_PATH, false).close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        // write file header"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        FileFunctions.appendsStringToFile(NUM_BUNNY_TAG + \" \" + bunniesList.size(), DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        FileFunctions.appendsStringToFile(NEWLINE, DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        FileFunctions.appendsStringToFile(PLAIN_TEXT_DIVIDER, DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        FileFunctions.appendsStringToFile(NEWLINE, DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        for (int i \u003d 0; i \u003c bunniesList.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            String printOut \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printOut \u003d (i + 1) + \".\\n\" + bunniesList.get(i).getDescription();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            FileFunctions.appendsStringToFile(printOut,DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            FileFunctions.appendsStringToFile(PLAIN_TEXT_DIVIDER, DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            FileFunctions.appendsStringToFile(NEWLINE, DEFAULT_BUNNY_FILE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 2,
      "AmeliaTYR": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/name/NamesDB.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage.name;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.nameexceptions.NameException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class NamesDB {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static java.nio.file.Path filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Loads the database of names."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Creates a default list of names if database doesn\u0027t exist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void loadDB(ArrayList\u003cString\u003e nameList) throws NameException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String home \u003d Paths.get(\"\").toAbsolutePath().toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Files.createDirectories(Paths.get(home, \"data\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        filePath \u003d Paths.get(home, \"data\", \"Names.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        nameList.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        boolean isExistingDirectory \u003d Files.exists(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (isExistingDirectory) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            File f \u003d new File(String.valueOf(filePath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Scanner scan;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                scan \u003d new Scanner(f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new NameException(\" ☹ OOPS!!! Unable to find database.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String nameToProcess \u003d scan.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                nameList.add(nameToProcess);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            File yourFile \u003d new File(String.valueOf(filePath));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                boolean isSuccessful \u003d yourFile.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                if (!isSuccessful) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    throw new NameException(\" ☹ OOPS!!! Unable to create database.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reiko Copher\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kim Mushrush\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rosalie Hux\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kesha Barrio\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Eliana Upshaw\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Manuela Naff\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Colleen Eaglin\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Nerissa Masters\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Marlene Smullen\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tasia Noren\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Caryn Bibee\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kenisha Son\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Theresia Woody\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Chang Peterka\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Olive Juarbe\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Eneida Leisy\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Laurice Strozier\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dianna Bleakley\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Joeann Harbaugh\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jasmin Maupin\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lawana Cocklin\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Meggan Stoddart\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Santos Therrien\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Peg Wendel\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ian Begin\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arianne Ruggerio\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sharleen Carwile\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Taylor Demar\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dortha Daly\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Coletta Jarrell\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jovita Lawry\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Elliott Joiner\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Forrest Moylan\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sammy Meriwether\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Emilee Hernadez\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Beatris Hodgin\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Danelle Randel\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Elijah Hebb\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Clint Riesgo\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Todd Edelman\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ingrid Harley\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Linwood Hennig\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Caroll Berger\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Vertie Scalzo\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Cecily Aaronson\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Luis Groh\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Li Hymer\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Billie Salazar\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hyun Lovern\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Barabara Geno\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Margaret Pickford\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kelli Pollan\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Myron Tison\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Elvera Desjardin\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lita Feinstein\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carmel Mcloud\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mickie Figaro\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Val Leitner\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rolando Hamamoto\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Albertine Hogsett\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Julianne Agudelo\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Pamala Yamashiro\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mohammad Teegarden\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reena Kimpel\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reed Carpenter\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Eusebia Jenson\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rochelle Miramontes\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Desire Betty\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Cathi Dore\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bradford Gouin\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Allyn Bibee\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Isabell Rockhill\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Domingo Matzke\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Josefina Clairmont\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Antonio Dunker\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Margarita Casa\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Daina Woodhouse\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Korey Balog\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rosann Lapine\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carlena Reuss\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dianne Douglass\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Barabara Sporer\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mellisa Diederich\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Charline Mcgaha\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rebecca Necessary\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Antwan Reinoso\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Cindy Sachs\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Penney Collington\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Gaylord Featherstone\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alanna Levin\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Stephan Sisneros\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Spencer Toner\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kevin Woods\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Estell Iwamoto\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Gail Rapier\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jeanice Keithley\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Amal Hargrove\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Geri Dicks\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tien Matas\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Yuri Riemann\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bianca Cornish\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zainab Morley\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Molly Bouvet\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Angelo Blanchard\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Roberta Villarreal\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rafi Davila\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lilly-Rose Dougherty\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mikaela Cairns\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Milli Doyle\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Billy Singh\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Catrin Rankin\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Armaan Harris\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Suzannah Orozco\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Charley Clements\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Natalya Rangel\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Osman Britton\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Petra Kidd\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Trent Griffiths\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hajrah Timms\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tonya Knowles\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ellise Knox\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sasha Bowden\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Teddie Mccaffrey\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zuzanna Eastwood\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hughie Kramer\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Amy-Louise Rigby\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arian Frederick\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tarik Burt\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zayd Dennis\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sydney Espinoza\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jimmy Wardle\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Malak Hampton\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rick England\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Elara Beasley\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carolina Hayden\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bailey Glass\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Irene Whyte\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kloe Phillips\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Astrid Castro\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hina John\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Desiree Chapman\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Shanay Plummer\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kristy Whittaker\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aaryan Burke\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jazmine Bridges\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kara Rodriquez\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kajetan Colon\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tyla Neal\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Selin Skinner\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sofia Burns\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arham Peralta\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hazel Vaughn\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Gabriela Rosa\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Huda Rogers\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arisha Snyder\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carl Dolan\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dean Jennings\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Iman Deacon\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dawn Keenan\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Adina Fry\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Adrianna Boyle\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Suman Marquez\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Demi Foreman\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Poppy-Rose Aldred\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sadia Rayner\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Yasir Walls\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jakob Gibbons\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bryson Huffman\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Yolanda Hoover\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kurt Marsden\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Suhayb Burnett\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Andre Paul\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Donald Castaneda\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Denny Mueller\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rickie Hawkins\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Summer-Rose Noel\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rosanna Edmonds\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Shaquille Freeman\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Whitney Keith\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Owais Sawyer\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mehdi Gough\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Gianni Kerr\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jagoda Bains\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kane Vargas\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Stacey Brookes\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Misty Watkins\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Danial Spooner\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Abid Cole\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Natasha Coates\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Parris Lin\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mark Sutton\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lorelei Carver\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ronnie Reilly\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Toyah Stuart\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aleisha Jenkins\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sharmin Hurst\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lucinda Kearns\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Josh Welch\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sianna Kouma\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Pippa Morse\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mira Dunne\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Daisy-Mae Cortes\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ava Senior\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Addie Devine\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Savannah Oneill\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Anoushka Dunn\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Karam Frost\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rudi Navarro\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mckenzie Bowden\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Isadora Hogg\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alma Haynes\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Perry Winter\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Eshaan Leblanc\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Darius Smyth\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Morwenna Wilcox\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"John-James Ward\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kaan Torres\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Gwion Fenton\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Darcie Ferry\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Destiny Mosley\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sacha Hume\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jaiden Kelly\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tariq Peck\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zeeshan Mcconnell\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ella-Rose Harding\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aleksandra Marquez\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ann Hoffman\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reilly Collins\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Allison Frye\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kamil Mcgowan\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Wade Vega\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bonnie Ramsay\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Leo Mccaffrey\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Leela Robson\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ana Valentine\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sid Robles\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mert Rigby\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bear Case\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Yusra Orozco\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Erica Browne\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Danish Brook\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bobbie Ryan\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alexandria Bailey\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Diane Melton\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dexter Mejia\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dennis Allan\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Khadeejah Ramirez\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Fahim Frey\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Shuaib Daly\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Angel Mccartney\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aaliya Austin\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Silas Cameron\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jake Wilkinson\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Borys Douglas\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zoey Molina\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ayub Owens\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rayhan Cooley\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Renee Bain\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ines Dunlop\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Davey Rich\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Izabela Odling\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bradleigh Black\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Karter Craft\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Adelaide Legge\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reon Villegas\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Coco Lutz\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Don Herring\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Corrina Hopper\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Shawn Clemons\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Asiya Chester\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Akash Dougherty\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Derry Young\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carley Knott\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Elliott Singh\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jozef Ventura\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Colby Stewart\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Priya Weiss\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hussein Macgregor\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Adelle Little\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kay Nelson\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Montell Stone\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Haleemah Sosa\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Candice Shepherd\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rayhaan Neal\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jeremiah Rasmussen\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Yasemin Dalton\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Collette Carr\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kaine Bonner\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Liberty Roach\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ian Cruz\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Matei Cook\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arnav Dawson\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jodie Amin\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Grant Sears\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Daisie Lindsey\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Patrycja Lopez\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ophelia Braun\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mali Keeling\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tyron Snow\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Nabeel Bloggs\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kornelia Larsen\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ignacy Connor\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Theresa Melia\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zahra Ramsay\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alasdair Morrow\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Khadeejah Erickson\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Luisa Campos\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ahsan Choi\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lorelai Bains\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Samual Sadler\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kush Price\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mylah Kirkland\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ari Mustafa\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mohammad Power\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Adele Arroyo\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Pixie Holt\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Shyla Glass\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Clyde Wagstaff\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Gracie-Leigh Garcia\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mehdi Schmidt\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Koa Broadhurst\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Neive Milner\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Chenai Bernal\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kason Colley\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Avni Weber\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Phoebe Firth\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aj Holder\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ayah Kelley\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Candice Mcdougall\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Liam Kim\");"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Milton Stanley\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Glenda Woodcock\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lilli Soto\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mert Woodward\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Yanis Mccann\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Leonard Philip\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dario Williamson\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Markus Rice\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Siya Haworth\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zaynab Guthrie\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Paige Peck\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lawson Hudson\");"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Coral Coates\");"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Umair Robin\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ishaaq Tran\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Vickie Luna\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Daisy Farrell\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Muhammad Chaney\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Asha Hinton\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zac Holcomb\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bridie Ramirez\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kaif Shields\");"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sulaiman Walsh\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ellie-Rose Murphy\");"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alara Watkins\");"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Audrey Dupont\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zayaan Faulkner\");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Daniela Browning\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Riccardo Bostock\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arfa Meyers\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Brenden Stout\");"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aiesha Jordan\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Giles Martins\");"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Joshua Robins\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rachel Reed\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Finnley Armitage\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jon-Paul Lin\");"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Meg Edge\");"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Leyton Magana\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jai Garner\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Shawn Heaton\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Samirah Pike\");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ioana Hartley\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jorden Blevins\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Darla Kinney\");"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Erik Mcarthur\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Clifford Stubbs\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bryson Jacobs\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Darren Gallegos\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lillie Stein\");"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Randall Herrera\");"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Keaton Owen\");"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Nisha Lawrence\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Austin Hassan\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ellis Huber\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carwyn Garrison\");"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mohammod Wynn\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Prisha Barton\");"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Riley-Jay Duran\");"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Nur Fox\");"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alanah Gentry\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Margot Mcleod\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Savannah Humphreys\");"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Danyal Montes\");"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ritik Bolton\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Niamh Spencer\");"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Carrie Bird\");"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Santino Mack\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mara Ballard\");"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Timur Joseph\");"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bogdan Patterson\");"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Momina Hail\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reece Prentice\");"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lesley Whitaker\");"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Alexia Esquivel\");"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Selena Marsh\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Darsh Webber\");"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jamal Dunkley\");"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aila Huang\");"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Cherise Fields\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Riccardo Trevino\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Anisa Diaz\");"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Diane Rigby\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zaki Doherty\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zoya Edwards\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hughie Roth\");"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jaden Bell\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Krystian Bush\");"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Miranda Kirkland\");"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Anne Sharples\");"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tamia Burnett\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Adelina Luna\");"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ivy Nolan\");"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Betty Figueroa\");"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kaila Garrison\");"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sufyaan Chadwick\");"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Nahla Sheldon\");"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Christiana Woodard\");"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jon Velazquez\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bea Phillips\");"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aniya Dillard\");"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Arianne Wooten\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rahul Mckeown\");"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sasha Mackay\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sade Whyte\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sophia Reeve\");"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Luciano Chavez\");"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Clarence Goulding\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Holli Moore\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Barney Lindsey\");"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bridie Brewer\");"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kristi Forrest\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Buddy Mueller\");"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Mayur Lowery\");"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Junaid Aguilar\");"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Charis Houghton\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kuba Clarke\");"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tashan Hollis\");"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Reo Odling\");"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Dua Hussain\");"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zakary Stein\");"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Bonnie Robles\");"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tymoteusz Jarvis\");"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tarun Doyle\");"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rehaan Schwartz\");"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Maya Beattie\");"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kajol Kavanagh\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Avaya Lynn\");"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Linzi Soto\");"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aamir Wainwright\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Evelyn Keenan\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Iona Mcgregor\");"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Anish Flores\");"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Orla Mcnally\");"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ellouise Reeves\");"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Phoenix Oneil\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Monet Medrano\");"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sidney Pena\");"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Macaulay Frost\");"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Conna Daniels\");"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Leyton Mccartney\");"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rida Reese\");"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kit Brown\");"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Aurora Maxwell\");"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Faris Rawlings\");"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Fergus Pollard\");"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Olly Guevara\");"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Lyndsey Cannon\");"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tyler-James Reilly\");"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"John Mcghee\");"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Hubert Johns\");"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zachariah Liu\");"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Anwar O\u0027Doherty\");"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Patrik Shepard\");"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Chaya Burgess\");"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tiago Povey\");"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Tahlia Neville\");"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Rimsha Britt\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Demi-Leigh Clay\");"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Milton Baxter\");"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Timur Robinson\");"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Ameena Hogg\");"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Kasey Seymour\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Santino Mullins\");"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Willard Dorsey\");"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Sama Marin\");"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Stephanie Gaines\");"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Laurence Hood\");"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Zackery Everett\");"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    nameList.add(\"Jaya Allman\");"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    updateDB(nameList);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new NameException(\" ☹ OOPS!!! Unable to create database.\");"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     * Updates the database with the given list of names."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void updateDB(ArrayList\u003cString\u003e nameList) throws NameException {"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            FileWriter fw \u003d new FileWriter(String.valueOf(filePath));"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            for (int i \u003d 0; i \u003c nameList.size(); i++) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String name \u003d nameList.get(i);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                //String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                fw.write(name + System.lineSeparator());"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new NameException(\" ☹ OOPS!!! Unable to create database.\");"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 572,
      "hungvo0603": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/word/WordsLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage.word;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.wordlist.WordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Adjective;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Noun;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Verb;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class WordsLoader {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final ArrayList\u003cWords\u003e wordsList \u003d WordList.getWordList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/words.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(\"Words loader\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void loadWordsFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (directory.mkdir()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            LOGGER.log(Level.INFO, \"Directory is being created.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            wordsList.clear();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                readDataFromFile(s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"Error reading file due to unexpected format or invalid word type in database. \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + \"Please manually check your file.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                LOGGER.log(Level.WARNING, \"Program cannot continue reading data from file.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            LOGGER.log(Level.INFO, \"File is created the first time.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    private static void readDataFromFile(Scanner s) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            String[] readings \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            for (int i \u003d 0; i \u003c readings.length; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                readings[i] \u003d readings[i].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            switch (readings[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"verb\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    wordsList.add(new Verb(readings[1], readings[2]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LOGGER.log(Level.WARNING, \"Noun is missing from data/words.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    System.out.println(\"No information about noun or its description is provided in words.txt\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"noun\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    wordsList.add(new Noun(readings[1], readings[2]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LOGGER.log(Level.WARNING, \"Verb is missing from data/words.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    System.out.println(\"No information about verb or its description is provided in words.txt\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            case \"adjective\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    wordsList.add(new Adjective(readings[1], readings[2]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LOGGER.log(Level.WARNING, \"Adjective is missing from data/words.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    System.out.println(\"No information about adjective or its description is provided in words.txt\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                LOGGER.log(Level.WARNING, \"Invalid word type found in the database\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 21,
      "thngyuxuan": 63
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/word/WordsSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage.word;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FilePaths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.wordlist.WordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Adjective;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Noun;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Verb;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class WordsSaver {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(\"Words saver\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void saveWordsToFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        ArrayList\u003cWords\u003e words \u003d WordList.getWordList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String textToSave \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (Words w : words) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (w instanceof Noun) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                textToSave \u003d textToSave.concat(\"noun | \" + w.getDescription() + \" | \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + w.getDefinition() + System.lineSeparator());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else if (w instanceof Verb) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                textToSave \u003d textToSave.concat(\"verb | \" + w.getDescription() + \" | \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + w.getDefinition() + System.lineSeparator());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else if (w instanceof Adjective) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                textToSave \u003d textToSave.concat(\"adjective | \" + w.getDescription() + \" | \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + w.getDefinition() + System.lineSeparator());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                LOGGER.log(Level.WARNING, \"Invalid class instance was passed to saveWordsToFile method!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"Word type error.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.INFO, \"Saving words to words.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            writeToFile(textToSave);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Program can not write to file\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void writeToFile(String textToWrite) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FilePaths.WORDS_FILE_PATH, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        fw.write(textToWrite);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 40,
      "thngyuxuan": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/writing/WritingsLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.writingexceptions.NotEnoughWritingComponentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.FileFunctions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.Essay;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.Poem;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.WritingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.loggings.Logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "//import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.ESSAY;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.NUMBER_OF_WRITING_COMPONENT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_AUTHOR;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_DATE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_ID;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POEM;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_REMINDER_DATE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_TITLE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_TOPIC;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POSITION_OF_TYPE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.WRITING_COMPONENT_DIVIDER;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.WRITING_COMPONENT_MARK;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FilePaths.WRITING_FILE_PATH;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.storage.FileFunctions.autoCreateNewFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class WritingsLoader {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**This function reads data stored in data file and coverts it into ArrayList structure."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param f data file storing the information of the tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param savedWritings List of writings available in the txt database file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @return total writings detected in the data file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @throws FileNotFoundException when the file is not found"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @throws NotEnoughWritingComponentException when the format of minimum"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static int convertWritingFile(File f, WritingList savedWritings)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throws FileNotFoundException, NotEnoughWritingComponentException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        //Count the number of asterisks in the datafile -\u003e number of components in the Writing class"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int countContent \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int countWritings \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int id \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String author \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String title \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String topic \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        LocalDate reminderDate \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        //Initializing the content"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String content;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (countWritings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    // skip the first two line for the information of total number of writings in the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    if (s.hasNext()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        return 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                //Reset the content to blank"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                content \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                while (!currentLine.equals(WRITING_COMPONENT_DIVIDER)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    while (currentLine.startsWith(WRITING_COMPONENT_MARK)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        countContent++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        if (countContent \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            id \u003d Integer.parseInt(currentLine.substring(POSITION_OF_ID).trim());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        } else if (countContent \u003d\u003d 2) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            author \u003d currentLine.substring(POSITION_OF_AUTHOR).trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        } else if (countContent \u003d\u003d 3) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            type \u003d currentLine.substring(POSITION_OF_TYPE).trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        } else if (countContent \u003d\u003d 4) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            title \u003d currentLine.substring(POSITION_OF_TITLE).trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        } else if (countContent \u003d\u003d 5) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            topic \u003d currentLine.substring(POSITION_OF_TOPIC).trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        } else if (countContent \u003d\u003d 6) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            date \u003d currentLine.substring(POSITION_OF_DATE).trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        } else if (countContent \u003d\u003d 7) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                            reminderDate \u003d LocalDate.parse(currentLine.substring(POSITION_OF_REMINDER_DATE).trim(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        } else if (countContent \u003d\u003d 8) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    //Writing text to the writing object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    //prevent adding the WRITING_COMPONENT_DIVIDER to the content of the writing"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    if (!currentLine.equals(WRITING_COMPONENT_DIVIDER)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                        content \u003d content.concat(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                countWritings++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (type.equals(POEM)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    savedWritings.add(new Poem(title, date, topic, content, author, id, reminderDate));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else if (type.equals(ESSAY)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    savedWritings.add(new Essay(title, date, topic, content, author, id, reminderDate));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (countContent !\u003d NUMBER_OF_WRITING_COMPONENT) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    throw new NotEnoughWritingComponentException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    countContent \u003d 0; //Reload for reading the data of the next object in the txt file"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"This is not valid!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return countWritings;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**Check if the data file exists or not, creates \"writings.txt\" in \"data\" directory if not"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *  @param f file to be processed"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param savedWritings writings being stored"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void convertFromFile(File f, WritingList savedWritings) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        File folder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        boolean bool \u003d folder.mkdirs(); // If folder doesn\u0027t exist, then create it"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            convertWritingFile(f, savedWritings);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            //System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"duke.txt aka the data file created in the data folder!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IOException err) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                err.printStackTrace();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (NotEnoughWritingComponentException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"There is something wrong with the data file\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**Write data from ArrayList structure to text form in directory \"data/duke.txt\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param f file to be processed"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @throws IOException IO error"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String recordFile(File f, WritingList savedWritings) throws IOException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String databaseInformation \u003d \"There is/are currently \" + savedWritings.getWritingSize()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \" writing(s) in our database\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + WRITING_COMPONENT_DIVIDER + \"\\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        fw.write(databaseInformation);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        for (int i \u003d 0; i \u003c WritingList.getCountWritings(); i++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            fw.write(\"*id: \" + savedWritings.get(i).getId() + \"\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + \"*Author: \" + savedWritings.get(i).getAuthor().getName() + \"\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + \"*Type: \" + savedWritings.get(i).getType() + \"\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + \"*Title: \" + savedWritings.get(i).getTitle() + \"\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + \"*Topic: \" + savedWritings.get(i).getTopic() + \"\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + \"*Date: \" + savedWritings.get(i).getDate() + \"\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    + \"*Reminder: \" + savedWritings.get(i).getReminderDateString() + \"\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + \"*Content: \\n\" + savedWritings.get(i).getContent()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    + WRITING_COMPONENT_DIVIDER + \"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return databaseInformation;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**Record the file or print error message."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param f data file to be processed"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param savedWritings saved Writings of the current state of Writing List"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void recordListToFile(File f, WritingList savedWritings) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            recordFile(f, savedWritings);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Allow the main program to access the file processing."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * @param savedWritings list of writing called in the main function"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void loadWritings(WritingList savedWritings) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Logging log \u003d new Logging();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Logging.test();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            File userWritingsFile \u003d FileFunctions.getFileFromFilePath(WRITING_FILE_PATH);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            FileFunctions.checkFileExists(userWritingsFile);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            convertFromFile(userWritingsFile, savedWritings);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            autoCreateNewFile(WRITING_FILE_PATH);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 21,
      "thngyuxuan": 2,
      "Promethees": 181
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/UI.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunny.Bunny;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.DividerCommandWrongFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.exceptions.DividerIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyList.bunniesList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.CAT_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.FENCE_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.constants.Logos.PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Line divider set to default before settings are loaded. Default is the first one."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String currentLineDivider \u003d PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Changes the line divider used."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput user input command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws DividerCommandWrongFormatException the command is wrongly formatted"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws DividerIndexOutOfBoundsException the index for the divider is invalid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void changeLineDivider(String userInput)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throws DividerCommandWrongFormatException, DividerIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (userInput.trim().toLowerCase().contains(\"divider\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            int dividerNum \u003d getDividerNumFromInput(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            currentLineDivider \u003d getDivider(dividerNum);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            UI.changeDividerMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new DividerCommandWrongFormatException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void changeDividerMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.CHANGING_LINE_DIVIDER_MSG);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Parse the divider option from the user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @return divider option detected"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @throws DividerIndexOutOfBoundsException Invalid divider option entered."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static int getDividerNumFromInput(String userInput) throws DividerIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int dividerNum;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            dividerNum \u003d Integer.parseInt(userInput.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (dividerNum \u003e 3 || dividerNum \u003c 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                throw new DividerIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            throw new DividerIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return dividerNum;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static String getDivider(int input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        String divider \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        if (input \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            divider \u003d PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (input \u003d\u003d 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            divider \u003d CAT_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } else if (input \u003d\u003d 3) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            divider \u003d FENCE_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        return divider;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Main Help function, calls other help desciptions or just list of commands by default."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param input user input string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpMessage(String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"noun\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            printHelpNoun();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"verb\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            printHelpVerb();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"adj\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            printHelpAdj();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"three words\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            printHelpThreeWords();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"divider\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpDivider();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            printHelpList();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        case \"start\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            printHelpStart();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"stats\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            printHelpStats();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            printHelpClear();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            printHelpExit();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            printHelpName();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case \"list name\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            printHelpListName();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case \"filter name\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            printHelpFilterName();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case \"add name\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            printHelpAddName();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        case \"delete name\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            printHelpDeleteName();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"bunny\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpBunny();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"list bunny\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpListBunny();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"filter bunny\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpFilterBunny();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"save bunny\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpSaveBunny();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"delete bunny\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpDeleteBunny();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"random bunny\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpRandomBunny();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        case \"reset bunny\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            printHelpResetBunny();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"filter words\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printHelpFilterWords();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"list filter words\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printHelpListFilterWords();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"remind\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printHelpRemind();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            printHelp();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String[] listCommands \u003d {\"help\", \"divider\", \"noun\", \"verb\", \"adj\", \"three words\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            \"bunny\", \"list bunny\", \"filter bunny\", \"save bunny\", \"delete bunny\", \"random bunny\", \"reset bunny\","
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            \"list\", \"list filter words\", \"start\", \"filter words\", \"stats\", \"reset\", \"name\","
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            \"list name\", \"filter name\", \"add name\", \"delete name\", \"remind\", \"clear\", \"exit\"};"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Type \u0027help FUNCTION_NAME\u0027 to view help for each command.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Available commands:\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        for (String listCommand : listCommands) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(\"- \" + listCommand);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static void printHelpDeleteName() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"Removes a name from the list of names\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: delete name INDEX\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static void printHelpAddName() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"Add a name to the list of names\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: add name NAME\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static void printHelpFilterName() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"Find all the names from the list of names\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: filter name NAME\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static void printHelpListName() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"List all the names from the list of names\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"Format: list name\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static void printHelpName() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"Gets a random name from the list of names\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(\"Format: name\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printHelpDivider() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Change the line divider used in Fluffle\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: divider DIVIDER_OPTION\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"  Where DIVIDER_OPTION is a number from 1 to 3\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Example: divider 1\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpBunny() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Add a bunny to the list of bunnies\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: bunny i\\\\IDEA g\\\\[GENRE]\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Examples: bunny i\\\\some fantasy idea g\\\\ fantasy\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"          bunny i\\\\some random idea\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpListBunny() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Prints the list of bunnies\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: list bunny\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpFilterBunny() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Filters specific bunny ideas from the list\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: filter bunny i\\\\[IDEA] g\\\\[GENRE]\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Examples: filter bunny g\\\\ fantasy\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"          filter bunny i\\\\ horse\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpSaveBunny() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Save the current list of bunnies\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: save bunny\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpDeleteBunny() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Delete a selected bunny from the list\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: delete bunny BUNNY_INDEX\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Example: delete bunny 2\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpRandomBunny() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Pick a random bunny from your list\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: random bunny\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    private static void printHelpResetBunny() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Reset the list of bunny ideas\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(\"Format: random bunny\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void printHelpFilterWords() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Get words from your words list.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Format: filter words [-continue] [limit\\\\PRINT_LIMIT] \""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                + \"by\\\\TYPE_OF_FILTER -TARGET_STRING...\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Supported TYPE_OF_FILTER: \\\"type\\\", \\\"start\\\", \\\"include\\\"\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"If TYPE_OF_FILTER is type: -TARGET_STRINGs are -noun/-verb/-adjective\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Example: filter words by\\\\type -verb -noun\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void printHelpListFilterWords() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"List the words in your filter list.\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Format: list filter words [limit\\\\PRINT_LIMIT]\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Example: list filter words limit\\\\10\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void printHelpRemind() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Remind you of a piece of writing on a specific date.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Format: remind DATE\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Note: DATE should be in the form of dd/MM/yyyy\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Example: remind 11/11/2020\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printHelpNoun() {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Type in the noun you want to save followed by its meaning.\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Format: noun WORD d\\\\DESCRIPTION\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Example: noun cat d\\\\a feline animal\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printHelpVerb() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Type in the verb you want to save followed by its meaning.\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Format: verb WORD d\\\\DESCRIPTION\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Example: verb eat d\\\\to consume food\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printHelpAdj() {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Type in the adjective you want to save followed by its meaning.\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Format: adj WORD d\\\\DESCRIPTION\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Example: adj hungry d\\\\the feeling due to lack of food\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpThreeWords() {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Type \u0027three words\u0027 to generate three random words!\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Note: you must have at least three words stored in Fluffle!\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpList() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"List all available words by typing \u0027list\u0027.\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void printHelpStart() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"Embark your writings session!\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpStats() {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Show your results and statistics of a specific quiz by typing \u0027quiz t\\\\QUIZ_INDEX\u0027.\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Example: quiz t\\\\3\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpClear() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Delete all your saved quizzes in CLIcker by typing \u0027clear\u0027. \""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                + \"A warning prompt will be generated before deletion.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printHelpExit() {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Exit the program by typing \u0027exit\u0027.\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Prints the personalised greeting message."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username user input name"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printHelloMessage(String username) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.printf(FluffleMessages.HELLO_GREETING, username);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Prints the personalised farewell message."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param username user indicated name"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printFarewellMessage(String username) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.printf(FluffleMessages.FAREWELL_GREETING, username);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the line divider to the console."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(currentLineDivider);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void addBunnyMessage(String bunny) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.ADD_BUNNY_MSG + \"\\n\" + bunny);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyWrongFormat() {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.BUNNY_WRONG_FORMAT);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyMissingIdea() {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.BUNNY_MISSING_IDEA_MSG);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void listBunnyMessage() {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.LIST_BUNNY_MSG);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void listCharacterMessage() {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.LIST_CHARACTER_MSG);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addNounMessage(String noun) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.ADD_NOUN_MSG + noun);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addVerbMessage(String verb) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.ADD_VERB_MSG + verb);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addAdjectiveMessage(String adj) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.ADD_ADJECTIVE_MSG + adj);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void listWordsMessage() {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.LIST_WORDS_MSG);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void commandNotRecognisedMsg() {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.COMMAND_UNRECOGNISED_MSG);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void numBunnyLoaded(int numBunnies, int numBunniesLoaded) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(String.format(FluffleMessages.NUM_BUNNY_LOADED_MSG, numBunniesLoaded, numBunnies));"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void createNewBunnyFile() {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.WRITING_TO_BUNNY_FILE_MSG);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void failedToSaveBunny() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.FAILED_TO_SAVE_BUNNY_LIST_MSG);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnySaved() {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.BUNNY_LIST_SAVED_MSG);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Prints the list fo filtered bunny ideas."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param numBunny number of bunnies filtered"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param filteredBunny list of filtered bunnies and their index."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printFilteredBunny(int numBunny, HashMap\u003cInteger, Bunny\u003e filteredBunny) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        int bunnyFiltered \u003d 0;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        for (i \u003d 1; i \u003c\u003d numBunny; i++) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            if (filteredBunny.containsKey(i)) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                System.out.println((i) + \".\\n\" + bunniesList.get(i - 1).getDescription());"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "                bunnyFiltered++;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.NUMBER_BUNNY_FILTERED_MSG + bunnyFiltered);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyMissingFilterOption() {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.FILTER_BUNNY_COMMAND_MISSING_FILTER_OPTIONS_MSG);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyFilterNoneFound() {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.NO_BUNNY_MATCHING_FILTER_OPTIONS_MSG);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyDeleted(int bunnyNum) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.print(FluffleMessages.BUNNY_DELETED_MSG);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.print(bunniesList.get(bunnyNum - 1).getDescription());"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void printAskForName(String username) {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.print(FluffleMessages.ASK_FOR_NAME);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyIndexOutOfBounds() {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.BUNNY_INDEX_NOT_IN_LIST_MSG);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void dividerCommandWrongFormat() {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.DIVIDER_COMMAND_OF_WRONG_FORMAT_MSG);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void dividerIndexOutOfBounds() {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.DIVIDER_INDEX_INDICATED_OUT_OF_BOUNDS_MSG);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Print a the bunny that was randomly chosen."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param bunnySelected index of the random bunny chosen"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyRandomlySelected(int bunnySelected) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.print(FluffleMessages.BUNNY_RANDOMLY_SELECTED_MSG);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.print(bunniesList.get(bunnySelected).getDescription());"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void bunnyListEmpty() {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.LIST_BUNNIES_EMPTY_MSG);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * Print a single bunny from the list."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     * @param bunny Bunny description"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printBunnyInList(String bunny) {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(bunny);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void printNumBunnies(int numBunny) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(FluffleMessages.TOTAL_BUNNIES_IN_LIST_MSG + numBunny);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printClearCommandSuccess(String type, String word) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.printf(FluffleMessages.CLEAR_SUCCESS_MESSAGE, type, word);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void echoInput(String input) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 39,
      "AmeliaTYR": 283,
      "hungvo0603": 43,
      "thngyuxuan": 78,
      "Promethees": 7,
      "-": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/wordlist/WordList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package seedu.duke.wordlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.Tags;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Adjective;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Noun;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Verb;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class WordList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static ArrayList\u003cWords\u003e wordList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static ArrayList\u003cWords\u003e getWordList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return wordList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static int getNumberOfWords() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return wordList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Function to add noun to word list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param input a string which contains"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *              the word and its definition"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addNoun(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (input.equals(\"noun\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(FluffleMessages.EMPTY_INPUT_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            // Remove the command word"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String[] word \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            if (word.length \u003d\u003d 1 || word[1].equals(\"\") || !word[1].contains(Tags.DESCRIPTION_TAG)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                System.out.println(FluffleMessages.INVALID_NOUN_MSG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                String[] splitInput \u003d word[1].split(\" d\\\\\\\\\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    System.out.println(FluffleMessages.INVALID_NOUN_MSG);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    Words toAdd \u003d new Noun(splitInput[0], splitInput[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Check for duplicate word in the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    boolean duplicate \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (Words words : wordList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (toAdd.getDescription().equals(words.getDescription())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                            duplicate \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Word already exists in word list!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!duplicate) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        wordList.add(toAdd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        UI.addNounMessage(toAdd.getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Function to add verb to word list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param input a string which contains"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *              the word and its definition"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addVerb(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (input.equals(\"verb\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(FluffleMessages.EMPTY_INPUT_MSG);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            // Remove the command word"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            String[] word \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            if (word.length \u003d\u003d 1 || word[1].equals(\"\") || !word[1].contains(Tags.DESCRIPTION_TAG)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                System.out.println(FluffleMessages.INVALID_VERB_MSG);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                String[] splitInput \u003d word[1].split(\" d\\\\\\\\\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    System.out.println(FluffleMessages.INVALID_VERB_MSG);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    Words toAdd \u003d new Verb(splitInput[0], splitInput[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Check for duplicate word in the list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    boolean duplicate \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (Words words : wordList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (toAdd.getDescription().equals(words.getDescription())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                            duplicate \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Word already exists in word list!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!duplicate) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        wordList.add(toAdd);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        UI.addVerbMessage(toAdd.getDescription());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Function to add adjective to word list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param input a string which contains"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *              the word and its definition"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addAdjective(String input) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (input.equals(\"adj\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(FluffleMessages.EMPTY_INPUT_MSG);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            // Remove the command word"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            String[] word \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            if (word.length \u003d\u003d 1 || word[1].equals(\"\") || !word[1].contains(Tags.DESCRIPTION_TAG)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                System.out.println(FluffleMessages.INVALID_ADJ_MSG);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                String[] splitInput \u003d word[1].split(\" d\\\\\\\\\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    System.out.println(FluffleMessages.INVALID_ADJ_MSG);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    Words toAdd \u003d new Adjective(splitInput[0], splitInput[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Check for duplicate word in the list"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    boolean duplicate \u003d false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (Words words : wordList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (toAdd.getDescription().equals(words.getDescription())) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                            duplicate \u003d true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Word already exists in word list!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!duplicate) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        wordList.add(toAdd);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        UI.addAdjectiveMessage(toAdd.getDescription());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void listWords() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        if (wordList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(FluffleMessages.EMPTY_WORDLIST_MSG);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            UI.listWordsMessage();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            for (int i \u003d 0; i \u003c wordList.size(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"   \" + (i + 1) + \". \" + wordList.get(i).getDescription());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static ArrayList\u003cWords\u003e generateThreeWords() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        ArrayList\u003cWords\u003e shuffledWords \u003d new ArrayList\u003c\u003e(wordList);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        ArrayList\u003cWords\u003e threeWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Collections.shuffle(shuffledWords);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        while (count \u003c 3) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            threeWords.add(shuffledWords.get(count));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return threeWords;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void listThreeWords() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (wordList.size() \u003c 3) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(FluffleMessages.THREE_WORDS_ERROR_MSG);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            ArrayList\u003cWords\u003e threeWords \u003d generateThreeWords();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(FluffleMessages.THREE_WORDS_MSG);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                System.out.println(\"   \" + (i + 1) + \". \" + threeWords.get(i).getDescription());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearWord(String wordToBeCleared) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        while (i \u003c wordList.size()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (wordList.get(i).getDefinition().equalsIgnoreCase(wordToBeCleared)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                wordList.remove(i);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearAllWords() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        wordList.clear();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 13,
      "thngyuxuan": 119,
      "Promethees": 16,
      "-": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/wordlist/wordfilter/FilterCommandSlicer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.Tags;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterEmptyStringTagException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterMissingTargetStringsTagException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterMissingTargetWordTypeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterWordsInvalidWordType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * This class is used to split the commands into different partitions that can be processed individually."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterCommandSlicer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Determines whether the program should continue on the previous filter."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command Filter command from user\u0027s input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return True if the user wants to continue with the last filtered list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws FilterCommandException When the command is not a filter command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static boolean isNewFilter(String command) throws FilterCommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (!command.startsWith(\"filter words\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new FilterCommandException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return !command.toLowerCase().startsWith(\"filter words -continue\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Gets the maximum number of words that the user wants to print after filtering."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * This parameter is optional."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command Filter command from user\u0027s input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return An integer referring to the maximum number of words."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static int getWordPrintLimitFromFilterCommand(String command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (command.toLowerCase().contains(Tags.LIMIT_WORD)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int limitIndex \u003d command.indexOf(Tags.LIMIT_WORD);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String cutCommand \u003d command.substring(limitIndex + 7).trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int nextSpaceIndex \u003d cutCommand.indexOf(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String limitNumber;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (nextSpaceIndex !\u003d -1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                limitNumber \u003d cutCommand.substring(0, nextSpaceIndex).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                // limit\\ tag is at the end of the line"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                limitNumber \u003d cutCommand.trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                return Integer.parseInt(limitNumber);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(FluffleMessages.INVALID_PRINT_LIMIT_MESSAGE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        // if the print limit is not specified"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Gets the maximum number of words that the user wants to print from his list filter command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command \"list filter\" command from user\u0027s input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return Number of words that the user wants to print from the filtered list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static int getWordPrintLimitFromListFilterCommand(String command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (command.toLowerCase().contains(Tags.LIMIT_WORD)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int limitIndex \u003d command.indexOf(Tags.LIMIT_WORD);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String cutCommand \u003d command.substring(limitIndex + 7).trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                return Integer.parseInt(cutCommand);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(FluffleMessages.INVALID_PRINT_LIMIT_MESSAGE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        // if the print limit is not specified"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Gets the word types need filtering."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Available word types are noun, verb and adjective."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command Contains the word types need filtering."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return Array of strings referring to word types."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws FilterWordsInvalidWordType When the user enters anything different from -noun, -verb, -adjective"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws FilterMissingTargetWordTypeException When the user didn\u0027t enter any combination of word types"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String[] getTargetedWordTypes(String command)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterWordsInvalidWordType, FilterMissingTargetWordTypeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        ArrayList\u003cString\u003e types \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        ArrayList\u003cString\u003e availableWordTypes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        initializeAvailableWordTypes(availableWordTypes);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int index \u003d command.indexOf(Tags.DASH);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int nextIndex \u003d command.indexOf(Tags.DASH, index + 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String wordType;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (nextIndex !\u003d -1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                wordType \u003d command.substring(index + 1, nextIndex).trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                wordType \u003d command.substring(index + 1).trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (wordType.startsWith(\"continue\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                index \u003d command.indexOf(Tags.DASH, index + 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (availableWordTypes.contains(wordType)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                types.add(wordType);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                throw new FilterWordsInvalidWordType();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            index \u003d command.indexOf(Tags.DASH, index + 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (types.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new FilterMissingTargetWordTypeException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return types.toArray(new String[0]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Gets string tags needs filtering in the word list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command String that contains the strings need filtering."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return Array of strings referring to the strings need filtering."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws FilterMissingTargetStringsTagException When no string tag is found"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *                                                or when the command format is incorrect."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws FilterEmptyStringTagException When string tag with length 0 is provided."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String[] getTargetedStringTags(String command)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterMissingTargetStringsTagException, FilterEmptyStringTagException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        ArrayList\u003cString\u003e targetedStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int index \u003d command.indexOf(Tags.DASH);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int nextIndex \u003d command.indexOf(Tags.DASH, index + 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String stringToAdd;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (nextIndex !\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                stringToAdd \u003d command.substring(index + 1, nextIndex).trim();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                stringToAdd \u003d command.substring(index + 1).trim();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (stringToAdd.length() !\u003d 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                targetedStrings.add(stringToAdd);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                throw new FilterEmptyStringTagException();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            index \u003d command.indexOf(Tags.DASH, index + 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (targetedStrings.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new FilterMissingTargetStringsTagException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return targetedStrings.toArray(new String[0]);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void initializeAvailableWordTypes(ArrayList\u003cString\u003e availableWordTypes) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        availableWordTypes.clear();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        availableWordTypes.add(Tags.NOUN);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        availableWordTypes.add(Tags.VERB);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        availableWordTypes.add(Tags.ADJECTIVE);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 176
    }
  },
  {
    "path": "src/main/java/seedu/duke/wordlist/wordfilter/FilterExecutor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterMissingTargetStringsTagException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterMissingTargetWordTypeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterEmptyStringTagException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterTypeTagMissingException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterWordsInvalidWordType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.FilterCommandSlicer.getWordPrintLimitFromFilterCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.FilterCommandSlicer.isNewFilter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.FilterCommandSlicer.getTargetedWordTypes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.FilterCommandSlicer.getTargetedStringTags;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.FilterList.printFilterList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.FilterType.getTypeOfFilter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.WordsFilter.filterByType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.WordsFilter.filterByStartingString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.WordsFilter.filterByIncludedString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * A class to process filter commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * Sample command (must be in order): filter -continue by\\start limit\\10 -cs -cg"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterExecutor {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(\"FilterExecutor\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Executes filter functions depending on filter commands."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command String referring to the command the user enters."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void executeFilterCommand(String command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterType filterType \u003d getTypeOfFilter(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String[] tags;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            boolean isNewFilter \u003d isNewFilter(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int printLimit \u003d getWordPrintLimitFromFilterCommand(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            switch (filterType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case WORD_TYPE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                tags \u003d getTargetedWordTypes(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                assert tags.length !\u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                filterByType(isNewFilter, tags);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case STARTING_STRING:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                tags \u003d getTargetedStringTags(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                assert tags.length !\u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                filterByStartingString(isNewFilter, tags);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case INCLUDING_STRING:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                tags \u003d getTargetedStringTags(command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                assert tags.length !\u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                filterByIncludedString(isNewFilter, tags);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                throw new FilterCommandException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printFilterList(printLimit);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FilterTypeTagMissingException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Filter type tag missing, catch block in executeFilterCommand\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.FILTER_TYPE_TAG_MISSING);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FilterCommandException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Unknown filter command, catch block in executeFilterCommand\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.FILTER_UNKNOWN_TYPE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FilterMissingTargetWordTypeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Empty target string, catch block in executeFilterCommand\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.FILTER_WORDS_EMPTY_TARGET);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FilterWordsInvalidWordType filterWordsInvalidWordType) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Invalid word type provided, catch block in executeFilterCommand\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.AVAILABLE_WORD_TYPE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FilterMissingTargetStringsTagException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"No string tag is provided, catch block in executeFilterCommand\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.PROVIDE_STRING_TAG);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FilterEmptyStringTagException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Empty string tag is provided, catch block in executeFilterCommand\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.EMPTY_STRING_TAG);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 85
    }
  },
  {
    "path": "src/main/java/seedu/duke/wordlist/wordfilter/FilterList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.Tags;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.common.Parsers;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * This class contains an array list of filter words and its print method."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class FilterList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static ArrayList\u003cWords\u003e filterWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Prints the list of filtered words in the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * User can limit the number of the words printed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * If no print limit is provided, the method will print all words in list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param printLimit An integer indicated the number of words that need printing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printFilterList(int printLimit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (printLimit \u003c -1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.INVALID_LIMIT_LIST_FILTER_WORDS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (filterWords.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.NO_FILTER_RESULT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (printLimit \u003d\u003d -1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            //the user didn\u0027t specify the print limit so the program prints out all the words in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.PRINT_LIMIT_NOT_FOUND);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(FluffleMessages.FILTER_MESSAGE, filterWords.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int wordCount \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (Words word : filterWords) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"   \" + (wordCount + 1) + \". \" + word.getDescription()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + \": \" + word.getDefinition());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                wordCount++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (filterWords.size() \u003c\u003d printLimit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(FluffleMessages.FILTER_MESSAGE, filterWords.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int wordCount \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (Words word : filterWords) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"   \" + (wordCount + 1) + \". \" + word.getDescription()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + \": \" + word.getDefinition());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                wordCount++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        //if the size of the filterWords is greater than printLimit"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        UI.printDivider();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.printf(FluffleMessages.LONG_FILTER_LIST_MESSAGE, printLimit);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        UI.printDivider();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String userInput \u003d Parsers.getUserInput(SCANNER);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (userInput.trim().equalsIgnoreCase(Tags.YES) || userInput.trim().equalsIgnoreCase(Tags.Y)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(FluffleMessages.FILTER_MESSAGE, filterWords.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int wordCount \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (Words word : filterWords) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"   \" + (wordCount + 1) + \". \" + word.getDescription()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + \": \" + word.getDefinition());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                wordCount++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (userInput.trim().equalsIgnoreCase(Tags.N) || userInput.trim().equalsIgnoreCase(Tags.NO)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(FluffleMessages.FILTER_MESSAGE_LIMIT, printLimit, filterWords.size());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (int i \u003d 0; i \u003c printLimit; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                Words word \u003d filterWords.get(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(\"   \" + (i + 1) + \". \" + word.getDescription() + \": \" + word.getDefinition());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.INVALID_LIST_FILTER_ANSWER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            UI.printDivider();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 95
    }
  },
  {
    "path": "src/main/java/seedu/duke/wordlist/wordfilter/FilterType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.Tags;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterTypeTagMissingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * An enumeration defining types of filter."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public enum FilterType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    WORD_TYPE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    STARTING_STRING,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    INCLUDING_STRING;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Gets type of filter depending on the command entered."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command String contains filter type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return Type of filter found in the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws FilterCommandException When filter type is not specified in the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static FilterType getTypeOfFilter(String command)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterCommandException, FilterTypeTagMissingException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (!command.toLowerCase().contains(Tags.TYPE_OF_FILTER_TAG)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new FilterTypeTagMissingException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int indexOfTypeTag \u003d command.indexOf(Tags.TYPE_OF_FILTER_TAG);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String cutCommand \u003d command.substring(indexOfTypeTag);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        cutCommand \u003d cutCommand.replace(Tags.TYPE_OF_FILTER_TAG, Tags.BLANK);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType filterType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (cutCommand.toLowerCase().trim().startsWith(Tags.TYPE_TAG)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            filterType \u003d FilterType.WORD_TYPE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (cutCommand.toLowerCase().trim().startsWith(Tags.START_TAG)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            filterType \u003d FilterType.STARTING_STRING;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (cutCommand.toLowerCase().trim().startsWith(Tags.INCLUDE_TAG)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            filterType \u003d FilterType.INCLUDING_STRING;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new FilterCommandException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return filterType;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/wordlist/wordfilter/WordsFilter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.WordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * A class containing algorithms that execute the filter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class WordsFilter {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final ArrayList\u003cWords\u003e WORD_LIST \u003d WordList.getWordList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(\"WordsFilter\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Prints word filtered by type."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param isNewFilter Clears last filter and creates new filter."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param types Types of words need filtering."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void filterByType(boolean isNewFilter, String[] types) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (isNewFilter) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterList.filterWords.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            addTagsToFilteredList(FilterType.WORD_TYPE, types);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterList.filterWords \u003d (ArrayList\u003cWords\u003e) FilterList.filterWords.stream()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    .filter((w) -\u003e Arrays.asList(types).contains(w.getType()))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Filters words by starting strings and prints them."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param isNewFilter Clears last filter and creates new filter."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param startStrings Array of strings that need filtering."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void filterByStartingString(boolean isNewFilter, String[] startStrings) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (isNewFilter) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterList.filterWords.clear();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            addTagsToFilteredList(FilterType.STARTING_STRING, startStrings);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ArrayList\u003cWords\u003e wordsToRemove \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            generateListOfRemoveWords(FilterType.STARTING_STRING, startStrings, wordsToRemove);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            removeRedundantWords(wordsToRemove);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Filters words by indicated including strings and prints them."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param isNewFilter Clears last filter and creates new filter."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param includedStrings Array of strings that needs filtering."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void filterByIncludedString(boolean isNewFilter, String[] includedStrings) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (isNewFilter) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            FilterList.filterWords.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            addTagsToFilteredList(FilterType.INCLUDING_STRING, includedStrings);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ArrayList\u003cWords\u003e wordsToRemove \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            generateListOfRemoveWords(FilterType.INCLUDING_STRING, includedStrings, wordsToRemove);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            removeRedundantWords(wordsToRemove);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void generateListOfRemoveWords(FilterType filterType, String[] patterns,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                                                  ArrayList\u003cWords\u003e wordsToRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (Words word : FilterList.filterWords) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            boolean keepsWord \u003d false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (String pattern : patterns) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                switch (filterType) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                case STARTING_STRING:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    if (word.getDescription().toLowerCase().startsWith(pattern.toLowerCase())) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        keepsWord \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                case INCLUDING_STRING:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    if (word.getDescription().toLowerCase().contains(pattern.toLowerCase())) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        keepsWord \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LOGGER.log(Level.WARNING, FluffleMessages.INVALID_FILTER_CODE);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (!keepsWord) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                wordsToRemove.add(word);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void addTagsToFilteredList(FilterType filterType, String[] patterns) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (String pattern : patterns) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String string \u003d pattern.toLowerCase();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (int i \u003d 0; i \u003c WordList.getNumberOfWords(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                switch (filterType) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                case WORD_TYPE:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    if (WORD_LIST.get(i).getType().equalsIgnoreCase(string)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        FilterList.filterWords.add(WORD_LIST.get(i));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                case STARTING_STRING:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    if (WORD_LIST.get(i).getDescription().startsWith(string)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                            \u0026\u0026 !FilterList.filterWords.contains(WORD_LIST.get(i))) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        FilterList.filterWords.add(WORD_LIST.get(i));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                case INCLUDING_STRING:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    if (WORD_LIST.get(i).getDescription().contains(string)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                            \u0026\u0026 !FilterList.filterWords.contains(WORD_LIST.get(i))) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        FilterList.filterWords.add(WORD_LIST.get(i));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LOGGER.log(Level.WARNING, FluffleMessages.INVALID_FILTER_CODE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void removeRedundantWords(ArrayList\u003cWords\u003e wordsToRemove) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (Words wordToRemove : wordsToRemove) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            while (FilterList.filterWords.contains(wordToRemove)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                FilterList.filterWords.remove(wordToRemove);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 137
    }
  },
  {
    "path": "src/main/java/seedu/duke/words/Adjective.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package seedu.duke.words;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Adjective extends Words {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Adjective(String description, String definition) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        super(description, definition);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"adjective\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"a\" + \" \u003e \" + this.description + \" \u003e \" + this.definition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/words/Noun.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package seedu.duke.words;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Noun extends Words {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Noun(String description, String definition) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        super(description, definition);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"noun\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"n\" + \" \u003e \" + this.description + \" \u003e \" + this.definition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/words/Verb.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package seedu.duke.words;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Verb extends Words {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Verb(String description, String definition) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        super(description, definition);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"verb\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"v\" + \" \u003e \" + this.description + \" \u003e \" + this.definition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/words/Words.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package seedu.duke.words;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public abstract class Words {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String definition;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Words(String description, String definition) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.definition \u003d definition;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Function to get the type of this word."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * i.e. Noun, Verb, or Adjective"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @return the type of this word"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Method to convert word to save format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getDefinition() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.definition;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/writing/Essay.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.ESSAY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Essay extends Writings {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int numberOfSentences;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int numberOfWords;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int countEssays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Essay(String title, int id, String topic, String content, String author, LocalDate reminderDate) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setType();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTitle(title);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setId(id);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTopic(topic);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        setReminderDate(reminderDate);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setContent(content);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setAuthor(author);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countEssays++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Essay(String title, String date, String topic, String content,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                 String author, int id, LocalDate reminderDate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setType();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTitle(title);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setId(id);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTopic(topic);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setContent(content);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setAuthor(author);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        setReminderDate(reminderDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countEssays++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int setNumberOfSentences() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        for (int i \u003d 0; i \u003c this.content.length(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (this.content.charAt(i) \u003d\u003d \u0027.\u0027) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int setNumberOfWords() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        for (int i \u003d 0; i \u003c this.content.length(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (this.content.charAt(i) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setType() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.type \u003d ESSAY;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getNumberOfLines() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getNumberOfSentences() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.numberOfSentences \u003d setNumberOfSentences();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.numberOfSentences;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getNumberOfWords() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.numberOfWords \u003d setNumberOfWords();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.numberOfWords;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String printPoemProperties() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String printEssayProperties() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String content \u003d \"This essay has \" + getNumberOfSentences() + \" sentence(s)\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \" and \" + getNumberOfWords() + \" word(s)\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 1,
      "hungvo0603": 8,
      "Promethees": 82
    }
  },
  {
    "path": "src/main/java/seedu/duke/writing/Poem.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.POEM;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Poem extends Writings {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int numberOfLines;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int numberOfWords;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int countPoems;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Poem() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Poem(String title, int id, String topic, String content, String author, LocalDate reminderDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setDate();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setType();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTitle(title);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setId(id);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTopic(topic);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setContent(content);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        setReminderDate(reminderDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setAuthor(author);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setNumberOfLines();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setNumberOfWords();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countPoems++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Poem(String title, String date, String topic, String content,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                String author, int id, LocalDate reminderDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setDate();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setType();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTitle(title);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setId(id);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setTopic(topic);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setContent(content);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setAuthor(author);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        setReminderDate(reminderDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countPoems++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setNumberOfLines();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        setNumberOfWords();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setNumberOfLines() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        for (int i \u003d 0; i \u003c this.content.length(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (this.content.charAt(i) \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.numberOfLines \u003d count;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getNumberOfLines() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.numberOfLines;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getNumberOfSentences() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getNumberOfWords() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.numberOfWords;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String printPoemProperties() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String content \u003d \"This poem has \" + getNumberOfLines() + \" line(s)\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \" and \" + getNumberOfWords() + \" word(s)\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String printEssayProperties() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setNumberOfWords() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        for (int i \u003d 0; i \u003c this.content.length(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (this.content.charAt(i) \u003d\u003d \u0027 \u0027 || this.content.charAt(i) \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            this.numberOfWords \u003d count;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setType() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.type \u003d POEM;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 7,
      "Promethees": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/writing/WritingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.commands.CommandChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.writingexceptions.InvalidReminderDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.FileFunctions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.storageexceptions.FileEmptyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.ItemNotFoundedException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.lang.invoke.WrongMethodTypeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.Duke.user;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "//import static seedu.duke.Duke.writings;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.UNRECOGNISED;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.TYPE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.POEM;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.ESSAY;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.extractCommandType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FilePaths.WRITING_FILE_PATH;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_REMINDER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_TITLE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_TOPIC;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_TYPE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASSERTION_ID_ERROR;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.INSTRUCTION_FOR_ADDING_NEW_WRITINGS;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.CLEAR_DATA_MESSAGE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.EMPTY_WRITING_MESSAGE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.SUCCESSFUL_ADD_WRITING_TO_DATABASE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.TYPE_COMMAND_INSTRUCTION;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.commands.CommandExecutor.executeCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.common.Parsers.getUserInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.DataFileConvention.MAX_NUM_WRITINGS;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class WritingList {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static ArrayList\u003cWritings\u003e writingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    //Used to clear all of writings when resetting database"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    static int countWritings \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String topic;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String content;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String title;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String type;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public WritingList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int add(Writings w) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writingList.add(w);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countWritings++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return countWritings;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Writings get(int i) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return writingList.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int removeWriting(int i) throws FileEmptyException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (writingList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new FileEmptyException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            assert (i \u003c\u003d writingList.size() \u0026\u0026 i \u003e\u003d 0) : \"Your item is out of bound\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            writingList.remove(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            countWritings--;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return countWritings;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int removeID(int id) throws FileEmptyException, ItemNotFoundedException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int idExists \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (writingList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new FileEmptyException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            for (int i \u003d 0; i \u003c writingList.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                //Use \"while\" loop to clean out the same IDs"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                while (i \u003c writingList.size() \u0026\u0026 writingList.get(i).getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"This writing: \" + writingList.get(i).getTitle() + \" has been deleted\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    writingList.remove(i);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    idExists \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.println(\"You have \" + writingList.size() + \" items remain\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    countWritings--;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (idExists \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new ItemNotFoundedException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return id;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Get the number of writings available in the storage. */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int getCountWritings() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return writingList.size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Print the UI message along with number of writings. */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String printWritingSize() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"In our storage, there is/are currently \" + getWritingSize() + \" writing(s)\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String printResult \u003d \"In our storage, there is/are currently \" + getWritingSize() + \" writing(s)\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return printResult;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *  print all of the current writings in the Arraylist with details."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *  Triggered when \"stats\" command is called."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int printWritings() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (writingList.size() \u003e 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            for (Writings w : writingList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                w.printWritingsProperties();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (w.getType().equals(\"Poem\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    w.printPoemProperties();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else if (w.getType().equals(\"Essay\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    w.printEssayProperties();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(EMPTY_WRITING_MESSAGE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return writingList.size();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String printAskForType() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(ASKING_FOR_TYPE);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return ASKING_FOR_TYPE;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String printAskForTitle() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(ASKING_FOR_TITLE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return ASKING_FOR_TITLE;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String printAskForTopic() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(ASKING_FOR_TOPIC);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return ASKING_FOR_TOPIC;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String printAskForReminderDate() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(ASKING_FOR_REMINDER);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return ASKING_FOR_REMINDER;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int getWritingSize() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return writingList.size();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * Operate when command \"start\" is called, embark the process the writing process."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static CommandChecker checkStart(String userInput) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String newUserInput \u003d null;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            CommandChecker commandStartChecker \u003d UNRECOGNISED;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (commandStartChecker !\u003d TYPE) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(TYPE_COMMAND_INSTRUCTION);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                newUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                commandStartChecker \u003d extractCommandType(newUserInput);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            executeCommand(commandStartChecker, newUserInput);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return extractCommandType(userInput);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * Operate when command \"type\" is called, allow the user to choose the desire topic."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static CommandChecker checkType(String userInput) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String newUserInput;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        File f \u003d FileFunctions.getFileFromFilePath(WRITING_FILE_PATH);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            CommandChecker commandTypeChecker \u003d UNRECOGNISED;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            while (commandTypeChecker !\u003d POEM \u0026\u0026 commandTypeChecker !\u003d ESSAY) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                WritingList.printAskForType();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                newUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                commandTypeChecker \u003d extractCommandType(newUserInput);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            getInformation(commandTypeChecker);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (InvalidReminderDateException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.INVALID_REMINDER_DATE_EXCEPTION);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return extractCommandType(userInput);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getInformation(CommandChecker commandTypeChecker)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws WrongMethodTypeException, InvalidReminderDateException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String newUserInput;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.printAskForTopic();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        newUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String topic \u003d newUserInput;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.printAskForTitle();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        newUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String title \u003d newUserInput;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(INSTRUCTION_FOR_ADDING_NEW_WRITINGS);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String contentUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        while (!contentUserInput.equals(\"end\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            content \u003d content.concat(contentUserInput + \"\\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            contentUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WritingList.printAskForReminderDate();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        newUserInput \u003d getUserInput(scanner);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        LocalDate reminderDate \u003d LocalDate.parse(newUserInput, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (reminderDate.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new InvalidReminderDateException();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Random rand \u003d new Random();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int newId \u003d rand.nextInt(MAX_NUM_WRITINGS);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (commandTypeChecker \u003d\u003d POEM) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            addPoem(title, newId, topic, content, user.getName(), reminderDate);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (commandTypeChecker \u003d\u003d ESSAY) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            addEssay(title, newId, topic, content, user.getName(), reminderDate);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new WrongMethodTypeException();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(SUCCESSFUL_ADD_WRITING_TO_DATABASE);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        //String contentAdded \u003d title + newId + topic + content + user.getName() + reminderDate;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return SUCCESSFUL_ADD_WRITING_TO_DATABASE;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * Clear all data stored in writing.txt."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     * To be associated with command \"reset writing\"."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void clearAll() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writingList.clear();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(CLEAR_DATA_MESSAGE);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        countWritings \u003d 0;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Adding a poem to the database. */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addPoem(String title, int id, String topic, String content, String author, LocalDate reminder) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assert (id \u003c\u003d MAX_NUM_WRITINGS \u0026\u0026 id \u003e\u003d 0) : ASSERTION_ID_ERROR;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Poem toBeAdded \u003d new Poem(title, id, topic, content, author, reminder);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writingList.add(toBeAdded);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"This Poem, \" + title +  \" has been added\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countWritings++;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    /** Adding an essay to the database. */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addEssay(String title, int id, String topic, String content, String author, LocalDate reminder) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assert (id \u003c\u003d MAX_NUM_WRITINGS \u0026\u0026 id \u003e\u003d 0) : ASSERTION_ID_ERROR;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Essay toBeAdded \u003d new Essay(title, id, topic, content, author, reminder);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writingList.add(toBeAdded);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"This Essay, \" + title +  \" has been added\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countWritings++;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 38,
      "thngyuxuan": 1,
      "Promethees": 226
    }
  },
  {
    "path": "src/main/java/seedu/duke/writing/WritingReminder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.constants.FluffleMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * This class contains a method to get the writings on a specific date and remind the writers about them."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.constants.InputFormat.INPUT_DATE_FORMAT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class WritingReminder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static ArrayList\u003cWritings\u003e writings \u003d WritingList.writingList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Gets the writings which are scheduled on a specific date specified by the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command contains the remind keyword and date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void filterWritingsOnADate(String command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (int i \u003d 0; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            words[i] \u003d words[i].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(words[1], DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ArrayList\u003cWritings\u003e writingsOnThisDate \u003d (ArrayList\u003cWritings\u003e) writings.stream()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    .filter((s) -\u003e s.getReminderDate().compareTo(date) \u003d\u003d 0)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printWritingsOnADate(date, writingsOnThisDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.PARSE_DATETIME_EXCEPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void printWritingsOnADate(LocalDate date, ArrayList\u003cWritings\u003e writingsOnThisDate) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (writingsOnThisDate.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(FluffleMessages.NO_WRITING_DUE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(FluffleMessages.CONTINUE_WRITINGS,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    date.format(DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int filterCount \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (Writings w : writingsOnThisDate) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(filterCount + \".\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            w.printWritingsReminder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            filterCount++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 53,
      "Promethees": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/writing/Writings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package seedu.duke.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.common.User;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.Logos.PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public abstract class Writings {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String topic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected LocalDate reminderDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String content;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected User author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public LocalDate getReminderDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return reminderDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getReminderDateString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return getReminderDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void setReminderDate(LocalDate reminderDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.reminderDate \u003d reminderDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTopic() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setTopic(String topic) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setDate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        DateTimeFormatter outputDateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.date \u003d now.format(outputDateFormat);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setContent(String content) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public User getAuthor() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void setAuthor(String author) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.author \u003d new User(author);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract int getNumberOfLines();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract int getNumberOfSentences();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract int getNumberOfWords();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String printPoemProperties();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String printEssayProperties();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printWritingsProperties() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"This is a \" + getType());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"Written by \" + getAuthor().getName() + \"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"Id: \" + getId());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(getTitle().toUpperCase() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(getContent());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"This writing was created on \" + date);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"You want to continue on this writing on \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                + getReminderDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String printWritingsReminder() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String content \u003d \"  Id: \" + getId() + \"\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            + \"  Title: \" + getTitle().toUpperCase() + \"\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                            + PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 21,
      "Promethees": 94
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 1,
      "-": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/bunnylist/BunnyListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.bunnylist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyIdeaMissingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandInvalidException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandMissingArgumentsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "public class BunnyListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    public static void initializeBunnyListTestDatabase() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ cool idea g\\\\ cool\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ some fun idea g\\\\ fun\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ kind of awesome idea g\\\\ awesome\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ some random idea g\\\\ awesome\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ funny idea g\\\\ fun\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ some strange idea g\\\\ mystery\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyList.addBunny(\"bunny i\\\\ idea example g\\\\ unknown\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (CommandMissingArgumentsException | BunnyIdeaMissingException | CommandInvalidException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void numBunny_checkCountValue_sevenEntriesTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        BunnyList.bunniesList.clear();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        initializeBunnyListTestDatabase();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(7, BunnyList.numBunny());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void clearAllBunny_clearWholeList_returnListSizeZero() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        BunnyList.bunniesList.clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        initializeBunnyListTestDatabase();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(7, BunnyList.numBunny());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        BunnyList.clearAllBunny();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(0, BunnyList.numBunny());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4,
      "AmeliaTYR": 36
    }
  },
  {
    "path": "src/test/java/seedu/duke/bunnylist/DeleteBunnyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.bunnylist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.BunnyIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyList.bunniesList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyListTest.initializeBunnyListTestDatabase;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "class DeleteBunnyTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void deleteBunny_deleteSecondBunnyInList_getTwoBunny() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        bunniesList.clear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        initializeBunnyListTestDatabase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(7, BunnyList.numBunny());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            DeleteBunny.deleteBunny(\"delete bunny 2\", bunniesList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            DeleteBunny.deleteBunny(\"delete bunny 3\", bunniesList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (BunnyIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(5, BunnyList.numBunny());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void getNumFromInput_parseIntFromInput_getIntValue() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            assertEquals(3, DeleteBunny.getNumFromInput(\"delete bunny 3\", 5));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (BunnyIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 33,
      "hungvo0603": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/filters/BunnyFilterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "package seedu.duke.filters;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunnylist.BunnyFilter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import seedu.duke.bunnylist.BunnyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.CommandInvalidException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.MissingFilterOptionsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.bunnyexceptions.NoFilteredItemsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyList.bunniesList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "import static seedu.duke.bunnylist.BunnyListTest.initializeBunnyListTestDatabase;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "class BunnyFilterTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void filterBunny_filterIdeaTerm_getTwoResults() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        BunnyList.bunniesList.clear();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        initializeBunnyListTestDatabase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyFilter.filterBunny(\"filter bunny i\\\\ fun\", bunniesList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (MissingFilterOptionsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (NoFilteredItemsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (CommandInvalidException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(2, BunnyFilter.filteredBunny.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void filterBunny_filterGenreTerm_getTwoResults() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        BunnyList.bunniesList.clear();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        initializeBunnyListTestDatabase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyFilter.filterBunny(\"filter bunny g\\\\ awesome\", bunniesList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (MissingFilterOptionsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (NoFilteredItemsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (CommandInvalidException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(2, BunnyFilter.filteredBunny.size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    void filterBunny_filterIdeaAndGenreTerm_getOneResult() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        BunnyList.bunniesList.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        initializeBunnyListTestDatabase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            BunnyFilter.filterBunny(\"filter bunny i\\\\ some g\\\\fun \", bunniesList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (MissingFilterOptionsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (NoFilteredItemsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        } catch (CommandInvalidException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "        assertEquals(1, BunnyFilter.filteredBunny.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 62,
      "hungvo0603": 3
    }
  },
  {
    "path": "src/test/java/seedu/duke/names/NamesTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package seedu.duke.names;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.storage.name.NamesDB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.nameexceptions.NameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "class NamesTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    void addName() throws NameException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(Names.nameList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        int currentSize \u003d Names.nameList.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Names.addName(\"add name JUnit test for name\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        int sizeAfterAdding \u003d Names.nameList.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assertEquals(currentSize + 1, sizeAfterAdding);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    void deleteName() throws NameException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        NamesDB.loadDB(Names.nameList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        int currentSize \u003d Names.nameList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Names.deleteName(\"delete name \" + Names.nameList.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        int sizeAfterDeleting \u003d Names.nameList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assertEquals(currentSize - 1, sizeAfterDeleting);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 26,
      "hungvo0603": 2
    }
  },
  {
    "path": "src/test/java/seedu/duke/spellchecker/DictionaryTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package seedu.duke.spellchecker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "class DictionaryTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    void checkDictionaryLoaded() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Dictionary dict \u003d Dictionary.getInstance();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert dict.getWordList().size() \u003e 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/spellchecker/SpellCheckerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package seedu.duke.spellchecker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "class SpellCheckerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    void checkSpelling() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        ArrayList\u003cString\u003e test \u003d SpellChecker.checkSpelling(\"The quick brown fox jumps over the lazy dog\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert test.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        test \u003d SpellChecker.checkSpelling(\"The quick brown foxs jumps over the lazy dogs\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert test.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        test \u003d SpellChecker.checkSpelling(\"The quick brown foxes jumps over the lazy doges\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert test.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        test \u003d SpellChecker.checkSpelling(\"The slow broen fox jumps over the lazy dog\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert test.size() \u003d\u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        test \u003d SpellChecker.checkSpelling(\"The quivk brown fox jimps over the lzzy dog\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert test.size() \u003d\u003d 3;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    void isAlpha() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert SpellChecker.isAlpha(\"ABC\") \u003d\u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert SpellChecker.isAlpha(\"123\") \u003d\u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        assert SpellChecker.isAlpha(\"@BC\") \u003d\u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 29
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/ClearLoaderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.storageexceptions.FileEmptyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.ItemNotFoundedException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.WrongClearCommandFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.words.Words;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.WritingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static seedu.duke.wordlist.wordfilter.WordsFilterTest.initializeTestDatabase;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class ClearLoaderTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static WritingList writings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static ArrayList\u003cWords\u003e wordList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void initializeTestDatabaseForWriting() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"28/10/2020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WritingList.addPoem(\"fantasy\", 12, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WritingList.addPoem(\"fantasy\", 12, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WritingList.addPoem(\"fantasy\", 12, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WritingList.addEssay(\"fantasy\", 12, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WritingList.addEssay(\"fantasy\", 12, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void clearAll_getWritingSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.clearAll();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabaseForWriting();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(5, WritingList.getWritingSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.clearAll();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(0, WritingList.getWritingSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void removeID_removeAll_noneOfWritingLeft() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.clearAll();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabaseForWriting();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(5, WritingList.getWritingSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            WritingList.removeID(12);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileEmptyException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Empty file of Writing!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (ItemNotFoundedException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Item not found in the writing archive\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(0, WritingList.getWritingSize());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void clearItems_clearThirdWriting() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.clearAll();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabaseForWriting();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String userInput1 \u003d \"clear type\\\\writing item\\\\3\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        /*try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            ClearLoader.clearItems(userInput1, writings, wordList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (WrongClearCommandFormat e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"This is not appropriate\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(\"writing\", ClearLoader.getType(\"type\\\\writing\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(\"3\", ClearLoader.getItem(\"item\\\\3\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        //assertEquals(4, WritingList.getWritingSize());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void clearAnItem_InvalidClearCommand_WrongClearCommandFormatThrown() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String userInput2 \u003d \"clear type\\\\\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertThrows(WrongClearCommandFormat.class, () -\u003e ClearLoader.clearItems(userInput2, writings, wordList));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void clearByWronglyFormattedCommand_WrongCommandFormatThrown() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String userInput \u003d \"clear type\\\\word item\\\\-non dfad\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertThrows(WrongClearCommandFormat.class, () -\u003e ClearLoader.clearItems(userInput, writings, wordList));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void initializeAnEmptyWritingList_FileEmptyExceptionThrown() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        WritingList.clearAll();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String userInput \u003d \"clear type\\\\writing item\\\\0\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e ClearLoader.clearWritingWithID(\"0\", writings));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 13,
      "Promethees": 76
    }
  },
  {
    "path": "src/test/java/seedu/duke/wordlist/wordfilter/FilterCommandSlicerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterEmptyStringTagException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterMissingTargetStringsTagException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterMissingTargetWordTypeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterWordsInvalidWordType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterCommandSlicer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "class FilterCommandSlicerTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedWordType_adjectiveFilterRecognition_arrayOfAdjectiveType()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterWordsInvalidWordType, FilterMissingTargetWordTypeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"adjective\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                .getTargetedWordTypes(\"filter words -continue by\\\\type -adjective\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(1, actual.length);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedWordType_nounAndVerbFilterRecognition_arrayOfNounAndVerbElements()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterWordsInvalidWordType, FilterMissingTargetWordTypeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"verb\", \"noun\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer.getTargetedWordTypes(\"filter words by\\\\type -verb -noun\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(2, actual.length);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedWordType_allTypeFilterRecognition_arrayOfAllWordType()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterWordsInvalidWordType, FilterMissingTargetWordTypeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"adjective\", \"verb\", \"noun\"};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer.getTargetedWordTypes(\"filter words by\\\\type -adjective -verb -noun\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(3, actual.length);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedWordType_noWordTypeFound_filterCommandExceptionThrown() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertThrows(FilterWordsInvalidWordType.class,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            () -\u003e FilterCommandSlicer.getTargetedWordTypes(\"filter words by\\\\type -adverb -preposition\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedStringTags_oneStringTagNoSpace_success()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterEmptyStringTagException, FilterMissingTargetStringsTagException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"cs\"};"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer.getTargetedStringTags(\"filter words by\\\\contain -cs\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(1, actual.length);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedStringTags_oneStringTagHaveSpace_success()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterEmptyStringTagException, FilterMissingTargetStringsTagException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"cs 2113 t\"};"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer.getTargetedStringTags(\"filter words by\\\\start -cs 2113 t\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(1, actual.length);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedStringTags_twoStringTagsNoSpace_success()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterEmptyStringTagException, FilterMissingTargetStringsTagException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"cs 2113 t\", \"cs 2101\"};"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                .getTargetedStringTags(\"filter words by\\\\start -cs 2113 t -cs 2101\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(2, actual.length);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedStringTags_twoStringTagsHaveSpace_success()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterEmptyStringTagException, FilterMissingTargetStringsTagException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] expected \u003d {\"cs2113t\", \"cs2101\"};"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] actual \u003d FilterCommandSlicer"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                .getTargetedStringTags(\"filter words by\\\\contain -cs2113t -cs2101\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(2, actual.length);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertTrue(Arrays.equals(expected, actual));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTargetedStringTags_noStringTagProvided_filterCommandExceptionThrown() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertThrows(FilterEmptyStringTagException.class,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            () -\u003e FilterCommandSlicer.getTargetedStringTags(\"filter words by\\\\start - \"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 96
    }
  },
  {
    "path": "src/test/java/seedu/duke/wordlist/wordfilter/FilterTypeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.wordexceptions.FilterTypeTagMissingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "class FilterTypeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTypeOfFilter_wordTypeFilter_wordType() throws FilterCommandException, FilterTypeTagMissingException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType expected \u003d FilterType.WORD_TYPE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType actual \u003d FilterType.getTypeOfFilter(\"filter words by\\\\type -noun -adjective\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTypeOfFilter_startingStringFilter_startingString()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterCommandException, FilterTypeTagMissingException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType expected \u003d FilterType.STARTING_STRING;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType actual \u003d FilterType.getTypeOfFilter(\"filter words by\\\\start -nho -e\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTypeOfFilter_includedStringFilter_includingString()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throws FilterCommandException, FilterTypeTagMissingException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType expected \u003d FilterType.INCLUDING_STRING;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterType actual \u003d FilterType.getTypeOfFilter(\"filter words by\\\\include -th -ao\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void getTypeOfFilter_invalidTypeFilter_filterCommandExceptionThrown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertThrows(FilterCommandException.class, () -\u003e FilterType.getTypeOfFilter(\"filter words by\\\\abcd -xyz -jkl\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 41
    }
  },
  {
    "path": "src/test/java/seedu/duke/wordlist/wordfilter/WordsFilterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.wordlist.wordfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.WordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterExecutor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.wordlist.wordfilter.FilterList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class WordsFilterTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void initializeTestDatabase() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addNoun(\"noun house d\\\\place to live\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addVerb(\"verb eat d\\\\put sth into your mouth\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addAdjective(\"adj beautiful d\\\\nice to look at\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addNoun(\"noun grass d\\\\green plant\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addNoun(\"noun computer d\\\\hitech stuff\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addAdjective(\"adj nice d\\\\you\u0027re so nice\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addAdjective(\"adj meaningful d\\\\something nice\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addVerb(\"verb sleep d\\\\rest at night\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addNoun(\"noun class d\\\\place to study\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.addVerb(\"verb love d\\\\fall for somebody\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void filterByType_filterNounAtTheEnd_getFourNouns() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.getWordList().clear();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(10, WordList.getNumberOfWords());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words by\\\\type -noun -verb\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(7, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words -continue by\\\\type -noun\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(4, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void filterByStartingString_filterMultipleStartingStrings_getOneWord() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.getWordList().clear();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(10, WordList.getNumberOfWords());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words by\\\\start -gr -co -s -ho\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(4, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words -continue by\\\\start -g\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(1, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void filterByIncludedString_filterMultipleIncludedStrings_getOneWord() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        WordList.getWordList().clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(10, WordList.getNumberOfWords());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words by\\\\include -mp -pu -a -e\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(10, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words -continue by\\\\include -e\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(8, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FilterExecutor.executeFilterCommand(\"filter words -continue by\\\\include -lo\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        assertEquals(1, FilterList.filterWords.size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 59
    }
  },
  {
    "path": "src/test/java/seedu/duke/writing/WritingListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package seedu.duke.writing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import seedu.duke.exceptions.storageexceptions.FileEmptyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.exceptions.ItemNotFoundedException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.Poem;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import seedu.duke.writing.WritingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.START;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.TYPE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.commands.CommandChecker.extractCommandType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_TITLE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_TOPIC;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_TYPE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.FluffleMessages.ASKING_FOR_REMINDER;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static seedu.duke.constants.Logos.PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class WritingListTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static WritingList writings;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void initializeTestDatabase() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"28/10/2020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addPoem(\"fantasy\", 1, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addPoem(\"fantasy\", 12, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addPoem(\"fantasy\", 20, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addEssay(\"fantasy\", 23, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addEssay(\"fantasy\", 13, \"thih\", \"sdfa\", \"jdkfa\", date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void initializeDerErlkonigPoem() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"28/10/2020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String content \u003d \"Wer reitet so spät durch Nacht und Wind?\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Es ist der Vater mit seinem Kind;\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Er hat den Knaben wohl in dem Arm,\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Er faßt ihn sicher, er hält ihn warm.\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String author \u003d \"Goethe\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addPoem(\"Der Erlkonig\",123,\"ghost story\", content, author, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void initializeLoremEssay() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"28/10/2020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String content \u003d \"Lorem ipsum dolor sit amet, vel et natum ludus laboramus. Vitae nostrud euripidis ei duo. \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Nec veri dicit veniam te. Tantas causae consectetuer ex sit, sit an sumo magna posidonium, \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"id usu falli nominavi postulant. Dico phaedrum disputationi qui et, eos no noluisse gloriatur. \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Mutat evertitur delicatissimi mea eu, cu quo nusquam patrioque, persius omittam tincidunt mei an. \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"Modus persecuti has ad, animal dissentiet signiferumque ad per.\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String author \u003d \"none\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.addEssay(\"Lorem\", 123, \"dummy\", content, author, date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void clearAll_getWritingInformation_getTheNumberOfItemsAfterDeleted() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.clearAll();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(5, writings.getWritingSize());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(\"Poem\", writings.writingList.get(0).getType());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(\"Essay\", writings.writingList.get(3).getType());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.clearAll();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(0, writings.getWritingSize());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void addErlkonigPoem_getInformation() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.clearAll();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeDerErlkonigPoem();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(31, writings.writingList.get(0).getNumberOfWords());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(4, writings.writingList.get(0).getNumberOfLines());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(0, writings.writingList.get(0).getNumberOfSentences());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(1, writings.getCountWritings());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(null, writings.writingList.get(0).printEssayProperties());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String thisPoemProperties \u003d \"This poem has \" + 4 + \" line(s)\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \" and \" + 31 + \" word(s)\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(thisPoemProperties, writings.writingList.get(0).printPoemProperties());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String reminderDate \u003d \"28/10/2020\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(reminderDate, writings.writingList.get(0).getReminderDateString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String thisWritingReminder \u003d \"  Id: \" + 123 + \"\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \"  Title: \" + \"DER ERLKONIG\" + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + PLAIN_TEXT_DIVIDER;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(thisWritingReminder, writings.writingList.get(0).printWritingsReminder());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(\"ghost story\", writings.writingList.get(0).getTopic());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void addLoremEssay_getInformation() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.clearAll();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeLoremEssay();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(0, writings.writingList.get(0).getNumberOfLines());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(7, writings.writingList.get(0).getNumberOfSentences());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(1, writings.getCountWritings());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(66, writings.writingList.get(0).getNumberOfWords());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(null, writings.writingList.get(0).printPoemProperties());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String thisEssayProperties \u003d \"This essay has \" + 7 + \" sentence(s)\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                + \" and \" + 66 + \" word(s)\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(thisEssayProperties, writings.writingList.get(0).printEssayProperties());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void checkStartTest_checkTypeTest_checkPrintWritings() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.clearAll();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(START, writings.checkStart(\"start\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(START, extractCommandType(\"start\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(TYPE, writings.checkType(\"type\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(5, writings.printWritings());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void testPrintEmptyWriting_testPrintWritingSizeContent_testRemoveAWriting_testRemvoingNonExistedWriting() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        writings.clearAll();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(0, writings.printWritings());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String expectedStringToBePrinted \u003d \"In our storage, there is/are currently 0 writing(s)\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(expectedStringToBePrinted, writings.printWritingSize());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        initializeTestDatabase();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(6, writings.add(new Poem()));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            assertEquals(5, writings.removeWriting(3));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileEmptyException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"This file is empty\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertThrows(ItemNotFoundedException.class, () -\u003e writings.removeID(356));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            assertEquals(4, writings.removeID(23));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileEmptyException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"This file is empty\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (ItemNotFoundedException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"There is no such element in our database\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void miscellaneousMessagesTest() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(ASKING_FOR_TYPE, writings.printAskForType());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(ASKING_FOR_TITLE, writings.printAskForTitle());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(ASKING_FOR_TOPIC, writings.printAskForTopic());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        assertEquals(ASKING_FOR_REMINDER, writings.printAskForReminderDate());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 6,
      "Promethees": 139
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "Fluffle"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmeliaTYR"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "AmeliaTYR": 2,
      "Promethees": 1
    }
  }
]
