[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"# Domsun - An easy way to track your schedules!"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"![here](UI.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":" - This is a desktop tasks tracker application. It comes with a fancy and plain mode of display in which user can switch anytime between them."},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":" - It is a Java application intended for students to track their modules, mc, daily task, as well as assignments for the individual modules. "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :classes"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   "},{"lineNumber":28,"author":{"gitId":"-"},"content":"   What is your name?"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":35,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Testing"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"### I/O redirection tests"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "},{"lineNumber":46,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":"2. Click on the `settings` tab."},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":"3. Scroll down to the `GitHub Pages` section."},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"4. Set the `source` as `master branch /docs folder`."},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":"5. Optionally, use the `choose a theme` button to choose a theme for your documentation."},{"lineNumber":68,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":"## Site Map"},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":"* [About Us](AboutUs.md)"},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"* [Contact Us](ContactUs.md)"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"\u003c!--stackedit_data:"},{"lineNumber":77,"author":{"gitId":"scjx123"},"content":"eyJoaXN0b3J5IjpbLTE4Mjk1MzI1MjgsLTE1NDYzMTAwOTAsMT"},{"lineNumber":78,"author":{"gitId":"scjx123"},"content":"YzNTY1MjI0NV19"},{"lineNumber":79,"author":{"gitId":"scjx123"},"content":"--\u003e"}],"authorContributionMap":{"johanesrafael":1,"-":60,"scjx123":18}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    enableAssertions \u003d true"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    mainClassName \u003d \"seedu.duke.Domsun\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    archiveBaseName \u003d \"Domsun\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    enableAssertions \u003d true"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TomLBZ":4,"-":44,"scjx123":2}},{"path":"data/course.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"[COMPLETED]CG1111 A "},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":"[COMPLETED]CG1112 C "},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"CG2027 null "},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":"[COMPLETED]CG2028 A "},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"[COMPLETED]CS1010 A "},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"[COMPLETED]CS1231 A "},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"[COMPLETED]CS2040C A "},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"CS2113 null [D][X]_ejnbvcv_(by:_Jan_11_2011_11:11),[D][X]_cbehur_(by:_Jan_11_2011_11:11)"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"[COMPLETED]EE1001X C+ "},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"[COMPLETED]EE2026 A "},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"EE2028 A+ "},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":"GER1000 A "},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"[COMPLETED]MA1508E B "},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"MA1513 B "}],"authorContributionMap":{"TomLBZ":7,"adinata15":7}},{"path":"data/duke.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"[T][X] hahahahaha"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":"[D][X] cbehur (by: Jan 12 2011 12:11)"},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"[T][X] cnihsbec"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":"[D][X] ejnbvcv (by: Jan 11 2011 11:11)"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"[D][X] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"[T][X] eat banana while watching Minions s4"}],"authorContributionMap":{"TomLBZ":3,"adinata15":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"# About Us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"johanesrafael"},"content":"![](https://avatars.githubusercontent.com/johanesrafael) | Johanes Rafael Sudardji | [Github](https://github.com/johanesrafael.git) | [Portfolio](docs/team/johanesrafael.md)"},{"lineNumber":6,"author":{"gitId":"chuhann"},"content":"![](https://avatars.githubusercontent.com/chuhann) | Kwek Chu Han | [Github](https://github.com/chuhann) | [Portfolio](docs/team/AboutUs.md)"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"![](https://avatars2.githubusercontent.com/u/48993548?s\u003d460\u0026u\u003df395740695277baf91ee2ff07b65bbe90b486302\u0026v\u003d4) | Adi Nata | [Github](https://github.com/adinata15) | [Portfolio](https://www.linkedin.com/in/adinata-tan99/)"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"![](https://avatars2.githubusercontent.com/u/26886705?s\u003d100\u0026v\u003d4) | Li Bozhao | [Github](https://github.com/) | [Portfolio](docs/team/AboutUs.md)"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"![](https://avatars1.githubusercontent.com/u/60291742?s\u003d100\u0026u\u003d3a1d97f66f94074b478308e1ffdc734fcbf6de61\u0026v\u003d4) | Chan Jian Xiang | [Github](https://github.com/scjx123) | [Portfolio](docs/team/AboutUs.md)"},{"lineNumber":10,"author":{"gitId":"johanesrafael"},"content":""}],"authorContributionMap":{"johanesrafael":3,"TomLBZ":1,"chuhann":1,"-":3,"scjx123":1,"adinata15":1}},{"path":"docs/ContactUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"# Contact us"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"- Bugs reports : If you have noticed any bugs, please make a post in our [issue tracker](https://github.com/AY2021S1-CS2113-T13-2/tp/issues) "},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":"- Email us : You can reach us at our portfolio under \u0027AboutUs\u0027"}],"authorContributionMap":{"scjx123":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"## 1. Table of content"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":"**1. Table of content**\\"},{"lineNumber":5,"author":{"gitId":"chuhann"},"content":"**2. Introduction**\\"},{"lineNumber":6,"author":{"gitId":"chuhann"},"content":"**3. Setting Up**\\"},{"lineNumber":7,"author":{"gitId":"chuhann"},"content":"**4. Design**\\"},{"lineNumber":8,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.1 Architecture\\"},{"lineNumber":9,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2 Main Layer\\"},{"lineNumber":10,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3 UI Layer\\"},{"lineNumber":11,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4 Command Interpreter Layer\\"},{"lineNumber":12,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.5 Executor Layer\\"},{"lineNumber":13,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.6 Storage Layer\\"},{"lineNumber":14,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;4.7 Flow of DOMSUN\\"},{"lineNumber":15,"author":{"gitId":"chuhann"},"content":"**5. Implementation**\\"},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.1 Take Feature\\"},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.2 StatsAction Feature\\"},{"lineNumber":18,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.3 Cap Caculator Feature\\"},{"lineNumber":19,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.4 Reminder Feature\\"},{"lineNumber":20,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.5 Snooze Feature\\"},{"lineNumber":21,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.6 Postpone Feature\\"},{"lineNumber":22,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.7 Grade Feature\\"},{"lineNumber":23,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;5.8 Focus Feature\\"},{"lineNumber":24,"author":{"gitId":"chuhann"},"content":"**6. Appendix A Product Scope**\\"},{"lineNumber":25,"author":{"gitId":"chuhann"},"content":"**7. Appendix B User Stories** \\"},{"lineNumber":26,"author":{"gitId":"chuhann"},"content":"**8. Appendix C Use Cases** \\"},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"**9. Appendix D Non-functional Requirements** \\"},{"lineNumber":28,"author":{"gitId":"chuhann"},"content":"**10. Appendix E Glossary** \\"},{"lineNumber":29,"author":{"gitId":"chuhann"},"content":"**11. Appendix F. Instruction for Manual Testing**"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"chuhann"},"content":"## 2. Introduction"},{"lineNumber":32,"author":{"gitId":"chuhann"},"content":"Domsun is a CLI program that allows users to manage tasks and modules. \u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"chuhann"},"content":"Users will be able to browse and select modules, create and arrange tasks, add tasks to modules,\u003cbr\u003e"},{"lineNumber":34,"author":{"gitId":"chuhann"},"content":"create reminders and calculate their MCs / CAPs."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"chuhann"},"content":"## 3. Setting Up"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":39,"author":{"gitId":"chuhann"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Domsun.java` file, right-click it, and choose `Run Domsun.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":"   ```"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"    \u003e Task :compileJava UP-TO-DATE"},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"    \u003e Task :processResources UP-TO-DATE"},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"    \u003e Task :classes UP-TO-DATE"},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"    "},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":"    \u003e Task :Domsun.main()"},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"    \t\tHello, I\u0027m Domsun. What can I do for you?"},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"    \t\tHere are the tasks due within 3 days: "},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"    \t\tNo task within 3 days from now"},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"   ```"},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":"   "},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":" Type  `bye` to ensure there is no error saving or creating a new file when exiting. Re-launch and type `help` for all commands available in the program. "},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":59,"author":{"gitId":"chuhann"},"content":"## 4. Design"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":61,"author":{"gitId":"chuhann"},"content":"### 4.1 Architecture"},{"lineNumber":62,"author":{"gitId":"scjx123"},"content":"The **Architecture Diagram** below represents a high-level design overview of the App. Specifically, it is done with an N-tier architectural style, where the higher layers make use of services provided by lower layers. "},{"lineNumber":63,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":"![here](Images/Architecture_Diagram.PNG)"},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"As shown in the above diagram, the user only interacts with the UI layer and their commands, in turn, will be passed to the next adjacent layer. Given below is a quick overview of each component. "},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":68,"author":{"gitId":"chuhann"},"content":"**4.2 Main Layer**\u003cbr\u003e"},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":"The `main` layer, it contains a single class known as `Domnus`. Its purpose can be split into 3 parts: "},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":"At Start-Up: It calls upon the `storage` component to load the user\u0027s past data and it also loads the complete module list that is packaged inside the JAR file. \u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":"At Operating: It connects the relevant component of the program to ensure the program is operating as per the intended logic flow. \u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":"At Shutdown: It exits the running loop of the program to shut down the program successfully. \u003cbr\u003e"},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":75,"author":{"gitId":"chuhann"},"content":"**4.3 UI Layer**\u003cbr\u003e"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"The Main gets user input and displays messages through the use of UI components. "},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"The UI layer entails the package *visualize*, which contains classes *ColoredString*, *Bitmap*, *UI*, *Cli*, "},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"*FancyCli* and enumerations *Color* and *Sprite* in the following structure:\u003cbr\u003e"},{"lineNumber":79,"author":{"gitId":"scjx123"},"content":"![uml](Images/Package%20visualize.png)"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"UI\u0027s interaction with user\u003cbr\u003e"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"UI gets user input through *nextline()*, and renders strings as a user-comprehensible interface through "},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"*update(String, Data)*."},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"UI\u0027s interaction with the rest of the program\u003cbr\u003e"},{"lineNumber":86,"author":{"gitId":"chuhann"},"content":"UI passes the user\u0027s input string out to the DOMNUS object, which then passes the string to the Command Interpreter layer."},{"lineNumber":87,"author":{"gitId":"scjx123"},"content":"UI also reads data from the Data object for refreshing purposes but does not modify it. "},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":89,"author":{"gitId":"chuhann"},"content":"**4.4 Command Interpreter Layer**\u003cbr\u003e"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"Upon receiving a command from the UI, DOMNUS would pass the entire user input into Command Interpreter (CI)\u003cbr\u003e"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"The CI is implemented via the classes in the package `lexical`.\u003cbr\u003e"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"![lexical](Images/lexical.png)\u003cbr\u003e"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"The lexer converts String to a list of Tokens, and the parser converts it into a list of commands."},{"lineNumber":94,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":95,"author":{"gitId":"chuhann"},"content":"**4.5 Execute Layer**\u003cbr\u003e"},{"lineNumber":96,"author":{"gitId":"scjx123"},"content":"The `Execute` layer carries out the relevant actions required based on the analyzed input. All of the features in the program are stored under this layer which is under the package name `command`. To summarize, this layer is responsible for: "},{"lineNumber":97,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":98,"author":{"gitId":"scjx123"},"content":"1) Match the user\u0027s command to the relevant actions."},{"lineNumber":99,"author":{"gitId":"scjx123"},"content":"2) Throw any exception based on erroneous user input/invalid conditions. "},{"lineNumber":100,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":101,"author":{"gitId":"chuhann"},"content":"**4.6 Storage Layer**\u003cbr\u003e"},{"lineNumber":102,"author":{"gitId":"scjx123"},"content":"The `Storage` layer loads, saves, and do pre-data processing before performing the two aforementioned action. It is active in 2 phases. "},{"lineNumber":103,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":104,"author":{"gitId":"scjx123"},"content":"During the loading phase: "},{"lineNumber":105,"author":{"gitId":"scjx123"},"content":"1) For the user\u0027s task: This layer translates the previously (if any) saved data format into recognizable commands and loads these data as per how the app functions during runtime. "},{"lineNumber":106,"author":{"gitId":"scjx123"},"content":"2) For the module list: This layer conducts simple parsing of the text file containing all the modules and stores them creates individual items known as `SingleModule` before loading them into an ArrayList. "},{"lineNumber":107,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":108,"author":{"gitId":"scjx123"},"content":"During the saving phase: "},{"lineNumber":109,"author":{"gitId":"scjx123"},"content":"1) For the user\u0027s task: This layer saves any changes that the user made to the task list onto a text file. "},{"lineNumber":110,"author":{"gitId":"scjx123"},"content":"2) For the module list: This layer saves any module marked `TAKEN` by the user onto a text file, together with the relevant module information such as module\u0027s code, and grade attained (if any).  "},{"lineNumber":111,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":112,"author":{"gitId":"chuhann"},"content":"**4.7 Flow of DOMSUN**\u003cbr\u003e"},{"lineNumber":113,"author":{"gitId":"chuhann"},"content":"The sequence diagram below shows the main interaction of classes with each other throughout the whole lifecycle of DOMSUN."},{"lineNumber":114,"author":{"gitId":"scjx123"},"content":"![uml](Images/DOMSUM_Main_Flow.png)"},{"lineNumber":115,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":116,"author":{"gitId":"chuhann"},"content":"## 5. Implementation\u003cbr\u003e"},{"lineNumber":117,"author":{"gitId":"scjx123"},"content":"This section highlights some of our project\u0027s key feature and its implementation. "},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"chuhann"},"content":"### 5.1 Take Feature"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"The take mechanism is facilitated by the `TakeAction` class and is extensively used by other classes via inheritance. "},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"The take mechanism does the following: Comprehends user input and generate target identifiers, "},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"filters the targets from data, and performs the specified operations on the targets. "},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"The `TakeAction` class extends `Action` class, "},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"and internally it stores an arraylist of `Item` object in `targetBackup` field to restore the disruptions to the "},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"`data` object. Additionally, it implements the following operation: "},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":" - `prepare()` - Interpret the `ParamNode` arguments and creates target identifiers for the `act()` function. "},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":" In `TakeAction` the identifiers are `ArrayList` objects, `codes` and `indices`. "},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":" - `act()`- Get the target items from `data` based on identifiers, do `modifyObject()` on each target, and return a "},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":" `String` as the execution result for this action."},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":" - `modifyObject()` - Performs the actual operation of modifying the target item. In `TakeAction`, it assigns the "},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":" `isTaken` field of the target item as `true`."},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":" - `getObjectInfo()` - Controls what is the text representation of the target object in the return string."},{"lineNumber":134,"author":{"gitId":"scjx123"},"content":" - `safetyCheck()`- Sets the `isBlind` flag if the user\u0027s input has a void parameter tree, thereby specifying the default "},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":" mode of action for this command. "},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":" - `superAct()` - Returns `super.Act()`. Used as the break out node in the prototype chain for the inherited classes "},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":" to be able to call the method `Act()` of the ancestor. In child classes of `TakeAction`, this method can be overloaded"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":" to return `super.superAct()` to start the upward propogation."},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":" - `superPrepare()` - Returns `super.Prepare()`. Used as the break out node in the prototype chain for the inherited "},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":" classes to be able to call the method `Prepare()` of the ancestor. In child classes of `TakeAction`, this method can "},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":" be overloaded to return `super.superPrepare()` to start the upward propogation."},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"Given below is an example usage scenario and how the take mechanism behaves at each step. "},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"Step 1. The user enters `take 1 2 CS2113`. Once the execute layer (`Command` object) executes the message and calls "},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"`action.prepare()`, `TakeAction` will begin its `prepare()` operation."},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"Step 2. `prepare()` calls its prototype and extracts information from the `ParamNode` tree."},{"lineNumber":149,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"Step 3. `prepare()` checks if the command has a void parameter tree. If so, it calls the `safetyCheck()` method to "},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":" perform the default operation (sets the `isBlind` flag and ensure that the `act()` will execute in the `blind` "},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":" mode in this case). Otherwise, it parses the user parameters into `codes` or `indices` depending on "},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":" the most probable interpretations, and throws a custom exception `CommandException` object in case of exceptions."},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":" In this case, `1` and `2` will be added to `indices` and `CS2113` will be added to `codes`."},{"lineNumber":155,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"Step 4. Next, execute layer will call `action.act()` which causes `TakeAction` to begin its `act()` operation."},{"lineNumber":157,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"Step 5. `act()` stores the current state of the `data` object into its `flag` field and `targetBackup` field to prevent "},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"unwanted changes to the `data` object."},{"lineNumber":160,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"Step 6. `act()` enters either the `blind` mode or the `normal` mode depending on the value of `isBlind`."},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"Step 7. If in `blind` mode, `act()` filters out all items in `data` by using the `blindSearch` flag. "},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"In this case this flag is set to `Constants.SELECTED` to search through all selected items. In the children classes"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"of `TakeAction`, however, this variable may be reset to other values to have different blind search behaviours. "},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"Otherwise, in `normal` mode, `act()` filters out items from `data` based on identifiers, "},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"in this case `codes` and `indices`."},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"Step 8. `act()` loops through all filtered items and calls `modifyObject()` on each of them."},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":171,"author":{"gitId":"scjx123"},"content":"Step 9. `modifyObject()` modifies the objects of interest, in this case by setting the `isTaken` field to true."},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"Step 10. Depending on the result of `modifyObject()`, `act()` parses the suitable string for output through the use of "},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"a `StringBuilder` object, in the process calling `getObjectInfo()` to get the textual descriptions of the targets."},{"lineNumber":175,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"Step 11. `act()` restores the previous state to the `data` object using the `flag` field and the `targetBackup` field."},{"lineNumber":177,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"Step 12. `act()` replaces the string `Constants.TEXT_PLACEHOLDER` in the default output string for TakeAction "},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"defined in `Constants.messageMap` with the actual result string, and returns it."},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"**Design consideration:**"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":183,"author":{"gitId":"scjx123"},"content":"1. Reuseable - functions such as `modifyObject()` can be overloaded in child classes to achieve different functions."},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"1. Low coupling - `prepare()` is not aware of the program `data`, and `act()` is not aware of the user input."},{"lineNumber":185,"author":{"gitId":"scjx123"},"content":"1. Uniform - `TakeAction` as well as all other actions have uniform input and outputs and can be mapped "},{"lineNumber":186,"author":{"gitId":"scjx123"},"content":"indiscriminately to any `Command` object and executed indifferently."},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"**Aspect : How TakeAction executes**"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":" - **Alternative 1 (current choice):** calls `getTarget()` method of `data` object using different flags "},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":" to get wanted targets."},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"    - Pros: Easy to implement and easy to read. Easily extendable by adding more flags in the `getTarget()` method."},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"    - Cons: Slow. Every time we `act()` on something, the `data` object needs to do the filtering again."},{"lineNumber":193,"author":{"gitId":"scjx123"},"content":" - **Alternative 2:** Have many different lists or maps, each store one category of data"},{"lineNumber":194,"author":{"gitId":"scjx123"},"content":"    - Pros: Fast, no need for filtering in most cases."},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"    - Cons: Harder to implement and extend. Every time we want a new functionality we would need to create a new list."},{"lineNumber":196,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":197,"author":{"gitId":"chuhann"},"content":"### 5.2 Statistic Feature "},{"lineNumber":198,"author":{"gitId":"scjx123"},"content":"The statistic feature is facilitated by the `StatsAction` class. It extends `Action` class, and it functions under the architectural component `execute`. Internally, it stores an arraylist of Item object in `targetList`. This class implements the following operation: "},{"lineNumber":199,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":200,"author":{"gitId":"scjx123"},"content":" - `prepare()` - Sets `isMod` flag according to user\u0027s "},{"lineNumber":201,"author":{"gitId":"scjx123"},"content":" - `act()`- Gets `targetList` and calculates the raw ratio of the completed items."},{"lineNumber":202,"author":{"gitId":"scjx123"},"content":" - `roundedRatioBar()`- Returns a rounded ratio enclosed in square brackets for printing. \u003cbr\u003e"},{"lineNumber":203,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":204,"author":{"gitId":"scjx123"},"content":"The diagram below shows the various class associated with `StatsAction`"},{"lineNumber":205,"author":{"gitId":"scjx123"},"content":"![statsDiagram](Images/StatsDiagram.png)"},{"lineNumber":206,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":207,"author":{"gitId":"scjx123"},"content":"Given below is an example usage scenario and how the statistic mechanism behaves at each step. "},{"lineNumber":208,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":209,"author":{"gitId":"scjx123"},"content":"Step 1. The user enters `stats -mod CS2113`\tonce the execute layer executes the message and calls `action.prepare()` class, `StatsAction` will begin its `prepare()` operation"},{"lineNumber":210,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":211,"author":{"gitId":"scjx123"},"content":"Step 2. `prepare()` looks at the input called `ParamNode args` which is user command processed by Command Interpreter layer, and starts to identify whether the user has entered the keyword `mod ` if `userInput` contains the keyword, then `isMod` flag will be set. "},{"lineNumber":212,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":213,"author":{"gitId":"scjx123"},"content":"Step 3. Next, execute layer will call `action.act()` which causes StatsAction to begin its `act()` operation. If `isMod` flag is set, `act()` will search for the user-specified module and get the list of tasks tagged to it."},{"lineNumber":214,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":215,"author":{"gitId":"scjx123"},"content":"Step 5. Once the list of tasks is obtained, the operation will loop through the task list and count the number of completed tasks followed by generating a ratio. "},{"lineNumber":216,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":217,"author":{"gitId":"scjx123"},"content":"Step 6. This ratio will be passed into `roundedRatioBar` to return *String* of a rounded ratio to 1 decimal place enclosing it in square brackets. "},{"lineNumber":218,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":219,"author":{"gitId":"scjx123"},"content":"Step 7. Now `StatsAction` is completed and it will return this string back to `Command` to store it under the String variable `result`. The `Main` layer will retrieve `result`, before passing it onto `UI` layer for printing. "},{"lineNumber":220,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":221,"author":{"gitId":"scjx123"},"content":"![statsDiagram](Images/StatsAction.png)"},{"lineNumber":222,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":223,"author":{"gitId":"scjx123"},"content":"**Design consideration:**"},{"lineNumber":224,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":225,"author":{"gitId":"scjx123"},"content":"**Aspect: How statistics executes**"},{"lineNumber":226,"author":{"gitId":"scjx123"},"content":" - **Alternative 1 (current choice):** Create a separate class and get list of tasks/taken modules\u0027 task and scan through them to calculate statistics"},{"lineNumber":227,"author":{"gitId":"scjx123"},"content":"\t - Pros: Reduces Coupling and increase testability as a software unit itself. "},{"lineNumber":228,"author":{"gitId":"scjx123"},"content":"\t - Cons: May have performance issues in terms of memory usage "},{"lineNumber":229,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":230,"author":{"gitId":"scjx123"},"content":" - **Alternative 2:** initialize statistics as zero and each task contains an aspect called statistics"},{"lineNumber":231,"author":{"gitId":"scjx123"},"content":"\t - Pros: Will use less memory since the task itself will be deleted. "},{"lineNumber":232,"author":{"gitId":"scjx123"},"content":"\t - Cons: Stats will be updated constantly even though we do not need it. "},{"lineNumber":233,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":234,"author":{"gitId":"scjx123"},"content":"### 5.3 CAP calculator feature"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"scjx123"},"content":"This feature extends `Action` to execute the command given by the user, output is then passed on to `Ui` for display. "},{"lineNumber":237,"author":{"gitId":"adinata15"},"content":"Additionally, it implements the following operations:"},{"lineNumber":238,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":239,"author":{"gitId":"adinata15"},"content":"* `CalculateCapAction#act()` - Calculate the user CAP based on stored user grades / input modules."},{"lineNumber":240,"author":{"gitId":"adinata15"},"content":"* `CalculateCapAction#prepare()` - Parse user command to suitable parameter for `CalculateCapAction#act()` function."},{"lineNumber":241,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":242,"author":{"gitId":"adinata15"},"content":"Given below is an example usage scenario and how the cap calculator mechanism behaves at each step."},{"lineNumber":243,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":244,"author":{"gitId":"adinata15"},"content":"Step 1. The user executes `cap` command find his current CAP grade. Command is then parsed by `CalculateCapAction#prepare()` to be passed as arguments for `CalculateCapAction#act()`."},{"lineNumber":245,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":246,"author":{"gitId":"adinata15"},"content":"Step 2. `CalculateCapAction#act()` retrieves data from the stored user\u0027s grades."},{"lineNumber":247,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":248,"author":{"gitId":"adinata15"},"content":"Step 3. `CalculateCapAction#act()` then retrieves module data from the `modulelist.txt` to determine Modular Credit (MC) allocation."},{"lineNumber":249,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":250,"author":{"gitId":"adinata15"},"content":"Step 4. CAP value is calculated and returned to the user through `Ui`."},{"lineNumber":251,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":252,"author":{"gitId":"adinata15"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":253,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":254,"author":{"gitId":"adinata15"},"content":"![cap uml diagram](Images/CapSequence.png)"},{"lineNumber":255,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":256,"author":{"gitId":"scjx123"},"content":"### 5.4 Reminder Feature"},{"lineNumber":257,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":258,"author":{"gitId":"johanesrafael"},"content":"The proposed reminder mechanism is facilitated by `ReminderAction`. It extends `Action` and the output is passed onto `UI` for display. Additionally, it implements the following operations:"},{"lineNumber":259,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":260,"author":{"gitId":"adinata15"},"content":"* `ReminderAction#act()`- List out the deadlines and events tasks that are due within 3 days"},{"lineNumber":261,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":262,"author":{"gitId":"chuhann"},"content":"Given below is an example usage scenario and how the reminder mechanism behaves at each step."},{"lineNumber":263,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":264,"author":{"gitId":"chuhann"},"content":"Step 1. The user executes `reminder` command to list out tasks due within 3 days. Command is then parsed by `ReminderAction#act()`."},{"lineNumber":265,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":266,"author":{"gitId":"chuhann"},"content":"Step 2. `ReminderAction#act` retrieves tasklist data from the user\u0027s list"},{"lineNumber":267,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":268,"author":{"gitId":"chuhann"},"content":"Step 3. `ReminderAction#act` then sorts the due dates in ascending order"},{"lineNumber":269,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":270,"author":{"gitId":"chuhann"},"content":"Step 4: Tasks due within 3 days are returned to the user through Ui"},{"lineNumber":271,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":272,"author":{"gitId":"scjx123"},"content":"The following sequence diagram shows how the reminder operation works"},{"lineNumber":273,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":274,"author":{"gitId":"scjx123"},"content":"![Reminder_Sequence_Diagram](Images/ReminderAction_Sequence_Diagram.png)"},{"lineNumber":275,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":276,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":277,"author":{"gitId":"chuhann"},"content":"### 5.5 Snooze Feature"},{"lineNumber":278,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":279,"author":{"gitId":"scjx123"},"content":"The proposed snooze mechanism is facilitated by `SnoozeAction`. It extends `Action` to execute the command given by the user, output is then passed on to `Ui` for display. "},{"lineNumber":280,"author":{"gitId":"johanesrafael"},"content":"Additionally, it implements the following operations:"},{"lineNumber":281,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":282,"author":{"gitId":"johanesrafael"},"content":"* `RemindAction#getNewInterval` - Returns the new interval set by the user."},{"lineNumber":283,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":284,"author":{"gitId":"johanesrafael"},"content":"Given below is an example usage scenario and how the snooze mechanism behaves at each step."},{"lineNumber":285,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":286,"author":{"gitId":"johanesrafael"},"content":"Step 1. The user executes `snooze` command to snooze for the reminder. "},{"lineNumber":287,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":288,"author":{"gitId":"johanesrafael"},"content":"Step 2. `SnoozeAction#getNewInterval` sets and returns the new interval."},{"lineNumber":289,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":290,"author":{"gitId":"johanesrafael"},"content":"Step 3. The new interval is returned to the user through `Ui`."},{"lineNumber":291,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":292,"author":{"gitId":"johanesrafael"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":293,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":294,"author":{"gitId":"johanesrafael"},"content":"![Postpone_Sequence_Diagram](Images/Snooze.png)"},{"lineNumber":295,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":296,"author":{"gitId":"chuhann"},"content":"### 5.6 Postpone Feature"},{"lineNumber":297,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":298,"author":{"gitId":"scjx123"},"content":"The proposed undo/redo mechanism is facilitated by `PostponeAction`. It extends `Action` to execute the command given by the user, output is then passed on to `Ui` for display. "},{"lineNumber":299,"author":{"gitId":"johanesrafael"},"content":"Additionally, it implements the following operations:"},{"lineNumber":300,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":301,"author":{"gitId":"johanesrafael"},"content":"* `PostponeAction#act()` - Postpone the deadline or event task by the chosen parameter."},{"lineNumber":302,"author":{"gitId":"johanesrafael"},"content":"* `PostponeAction#prepare()` - Parse user command to suitable parameter for `PostponeAction#act()` function."},{"lineNumber":303,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":304,"author":{"gitId":"johanesrafael"},"content":"Given below is an example usage scenario and how the postpone mechanism behaves at each step."},{"lineNumber":305,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":306,"author":{"gitId":"johanesrafael"},"content":"Step 1. The user executes `postpone [index]` command to postpone the targeted task. Command is then parsed by `PostponeAction#prepare()` to be passed as arguments for `PostponeAction#act()`."},{"lineNumber":307,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":308,"author":{"gitId":"johanesrafael"},"content":"Step 2. `PostponeAction#act()` re-sets the date of the targeted task from the stored user\u0027s tasks by default a day."},{"lineNumber":309,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":310,"author":{"gitId":"johanesrafael"},"content":"Step 3. `PostponeAction#act()` then updates the stored user\u0027s data."},{"lineNumber":311,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":312,"author":{"gitId":"scjx123"},"content":"Step 4. The postponed target task is returned to the user through `Ui`."},{"lineNumber":313,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":314,"author":{"gitId":"johanesrafael"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":315,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":316,"author":{"gitId":"scjx123"},"content":"![Postpone_Sequence_Diagram](Images/PostponeAction_Sequence_Diagram.png)"},{"lineNumber":317,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":318,"author":{"gitId":"chuhann"},"content":"### 5.7 Grade Feature"},{"lineNumber":319,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":320,"author":{"gitId":"scjx123"},"content":"This extends `TakeAction` to register modules as `isTaken` from `moduleList.txt`, output is then passed on to `Ui` for display. "},{"lineNumber":321,"author":{"gitId":"adinata15"},"content":"Additionally, it implements the following operations:"},{"lineNumber":322,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":323,"author":{"gitId":"adinata15"},"content":"* `GradeAction#act()` - Calculate the user CAP based on stored user grades / input modules."},{"lineNumber":324,"author":{"gitId":"adinata15"},"content":"* `GradeAction#prepare()` - Parse user command to suitable parameter for `GradeAction#act()` function."},{"lineNumber":325,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":326,"author":{"gitId":"adinata15"},"content":"Given below is an example usage scenario and how the grade feature mechanism behaves at each step."},{"lineNumber":327,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":328,"author":{"gitId":"adinata15"},"content":"Step 1. The user executes `grade GER1000 A-` command find his current CAP grade. Command is then parsed by `GradeAction#prepare()` to be passed as arguments for `GradeAction#act()`."},{"lineNumber":329,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":330,"author":{"gitId":"adinata15"},"content":"Step 2. `GradeAction#act()` takes in data prepared by `GradeAction#prepare()`."},{"lineNumber":331,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":332,"author":{"gitId":"adinata15"},"content":"Step 3. `GradeAction#act()` then retrieves module data from the `modulelist.txt` to determine module details."},{"lineNumber":333,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":334,"author":{"gitId":"scjx123"},"content":"Step 4. The grade is attributed to the corresponding modules and the response message is returned to the user through `Ui`."},{"lineNumber":335,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":336,"author":{"gitId":"adinata15"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":337,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":338,"author":{"gitId":"adinata15"},"content":"![Grade_Sequence_Diagram](Images/GradeSequenceFinal.png)"},{"lineNumber":339,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":340,"author":{"gitId":"scjx123"},"content":"### 5.8 Focus Feature"},{"lineNumber":341,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":342,"author":{"gitId":"scjx123"},"content":"The proposed focus mechanism is facilitated by `FocusAction`. It extends `Action` to execute the command given by the user, output is then passed on to `Ui` for display. "},{"lineNumber":343,"author":{"gitId":"johanesrafael"},"content":"Additionally, it implements the following operations:"},{"lineNumber":344,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":345,"author":{"gitId":"johanesrafael"},"content":"* `FocusAction#act()` - Sets the task flag by the chosen parameter."},{"lineNumber":346,"author":{"gitId":"johanesrafael"},"content":"* `FocusAction#prepare()` - Parse user command to suitable parameter for `PostponeAction#act()` function."},{"lineNumber":347,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":348,"author":{"gitId":"johanesrafael"},"content":"Given below is an example usage scenario and how the focus mechanism behaves at each step."},{"lineNumber":349,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":350,"author":{"gitId":"johanesrafael"},"content":"Step 1. The user executes `focus [task type]` command to filter based on task type. Command is then parsed by `FocusAction#prepare()` to be passed as arguments for `FocusAction#act()`."},{"lineNumber":351,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":352,"author":{"gitId":"johanesrafael"},"content":"Step 2. `FocusAction#act()` then sets flag in the data."},{"lineNumber":353,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":354,"author":{"gitId":"johanesrafael"},"content":"Step 3. Changed context is returned to inform the user through `Ui`."},{"lineNumber":355,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":356,"author":{"gitId":"johanesrafael"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":357,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":358,"author":{"gitId":"johanesrafael"},"content":"![Postpone_Sequence_Diagram](Images/Focus.png)"},{"lineNumber":359,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":360,"author":{"gitId":"scjx123"},"content":"## Appendix A. Product scope"},{"lineNumber":361,"author":{"gitId":"-"},"content":"### Target user profile"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"scjx123"},"content":" - needs to manage a significant number of schedules "},{"lineNumber":364,"author":{"gitId":"scjx123"},"content":" - prefer desktop apps over other types "},{"lineNumber":365,"author":{"gitId":"scjx123"},"content":" - can type fast"},{"lineNumber":366,"author":{"gitId":"scjx123"},"content":" - prefers typing to mouse interactions "},{"lineNumber":367,"author":{"gitId":"scjx123"},"content":" - is reasonably comfortable using CLI apps "},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Value proposition"},{"lineNumber":370,"author":{"gitId":"scjx123"},"content":"All in one app to track tasks and their dates, monitor productivity, and calculate cap. "},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"scjx123"},"content":"## Appendix B. User Stories"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"scjx123"},"content":"|Priority| As a ... | I want to ... | So that I can ...|"},{"lineNumber":375,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":376,"author":{"gitId":"scjx123"},"content":"| *** |Student before the start of semester|List the modules MC|Follow the recommended MC |"},{"lineNumber":377,"author":{"gitId":"scjx123"},"content":"| *** |Student before the start of semester|List of module available|Easily Choose which modules to take|"},{"lineNumber":378,"author":{"gitId":"scjx123"},"content":"| ** |Student before the start of semester|Find the modules either by keyword, module code, or even MC |Easily see the desired modules |"},{"lineNumber":379,"author":{"gitId":"scjx123"},"content":"| ** |Student before the start of semester|Select the modules but not taking it yet |Easily whether the MC fits my requirement |"},{"lineNumber":380,"author":{"gitId":"scjx123"},"content":"| *  |Student before the start of semester|Find out the details of the Module|To find out more about the modules.|"},{"lineNumber":381,"author":{"gitId":"scjx123"},"content":"| *** |Student before the start of semester|Take the desired modules|Mark the modules that I want to take as taken  |"},{"lineNumber":382,"author":{"gitId":"scjx123"},"content":"| *** |Student during the semester|Add tasks such as todo, deadline, and event into my list|Easily keep track of all the task I have to complete  |"},{"lineNumber":383,"author":{"gitId":"scjx123"},"content":"| ** |Student during the semester|Have a Reminder of which deadline is due soon|Ensure that no task is missed out  |"},{"lineNumber":384,"author":{"gitId":"scjx123"},"content":"| *** |Student during the semester|Add a task to modules |Easily know which tasks belong to which modules  |"},{"lineNumber":385,"author":{"gitId":"scjx123"},"content":"| *** |Student during the semester|Delete task once they are completed |Remove unnecessary task on the list |"},{"lineNumber":386,"author":{"gitId":"scjx123"},"content":"| ** |Student after the semester|Calculate the CAP of my modules|Easily find out my performance this semester |"},{"lineNumber":387,"author":{"gitId":"scjx123"},"content":"| * |Student after the semester|Clear the list of tasks and modules|Start afresh for the next semester |"},{"lineNumber":388,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":389,"author":{"gitId":"scjx123"},"content":"{More to be added}"},{"lineNumber":390,"author":{"gitId":"scjx123"},"content":"## Appendix C. Use Cases: "},{"lineNumber":391,"author":{"gitId":"scjx123"},"content":"This section describes the Use Cases for some of the features implemented in DOMNUS. "},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"scjx123"},"content":"**Use Case: Taking a module "},{"lineNumber":394,"author":{"gitId":"scjx123"},"content":"MSS:** "},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"scjx123"},"content":" 1. User requests to list all modules "},{"lineNumber":397,"author":{"gitId":"scjx123"},"content":" 2. DOMNUS shows a list of modules "},{"lineNumber":398,"author":{"gitId":"scjx123"},"content":" 3. User requests to mark a specific module as \u0027taken\u0027 "},{"lineNumber":399,"author":{"gitId":"scjx123"},"content":" 4. DOMNUS marks the module as taken"},{"lineNumber":400,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":401,"author":{"gitId":"scjx123"},"content":"Use case ends.\u003cbr\u003e"},{"lineNumber":402,"author":{"gitId":"scjx123"},"content":"**Extensions** \\"},{"lineNumber":403,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;3a. The module given is invalid\\"},{"lineNumber":404,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a.1Use case shows `[NOT FOUND]` message"},{"lineNumber":405,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 3\\"},{"lineNumber":406,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;3b. User adds in the wrong module \\"},{"lineNumber":407,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3b.1The `untake` command can be used to untake the taken module"},{"lineNumber":408,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":409,"author":{"gitId":"scjx123"},"content":"**Use Case: List MC**"},{"lineNumber":410,"author":{"gitId":"scjx123"},"content":"**MSS:**"},{"lineNumber":411,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":412,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":413,"author":{"gitId":"chuhann"},"content":" 1. User requests to list total MC on the current list."},{"lineNumber":414,"author":{"gitId":"scjx123"},"content":" 2. DOMNUS shows the total MC of the current list. The default list is the entire modules list."},{"lineNumber":415,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":416,"author":{"gitId":"scjx123"},"content":"Use case ends.\u003cbr\u003e "},{"lineNumber":417,"author":{"gitId":"scjx123"},"content":"**Extensions** "},{"lineNumber":418,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":419,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;1a. User not focusing on the correct list \\"},{"lineNumber":420,"author":{"gitId":"chuhann"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. DOMNUS shows the entire module list total MC instead of the \u0027taken\u0027 list MC"},{"lineNumber":421,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":422,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":423,"author":{"gitId":"scjx123"},"content":"## Appendix D. Non-Functional Requirements"},{"lineNumber":424,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":425,"author":{"gitId":"scjx123"},"content":"1.  Should work on any  _mainstream OS_  as long as it has Java  `11`  or above installed."},{"lineNumber":426,"author":{"gitId":"scjx123"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."},{"lineNumber":427,"author":{"gitId":"scjx123"},"content":"3.  A user with above-average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":428,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":429,"author":{"gitId":"scjx123"},"content":"_{More to be added}_"},{"lineNumber":430,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":431,"author":{"gitId":"scjx123"},"content":"## Appendix E. Glossary"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"scjx123"},"content":" - N-tier Architectural Style "},{"lineNumber":434,"author":{"gitId":"scjx123"},"content":"\t - In the n-tier style, high layers make use of services provided by lower layers. Lower layers are independent of higher layers. "},{"lineNumber":435,"author":{"gitId":"scjx123"},"content":" - Mainstream OS: Windows, Linux, Unix, OS-X"},{"lineNumber":436,"author":{"gitId":"scjx123"},"content":" - Private contact detail "},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"scjx123"},"content":"## Appendix F. Instructions for manual testing"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"scjx123"},"content":"1. Launch and Shutdown "},{"lineNumber":441,"author":{"gitId":"chuhann"},"content":"Step 1: Download the latest version of  `DOMNUS`  from  [Our Release Page](https://github.com/AY2021S1-CS2113-T13-2/tp/releases/tag/v1.0).\\"},{"lineNumber":442,"author":{"gitId":"scjx123"},"content":"Step 2: Copy the file to the folder you want to use as the home folder for your Mobile Nusmod.\\"},{"lineNumber":443,"author":{"gitId":"scjx123"},"content":"Step 3: Open the Command Prompt if you are running on Windows or Terminal if you are running on Mac OS.\\"},{"lineNumber":444,"author":{"gitId":"chuhann"},"content":"Step 4: Navigate to your home folder and type  **‘java -jar domnus.jar’**"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"scjx123"},"content":"2. Switching between Fancy and CLI "},{"lineNumber":447,"author":{"gitId":"scjx123"},"content":"Test case: `fancy`\u003cbr\u003e"},{"lineNumber":448,"author":{"gitId":"scjx123"},"content":"Expected: Switches to fancy mode of display \u003cbr\u003e"},{"lineNumber":449,"author":{"gitId":"scjx123"},"content":"Test case: `plain`\u003cbr\u003e"},{"lineNumber":450,"author":{"gitId":"scjx123"},"content":"Expected: Switches to plain mode of display\u003cbr\u003e"},{"lineNumber":451,"author":{"gitId":"scjx123"},"content":"Test case: `Fancy` ,`Plain`\u003cbr\u003e"},{"lineNumber":452,"author":{"gitId":"scjx123"},"content":"Expected: Error message due to cap sensitive. \u003cbr\u003e"},{"lineNumber":453,"author":{"gitId":"scjx123"},"content":"3. Focusing on a different list"},{"lineNumber":454,"author":{"gitId":"scjx123"},"content":"Test case: `focus mod`/`task`/`todo`/`deadline`/`event`/`selected`/`taken`\u003cbr\u003e"},{"lineNumber":455,"author":{"gitId":"scjx123"},"content":"           Expected: Shows the current list you are focused on. No list will be shown. \u003cbr\u003e"},{"lineNumber":456,"author":{"gitId":"scjx123"},"content":"Test case: `focus taken` \u003cbr\u003e"},{"lineNumber":457,"author":{"gitId":"scjx123"},"content":"Expected: Shows the current list of modules you have taken. \u003cbr\u003e"},{"lineNumber":458,"author":{"gitId":"scjx123"},"content":"Other incorrect focus commands to try: `focus 0` , `focus what?`, ... (focus on non-existent list) \u003cbr\u003e"},{"lineNumber":459,"author":{"gitId":"scjx123"},"content":"Expected: Error message due to invalid command. \u003cbr\u003e"},{"lineNumber":460,"author":{"gitId":"scjx123"},"content":"\t"},{"lineNumber":461,"author":{"gitId":"scjx123"},"content":"4. List Modules/Task"},{"lineNumber":462,"author":{"gitId":"scjx123"},"content":"Test case: `focus mod` -\u003e `list`\u003cbr\u003e"},{"lineNumber":463,"author":{"gitId":"scjx123"},"content":"Expected: Shows the list of modules. \u003cbr\u003e"},{"lineNumber":464,"author":{"gitId":"scjx123"},"content":"Test case: `focus task` -\u003e `list` \u003cbr\u003e"},{"lineNumber":465,"author":{"gitId":"scjx123"},"content":"Expected: Shows the current list of tasks. \u003cbr\u003e"},{"lineNumber":466,"author":{"gitId":"scjx123"},"content":"\t"},{"lineNumber":467,"author":{"gitId":"scjx123"},"content":"5. Find Modules "},{"lineNumber":468,"author":{"gitId":"scjx123"},"content":"Test case: `focus mod` -\u003e `find Engin`\u003cbr\u003e"},{"lineNumber":469,"author":{"gitId":"scjx123"},"content":"Expected: Shows the list of available modules with keyword \u0027Engin\u0027 \u003cbr\u003e"},{"lineNumber":470,"author":{"gitId":"scjx123"},"content":"Test case:  `focus mod` -\u003e `find 2113`\u003cbr\u003e"},{"lineNumber":471,"author":{"gitId":"scjx123"},"content":"Expected: Shows the list of modules with keyword \u00272113\u0027\u003cbr\u003e"},{"lineNumber":472,"author":{"gitId":"scjx123"},"content":"Test case: `focus task`-\u003e find deadline \u003cbr\u003e"},{"lineNumber":473,"author":{"gitId":"scjx123"},"content":"Expected: Show list of deadline modules "},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"scjx123"},"content":"6. Details of Modules "},{"lineNumber":476,"author":{"gitId":"scjx123"},"content":"Test cases: `detail CS2113`\u003cbr\u003e"},{"lineNumber":477,"author":{"gitId":"scjx123"},"content":"Expected: Shows Module code, name, mc, and description. \u003cbr\u003e"},{"lineNumber":478,"author":{"gitId":"scjx123"},"content":"Test cases: `detail 1`\u003cbr\u003e"},{"lineNumber":479,"author":{"gitId":"scjx123"},"content":"Expected: Shows the information of the 1st task based on the current list focused on. \u003cbr\u003e"},{"lineNumber":480,"author":{"gitId":"scjx123"},"content":"Test cases: `detail xyz` No detail of such item is found. \u003cbr\u003e"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"scjx123"},"content":"7. Take Modules "},{"lineNumber":483,"author":{"gitId":"scjx123"},"content":"Test cases: `focus mod` -\u003e `take 1 2` \u003cbr\u003e"},{"lineNumber":484,"author":{"gitId":"scjx123"},"content":"Expected: Takes the 1st and 2nd module on the module list.\u003cbr\u003e"},{"lineNumber":485,"author":{"gitId":"scjx123"},"content":"Test cases: `focus task` -\u003e `take 1 2` \u003cbr\u003e"},{"lineNumber":486,"author":{"gitId":"scjx123"},"content":"Expected: Task is not module, therefore it cannot be taken.\u003cbr\u003e"},{"lineNumber":487,"author":{"gitId":"scjx123"},"content":"Test cases: `focus mod` -\u003e `take CS2113` \u003cbr\u003e"},{"lineNumber":488,"author":{"gitId":"scjx123"},"content":"Expected: Mark CS2113 as taken.\u003cbr\u003e"},{"lineNumber":489,"author":{"gitId":"scjx123"},"content":"Test cases: `focus mod` -\u003e `take cs2113`\u003cbr\u003e"},{"lineNumber":490,"author":{"gitId":"scjx123"},"content":"Expected: Module not found as inputs are case sensitive. \u003cbr\u003e"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"adinata15"},"content":"8. Reminder \u003cbr\u003e"},{"lineNumber":493,"author":{"gitId":"scjx123"},"content":"Test cases: `reminder `\u003cbr\u003e"},{"lineNumber":494,"author":{"gitId":"scjx123"},"content":"Expected: Shows tasks that are due within 3 days. \u003cbr\u003e"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"adinata15"},"content":"9. Cap Calculation \u003cbr\u003e"},{"lineNumber":497,"author":{"gitId":"adinata15"},"content":"Test cases: `cap`\u003cbr\u003e"},{"lineNumber":498,"author":{"gitId":"scjx123"},"content":"Expected: Shows you the calculated cap from stored user data. \u003cbr\u003e"},{"lineNumber":499,"author":{"gitId":"adinata15"},"content":"Test cases: `cap -m CS2113 A+ EE2026 B CS1010 B-`\u003cbr\u003e"},{"lineNumber":500,"author":{"gitId":"adinata15"},"content":"Expected: Shows you the calculated cap from given input modules. \u003cbr\u003e"}],"authorContributionMap":{"johanesrafael":54,"TomLBZ":76,"chuhann":67,"-":24,"scjx123":236,"adinata15":43}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"# Domnus - An easy way to track your schedules!"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"![here](Images/Logo.PNG)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":" - This is a desktop tasks tracker application. It comes with a fancy and plain mode of display in which user can switch anytime between them."},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" - It is a Java application intended for students to track their modules, mc, daily task, as well as assignments for the individual modules. "},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"## Setting up in Intellij"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Domnus.java` file, right-click it, and choose `Run Domnus.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"    \u003e Task :compileJava UP-TO-DATE"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":"    \u003e Task :processResources UP-TO-DATE"},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"    \u003e Task :classes UP-TO-DATE"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"    "},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":"    \u003e Task :Domnus.main()"},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"    \t\tHello, I\u0027m Domnus. What can I do for you?"},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":"    \t\tHere are the tasks due within 3 days: "},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"    \t\tNo task within 3 days from now"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"    \t____________________________________________________________"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"   Type some word and press enter to let the execution proceed to the end."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"## Build automation using Gradle"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"## Testing"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"### I/O redirection tests"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"### JUnit tests"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"## Checkstyle"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"## CI using GitHub Actions"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"## Documentation"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"2. Click on the `settings` tab."},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"3. Scroll down to the `GitHub Pages` section."},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"4. Set the `source` as `master branch /docs folder`."},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"5. Optionally, use the `choose a theme` button to choose a theme for your documentation."},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"## Site Map"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":"* [User Guide](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/UserGuide.md)"},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":"* [Developer Guide](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/DeveloperGuide.md)"},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"* [About Us](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/AboutUs.md)"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"* [Contact Us](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/ContactUs.md)"}],"authorContributionMap":{"TomLBZ":54,"-":2,"scjx123":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":"![here](Images/Logo.PNG)"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"Domsun is a **Desktop Command Line Interface (CLI) program that allows users to manage tasks and modules.** \u003cbr\u003e"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"Domsun is targeted at busy NUS students who want to manage their tasks and modules well to achieve their dream CAP. \u003cbr\u003e"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"Users will be able to browse and select modules, create and arrange tasks, add tasks to modules,\u003cbr\u003e"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"create reminders, calculate and set goals for their MCs / CAPs."},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":"## Contents"},{"lineNumber":11,"author":{"gitId":"chuhann"},"content":"- [Preliminaries](#preliminaries)"},{"lineNumber":12,"author":{"gitId":"chuhann"},"content":"  * [Installation](#installation)"},{"lineNumber":13,"author":{"gitId":"chuhann"},"content":"  * [Running the program](#running-the-program)"},{"lineNumber":14,"author":{"gitId":"chuhann"},"content":"  * [Domsun Tutorial](#domsun-tutorial)"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":"- [General Functions](#general-functions)"},{"lineNumber":16,"author":{"gitId":"chuhann"},"content":"- [Command Summary](#command-summary)"},{"lineNumber":17,"author":{"gitId":"chuhann"},"content":"    * [`Daily Tasks`](#daily-tasks)"},{"lineNumber":18,"author":{"gitId":"chuhann"},"content":"    * [`Module Planner`](#module-planner)"},{"lineNumber":19,"author":{"gitId":"chuhann"},"content":"    * [`General Features`](#general-features)"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"- [Usage](#usage)"},{"lineNumber":21,"author":{"gitId":"chuhann"},"content":"    * [`Daily Tasks`](#todo---add-a-todo-to-the-task-list)"},{"lineNumber":22,"author":{"gitId":"chuhann"},"content":"        * [`todo` - Add a todo to the task list](#todo---add-a-todo-to-the-task-list)"},{"lineNumber":23,"author":{"gitId":"chuhann"},"content":"        * [`deadline` - Add a deadline to the task list](#deadline---add-a-deadline-to-the-task-list)"},{"lineNumber":24,"author":{"gitId":"chuhann"},"content":"        * [`event` - Add an event to the task list](#event---add-an-event-to-the-task-list)"},{"lineNumber":25,"author":{"gitId":"chuhann"},"content":"        * [`list` - Print a list of added tasks](#list---print-a-list-of-added-tasks)"},{"lineNumber":26,"author":{"gitId":"chuhann"},"content":"        * [`done` - Mark a task as done](#done---mark-a-task-as-done)"},{"lineNumber":27,"author":{"gitId":"chuhann"},"content":"        * [`undone` - Mark a task as undone](#undone---mark-a-task-as-undone)"},{"lineNumber":28,"author":{"gitId":"chuhann"},"content":"        * [`find` - Find an event in the task list](#find---find-an-event-in-the-task-list)"},{"lineNumber":29,"author":{"gitId":"chuhann"},"content":"        * [`postpone` - Postpone a task to a later date](#postpone---postpone-a-task-by-index)"},{"lineNumber":30,"author":{"gitId":"chuhann"},"content":"        * [`reminder` - Print tasks that are due soon](#reminder---print-tasks-that-are-due-soon)"},{"lineNumber":31,"author":{"gitId":"chuhann"},"content":"        * [`snooze` - Delays reminder popup](#snooze---delays-reminder-popup)"},{"lineNumber":32,"author":{"gitId":"chuhann"},"content":"    * [`Module Planner`](#take---take-module)"},{"lineNumber":33,"author":{"gitId":"chuhann"},"content":"        * [`take` - Take module(s)](#take---take-module)"},{"lineNumber":34,"author":{"gitId":"chuhann"},"content":"        * [`untake` - Untake module(s)](#untake---untake-module)"},{"lineNumber":35,"author":{"gitId":"chuhann"},"content":"        * [`sel` - Select items by index](#sel---select-items-by-index)"},{"lineNumber":36,"author":{"gitId":"chuhann"},"content":"        * [`unsel` - Unselect items](#unsel---unselect-items)"},{"lineNumber":37,"author":{"gitId":"chuhann"},"content":"        * [`detail` - Prints item detail](#detail---prints-item-detail)"},{"lineNumber":38,"author":{"gitId":"chuhann"},"content":"        * [`grade` - Add grade to course or module](#grade---add-grade-to-course-or-module)"},{"lineNumber":39,"author":{"gitId":"chuhann"},"content":"        * [`goal` - Calculate how far the user is from his/her target CAP](#goal---calculate-how-far-the-user-is-from-his-or-her-target-cap)  "},{"lineNumber":40,"author":{"gitId":"chuhann"},"content":"        * [`mc` - Prints MCs](#mc---prints-mcs)"},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":"        * [`cap` - Prints CAPs](#cap---prints-caps)"},{"lineNumber":42,"author":{"gitId":"chuhann"},"content":"    * [`General Features`](#add---add-task-to-module)"},{"lineNumber":43,"author":{"gitId":"chuhann"},"content":"        * [`add` - Add task(s) to module(s)](#add---add-task-to-module)"},{"lineNumber":44,"author":{"gitId":"chuhann"},"content":"        * [`clear` - Clear the task list](#clear---clear-the-task-list)"},{"lineNumber":45,"author":{"gitId":"chuhann"},"content":"        * [`delete` - Delete a task from the task list](#delete---delete-a-task-from-the-task-list)"},{"lineNumber":46,"author":{"gitId":"chuhann"},"content":"        * [`edit` - Modify attributes of an item](#edit---modify-attributes-of-an-item)"},{"lineNumber":47,"author":{"gitId":"chuhann"},"content":"        * [`focus` - Change the context of the program](#focus---change-the-context-of-the-program)"},{"lineNumber":48,"author":{"gitId":"chuhann"},"content":"        * [`load` - Loads linked tasks](#load---loads-linked-tasks) "},{"lineNumber":49,"author":{"gitId":"chuhann"},"content":"        * [`stats` - Prints Statistics](#stats---prints-statistics)"},{"lineNumber":50,"author":{"gitId":"chuhann"},"content":"        * [`help` - Print help text of the commands](#help---print-help-text-of-the-commands)"},{"lineNumber":51,"author":{"gitId":"chuhann"},"content":"        * [`fancy` - Switch the UI to the fancy mode (GUI-like CLI)](#fancy---switch-the-ui-to-the-fancy-mode)"},{"lineNumber":52,"author":{"gitId":"chuhann"},"content":"        * [`plain` - Switch the UI to the plain mode (pure-text CLI)](#plain---switch-the-ui-to-the-plain-mode)"},{"lineNumber":53,"author":{"gitId":"chuhann"},"content":"        * [`next` - Switch the target region to the next page ***(GUI mode only)***](#next---switch-the-target-region-to-the-next-page)"},{"lineNumber":54,"author":{"gitId":"chuhann"},"content":"        * [`prev` - Switch the target region to the previous page ***(GUI mode only)***](#prev---switch-the-target-region-to-the-previous-page)"},{"lineNumber":55,"author":{"gitId":"adinata15"},"content":"        * [`unknown` - Prints error message](#unknown---prints-error-message)"},{"lineNumber":56,"author":{"gitId":"chuhann"},"content":"        * [`bye` - Quit the program](#bye---quit-the-program)"},{"lineNumber":57,"author":{"gitId":"adinata15"},"content":"- [Triggering the syntax reminder](#triggering-the-syntax-reminder)"},{"lineNumber":58,"author":{"gitId":"adinata15"},"content":"- [FAQ](#faq)"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"adinata15"},"content":"## Preliminaries"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"adinata15"},"content":"### Installation"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":65,"author":{"gitId":"adinata15"},"content":"2. Download the latest version of `Domsun` from [Our Release Page](https://github.com/AY2021S1-CS2113-T13-2/tp/releases)."},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"3. If you are on Mac or Linux platforms, please ignore Step 4 to Step 6. "},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"4. If you are on Windows platform, we recommend using ***Windows Terminal*** instead of cmd.exe:\u003cbr\u003e"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"![windows terminal](Images/winTerm.png)"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"\u003cbr\u003eIf you do not have Windows Terminal, try it out! It is fast and powerful, and enables the full features"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"of ANSI text rendering by default, which our Domsun will be utilising."},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"5. If you insist on using `cmd.exe` as your terminal on Windows, it also works, but you need "},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":" some extra work by doing the following steps:"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    - Type `regedit` in your Search box, and click `Run as Administrator`:\u003cbr\u003e"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    ![regedit](Images/regedit.png)"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    \u003cbr\u003eYou can use other methods"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"    to open your registry editor as well."},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    - Locate `Computer\\HKEY_CURRENT_USER\\Console`:\u003cbr\u003e"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"    ![hkey console](Images/hkeyConsole.png)"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    - Create a new `DWORD` entry in the registry table (right click on the right) named `VirtualTerminalLevel` "},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    if it is not present yet:\u003cbr\u003e"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"    ![dword](Images/dword.png)"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    - Right click on the value you have just created, and click on **`Modify`**:\u003cbr\u003e"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    ![dwordmod](Images/dwordMod.png)"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"    - Modify the value to be `00000001`:\u003cbr\u003e"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"    ![dwdvalue](Images/dwdvalue.png)"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"6. Restart your cmd.exe by closing all cmd windows and re-open cmd."},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    - *What did you just do?*"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        1. You just enabled programs opened through cmd.exe to inherit ANSI rendering options from cmd.exe, which"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        is by default off. (The ANSI rendering for cmd.exe itself is by default ***on***.)"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        1. Microsoft used to enable this inheritance option by default. It is completely harmless."},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        1. However, in recent Windows versions Microsoft decided to move this feature over to their"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"        newly developed Windows Terminal (which is cross-platform and more advanced. Yes it supports Linux commands as well)."},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"    - *Why do you need such an option?*"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"        1. ANSI escape codes are responsible for the colors and font settings in terminal applications."},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"        2. That is how the `htop` in Linux shows a colored UI."},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        3. Without enabling this option, all colors and fonts will return to their original form in plain text, "},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        something like this:\u003cbr\u003e"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        ![ansi](Images/ansicodes.png)\u003cbr\u003e"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"        4. We believe that you will be more comfortable with the option on... something like this:\u003cbr\u003e"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        ![newui](Images/newUI.png)\u003cbr\u003e"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    - *What if you failed to do the previous steps?*"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        1. No worries. Our Domsun starts up in plain text mode by default on Windows platform, so you will see something like this:\u003cbr\u003e"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        ![textui](Images/textui.png)\u003cbr\u003e"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        2. The plain ui is perfectly usable with exactly the same functionalities as the colored one."},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        3. If you have succeeded in following the previous steps, you should be able to type `fancy` command to switch"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        to the colored UI, and type `plain` command to switch back to plain text."},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        4. More on commands later :)"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"7. Congratulations! You\u0027re all set!"},{"lineNumber":109,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":110,"author":{"gitId":"adinata15"},"content":"\u003e Java 11 and above is highly recommended, although Domsun might run on a lower version."},{"lineNumber":111,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":112,"author":{"gitId":"adinata15"},"content":"### Running the program"},{"lineNumber":113,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":114,"author":{"gitId":"adinata15"},"content":"Open your command line or terminal and navigate to the folder where you downloaded the jar file (e.g., `~/downloads`). "},{"lineNumber":115,"author":{"gitId":"adinata15"},"content":"Then simply run the command `java -jar domsun.jar`:"},{"lineNumber":116,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":117,"author":{"gitId":"adinata15"},"content":"```batch"},{"lineNumber":118,"author":{"gitId":"adinata15"},"content":"$ cd ~/downloads"},{"lineNumber":119,"author":{"gitId":"adinata15"},"content":"$ ls "},{"lineNumber":120,"author":{"gitId":"adinata15"},"content":"domsun.jar"},{"lineNumber":121,"author":{"gitId":"adinata15"},"content":"$ java -jar domsun.jar"},{"lineNumber":122,"author":{"gitId":"adinata15"},"content":"```"},{"lineNumber":123,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":124,"author":{"gitId":"adinata15"},"content":"\u003e Note: You can also run Domsun by double clicking the `domsun.jar` file directly."},{"lineNumber":125,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":126,"author":{"gitId":"scjx123"},"content":"### Domsun Tutorial "},{"lineNumber":127,"author":{"gitId":"scjx123"},"content":"As a beginning, here is how Domsun works. It has 3 lists that you should take note of as shown below. (The lists shown are non-exhaustive, as there are other dynamic lists that are created based on the `focus` command. Do refer to `focus` section of this User Guide for more details). "},{"lineNumber":128,"author":{"gitId":"scjx123"},"content":"![here](Images/Overview1.PNG)"},{"lineNumber":129,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"1. `focus` command focuses the app onto the list of tasks that you currently have. When starting the program for the first time, such a task list will be empty and you can create your own tasks using the `todo`, `event` or `deadline` commands. More on commands in later sections."},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"2. Likewise, `focus mod` command focuses the app on the entire list of modules available in NUS, while `focus taken` applies a filter to the list of all modules, and collect all the taken modules into a dynamic list (a list of all your taken modules). There are other options available for `focus` command, such as `focus selected`. More on that later."},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"3. To add a task under a module, you may enter the command `add -task 1 3 -mod CS2113`. 1 and 3 here are the ***indices*** of the tasks in ***your current list of focus***. So be sure to have some task created and are focusing on the correct list before typing this command. "},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"4. To mark modules as \u0027taken\u0027, you may enter `take CS2113 CS1010`. Alternatively, you may use the indices method as before such as `take 1 4` to take the 1st and 2nd module available on the module list while focusing on such list by using `focus mod` first."},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"5. The `list` commands follows the app\u0027s current focus. If it is focusing on list of tasks, typing `list` will show all tasks. Likewise for modules and taken and more. "},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"6. Typing `detail 1` displays the details of the item ***in your current list of focus*** that has index 1. For example, when focusing on tasks list, this will display the details of the 1st task. "},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"7. Similarly, `detail 2` will display different results depending on your current ***focus*** as the index 2 represents Module CG2027 if you are focusing on `mod`, and represents Module CS1010 if you are focusing on `taken`. "},{"lineNumber":137,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":138,"author":{"gitId":"scjx123"},"content":"**A to note before venturing into the libraries of commands that we have.**\u003cbr\u003e "},{"lineNumber":139,"author":{"gitId":"scjx123"},"content":"You can switch between fancy mode display, and plain display anytime during the program. During list command, you will be able to toggle between pages of fancy by using prev and next However, the current version of fancy mode is still in beta, hence, it is expected to not be able to fully display certain commands that are too long. such as help, detail,mc etc. Do look forward to the next update!"},{"lineNumber":140,"author":{"gitId":"scjx123"},"content":"![here](Images/Overview2.PNG)\u003cbr\u003e"},{"lineNumber":141,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":142,"author":{"gitId":"scjx123"},"content":"**Syntax Formats**"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"- Different commands update different regions of the fancy UI. Most noticeably, `list` command only updates the upper region (the item list region), while `help` command only updates the bottom region (the text region)."},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"- This is designed so that you will be able to refer to your text region when you are operating on the item list, without worrying that the text below will be flushed away."},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"- For example, if you did commands wrongly, the text region will display `invalid command` error and show the correct syntax. When you are browsing through the list you will be able to refer to the syntax below. Please do not mistake that kept message as a newly generated error."},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"- You will be able to toggle between pages of fancy by using `prev` and `next` if you have followed the [Installation](#installation) steps successfully, or if you are on Mac or Linux, or if you are on Windows but using non-integrated terminals such as gitbash or Windows Terminal. Otherwise, if you are using cmd.exe (command line) or ps.exe (PowerShell) on Windows, please stick with plain text UI."},{"lineNumber":147,"author":{"gitId":"adinata15"},"content":"- For each feature syntax, each type of symbols represent different explanation of the syntax.\u003cbr\u003e"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"    - The plain text (`example`) represents compulsory names. For example, if `do -stuff [index]` is shown in the Syntax, you must type exactly `do -stuff`, before typing any index."},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"    - The square bracket (`[]`) represents parameters. Do **not** type the square bracket characters themselves in when using the feature. For example:\u003cbr\u003e"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"    In `help [target]`, `help` is a compulsory name, and `target` is its parameter. You can used any allowed name as a `target`, depending on what command you are using. For options of choice of the parameter, you can refer to the `Notes` section of help text from `help`, by typing `help help`."},{"lineNumber":151,"author":{"gitId":"adinata15"},"content":"    - The round bracket (`()`) represents additional explanation of the parameter. For example:\u003cbr\u003e"},{"lineNumber":152,"author":{"gitId":"adinata15"},"content":"    In `detail [module code (for modules only) / index]`, `for modules only` is simply further explanation of the `module code` parameter. Usage example refer to help text from `help` feature."},{"lineNumber":153,"author":{"gitId":"adinata15"},"content":"    - The three dots (`...`) represents that the parameter can be linked/chained together infinitely. For example:\u003cbr\u003e"},{"lineNumber":154,"author":{"gitId":"adinata15"},"content":"    In `grade [index / code (for modules only)] [letter grade] ...`, `grade` can be followed by continuous list of `[index / code (for modules only)] [letter grade]`.  Usage example refer to help text from `help` feature."},{"lineNumber":155,"author":{"gitId":"adinata15"},"content":"    "},{"lineNumber":156,"author":{"gitId":"adinata15"},"content":"## General Functions "},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":158,"author":{"gitId":"adinata15"},"content":"### Addition and removal of tasks"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"The program allows user to add or delete tasks from the task list.\u003cbr\u003e"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"The program also provides shortcuts such as the `clear` command to delete tasks quickly."},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":162,"author":{"gitId":"adinata15"},"content":"### Mark tasks as done or undone"},{"lineNumber":163,"author":{"gitId":"scjx123"},"content":"The program allows users to mark tasks as done (denoted by `[V]`) or undone (denoted by `[X]`)."},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":165,"author":{"gitId":"adinata15"},"content":"### List tasks and reorder them by their ***date*** field"},{"lineNumber":166,"author":{"gitId":"scjx123"},"content":"The program allows users to list tasks in ascending order or descending order with respect to their ***date*** values.\u003cbr\u003e"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"The program also allows the user to filter the task list and only display tasks within a specified date.\u003cbr\u003e"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":" (this feature only applies to items with a valid parsable date, more on that later)"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":170,"author":{"gitId":"scjx123"},"content":"### Deadlines, Events, and ToDo\u0027s"},{"lineNumber":171,"author":{"gitId":"scjx123"},"content":"The program allows users to create 3 different kinds of tasks, *deadlines*, *events*, and *todos*.\u003cbr\u003e"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"*deadline* and *event* consists of both *description* and *date*, while *todo* does not contain *date*.\u003cbr\u003e"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"The *date* field consists of a *date* part (such as `Oct 13 1998`), and a *time* part (such as `00:00`).\u003cbr\u003e"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"If the *time* part is omitted during creation of the task, it will be set by default to 00:00.\u003cbr\u003e"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"You can use `postpone` or `edit` commands to change the date field later. (Not recommended. More on that later)"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":177,"author":{"gitId":"adinata15"},"content":"### Auto-save and auto-load"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"The program saves the tasks list automatically every time the list changes. \u003cbr\u003e"},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"When the program loads up, it looks for the last saved tasks list first and tries to load it."},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":181,"author":{"gitId":"adinata15"},"content":"### Syntax reminder"},{"lineNumber":182,"author":{"gitId":"scjx123"},"content":"The program can remind the user of the syntax of a command if the command is correct but the wrong syntax is present."},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":184,"author":{"gitId":"adinata15"},"content":"### Module operations"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"The program allows users to list modules, mark modules as taken or untaken, and score grades for each module."},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":187,"author":{"gitId":"adinata15"},"content":"### Find function"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"The program allows users to find items (tasks or modules) by keyword using the `find` command. More on that later."},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":190,"author":{"gitId":"adinata15"},"content":"### Dynamic target"},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"The program operates data dynamically. Users can operate on items as-is in the displayed sequence,\u003cbr\u003e"},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"and need not follow the sequence of task creation or module addition. \u003cbr\u003e"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"For example, index `1` always refers to the first item in"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":" the list you are ***currently focusing on***, which can be dynamically updated. You do not have to remember which task was the one you added first."},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"### GUI inside CLI (fancy UI mode)"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"The program has a fancy UI mode that accomplishes a GUI-like CLI interface using the ANSI escape code sequence.\u003cbr\u003e "},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"The user can use `fancy` to switch to the GUI mode and use `plain` to switch to plain text CLI mode."},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":200,"author":{"gitId":"adinata15"},"content":"### Link tasks to Modules"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"The program allows users to add some tasks to modules using the `add` command.\u003cbr\u003e"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"The tasks added to a module will appear in the module\u0027s `tasks` field, which can be viewed using the `detail` command. More on that later.\u003cbr\u003e"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"The tasks in the module\u0027s `tasks` field does not affect the main task list."},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":205,"author":{"gitId":"adinata15"},"content":"### Reminders"},{"lineNumber":206,"author":{"gitId":"scjx123"},"content":"The program allows users to set reminders at a certain time, or remind themselves of the most urgent tasks on start-up."},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":208,"author":{"gitId":"chuhann"},"content":"## Command Summary"},{"lineNumber":209,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":210,"author":{"gitId":"chuhann"},"content":"A cheat sheet of commonly used commands:"},{"lineNumber":211,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":212,"author":{"gitId":"chuhann"},"content":"### Daily Tasks"},{"lineNumber":213,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":214,"author":{"gitId":"chuhann"},"content":"|**Action** | **Format**| **Examples**|"},{"lineNumber":215,"author":{"gitId":"chuhann"},"content":"|------------|-------------|-------------|"},{"lineNumber":216,"author":{"gitId":"chuhann"},"content":"|**todo**|`todo [description]`|`todo borrow book`|"},{"lineNumber":217,"author":{"gitId":"chuhann"},"content":"|**deadline**|`deadline [description] -by [time]`|`deadline project submission -by 21/9/15 1:12`|"},{"lineNumber":218,"author":{"gitId":"chuhann"},"content":"|**event**|`event [description] -at [time]`|`event concert -at May 13 2020 8:00`|"},{"lineNumber":219,"author":{"gitId":"chuhann"},"content":"|**list**|`list date [asc / desc / spec “date”]`|`list date asc`|"},{"lineNumber":220,"author":{"gitId":"chuhann"},"content":"|**done**|`done [index]`|`done 2`|"},{"lineNumber":221,"author":{"gitId":"chuhann"},"content":"|**undone**|`undone [index]`|`undone 2`|"},{"lineNumber":222,"author":{"gitId":"chuhann"},"content":"|**find**|`find [keyword]`|`find exam`|"},{"lineNumber":223,"author":{"gitId":"chuhann"},"content":"|**postpone**| `postpone [index]`|`postpone 1`|"},{"lineNumber":224,"author":{"gitId":"chuhann"},"content":"|**reminder**|`reminder [on/off]` |`reminder`|"},{"lineNumber":225,"author":{"gitId":"chuhann"},"content":"|**snooze**|`snooze`||"},{"lineNumber":226,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":227,"author":{"gitId":"chuhann"},"content":"### Module Planner"},{"lineNumber":228,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":229,"author":{"gitId":"chuhann"},"content":"|**Action** | **Format**| **Examples**|"},{"lineNumber":230,"author":{"gitId":"chuhann"},"content":"|------------|-------------|-------------|"},{"lineNumber":231,"author":{"gitId":"chuhann"},"content":"|**take**|`take [index / module code]`|`take CS2113T`|"},{"lineNumber":232,"author":{"gitId":"chuhann"},"content":"|**untake**|`untake [index / module code]`|`untake CS2113T`|"},{"lineNumber":233,"author":{"gitId":"chuhann"},"content":"|**sel**|`sel [index / module code]`|`sel 1 2 3`|"},{"lineNumber":234,"author":{"gitId":"chuhann"},"content":"|**unsel**|`unsel [index / module code]`|`unsel CS1010 CS2113`|"},{"lineNumber":235,"author":{"gitId":"chuhann"},"content":"|**detail**|`detail [index / module code]`|`detail CS2113T`|"},{"lineNumber":236,"author":{"gitId":"chuhann"},"content":"|**grade**|`grade [-option] [module] [grade] {[module] [grade]...}`|`grade -a CS2113 A CG1112 A-`|"},{"lineNumber":237,"author":{"gitId":"chuhann"},"content":"|**goal**|`goal [-option] [total MC] [target CAP] [taken MC] [current CAP]`|`goal -c 160 4.9 100 4.5`|"},{"lineNumber":238,"author":{"gitId":"chuhann"},"content":"|**mc**|`mc [-option] [-details]`|`mc -p`|"},{"lineNumber":239,"author":{"gitId":"chuhann"},"content":"|**cap**|`cap [-option] [module] [grade] {[module] [grade]...}`|`cap -m CS2113 A CG1112 A-`|"},{"lineNumber":240,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":241,"author":{"gitId":"chuhann"},"content":"### General Features"},{"lineNumber":242,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":243,"author":{"gitId":"chuhann"},"content":"|**Action** | **Format**| **Examples**|"},{"lineNumber":244,"author":{"gitId":"chuhann"},"content":"|------------|-------------|-------------|"},{"lineNumber":245,"author":{"gitId":"chuhann"},"content":"|**add**|`add -task [index] -mod [module code]`|`add -task 1 -mod CS2113`|"},{"lineNumber":246,"author":{"gitId":"chuhann"},"content":"|**clear** | `clear`||"},{"lineNumber":247,"author":{"gitId":"chuhann"},"content":"|**delete**|`delete [index]`|`delete 2`|"},{"lineNumber":248,"author":{"gitId":"chuhann"},"content":"|**edit**|`edit [-mod / -task] [index / code (for module only)]`|`edit -mod CS2113 grade\u003dA -task 1 description\u003ddo_homework type\u003devent`|"},{"lineNumber":249,"author":{"gitId":"chuhann"},"content":"|**focus**|`focus [deadline / todo / event / task / mod / selected / taken]`|`focus deadline`|"},{"lineNumber":250,"author":{"gitId":"chuhann"},"content":"|**load**| `load [module code] [task_string]`| `load EE2028 [D][V]_Exam_(by:_Jan_11_2011_11:11)`|"},{"lineNumber":251,"author":{"gitId":"chuhann"},"content":"|**stats**|`stats [target]`| `stats`|"},{"lineNumber":252,"author":{"gitId":"chuhann"},"content":"|**help**|`help [options]`|`help deadline`|"},{"lineNumber":253,"author":{"gitId":"chuhann"},"content":"|**fancy**|`fancy [option]`|`fancy`|"},{"lineNumber":254,"author":{"gitId":"chuhann"},"content":"|**plain**|`plain [option]`|`plain`|"},{"lineNumber":255,"author":{"gitId":"chuhann"},"content":"|**next**|`next [option]`|`next`|"},{"lineNumber":256,"author":{"gitId":"chuhann"},"content":"|**prev**|`prev [option]`|`prev`|"},{"lineNumber":257,"author":{"gitId":"chuhann"},"content":"|**bye**|`bye`||"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":259,"author":{"gitId":"chuhann"},"content":"## Usage"},{"lineNumber":260,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":261,"author":{"gitId":"chuhann"},"content":"## Features - Daily Tasks "},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":263,"author":{"gitId":"chuhann"},"content":"### `todo` - Add a todo task to the task list"},{"lineNumber":264,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":265,"author":{"gitId":"scjx123"},"content":"Typing `todo` allows the program to parse the user\u0027s input and create a ***todo*** object with "},{"lineNumber":266,"author":{"gitId":"johanesrafael"},"content":"specified *description*. It will be appended to the end of the task list.\u003cbr\u003e"},{"lineNumber":267,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":268,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":269,"author":{"gitId":"scjx123"},"content":"1. Todo description parameter here is compulsory."},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":273,"author":{"gitId":"chuhann"},"content":"`todo [description]`"},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":277,"author":{"gitId":"chuhann"},"content":"`todo class`"},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":283,"author":{"gitId":"chuhann"},"content":"        Got it. I\u0027ve added this task:"},{"lineNumber":284,"author":{"gitId":"chuhann"},"content":"        [T][X] class"},{"lineNumber":285,"author":{"gitId":"chuhann"},"content":"        Now you have 1 tasks in the list."},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":289,"author":{"gitId":"chuhann"},"content":"### `deadline` - Add a deadline to the task list"},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":291,"author":{"gitId":"scjx123"},"content":"Typing `deadline` allows the program to parse the user\u0027s input and create a ***deadline*** object with "},{"lineNumber":292,"author":{"gitId":"johanesrafael"},"content":"specified *description* and *time*. It will be appended to the end of the task list. \u003cbr\u003e"},{"lineNumber":293,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":294,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":295,"author":{"gitId":"johanesrafael"},"content":"1. Deadline description and time parameters here are compulsory."},{"lineNumber":296,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":297,"author":{"gitId":"chuhann"},"content":"Syntax: "},{"lineNumber":298,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":299,"author":{"gitId":"chuhann"},"content":"`deadline [description] -by [time]`"},{"lineNumber":300,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":301,"author":{"gitId":"TomLBZ"},"content":"Example of usage:"},{"lineNumber":302,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":303,"author":{"gitId":"chuhann"},"content":"`deadline ddl -by 21/9/15 1:12`"},{"lineNumber":304,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":305,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":306,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":307,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":308,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":309,"author":{"gitId":"chuhann"},"content":"        Got it. I\u0027ve added this task:"},{"lineNumber":310,"author":{"gitId":"chuhann"},"content":"        [D][X] ddl (by: Sep 15 2021 01:12)"},{"lineNumber":311,"author":{"gitId":"chuhann"},"content":"        Now you have 1 tasks in the list."},{"lineNumber":312,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":313,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":314,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":315,"author":{"gitId":"chuhann"},"content":"### `event` - Add an event to the task list"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"scjx123"},"content":"Typing `event` allows the program to parse the user\u0027s input and create an ***event*** object with "},{"lineNumber":318,"author":{"gitId":"johanesrafael"},"content":"specified *description* and *time*. It will be appended to the end of the task list. \u003cbr\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":321,"author":{"gitId":"johanesrafael"},"content":"1. Event description and time parameters here are compulsory."},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"chuhann"},"content":"`event [description] -at [time]`"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":328,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":329,"author":{"gitId":"chuhann"},"content":"`event midterm exam -at May 13 2020 8:00`"},{"lineNumber":330,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":331,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":332,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":333,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":334,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":335,"author":{"gitId":"chuhann"},"content":"        Got it. I\u0027ve added this task:"},{"lineNumber":336,"author":{"gitId":"chuhann"},"content":"        [E][X] midterm exam (at: May 13 2020 08:00)"},{"lineNumber":337,"author":{"gitId":"chuhann"},"content":"        Now you have 1 tasks in the list."},{"lineNumber":338,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":339,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":340,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":341,"author":{"gitId":"chuhann"},"content":"### `list` - Print a list of added tasks"},{"lineNumber":342,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":343,"author":{"gitId":"chuhann"},"content":"Typing `list` commands the program to print either all added tasks or tasks at a specified *date*.\u003cbr\u003e"},{"lineNumber":344,"author":{"gitId":"chuhann"},"content":"The user can also control how the tasks printed are ordered with respect to *date*:\u003cbr\u003e"},{"lineNumber":345,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":346,"author":{"gitId":"chuhann"},"content":"The `asc` parameter tells the program to list tasks in ascending order with respect to their *date* field.\u003cbr\u003e"},{"lineNumber":347,"author":{"gitId":"chuhann"},"content":"The `desc` parameter tells the program to list tasks in descending order with respect to their *date* field.\u003cbr\u003e"},{"lineNumber":348,"author":{"gitId":"chuhann"},"content":"The `spec` parameter tells the program to only list tasks with the specified value of the *date* field.\u003cbr\u003e"},{"lineNumber":349,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":350,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":351,"author":{"gitId":"chuhann"},"content":"1. When updates are done on the list (e.g : new \"todo\" task is added), \"list\" need to be run again to see the result of the update. "},{"lineNumber":352,"author":{"gitId":"chuhann"},"content":"2. There are 2 main list in this application (i.e. task and module list). For more explanation, refer to the diagram on \"Domsun Tutorial\" on the UserGuide. "},{"lineNumber":353,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":354,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":355,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":356,"author":{"gitId":"chuhann"},"content":"`list` \u003cbr\u003e `list date [asc / desc / spec \"date\"]`, where `\"date\"` can be in any common date format."},{"lineNumber":357,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":358,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":359,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":360,"author":{"gitId":"chuhann"},"content":"`list`"},{"lineNumber":361,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":362,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":363,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":364,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":365,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":366,"author":{"gitId":"chuhann"},"content":"        Here is the list of tasks:"},{"lineNumber":367,"author":{"gitId":"chuhann"},"content":"        1.[D][X] math exam (by: Oct 15 2020 10:30)"},{"lineNumber":368,"author":{"gitId":"chuhann"},"content":"        2.[D][X] CS exam (by: Oct 18 2020 15:00)"},{"lineNumber":369,"author":{"gitId":"chuhann"},"content":"        3.[E][X] exam review session (at: Oct 01 2020 08:00)"},{"lineNumber":370,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":371,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":372,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":373,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":374,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":375,"author":{"gitId":"chuhann"},"content":"`list date asc`"},{"lineNumber":376,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":377,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":378,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":379,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":380,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":381,"author":{"gitId":"chuhann"},"content":"        Here is the list of tasks:"},{"lineNumber":382,"author":{"gitId":"chuhann"},"content":"        1.[E][X] exam review session (at: Oct 01 2020 08:00)"},{"lineNumber":383,"author":{"gitId":"chuhann"},"content":"        2.[D][X] math exam (by: Oct 15 2020 10:30)"},{"lineNumber":384,"author":{"gitId":"chuhann"},"content":"        3.[D][X] CS exam (by: Oct 18 2020 15:00)"},{"lineNumber":385,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":386,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":387,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":388,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":389,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":390,"author":{"gitId":"chuhann"},"content":"`list date spec 10/15/20`"},{"lineNumber":391,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":392,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":393,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":394,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":395,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":396,"author":{"gitId":"chuhann"},"content":"        Here is the list of tasks:"},{"lineNumber":397,"author":{"gitId":"chuhann"},"content":"        1.[D][X] math exam (by: Oct 15 2020 10:30)"},{"lineNumber":398,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":399,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":400,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":401,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":402,"author":{"gitId":"chuhann"},"content":"### `done` - Mark a task as done"},{"lineNumber":403,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":404,"author":{"gitId":"chuhann"},"content":"Typing `done` allows the user to mark the task at a specified *index* as **done**.\u003cbr\u003e"},{"lineNumber":405,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":406,"author":{"gitId":"johanesrafael"},"content":"1. *index* can be an integer number or a letter (`A` or `a` corresponds to 1).\u003cbr\u003e      "},{"lineNumber":407,"author":{"gitId":"johanesrafael"},"content":"2. If the index starts with a letter, it will be treated as a numerical value mapped A to 1 and Z to 26. For example, \"done apple\" is equivalent to \"done 1\" and \"done C4\" is equivalent to \"done 3\"."},{"lineNumber":408,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":409,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":410,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":411,"author":{"gitId":"chuhann"},"content":"`done [index]`"},{"lineNumber":412,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":413,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":414,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":415,"author":{"gitId":"chuhann"},"content":"`done 1`"},{"lineNumber":416,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":417,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":418,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":419,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":420,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":421,"author":{"gitId":"chuhann"},"content":"        Nice! I\u0027ve marked this task as done:"},{"lineNumber":422,"author":{"gitId":"chuhann"},"content":"        [D][V] ddl (by: Sep 15 2021 01:12)"},{"lineNumber":423,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":424,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":425,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":426,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":427,"author":{"gitId":"chuhann"},"content":"### `undone` - Mark a task as undone"},{"lineNumber":428,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":429,"author":{"gitId":"chuhann"},"content":"Typing `undone` allows the user to mark the task at a specified *index* as **undone**.\u003cbr\u003e"},{"lineNumber":430,"author":{"gitId":"johanesrafael"},"content":"Note:"},{"lineNumber":431,"author":{"gitId":"johanesrafael"},"content":"1. *index* can be an integer number or a letter (`A` or `a` corresponds to 1).\u003cbr\u003e"},{"lineNumber":432,"author":{"gitId":"johanesrafael"},"content":"2. If the index starts with a letter, it will be treated as a number mapped A to 1 and Z to 26. For example: \"undone apple\" is equivalent to \"undone 1\" and \"undone C4\" is equivalent to \"undone 3\"."},{"lineNumber":433,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":434,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":435,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":436,"author":{"gitId":"chuhann"},"content":"`undone [index]`"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"chuhann"},"content":"`undone 1`"},{"lineNumber":441,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":442,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":443,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":444,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":445,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":446,"author":{"gitId":"chuhann"},"content":"        Nice! I\u0027ve marked this task as undone:"},{"lineNumber":447,"author":{"gitId":"chuhann"},"content":"        [D][X] math exam (by: Oct 15 2020 10:30)"},{"lineNumber":448,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":449,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":450,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":451,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":452,"author":{"gitId":"chuhann"},"content":"### `find` - Find an event in the task list"},{"lineNumber":453,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":454,"author":{"gitId":"chuhann"},"content":"Typing `find` commands the program to search through the task list and print all tasks with the"},{"lineNumber":455,"author":{"gitId":"chuhann"},"content":"specified *keyword*. If there is no task with such a *keyword*, `[NOT FOUND]` will be printed instead."},{"lineNumber":456,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":457,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":458,"author":{"gitId":"chuhann"},"content":"1. Keyword here means any word (time/description) on task list. "},{"lineNumber":459,"author":{"gitId":"chuhann"},"content":"2. Ensure that you are referring to the most updated task list. "},{"lineNumber":460,"author":{"gitId":"chuhann"},"content":"3. If keyword does not exist on the task list, a \"no found\" message will be shown. "},{"lineNumber":461,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":462,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":463,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":464,"author":{"gitId":"chuhann"},"content":"`find [keyword]`"},{"lineNumber":465,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":466,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":467,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":468,"author":{"gitId":"chuhann"},"content":"`find exam`"},{"lineNumber":469,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":470,"author":{"gitId":"chuhann"},"content":"Expected outcome (found):"},{"lineNumber":471,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":472,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":473,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":474,"author":{"gitId":"chuhann"},"content":"        Tasks with the specified keyword are:"},{"lineNumber":475,"author":{"gitId":"chuhann"},"content":"        1.[D][X] math exam (by: Oct 15 2020 10:30)"},{"lineNumber":476,"author":{"gitId":"chuhann"},"content":"        2.[D][X] CS exam (by: Oct 18 2020 15:00)"},{"lineNumber":477,"author":{"gitId":"chuhann"},"content":"        3.[E][X] exam review session (at: Oct 01 2020 08:00)"},{"lineNumber":478,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":479,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":480,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":481,"author":{"gitId":"chuhann"},"content":"Expected outcome (not found):"},{"lineNumber":482,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":483,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":484,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":485,"author":{"gitId":"chuhann"},"content":"        Tasks with the specified keyword are:"},{"lineNumber":486,"author":{"gitId":"chuhann"},"content":"        Your specified item is not found in the current list. "},{"lineNumber":487,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":488,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":489,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":490,"author":{"gitId":"chuhann"},"content":"### `postpone` - Postpone a task by index"},{"lineNumber":491,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":492,"author":{"gitId":"chuhann"},"content":"Typing `postpone` delays a task specified by the user or by default a day.\u003cbr\u003e"},{"lineNumber":493,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":494,"author":{"gitId":"johanesrafael"},"content":"1. Option `h` for an hour. Option `w` for a week. Option `y` for a year.\u003cbr\u003e"},{"lineNumber":495,"author":{"gitId":"scjx123"},"content":"2. The tasks should consist of date type i.e. events or deadline tasks, do not work on todo tasks.\u003cbr\u003e"},{"lineNumber":496,"author":{"gitId":"scjx123"},"content":"3. Each postpones delays the tasks by a day, an hour, a week or a year.\u003cbr\u003e"},{"lineNumber":497,"author":{"gitId":"johanesrafael"},"content":"4. Does not work with custom date unless you have updated the task with the preferred date format.\u003cbr\u003e"},{"lineNumber":498,"author":{"gitId":"scjx123"},"content":"5. When a letter appears without a number as its parameter, the letter will be treated as a numeric value mapped A to 1 and Z to 26. For example, \"postpone boy\" is equivalent to \"postpone 2\" and \"postpone h\" is equivalent to \"postpone 8\".\u003cbr\u003e"},{"lineNumber":499,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":500,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":501,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":502,"author":{"gitId":"chuhann"},"content":"`postpone [index]` \u003cbr\u003e"},{"lineNumber":503,"author":{"gitId":"chuhann"},"content":"`postpone (h/w/y) [index]` "},{"lineNumber":504,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":505,"author":{"gitId":"TomLBZ"},"content":"Example of usage:"},{"lineNumber":506,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":507,"author":{"gitId":"chuhann"},"content":"`postpone 1`"},{"lineNumber":508,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":509,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":510,"author":{"gitId":"TomLBZ"},"content":" "},{"lineNumber":511,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":512,"author":{"gitId":"chuhann"},"content":"    _________________________________________________________"},{"lineNumber":513,"author":{"gitId":"chuhann"},"content":"        I\u0027ve postpone this task:"},{"lineNumber":514,"author":{"gitId":"chuhann"},"content":"        [D][X] project submission (by: Sep 16 2021 01:12)"},{"lineNumber":515,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":516,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":517,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":518,"author":{"gitId":"TomLBZ"},"content":"Example of usage:"},{"lineNumber":519,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":520,"author":{"gitId":"chuhann"},"content":"`postpone h 1`"},{"lineNumber":521,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":522,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":523,"author":{"gitId":"TomLBZ"},"content":"    "},{"lineNumber":524,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":525,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":526,"author":{"gitId":"chuhann"},"content":"        I\u0027ve postpone this task:"},{"lineNumber":527,"author":{"gitId":"chuhann"},"content":"        [D][X] project submission (by: Sep 16 2021 02:12)"},{"lineNumber":528,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":529,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":530,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":531,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":532,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":533,"author":{"gitId":"chuhann"},"content":"`postpone w 1`"},{"lineNumber":534,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":535,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":536,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":537,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":538,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":539,"author":{"gitId":"chuhann"},"content":"        I\u0027ve postpone this task:"},{"lineNumber":540,"author":{"gitId":"chuhann"},"content":"        [D][X] project submission (by: Sep 23 2021 02:12)"},{"lineNumber":541,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":542,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":543,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":544,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":545,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":546,"author":{"gitId":"chuhann"},"content":"`postpone y 1`"},{"lineNumber":547,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":548,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":549,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":550,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":551,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":552,"author":{"gitId":"chuhann"},"content":"        I\u0027ve postpone this task:"},{"lineNumber":553,"author":{"gitId":"chuhann"},"content":"        [D][X] project submission (by: Sep 23 2022 02:12)"},{"lineNumber":554,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":555,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":556,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":557,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":558,"author":{"gitId":"chuhann"},"content":"### `reminder` - Print tasks that are due soon"},{"lineNumber":559,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":560,"author":{"gitId":"chuhann"},"content":"Typing `reminder` prints the tasks that are due within a certain time range or to activate the reminder.\u003cbr\u003e"},{"lineNumber":561,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":562,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":563,"author":{"gitId":"chuhann"},"content":"1. The reminder popup is set by default to emerge every 5 minutes.  "},{"lineNumber":564,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":565,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":566,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":567,"author":{"gitId":"chuhann"},"content":"`reminder` \u003cbr\u003e"},{"lineNumber":568,"author":{"gitId":"chuhann"},"content":"`reminder [on/off]`"},{"lineNumber":569,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":570,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":571,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":572,"author":{"gitId":"chuhann"},"content":"`reminder`"},{"lineNumber":573,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":574,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":575,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":576,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":577,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":578,"author":{"gitId":"chuhann"},"content":"        Auto-reminder: Here are the tasks due within 3 days: "},{"lineNumber":579,"author":{"gitId":"chuhann"},"content":"        (do not want to see this so often? try \"snooze\") "},{"lineNumber":580,"author":{"gitId":"chuhann"},"content":"        No task within 3 days from now "},{"lineNumber":581,"author":{"gitId":"chuhann"},"content":"        Reminder is currently on. "},{"lineNumber":582,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":583,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":584,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":585,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":586,"author":{"gitId":"chuhann"},"content":"`reminder on`"},{"lineNumber":587,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":588,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":589,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":590,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":591,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":592,"author":{"gitId":"chuhann"},"content":"        Auto-reminder: Here are the tasks due within 3 days: "},{"lineNumber":593,"author":{"gitId":"chuhann"},"content":"        (do not want to see this so often? try \"snooze\") "},{"lineNumber":594,"author":{"gitId":"chuhann"},"content":"        No task within 3 days from now "},{"lineNumber":595,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":596,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":597,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":598,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":599,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":600,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":601,"author":{"gitId":"chuhann"},"content":"`reminder off`"},{"lineNumber":602,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":603,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":604,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":605,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":606,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":607,"author":{"gitId":"scjx123"},"content":"        Auto-reminder: Here are the tasks due within 3 days: "},{"lineNumber":608,"author":{"gitId":"scjx123"},"content":"        (do not want to see this so often? try \"snooze\") "},{"lineNumber":609,"author":{"gitId":"scjx123"},"content":"        No task within 3 days from now "},{"lineNumber":610,"author":{"gitId":"scjx123"},"content":"        Reminder is currently off. "},{"lineNumber":611,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":612,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":613,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":614,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":615,"author":{"gitId":"chuhann"},"content":"### `snooze` - Delays reminder popup"},{"lineNumber":616,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":617,"author":{"gitId":"chuhann"},"content":"Typing `snooze` delays reminder popup by a default of 1 minute."},{"lineNumber":618,"author":{"gitId":"johanesrafael"},"content":"The reminder popup will remind in every 6 minutes.\u003cbr\u003e"},{"lineNumber":619,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":620,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":621,"author":{"gitId":"scjx123"},"content":"1. No additional parameter is needed.\u003cbr\u003e"},{"lineNumber":622,"author":{"gitId":"scjx123"},"content":"2. If there is a parameter, you should expect \"Invalid Command\" message."},{"lineNumber":623,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":624,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":625,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":626,"author":{"gitId":"chuhann"},"content":"`snooze`"},{"lineNumber":627,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":628,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":629,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":630,"author":{"gitId":"chuhann"},"content":"`snooze`"},{"lineNumber":631,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":632,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":633,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":634,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":635,"author":{"gitId":"chuhann"},"content":"    __________________________________________________________________________"},{"lineNumber":636,"author":{"gitId":"chuhann"},"content":"        I\u0027ve snoozed the reminder for 1 minute. Will remind you in 6 minutes."},{"lineNumber":637,"author":{"gitId":"chuhann"},"content":"    __________________________________________________________________________    "},{"lineNumber":638,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":639,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":640,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":641,"author":{"gitId":"chuhann"},"content":"## Features - Module Planner "},{"lineNumber":642,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":643,"author":{"gitId":"chuhann"},"content":"### `take` - Take module"},{"lineNumber":644,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":645,"author":{"gitId":"johanesrafael"},"content":"Typing `take` marks specified module(s) as taken.\u003cbr\u003e"},{"lineNumber":646,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":647,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":648,"author":{"gitId":"johanesrafael"},"content":"1. Index must be a positive integer referencing an existing item on the current list.\u003cbr\u003e"},{"lineNumber":649,"author":{"gitId":"johanesrafael"},"content":"2. Module code must be a legitimate NUS module."},{"lineNumber":650,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":651,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":652,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":653,"author":{"gitId":"chuhann"},"content":"`take [index(es) / module code(s) (for modules only)]`"},{"lineNumber":654,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":655,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":656,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":657,"author":{"gitId":"chuhann"},"content":"`take CS2113 CS2113T`"},{"lineNumber":658,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":659,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":660,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":661,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":662,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":663,"author":{"gitId":"chuhann"},"content":"        Your \"taken\" list has been changed, \"list\" it again to see effects. "},{"lineNumber":664,"author":{"gitId":"chuhann"},"content":"        Module: CS2113: now taken "},{"lineNumber":665,"author":{"gitId":"chuhann"},"content":"        Module: CS2113T: now taken "},{"lineNumber":666,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":667,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":668,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":669,"author":{"gitId":"chuhann"},"content":"### `untake` - Untake module"},{"lineNumber":670,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":671,"author":{"gitId":"johanesrafael"},"content":"Typing `untake` marks specified module(s) as not taken.\u003cbr\u003e"},{"lineNumber":672,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":673,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":674,"author":{"gitId":"johanesrafael"},"content":"1. Index must be a positive integer referencing an existing item.\u003cbr\u003e"},{"lineNumber":675,"author":{"gitId":"scjx123"},"content":"2. If modules that are not taken are input, the module will still be marked as \"no longer taken\"."},{"lineNumber":676,"author":{"gitId":"chuhann"},"content":"      "},{"lineNumber":677,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":678,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":679,"author":{"gitId":"chuhann"},"content":"`untake [index(es) / module code(s) (for modules only)]`"},{"lineNumber":680,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":681,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":682,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":683,"author":{"gitId":"chuhann"},"content":"`untake CS2113T`"},{"lineNumber":684,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":685,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":686,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":687,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":688,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":689,"author":{"gitId":"chuhann"},"content":"        Your \"taken\" list has been changed, \"list\" it again to see effects. "},{"lineNumber":690,"author":{"gitId":"chuhann"},"content":"        Module: CS2113T: no longer taken "},{"lineNumber":691,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":692,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":693,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":694,"author":{"gitId":"chuhann"},"content":"### `sel` - Select items by index"},{"lineNumber":695,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":696,"author":{"gitId":"chuhann"},"content":"Typing `sel` selects the items specified."},{"lineNumber":697,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":698,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":699,"author":{"gitId":"chuhann"},"content":"1. Index must be a positive integer referencing an existing item. "},{"lineNumber":700,"author":{"gitId":"chuhann"},"content":"2. Module code needs to represent legitimate NUS module. Otherwise, an error message can be "},{"lineNumber":701,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":702,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":703,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":704,"author":{"gitId":"chuhann"},"content":"`sel [index(es) (for the currently listed items) / module code(s) (for modules only)]`"},{"lineNumber":705,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":706,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":707,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":708,"author":{"gitId":"chuhann"},"content":"`sel 1 2 3`"},{"lineNumber":709,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":710,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":711,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":712,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":713,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":714,"author":{"gitId":"chuhann"},"content":"    Your \"selected\" list has been changed, \"list\" it again to see effects. "},{"lineNumber":715,"author":{"gitId":"chuhann"},"content":"    Item 1: borrow book: now selected"},{"lineNumber":716,"author":{"gitId":"chuhann"},"content":"    Item 2: eat: now selected"},{"lineNumber":717,"author":{"gitId":"chuhann"},"content":"    Item 3: jumping: now selected "},{"lineNumber":718,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":719,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":720,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":721,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":722,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":723,"author":{"gitId":"chuhann"},"content":"### `unsel` - Unselect items"},{"lineNumber":724,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":725,"author":{"gitId":"chuhann"},"content":"Typing `unsel` marks items specified as unselected."},{"lineNumber":726,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":727,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":728,"author":{"gitId":"chuhann"},"content":"1. Index must be a positive integer referencing an existing item. "},{"lineNumber":729,"author":{"gitId":"chuhann"},"content":"2. Item need to first be selected using \"sel\" for \"unsel\" to function properly. "},{"lineNumber":730,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":731,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":732,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":733,"author":{"gitId":"chuhann"},"content":"`unsel [index(es) (for the currently listed items) / module code(s) (for modules only)]`"},{"lineNumber":734,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":735,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":736,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":737,"author":{"gitId":"chuhann"},"content":"`unsel 1 2 3`"},{"lineNumber":738,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":739,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":740,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":741,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":742,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":743,"author":{"gitId":"chuhann"},"content":"    Your \"selected\" list has been changed, \"list\" it again to see effects. "},{"lineNumber":744,"author":{"gitId":"chuhann"},"content":"    Item 1: borrow book: no longer selected "},{"lineNumber":745,"author":{"gitId":"chuhann"},"content":"    Item 2: eat: no longer selected "},{"lineNumber":746,"author":{"gitId":"chuhann"},"content":"    Item 3: jumping: no longer selected "},{"lineNumber":747,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":748,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":749,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":750,"author":{"gitId":"chuhann"},"content":"### `detail` - Prints item detail"},{"lineNumber":751,"author":{"gitId":"chuhann"},"content":"Typing `detail` prints the details of a specified item."},{"lineNumber":752,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":753,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":754,"author":{"gitId":"chuhann"},"content":"1. Index should be a positive integer. Otherwise you should expect an error message "},{"lineNumber":755,"author":{"gitId":"chuhann"},"content":"2. You must reference EXISTING tasks or module when using this command. For example: "},{"lineNumber":756,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":757,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":758,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":759,"author":{"gitId":"chuhann"},"content":"`detail [module code (for modules only) / index]`"},{"lineNumber":760,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":761,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":762,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":763,"author":{"gitId":"chuhann"},"content":"`detail 1`"},{"lineNumber":764,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":765,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":766,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":767,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":768,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":769,"author":{"gitId":"chuhann"},"content":"    Here are the details you requested:"},{"lineNumber":770,"author":{"gitId":"chuhann"},"content":"    Item 1: [T][X] borrow book"},{"lineNumber":771,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":772,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":773,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":774,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":775,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":776,"author":{"gitId":"chuhann"},"content":"`detail CS2113T`"},{"lineNumber":777,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":778,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":779,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":780,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":781,"author":{"gitId":"chuhann"},"content":"    _____________________________________________________________________________________________________"},{"lineNumber":782,"author":{"gitId":"chuhann"},"content":"    Here are the details you requested:"},{"lineNumber":783,"author":{"gitId":"chuhann"},"content":"    Item: CS2113T Software Engineering \u0026 Object-Oriented Programming 4MC"},{"lineNumber":784,"author":{"gitId":"chuhann"},"content":"    \"This module introduces the necessary skills for systematic and rigorous development of software sys"},{"lineNumber":785,"author":{"gitId":"chuhann"},"content":"    tems. It covers requirements, design, implementation, quality assurance, and project management aspe"},{"lineNumber":786,"author":{"gitId":"chuhann"},"content":"    cts of small-to-medium size multi-person software projects. The module uses the Object Oriented Prog"},{"lineNumber":787,"author":{"gitId":"chuhann"},"content":"    ramming paradigm. Students of this module will receive hands-on practice of tools commonly used in t"},{"lineNumber":788,"author":{"gitId":"chuhann"},"content":"    he industry, such as test automation tools, build automation tools, and code revisioning tools will "},{"lineNumber":789,"author":{"gitId":"chuhann"},"content":"    be covered."},{"lineNumber":790,"author":{"gitId":"chuhann"},"content":"    Tasks: [NOT FOUND]"},{"lineNumber":791,"author":{"gitId":"chuhann"},"content":"    ______________________________________________________________________________________________________"},{"lineNumber":792,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":793,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"chuhann"},"content":"### `grade` - Add grade to course or module"},{"lineNumber":796,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":797,"author":{"gitId":"scjx123"},"content":"Typing `grade` allows the user to add a grade to the user\u0027s taken course or module.\u003cbr\u003e"},{"lineNumber":798,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":799,"author":{"gitId":"scjx123"},"content":"1. Modules need to be \"taken\" first before a grade is applied.\u003cbr\u003e"},{"lineNumber":800,"author":{"gitId":"johanesrafael"},"content":"2. Grade and module code/index are compulsory parameters.\u003cbr\u003e"},{"lineNumber":801,"author":{"gitId":"scjx123"},"content":"3. Grades and module code need to be acceptable grades and modules in NUS. For example: If \"grade CS2113 Z\" or \"grade CS9999 A\" is input, an error message will be displayed."},{"lineNumber":802,"author":{"gitId":"chuhann"},"content":"4. If \"grade CS2113 Z\" or \"grade CS9999 A\" is input, error message will be displayed. "},{"lineNumber":803,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":804,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":805,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":806,"author":{"gitId":"chuhann"},"content":"`grade` \u003cbr\u003e"},{"lineNumber":807,"author":{"gitId":"chuhann"},"content":"`grade [-option] [module] [grade] {[module] [grade]...}` \u003cbr\u003e"},{"lineNumber":808,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":809,"author":{"gitId":"chuhann"},"content":"`option: -s(show, default), -a(add)`"},{"lineNumber":810,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":811,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":812,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":813,"author":{"gitId":"chuhann"},"content":"`grade -a CS2113 A- CG1112 A-`"},{"lineNumber":814,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":815,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":816,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":817,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":818,"author":{"gitId":"chuhann"},"content":"        Grade operation on the specified modules: "},{"lineNumber":819,"author":{"gitId":"chuhann"},"content":"        1. CS2113   A-"},{"lineNumber":820,"author":{"gitId":"chuhann"},"content":"        2. CG1112   A-"},{"lineNumber":821,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":822,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":823,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":824,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":825,"author":{"gitId":"chuhann"},"content":"`grade`"},{"lineNumber":826,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":827,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":828,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":829,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":830,"author":{"gitId":"chuhann"},"content":"        Grade operation on the specified modules: "},{"lineNumber":831,"author":{"gitId":"chuhann"},"content":"        You did not specify modules, looking for your taken modules... "},{"lineNumber":832,"author":{"gitId":"chuhann"},"content":"        1. CG1112   A-"},{"lineNumber":833,"author":{"gitId":"chuhann"},"content":"        2. CS1010   A"},{"lineNumber":834,"author":{"gitId":"chuhann"},"content":"        3. CS1231   B"},{"lineNumber":835,"author":{"gitId":"chuhann"},"content":"        4. CS2040C  A"},{"lineNumber":836,"author":{"gitId":"chuhann"},"content":"        5. CS2113   A-"},{"lineNumber":837,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":838,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":839,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":840,"author":{"gitId":"chuhann"},"content":"### `goal` - Calculate how far the user is from his or her target CAP"},{"lineNumber":841,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":842,"author":{"gitId":"johanesrafael"},"content":"Typing `goal` allows the user to calculate how far the user is from his/her target CAP.\u003cbr\u003e"},{"lineNumber":843,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":844,"author":{"gitId":"scjx123"},"content":"1. All values on the parameters should be a positive integer. Otherwise, you should expect an error message.\u003cbr\u003e"},{"lineNumber":845,"author":{"gitId":"johanesrafael"},"content":"2. Both total MC and target CAP are compulsory parameters.\u003cbr\u003e"},{"lineNumber":846,"author":{"gitId":"johanesrafael"},"content":"3. CAP values need to be within 0 to 5."},{"lineNumber":847,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":848,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":849,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":850,"author":{"gitId":"chuhann"},"content":"goal -total [total MC] [target CAP] {-taken [taken MC] [current CAP]} \u003cbr\u003e"},{"lineNumber":851,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":852,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":853,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":854,"author":{"gitId":"chuhann"},"content":"`goal -total 160 4.9`"},{"lineNumber":855,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":856,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":857,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":858,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":859,"author":{"gitId":"chuhann"},"content":"        Your required average CAP is: 4.91 "},{"lineNumber":860,"author":{"gitId":"chuhann"},"content":"        Try \"cap\" to see your current cap! "},{"lineNumber":861,"author":{"gitId":"chuhann"},"content":"        Jia you! :D "},{"lineNumber":862,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":863,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":864,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":865,"author":{"gitId":"chuhann"},"content":"### `mc` - Prints MCs"},{"lineNumber":866,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":867,"author":{"gitId":"scjx123"},"content":"Typing `mc` prints the number of MCs based on the selected option. "},{"lineNumber":868,"author":{"gitId":"johanesrafael"},"content":"By default, this command focuses on the entire module list. In order to print the MC of taken modules, "},{"lineNumber":869,"author":{"gitId":"johanesrafael"},"content":"do remember to enter \u0027focus taken\u0027 before proceeding with this command. \u003cbr\u003e"},{"lineNumber":870,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":871,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":872,"author":{"gitId":"scjx123"},"content":"1. Default mc command prints the total mc that exists in the list of taken modules.\u003cbr\u003e"},{"lineNumber":873,"author":{"gitId":"johanesrafael"},"content":"2. To print out a detailed list of mc belonging to the taken modules, ensure you have entered \"focus taken\". "},{"lineNumber":874,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":875,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":876,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":877,"author":{"gitId":"chuhann"},"content":"`mc [-option]` \u003cbr\u003e"},{"lineNumber":878,"author":{"gitId":"chuhann"},"content":"`option: -d(detailed)`"},{"lineNumber":879,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":880,"author":{"gitId":"chuhann"},"content":"Example of usage (when there are modules in the target): "},{"lineNumber":881,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":882,"author":{"gitId":"chuhann"},"content":"`mc`"},{"lineNumber":883,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":884,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":885,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":886,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":887,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":888,"author":{"gitId":"chuhann"},"content":"    Here is the total MC:"},{"lineNumber":889,"author":{"gitId":"chuhann"},"content":"    22"},{"lineNumber":890,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":891,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":892,"author":{"gitId":"chuhann"},"content":"Example of usage (when there are modules in the target): "},{"lineNumber":893,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":894,"author":{"gitId":"chuhann"},"content":"`mc -d`"},{"lineNumber":895,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":896,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":897,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":898,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":899,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":900,"author":{"gitId":"chuhann"},"content":"    Here is the total MC:"},{"lineNumber":901,"author":{"gitId":"chuhann"},"content":"    EE1001: 4MCs"},{"lineNumber":902,"author":{"gitId":"chuhann"},"content":"    EE1001X: 4MCs"},{"lineNumber":903,"author":{"gitId":"chuhann"},"content":"    EE1002: 4MCs"},{"lineNumber":904,"author":{"gitId":"chuhann"},"content":"    EE1003: 4MCs"},{"lineNumber":905,"author":{"gitId":"chuhann"},"content":"    EE1111: 6MCs"},{"lineNumber":906,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":907,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":908,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":909,"author":{"gitId":"chuhann"},"content":"### `cap` - Prints CAPs"},{"lineNumber":910,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":911,"author":{"gitId":"scjx123"},"content":"Typing `mc` prints the calculated CAP for courses based on the selected option.\u003cbr\u003e"},{"lineNumber":912,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":913,"author":{"gitId":"scjx123"},"content":"1. Index should be a positive integer. Otherwise, you should expect an \"invalid command\" error message.\u003cbr\u003e"},{"lineNumber":914,"author":{"gitId":"johanesrafael"},"content":"2. You must reference existing tasks or modules when using this command. For example: If \"list\" shows only 2 tasks but you try to use \"-task 3\" as a parameter for \"add\", you should expect an \"index out of range\" error message because \"3\" is out of range for your task list. Similarly, if there is no mod called CS9999 in the module list and you try to use \"-mod CS9999\" as a parameter for \"add\", you should expect a \"not found\" error message."},{"lineNumber":915,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":916,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":917,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":918,"author":{"gitId":"chuhann"},"content":"`cap [index / code (for modules only)] [letter grade]`"},{"lineNumber":919,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":920,"author":{"gitId":"chuhann"},"content":"Example of usage (when there are modules in the target): "},{"lineNumber":921,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":922,"author":{"gitId":"chuhann"},"content":"`cap`"},{"lineNumber":923,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":924,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":925,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":926,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":927,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":928,"author":{"gitId":"chuhann"},"content":"        Calculate cap on specified modules: "},{"lineNumber":929,"author":{"gitId":"chuhann"},"content":"        You did not specify modules, looking for graded modules in your taken modules... "},{"lineNumber":930,"author":{"gitId":"chuhann"},"content":"        CG2027: null "},{"lineNumber":931,"author":{"gitId":"chuhann"},"content":"        CS2113: null "},{"lineNumber":932,"author":{"gitId":"chuhann"},"content":"        EE2028: A+ "},{"lineNumber":933,"author":{"gitId":"chuhann"},"content":"        GER1000: A "},{"lineNumber":934,"author":{"gitId":"chuhann"},"content":"        MA1513: B "},{"lineNumber":935,"author":{"gitId":"chuhann"},"content":"        CAP \u003d 4.7 "},{"lineNumber":936,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":937,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":938,"author":{"gitId":"chuhann"},"content":"Example of usage (when there are modules in the target): "},{"lineNumber":939,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":940,"author":{"gitId":"chuhann"},"content":"`cap CS2113 A CS1010 A-`"},{"lineNumber":941,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":942,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":943,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":944,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":945,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":946,"author":{"gitId":"chuhann"},"content":"        Calculate cap on specified modules: "},{"lineNumber":947,"author":{"gitId":"chuhann"},"content":"        This module is completed and you cannot modify it again: [COMPLETED]CG1112 "},{"lineNumber":948,"author":{"gitId":"chuhann"},"content":"        Module: CS2113: (hypothetical)A "},{"lineNumber":949,"author":{"gitId":"chuhann"},"content":"        CAP \u003d 5 "},{"lineNumber":950,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":951,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":952,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":953,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":954,"author":{"gitId":"chuhann"},"content":"## Features - General Features for both Daily Tasks \u0026 Module Planner"},{"lineNumber":955,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":956,"author":{"gitId":"chuhann"},"content":"### `add` - Add task to module"},{"lineNumber":957,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":958,"author":{"gitId":"johanesrafael"},"content":"Typing `add` adds specified task(s) to specified module(s).\u003cbr\u003e"},{"lineNumber":959,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":960,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":961,"author":{"gitId":"scjx123"},"content":"1. Index should be a positive integer. Otherwise, you should expect an \"invalid command\" error message.\u003cbr\u003e"},{"lineNumber":962,"author":{"gitId":"johanesrafael"},"content":"2. You must reference EXISTING tasks or modules when using this command. For example: If \"list\" shows only 2 tasks but you try to use \"-task 3\" as a parameter for \"add\", you should expect an \"index out of range\" error message because \"3\" is out of range for your task list. Similarly, if there is no mod called CS9999 in the module list and you try to use \"-mod CS9999\" as a parameter for \"add\", you should expect a \"not found\" error message.\u003cbr\u003e"},{"lineNumber":963,"author":{"gitId":"johanesrafael"},"content":"3. Both parameters here (i.e. task and mod) are compulsory.\u003cbr\u003e"},{"lineNumber":964,"author":{"gitId":"johanesrafael"},"content":"4. Once a task is added to a module, it is unlinked from the task list."},{"lineNumber":965,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":966,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":967,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":968,"author":{"gitId":"chuhann"},"content":"`add -task [index(es)] -mod [module code(s)]`"},{"lineNumber":969,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":970,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":971,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":972,"author":{"gitId":"chuhann"},"content":"`add -task 1 2 -mod CS2113 CS2113T`"},{"lineNumber":973,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":974,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":975,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":976,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":977,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":978,"author":{"gitId":"chuhann"},"content":"    I have added the specified tasks to the specified modules."},{"lineNumber":979,"author":{"gitId":"chuhann"},"content":"    CS2113 \u003c\u003c tasks: borrow book; eat; "},{"lineNumber":980,"author":{"gitId":"chuhann"},"content":"    CS2113T \u003c\u003c tasks: borrow book; eat; "},{"lineNumber":981,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":982,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":983,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":984,"author":{"gitId":"chuhann"},"content":"### `clear` - Clear the task list"},{"lineNumber":985,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":986,"author":{"gitId":"johanesrafael"},"content":"Typing `clear` results in the program deleting all added tasks from the task list.\u003cbr\u003e"},{"lineNumber":987,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":988,"author":{"gitId":"johanesrafael"},"content":"1. \"clear fancy\" can only be used in fancy UI mode.\u003cbr\u003e"},{"lineNumber":989,"author":{"gitId":"johanesrafael"},"content":"2. Extra inputs after \"clear\" will get an \"invalid command\" error unless it contains the word \"fancy\" (case insensitive). For example: \"clear domsun\" results in an \"invalid command\" error. If \"clear fancy domsun\" is input in, \"domsun\" will be ignored and \"clear fancy\" will be executed. If \"clear MyFancyBoy\" is input in, \"clear fancy\" will be executed."},{"lineNumber":990,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":991,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":992,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":993,"author":{"gitId":"chuhann"},"content":"`clear`"},{"lineNumber":994,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":995,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":996,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":997,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":998,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":999,"author":{"gitId":"chuhann"},"content":"       Nice! I\u0027ve cleared all tasks from the list and left modules alone. "},{"lineNumber":1000,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1001,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":1002,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1003,"author":{"gitId":"chuhann"},"content":"### `delete` - Delete a task from the task list"},{"lineNumber":1004,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1005,"author":{"gitId":"chuhann"},"content":"Typing `delete` deletes the task with specified *index* from the current task list.\u003cbr\u003e"},{"lineNumber":1006,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1007,"author":{"gitId":"johanesrafael"},"content":"1. *index* should be an integer number or a letter (`A` or `a` corresponds to 1). Otherwise you should expect an error message.\u003cbr\u003e"},{"lineNumber":1008,"author":{"gitId":"johanesrafael"},"content":"2. You must reference EXISTING tasks when using this command. For example: If \"list\" shows only 2 tasks but you try to use \"delete 3\", you should expect an \"index out of range\" error message because \"3\" is out of range for your task list."},{"lineNumber":1009,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1010,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":1011,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1012,"author":{"gitId":"chuhann"},"content":"`delete [index]`"},{"lineNumber":1013,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1014,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1015,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1016,"author":{"gitId":"chuhann"},"content":"`delete 1`"},{"lineNumber":1017,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1018,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1019,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1020,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":1021,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1022,"author":{"gitId":"chuhann"},"content":"        Noted. I\u0027ve removed this task: "},{"lineNumber":1023,"author":{"gitId":"chuhann"},"content":"        [T][X] class "},{"lineNumber":1024,"author":{"gitId":"chuhann"},"content":"        Now you have 3 tasks in the list. "},{"lineNumber":1025,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1026,"author":{"gitId":"chuhann"},"content":"      "},{"lineNumber":1027,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1028,"author":{"gitId":"chuhann"},"content":"### `edit` - Modify attributes of an item"},{"lineNumber":1029,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1030,"author":{"gitId":"johanesrafael"},"content":"Typing `edit ` modifies the attributes of an task or module. \u003cbr\u003e"},{"lineNumber":1031,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1032,"author":{"gitId":"johanesrafael"},"content":"1. Fields for \"-task\" include \"description\", \"type\", \"selected\", \"weekly\" and \"done\".\u003cbr\u003e"},{"lineNumber":1033,"author":{"gitId":"johanesrafael"},"content":"2. Fields for \"-mod\" include \"grade\", \"su\", \"selected\" and \"taken\".\u003cbr\u003e"},{"lineNumber":1034,"author":{"gitId":"johanesrafael"},"content":"3. No space allowed around the \"\u003d\" sign. Use \"_\" in for spaces in \"[field\u003dnew_value]\" parameters.\u003cbr\u003e"},{"lineNumber":1035,"author":{"gitId":"johanesrafael"},"content":"4. Modules and task referenced need to exist.\u003cbr\u003e"},{"lineNumber":1036,"author":{"gitId":"johanesrafael"},"content":"5. Removing a specified linked task from the module does not delete the task from the task list."},{"lineNumber":1037,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1038,"author":{"gitId":"scjx123"},"content":"Syntax:"},{"lineNumber":1039,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1040,"author":{"gitId":"chuhann"},"content":"`edit [-mod / -task] [index / code (for module only)] [field\u003dnew value]`"},{"lineNumber":1041,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1042,"author":{"gitId":"chuhann"},"content":"`No space allowed around \"\u003d\". Use \"_\" in place of space for the \"[field\u003dnew value]\" parameters`"},{"lineNumber":1043,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1044,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1045,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":1046,"author":{"gitId":"chuhann"},"content":"`edit -mod CS2113T grade\u003dA`"},{"lineNumber":1047,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1048,"author":{"gitId":"chuhann"},"content":"Exepected outcome:"},{"lineNumber":1049,"author":{"gitId":"scjx123"},"content":"    "},{"lineNumber":1050,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":1051,"author":{"gitId":"chuhann"},"content":"        Trying to modify the attribute(s) you specified: "},{"lineNumber":1052,"author":{"gitId":"chuhann"},"content":"        Working on Module: CS2113T "},{"lineNumber":1053,"author":{"gitId":"chuhann"},"content":"        CS2113T: grade \u003d A AND taken \u003d true; "},{"lineNumber":1054,"author":{"gitId":"chuhann"},"content":"        (The module must be taken in order to have a grade); "},{"lineNumber":1055,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":1056,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1057,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":1058,"author":{"gitId":"chuhann"},"content":"`edit -task 1 description\u003ddo_homework`"},{"lineNumber":1059,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1060,"author":{"gitId":"scjx123"},"content":"Expected outcome:"},{"lineNumber":1061,"author":{"gitId":"scjx123"},"content":"    "},{"lineNumber":1062,"author":{"gitId":"chuhann"},"content":"    "},{"lineNumber":1063,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":1064,"author":{"gitId":"chuhann"},"content":"        Trying to modify the attribute(s) you specified: "},{"lineNumber":1065,"author":{"gitId":"chuhann"},"content":"        Working on Task: [D][X] do homework\\ (by: Sep 16 2021 01:12) "},{"lineNumber":1066,"author":{"gitId":"chuhann"},"content":"        do homework: description\u003ddo homework; "},{"lineNumber":1067,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1068,"author":{"gitId":"chuhann"},"content":"    list"},{"lineNumber":1069,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":1070,"author":{"gitId":"chuhann"},"content":"        Here is the list of items:"},{"lineNumber":1071,"author":{"gitId":"chuhann"},"content":"        1.[T][X] do homework"},{"lineNumber":1072,"author":{"gitId":"chuhann"},"content":"        2.[T][X] blah"},{"lineNumber":1073,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1074,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":1075,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":1076,"author":{"gitId":"chuhann"},"content":"`edit -task 1 type\u003devent`"},{"lineNumber":1077,"author":{"gitId":"TomLBZ"},"content":"    "},{"lineNumber":1078,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1079,"author":{"gitId":"TomLBZ"},"content":"    "},{"lineNumber":1080,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1081,"author":{"gitId":"chuhann"},"content":"        Trying to modify the attribute(s) you specified: "},{"lineNumber":1082,"author":{"gitId":"chuhann"},"content":"        Working on Task: [D][X] do homework (by: Sep 16 2021 01:12) "},{"lineNumber":1083,"author":{"gitId":"chuhann"},"content":"        do homework: description\u003ddo homework; "},{"lineNumber":1084,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1085,"author":{"gitId":"chuhann"},"content":"    list"},{"lineNumber":1086,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1087,"author":{"gitId":"chuhann"},"content":"        Here is the list of items:"},{"lineNumber":1088,"author":{"gitId":"chuhann"},"content":"        1.[E][X] do homework (at: Sep 16  2021 01:12)"},{"lineNumber":1089,"author":{"gitId":"chuhann"},"content":"        2.[T][X] blah    "},{"lineNumber":1090,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1091,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1092,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1093,"author":{"gitId":"chuhann"},"content":"### `focus` - Change the context of the program"},{"lineNumber":1094,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1095,"author":{"gitId":"scjx123"},"content":"Typing `focus` changes the context that all other commands are based on the specified target. \u003cbr\u003e"},{"lineNumber":1096,"author":{"gitId":"chuhann"},"content":"If no parameter is provided, the program will focus on `task`. \u003cbr\u003e"},{"lineNumber":1097,"author":{"gitId":"scjx123"},"content":"Other commands such as `list`, `done`, `sel`, etc. all operate based on the current focused context."},{"lineNumber":1098,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1099,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":1100,"author":{"gitId":"chuhann"},"content":"1. This function is used together with \"list\" to see the result of the \"focus\". "},{"lineNumber":1101,"author":{"gitId":"chuhann"},"content":"2. For more explanation, refer to the diagram on \"Domsun Tutorial\" on the UserGuide. "},{"lineNumber":1102,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1103,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":1104,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1105,"author":{"gitId":"chuhann"},"content":"`focus`"},{"lineNumber":1106,"author":{"gitId":"chuhann"},"content":"`focus [deadline / todo / event / task / mod / selected / taken]`"},{"lineNumber":1107,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1108,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":1109,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1110,"author":{"gitId":"chuhann"},"content":"`focus mod`"},{"lineNumber":1111,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1112,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":1113,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1114,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":1115,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1116,"author":{"gitId":"chuhann"},"content":"    Now we are focusing on:"},{"lineNumber":1117,"author":{"gitId":"chuhann"},"content":"    mod"},{"lineNumber":1118,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1119,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1120,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":1121,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1122,"author":{"gitId":"chuhann"},"content":"`focus`"},{"lineNumber":1123,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1124,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1125,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1126,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":1127,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1128,"author":{"gitId":"chuhann"},"content":"    Now we are focusing on:"},{"lineNumber":1129,"author":{"gitId":"chuhann"},"content":"    task"},{"lineNumber":1130,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1131,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1132,"author":{"gitId":"chuhann"},"content":"### `load` - Loads linked tasks "},{"lineNumber":1133,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1134,"author":{"gitId":"chuhann"},"content":"Typing `load` loads linked tasks to ONE specified module without adding them to the main task list \u003cbr\u003e"},{"lineNumber":1135,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1136,"author":{"gitId":"chuhann"},"content":"Notes:"},{"lineNumber":1137,"author":{"gitId":"chuhann"},"content":"1. This command should only be used if you are highly familiar with the save file and you want to manually edit linked tasks to a specific module "},{"lineNumber":1138,"author":{"gitId":"chuhann"},"content":"2. We do NOT recommend using this command on a daily basis "},{"lineNumber":1139,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1140,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":1141,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1142,"author":{"gitId":"chuhann"},"content":"`load [module code] [task_string]` \u003cbr\u003e"},{"lineNumber":1143,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1144,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":1145,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1146,"author":{"gitId":"chuhann"},"content":"`load EE2028 [D][V]_Exam_(by:_Jan_11_2011_11:11)`"},{"lineNumber":1147,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1148,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1149,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1150,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1151,"author":{"gitId":"chuhann"},"content":"        Added Tasks: "},{"lineNumber":1152,"author":{"gitId":"chuhann"},"content":"        [D][V] Exam (by: Jan 11 2011 11:11) "},{"lineNumber":1153,"author":{"gitId":"chuhann"},"content":"        for module: EE2028; "},{"lineNumber":1154,"author":{"gitId":"chuhann"},"content":"        Try \"detail EE2028\" to check it out! "},{"lineNumber":1155,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1156,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1157,"author":{"gitId":"chuhann"},"content":"Example of usage:"},{"lineNumber":1158,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1159,"author":{"gitId":"chuhann"},"content":"`load EE2028 [T][X]_test1,[T][V]_test2`"},{"lineNumber":1160,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1161,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1162,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1163,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1164,"author":{"gitId":"chuhann"},"content":"        Added Tasks: "},{"lineNumber":1165,"author":{"gitId":"chuhann"},"content":"        [T][X] test1 "},{"lineNumber":1166,"author":{"gitId":"chuhann"},"content":"        [T][V] test2 "},{"lineNumber":1167,"author":{"gitId":"chuhann"},"content":"        for module: EE2028; "},{"lineNumber":1168,"author":{"gitId":"chuhann"},"content":"        Try \"detail EE2028\" to check it out! "},{"lineNumber":1169,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1170,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1171,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1172,"author":{"gitId":"chuhann"},"content":"### `stats` - Prints Statistics"},{"lineNumber":1173,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1174,"author":{"gitId":"johanesrafael"},"content":"Typing `stats` prints the percentage of the task completed.\u003cbr\u003e"},{"lineNumber":1175,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1176,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":1177,"author":{"gitId":"scjx123"},"content":"1. Module entered should exist. Otherwise, you should expect a \"Module Not Found\" error message.\u003cbr\u003e"},{"lineNumber":1178,"author":{"gitId":"scjx123"},"content":"2. If the command entered is stats alone, ensure that you are focusing on the tasks list by typing \"focus\"."},{"lineNumber":1179,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1180,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":1181,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1182,"author":{"gitId":"chuhann"},"content":"`stats [-option] [module code]` \u003cbr\u003e"},{"lineNumber":1183,"author":{"gitId":"chuhann"},"content":"`option: -mod` \u003cbr\u003e"},{"lineNumber":1184,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1185,"author":{"gitId":"scjx123"},"content":"Example of usage (when focused on tasks list, and no task is completed): "},{"lineNumber":1186,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1187,"author":{"gitId":"chuhann"},"content":"`stats`"},{"lineNumber":1188,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1189,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1190,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1191,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":1192,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1193,"author":{"gitId":"chuhann"},"content":"    Here are the statistics: "},{"lineNumber":1194,"author":{"gitId":"chuhann"},"content":"    [0.0%]"},{"lineNumber":1195,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1196,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1197,"author":{"gitId":"scjx123"},"content":"Example of usage (when checking specific modules, and all the tasks that are tagged to the module are completed): "},{"lineNumber":1198,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1199,"author":{"gitId":"chuhann"},"content":"`stats -mod CS2113 `"},{"lineNumber":1200,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1201,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1202,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1203,"author":{"gitId":"chuhann"},"content":"   ```  "},{"lineNumber":1204,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1205,"author":{"gitId":"chuhann"},"content":"    Here are the statistics: "},{"lineNumber":1206,"author":{"gitId":"chuhann"},"content":"    [100.0%]"},{"lineNumber":1207,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________"},{"lineNumber":1208,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1209,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1210,"author":{"gitId":"chuhann"},"content":"### `help` - Print help text of the commands"},{"lineNumber":1211,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1212,"author":{"gitId":"chuhann"},"content":"Typing `help` allows the user to either print a list of available commands, "},{"lineNumber":1213,"author":{"gitId":"chuhann"},"content":"or print the details of a specified command."},{"lineNumber":1214,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1215,"author":{"gitId":"chuhann"},"content":"Notes: "},{"lineNumber":1216,"author":{"gitId":"chuhann"},"content":"1. If unknown command is put in as \"target\", general help of all commands will be displayed. "},{"lineNumber":1217,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1218,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":1219,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1220,"author":{"gitId":"chuhann"},"content":"`help` \u003cbr\u003e `help [target]`"},{"lineNumber":1221,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1222,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1223,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1224,"author":{"gitId":"chuhann"},"content":"`help`"},{"lineNumber":1225,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1226,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1227,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1228,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1229,"author":{"gitId":"chuhann"},"content":"    __________________________________________________________________________________________________________________"},{"lineNumber":1230,"author":{"gitId":"chuhann"},"content":"        Here are all available commands: "},{"lineNumber":1231,"author":{"gitId":"chuhann"},"content":"        Command: add  Description: Add task(s) to module(s): Add specified task(s) to specified module(s). "},{"lineNumber":1232,"author":{"gitId":"chuhann"},"content":"        Command: bye  Description: Quit the program "},{"lineNumber":1233,"author":{"gitId":"chuhann"},"content":"        Command: cap  Description: Calculate CAP for courses based on selected option. "},{"lineNumber":1234,"author":{"gitId":"chuhann"},"content":"        Command: clear  Description: Clear the task list, or clear the bottom text region for the fancy "},{"lineNumber":1235,"author":{"gitId":"chuhann"},"content":"        UI. "},{"lineNumber":1236,"author":{"gitId":"chuhann"},"content":"        Command: complete  Description: Mark a module as completed "},{"lineNumber":1237,"author":{"gitId":"chuhann"},"content":"        Command: deadline  Description: Add a deadline to the task list "},{"lineNumber":1238,"author":{"gitId":"chuhann"},"content":"        Command: delete  Description: Delete a task from the task list "},{"lineNumber":1239,"author":{"gitId":"chuhann"},"content":"        Command: detail  Description: Print the details of a specified item. "},{"lineNumber":1240,"author":{"gitId":"chuhann"},"content":"        Command: goal  Description: Calculate how far the user is from his/her target CAP "},{"lineNumber":1241,"author":{"gitId":"chuhann"},"content":"        Command: done  Description: Mark a task as done "},{"lineNumber":1242,"author":{"gitId":"chuhann"},"content":"        Command: edit  Description: Modify the attributes of an item (task / module), or operate on one "},{"lineNumber":1243,"author":{"gitId":"chuhann"},"content":"        linked task of a module "},{"lineNumber":1244,"author":{"gitId":"chuhann"},"content":"        Command: event  Description: Add an event to the task list "},{"lineNumber":1245,"author":{"gitId":"chuhann"},"content":"        Command: fancy  Description: Switch to a fancy Cli (requires the shell to support ansi codes). "},{"lineNumber":1246,"author":{"gitId":"chuhann"},"content":"        Command: grade  Description: Modify grade to the user\u0027s taken course/module. "},{"lineNumber":1247,"author":{"gitId":"chuhann"},"content":"        Command: find  Description: Find an event in the task list with the specified keyword "},{"lineNumber":1248,"author":{"gitId":"chuhann"},"content":"        Command: focus  Description: Change context. Changes the target of other commands to the specified "},{"lineNumber":1249,"author":{"gitId":"chuhann"},"content":"        target "},{"lineNumber":1250,"author":{"gitId":"chuhann"},"content":"        Command: postpone  Description: postpone task a day by default "},{"lineNumber":1251,"author":{"gitId":"chuhann"},"content":"        Command: help  Description: Print the list of available commands, or print the details of a "},{"lineNumber":1252,"author":{"gitId":"chuhann"},"content":"        specified command "},{"lineNumber":1253,"author":{"gitId":"chuhann"},"content":"        Command: stats  Description: Print statistics for a given modules/tasks "},{"lineNumber":1254,"author":{"gitId":"chuhann"},"content":"        Command: list  Description: Print a list of items depending on the current Focus "},{"lineNumber":1255,"author":{"gitId":"chuhann"},"content":"        Command: load  Description: Loads linked tasks to ONE specified module without adding them to the "},{"lineNumber":1256,"author":{"gitId":"chuhann"},"content":"        main task list "},{"lineNumber":1257,"author":{"gitId":"chuhann"},"content":"        Command: mc  Description: Print the number of MCs based on selected option. "},{"lineNumber":1258,"author":{"gitId":"chuhann"},"content":"        Command: next  Description: Switch the target region to the next page, keeping other regions "},{"lineNumber":1259,"author":{"gitId":"chuhann"},"content":"        unchanged. "},{"lineNumber":1260,"author":{"gitId":"chuhann"},"content":"        Command: plain  Description: Switch to a plain Cli. "},{"lineNumber":1261,"author":{"gitId":"chuhann"},"content":"        Command: prev  Description: Switch the target region to the previous page, keeping other regions "},{"lineNumber":1262,"author":{"gitId":"chuhann"},"content":"        unchanged. "},{"lineNumber":1263,"author":{"gitId":"chuhann"},"content":"        Command: reminder  Description: List out events and deadlines tasks that are due within 3 days "},{"lineNumber":1264,"author":{"gitId":"chuhann"},"content":"        Command: sel  Description: Make selection: Add specified item(s) to the selection. "},{"lineNumber":1265,"author":{"gitId":"chuhann"},"content":"        Command: snooze  Description: Delay the reminder pop up by 1 minute. "},{"lineNumber":1266,"author":{"gitId":"chuhann"},"content":"        Command: take  Description: Take module(s): Mark specified module(s) as taken. "},{"lineNumber":1267,"author":{"gitId":"chuhann"},"content":"        Command: todo  Description: Add a todo to the task list "},{"lineNumber":1268,"author":{"gitId":"chuhann"},"content":"        Command: undone  Description: Mark a task as undone "},{"lineNumber":1269,"author":{"gitId":"chuhann"},"content":"        Command: unknown  Description: Prints the error message for an unrecognized command for debugging "},{"lineNumber":1270,"author":{"gitId":"chuhann"},"content":"        purposes "},{"lineNumber":1271,"author":{"gitId":"chuhann"},"content":"        Command: unsel  Description: Cancel selection: Make specified item(s) no longer selected. "},{"lineNumber":1272,"author":{"gitId":"chuhann"},"content":"        Command: untake  Description: Untake module(s): Mark specified module(s) as not taken. "},{"lineNumber":1273,"author":{"gitId":"chuhann"},"content":"        Use \"help [target]\" to see details :) Try \"help help\"! "},{"lineNumber":1274,"author":{"gitId":"chuhann"},"content":"    _____________________________________________________________________________________________________________________"},{"lineNumber":1275,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1276,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1277,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1278,"author":{"gitId":"chuhann"},"content":"`help list`"},{"lineNumber":1279,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1280,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1281,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1282,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1283,"author":{"gitId":"chuhann"},"content":"    ___________________________________________________________________________________________"},{"lineNumber":1284,"author":{"gitId":"chuhann"},"content":"        Name: list "},{"lineNumber":1285,"author":{"gitId":"chuhann"},"content":"        Description: Print a list of items depending on the current Focus "},{"lineNumber":1286,"author":{"gitId":"chuhann"},"content":"        Syntax: "},{"lineNumber":1287,"author":{"gitId":"chuhann"},"content":"        list "},{"lineNumber":1288,"author":{"gitId":"chuhann"},"content":"        list date [asc / desc / spec \"date\"(any common date format)] "},{"lineNumber":1289,"author":{"gitId":"chuhann"},"content":"        Notes: "},{"lineNumber":1290,"author":{"gitId":"chuhann"},"content":"        1. When updates are done on the list (e.g : new \"todo\" task is added), \"list\" need to be run again "},{"lineNumber":1291,"author":{"gitId":"chuhann"},"content":"        to see the result of the update. "},{"lineNumber":1292,"author":{"gitId":"chuhann"},"content":"        2. There are 2 main list in this application (i.e. task and module list). For more explanation, "},{"lineNumber":1293,"author":{"gitId":"chuhann"},"content":"        refer to the diagram on \"Domsun Tutorial\" on the UserGuide. "},{"lineNumber":1294,"author":{"gitId":"chuhann"},"content":"        Usages: "},{"lineNumber":1295,"author":{"gitId":"chuhann"},"content":"        1. \"list\" \u003e\u003e list all added items "},{"lineNumber":1296,"author":{"gitId":"chuhann"},"content":"        2. \"list date asc\" \u003e\u003e list items with a \"date\" field in ascending order "},{"lineNumber":1297,"author":{"gitId":"chuhann"},"content":"        3. \"list date spec Oct 5 2020\" \u003e\u003e list items with specific \"date\" field of Oct 5 2020 "},{"lineNumber":1298,"author":{"gitId":"chuhann"},"content":"    ____________________________________________________________________________________________"},{"lineNumber":1299,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1300,"author":{"gitId":"chuhann"},"content":"   ```"},{"lineNumber":1301,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1302,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1303,"author":{"gitId":"chuhann"},"content":"### `fancy` - Switch the UI to the fancy mode"},{"lineNumber":1304,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1305,"author":{"gitId":"chuhann"},"content":"Typing `fancy` switches the UI to the fancy mode (GUI-like CLI interface).\u003cbr\u003e"},{"lineNumber":1306,"author":{"gitId":"chuhann"},"content":"This command has no effect if the UI is already in fancy mode.\u003cbr\u003e"},{"lineNumber":1307,"author":{"gitId":"scjx123"},"content":"The fancy mode only shows correctly if your terminal supports ANSI escape codes.\u003cbr\u003e"},{"lineNumber":1308,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1309,"author":{"gitId":"johanesrafael"},"content":"1. This feature can be used on Linux or Mac only. Error numbers will be displayed on Windows."},{"lineNumber":1310,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1311,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":1312,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1313,"author":{"gitId":"chuhann"},"content":"`fancy`"},{"lineNumber":1314,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1315,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1316,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1317,"author":{"gitId":"chuhann"},"content":"`fancy`"},{"lineNumber":1318,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1319,"author":{"gitId":"chuhann"},"content":"Expected outcome:"},{"lineNumber":1320,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1321,"author":{"gitId":"chuhann"},"content":"the UI switches to fancy mode (GUI-like CLI interface)."},{"lineNumber":1322,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1323,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1324,"author":{"gitId":"chuhann"},"content":"### `plain` - Switch the UI to the plain mode"},{"lineNumber":1325,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1326,"author":{"gitId":"chuhann"},"content":"Typing `plain` switches the UI to the plain mode (pure-text CLI interface). \u003cbr\u003e"},{"lineNumber":1327,"author":{"gitId":"chuhann"},"content":"This command has no effect if the UI is already in plain mode.\u003cbr\u003e"},{"lineNumber":1328,"author":{"gitId":"johanesrafael"},"content":"The plain mode shows correctly on all terminals.\u003cbr\u003e"},{"lineNumber":1329,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1330,"author":{"gitId":"scjx123"},"content":"1. Extra inputs after \"plain\" will be ignored. For example: If \"plain bye\" is input in, \"bye\" will be ignored, and \"plain\" will be executed."},{"lineNumber":1331,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1332,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":1333,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1334,"author":{"gitId":"chuhann"},"content":"`plain`"},{"lineNumber":1335,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1336,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":1337,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1338,"author":{"gitId":"chuhann"},"content":"`plain`"},{"lineNumber":1339,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1340,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":1341,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1342,"author":{"gitId":"chuhann"},"content":"The UI switches to plain mode (pure-text CLI interface)."},{"lineNumber":1343,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1344,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1345,"author":{"gitId":"chuhann"},"content":"### `next` - Switch the target region to the next page"},{"lineNumber":1346,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1347,"author":{"gitId":"chuhann"},"content":"Typing `next` switches the target region to the next page, should a next page exist.\u003cbr\u003e"},{"lineNumber":1348,"author":{"gitId":"johanesrafael"},"content":"This command has no effect on pure text CLI mode.\u003cbr\u003e"},{"lineNumber":1349,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1350,"author":{"gitId":"johanesrafael"},"content":"1. This function should be used in FANCY UI only."},{"lineNumber":1351,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1352,"author":{"gitId":"chuhann"},"content":"Syntax:"},{"lineNumber":1353,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1354,"author":{"gitId":"chuhann"},"content":"`next [region]` \u003cbr\u003e"},{"lineNumber":1355,"author":{"gitId":"chuhann"},"content":"`region: i(item list), s(selection), a(all, default)`"},{"lineNumber":1356,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1357,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1358,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1359,"author":{"gitId":"chuhann"},"content":"`next`"},{"lineNumber":1360,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1361,"author":{"gitId":"chuhann"},"content":"Expected outcome ***(GUI mode only)***:"},{"lineNumber":1362,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1363,"author":{"gitId":"scjx123"},"content":"Both regions of the GUI are switched to the next page if the next page is available."},{"lineNumber":1364,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1365,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1366,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1367,"author":{"gitId":"chuhann"},"content":"`next i`"},{"lineNumber":1368,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1369,"author":{"gitId":"chuhann"},"content":"Expected outcome ***(GUI mode only)***:"},{"lineNumber":1370,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1371,"author":{"gitId":"scjx123"},"content":"The item list region (top) of the GUI is switched to the next page if the next page is available."},{"lineNumber":1372,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1373,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1374,"author":{"gitId":"chuhann"},"content":"### `prev` - Switch the target region to the previous page"},{"lineNumber":1375,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1376,"author":{"gitId":"chuhann"},"content":"Typing `prev` switches the target region to the previous page, should a previous page exist.\u003cbr\u003e"},{"lineNumber":1377,"author":{"gitId":"johanesrafael"},"content":"This command has no effect on pure text CLI mode.\u003cbr\u003e"},{"lineNumber":1378,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1379,"author":{"gitId":"johanesrafael"},"content":"1. This function should be used in FANCY UI only."},{"lineNumber":1380,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1381,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":1382,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1383,"author":{"gitId":"chuhann"},"content":"`prev [region]` \u003cbr\u003e"},{"lineNumber":1384,"author":{"gitId":"chuhann"},"content":"`region: i(item list), s(selection), a(all, default)`"},{"lineNumber":1385,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1386,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":1387,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1388,"author":{"gitId":"chuhann"},"content":"`prev`"},{"lineNumber":1389,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1390,"author":{"gitId":"chuhann"},"content":"Expected outcome ***(GUI mode only)***:"},{"lineNumber":1391,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1392,"author":{"gitId":"scjx123"},"content":"Both regions of the GUI are switched to the previous page if a previous page is available."},{"lineNumber":1393,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1394,"author":{"gitId":"chuhann"},"content":"Example of usage: "},{"lineNumber":1395,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1396,"author":{"gitId":"chuhann"},"content":"`prev i`"},{"lineNumber":1397,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1398,"author":{"gitId":"chuhann"},"content":"Expected outcome ***(GUI mode only)***:"},{"lineNumber":1399,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1400,"author":{"gitId":"chuhann"},"content":"The item list region (top) of the GUI is switched to the previous page if a previous page is available."},{"lineNumber":1401,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1402,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1403,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1404,"author":{"gitId":"chuhann"},"content":"### `unknown` - Prints error message"},{"lineNumber":1405,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1406,"author":{"gitId":"chuhann"},"content":"Typing `unknown` or any string that is not a command will trigger the `unknown` command.\u003cbr\u003e"},{"lineNumber":1407,"author":{"gitId":"scjx123"},"content":"The `unknown` command prints an error message for debugging purposes, it is also the default behavior of the program"},{"lineNumber":1408,"author":{"gitId":"chuhann"},"content":"when it fails to recognize the user\u0027s command. \u003cbr\u003e"},{"lineNumber":1409,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1410,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1411,"author":{"gitId":"scjx123"},"content":"If the program recognizes the command successfully, yet fails to find the required parameters, "},{"lineNumber":1412,"author":{"gitId":"chuhann"},"content":"it will not trigger this `unknown` command. It will print a syntax error and remind the user of"},{"lineNumber":1413,"author":{"gitId":"chuhann"},"content":"the correct syntax instead."},{"lineNumber":1414,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1415,"author":{"gitId":"TomLBZ"},"content":"Syntax:"},{"lineNumber":1416,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1417,"author":{"gitId":"chuhann"},"content":"`unknown` \u003cbr\u003e `[anything that is not a command]`"},{"lineNumber":1418,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1419,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":1420,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1421,"author":{"gitId":"chuhann"},"content":"`who is duke?`"},{"lineNumber":1422,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1423,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":1424,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1425,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":1426,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1427,"author":{"gitId":"chuhann"},"content":"        OOPS, I don\u0027t know what that means :-( Try \"help\"!"},{"lineNumber":1428,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1429,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":1430,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1431,"author":{"gitId":"chuhann"},"content":"### `bye` - Quit the program"},{"lineNumber":1432,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1433,"author":{"gitId":"chuhann"},"content":"Typing `bye` results in the program saving the current task list to a local file named "},{"lineNumber":1434,"author":{"gitId":"scjx123"},"content":"`./data/duke.txt`, and then quit the program."},{"lineNumber":1435,"author":{"gitId":"johanesrafael"},"content":"Note: "},{"lineNumber":1436,"author":{"gitId":"scjx123"},"content":"1. Extra inputs after \"bye\" will be ignored. For example: If \"bye domsun\" is input in, \"domsun\" will be ignored, and \"bye\" will be executed."},{"lineNumber":1437,"author":{"gitId":"TomLBZ"},"content":"         "},{"lineNumber":1438,"author":{"gitId":"TomLBZ"},"content":"Example of usage: "},{"lineNumber":1439,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1440,"author":{"gitId":"chuhann"},"content":"`bye`"},{"lineNumber":1441,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1442,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":1443,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1444,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":1445,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1446,"author":{"gitId":"chuhann"},"content":"        Bye. Hope to see you again soon!"},{"lineNumber":1447,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1448,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":1449,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1450,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":1451,"author":{"gitId":"TomLBZ"},"content":"### Triggering the syntax reminder"},{"lineNumber":1452,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1453,"author":{"gitId":"scjx123"},"content":"Typing a correct command with the wrong syntax will trigger the syntax reminder."},{"lineNumber":1454,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1455,"author":{"gitId":"TomLBZ"},"content":"Example of usage:"},{"lineNumber":1456,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1457,"author":{"gitId":"chuhann"},"content":"`deadline -by 10-10-10`\u003cbr\u003e"},{"lineNumber":1458,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1459,"author":{"gitId":"TomLBZ"},"content":"Note that the command `deadline` is a correct command, but:\u003cbr\u003e"},{"lineNumber":1460,"author":{"gitId":"TomLBZ"},"content":"1. Description is missing"},{"lineNumber":1461,"author":{"gitId":"chuhann"},"content":"2. Parameter name is wrong"},{"lineNumber":1462,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1463,"author":{"gitId":"TomLBZ"},"content":"Expected outcome:"},{"lineNumber":1464,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1465,"author":{"gitId":"TomLBZ"},"content":"   ```  "},{"lineNumber":1466,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1467,"author":{"gitId":"TomLBZ"},"content":"        Invalid Command! Please check the syntax."},{"lineNumber":1468,"author":{"gitId":"chuhann"},"content":"        deadline [description] -by [time]"},{"lineNumber":1469,"author":{"gitId":"TomLBZ"},"content":"    ____________________________________________________________"},{"lineNumber":1470,"author":{"gitId":"TomLBZ"},"content":"   ```"},{"lineNumber":1471,"author":{"gitId":"-"},"content":""},{"lineNumber":1472,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":1473,"author":{"gitId":"-"},"content":""},{"lineNumber":1474,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":1475,"author":{"gitId":"-"},"content":""},{"lineNumber":1476,"author":{"gitId":"TomLBZ"},"content":"**A**: Send the `data` folder in your program directory to the program directory on your new device."},{"lineNumber":1477,"author":{"gitId":"-"},"content":""},{"lineNumber":1478,"author":{"gitId":"chuhann"},"content":"**Q**: How do I run this program?"},{"lineNumber":1479,"author":{"gitId":"-"},"content":""},{"lineNumber":1480,"author":{"gitId":"chuhann"},"content":"**A**: To run this program execute the jar file by ‘java -jar domnus.jar’"}],"authorContributionMap":{"johanesrafael":62,"TomLBZ":319,"chuhann":956,"-":23,"scjx123":74,"adinata15":46}},{"path":"docs/team/adinata15.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"## 1. Overview"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":"### 1.1 Project Overview "},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"DOMNUS - is a desktop application that helps in module and task tracking. It was developed under the module CS2113 Software Engineering \u0026 Object Oriented Programming. Within the schedule of approximately 7 weeks, my team of 5 Computer Engineering students successfully created DOMNUS to help students to stay organize with respective to the modules they take in NUS. "},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"## 2. Summary of Contributions"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"Given below are my contributions to the project. "},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"### 2.1 Enhancements Implemented: "},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":"New Feature: "},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"CAP calculator (later improved by tomlbz)"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e "},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"What it does:"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"It allows user to calculate their current/projected CAP value. They can also input custom modules and grades."},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"Justification:"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"Since \"domsun\" is a task and module scheduler, its user (diligent NUS student) will want to measure the result of their hard work (CAP value) after the exam."},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"Highlights:"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"This action can be easily integrated with other actions in the future. Functions like `getObjectInfo` and `modifyObject` can be passed on to actions that need cap calculation too such as `GoalAction`."},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"Credits: "},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"@tomlbz for improving the code quality and integrating CAP action with other actions in OOP manner."},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"New Feature: "},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"Goal calculator (later improved by tomlbz)"},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"What it does:"},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"Calculate and comment on how far user is from his dream CAP."},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":"Justification:"},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":"As studying for a long time, the user will want to know what grade he should get on average to achieve his goal. `Goal` also will tell the user whether his goal is realistic or not."},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"Highlights:"},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"This feature is synchronised with Cap Calculator and Grade Action so user can just need to input their grade once with Grade Action."},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":"Credits: "},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"@tomlbz for improving the code quality and integrating CAP action with other actions in OOP manner."},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":"New Feature: "},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"Grade Action (later improved by tomlbz)"},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"What it does:"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":"Allow user to add in and modify their grade on a particular taken module."},{"lineNumber":49,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":50,"author":{"gitId":"adinata15"},"content":"Justification:"},{"lineNumber":51,"author":{"gitId":"adinata15"},"content":"After result release, user will want to register their grade to \"domsun\" for futher calculation (i.e. calculate CAP)."},{"lineNumber":52,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":53,"author":{"gitId":"adinata15"},"content":"Highlights:"},{"lineNumber":54,"author":{"gitId":"adinata15"},"content":"This fucntion can be easily implemented by other future action that needs grade registration such as CAP and Goal calculator. "},{"lineNumber":55,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":56,"author":{"gitId":"adinata15"},"content":"Credits:"},{"lineNumber":57,"author":{"gitId":"adinata15"},"content":"@tomlbz for improving the code quality and integrating CAP action with other actions in OOP manner. "},{"lineNumber":58,"author":{"gitId":"adinata15"},"content":"\u003cbr\u003e"},{"lineNumber":59,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":60,"author":{"gitId":"adinata15"},"content":"Testing:"},{"lineNumber":61,"author":{"gitId":"adinata15"},"content":"Implement testing for Add, Cap, Goal, Grade, Load, Module, and TaskActions."},{"lineNumber":62,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":63,"author":{"gitId":"adinata15"},"content":"**Code Contributed**: [Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dadinata15\u0026tabRepo\u003dAY2021S1-CS2113-T13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":64,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":65,"author":{"gitId":"adinata15"},"content":"### 2.2 Contributions to UG: "},{"lineNumber":66,"author":{"gitId":"adinata15"},"content":"- Contributed to parts of Preliminaries."},{"lineNumber":67,"author":{"gitId":"adinata15"},"content":"- Contributed to explanation of general feature."},{"lineNumber":68,"author":{"gitId":"adinata15"},"content":"### 2.3 Contributions to DG:"},{"lineNumber":69,"author":{"gitId":"adinata15"},"content":"- Implement sequence diagram"},{"lineNumber":70,"author":{"gitId":"adinata15"},"content":"- Contributed to explantion of general feature."},{"lineNumber":71,"author":{"gitId":"adinata15"},"content":"### 2.4 Contributions to team-based tasks: "},{"lineNumber":72,"author":{"gitId":"adinata15"},"content":"Manual testing of codes, prepare meeting links, post issues on Github for debugging."},{"lineNumber":73,"author":{"gitId":"adinata15"},"content":"### 2.5 Contributions to CS2113 forum: "},{"lineNumber":74,"author":{"gitId":"adinata15"},"content":"- Asking questions for other to refer to."}],"authorContributionMap":{"adinata15":74}},{"path":"docs/team/chuhann.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuhann"},"content":"## 1. Overview"},{"lineNumber":2,"author":{"gitId":"chuhann"},"content":"### 1.1 Project Overview "},{"lineNumber":3,"author":{"gitId":"chuhann"},"content":"DOMNUS - is a desktop application that helps in module and task tracking. It was developed under the module CS2113 Software Engineering \u0026 Object Oriented Programming. Within the schedule of approximately 7 weeks, my team of 5 Computer Engineering students successfully created DOMNUS to help students to stay organize with respective to the modules they take in NUS. "},{"lineNumber":4,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":5,"author":{"gitId":"chuhann"},"content":"## 2. Summary of Contributions"},{"lineNumber":6,"author":{"gitId":"chuhann"},"content":"Given below are my contributions to the project. "},{"lineNumber":7,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":8,"author":{"gitId":"chuhann"},"content":"### 2.1 Enhancements Implemented: "},{"lineNumber":9,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":10,"author":{"gitId":"chuhann"},"content":"* New Feature: Reminder"},{"lineNumber":11,"author":{"gitId":"chuhann"},"content":"\t* What it does:"},{"lineNumber":12,"author":{"gitId":"chuhann"},"content":"Allows the user to set reminder for tasks that are due within 3 days"},{"lineNumber":13,"author":{"gitId":"chuhann"},"content":"\t* Justification:"},{"lineNumber":14,"author":{"gitId":"chuhann"},"content":"This feature allow users to know what tasks are going to be due by having a message every 5 minutes"},{"lineNumber":15,"author":{"gitId":"chuhann"},"content":"\t* Highlights:"},{"lineNumber":16,"author":{"gitId":"chuhann"},"content":"This feature can be further integrated to remind top 10 tasks in the future"},{"lineNumber":17,"author":{"gitId":"chuhann"},"content":"\t* Credits (optional):"},{"lineNumber":18,"author":{"gitId":"chuhann"},"content":"@johanesrafael for improving the code quality"},{"lineNumber":19,"author":{"gitId":"chuhann"},"content":"\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":21,"author":{"gitId":"chuhann"},"content":"* New Feature: Postpone"},{"lineNumber":22,"author":{"gitId":"chuhann"},"content":"\t* What it does:"},{"lineNumber":23,"author":{"gitId":"chuhann"},"content":"Allows the user to postpone a deadline or event task if user schedule any changes at any time"},{"lineNumber":24,"author":{"gitId":"chuhann"},"content":"\t* Justification:"},{"lineNumber":25,"author":{"gitId":"chuhann"},"content":"This feature allows users to "},{"lineNumber":26,"author":{"gitId":"chuhann"},"content":"\t* Highlights:"},{"lineNumber":27,"author":{"gitId":"chuhann"},"content":"Postpone feature can be enhanced to deal with non-date items in the future"},{"lineNumber":28,"author":{"gitId":"chuhann"},"content":"\t* Credits (optional):"},{"lineNumber":29,"author":{"gitId":"chuhann"},"content":"@johanesrafael for improving the code quality "},{"lineNumber":30,"author":{"gitId":"chuhann"},"content":"\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":32,"author":{"gitId":"chuhann"},"content":"* New Feature: Snooze"},{"lineNumber":33,"author":{"gitId":"chuhann"},"content":"\t* What it does:"},{"lineNumber":34,"author":{"gitId":"chuhann"},"content":"Allows the user to delay the \"pop up\" message by \"snoozing\" it"},{"lineNumber":35,"author":{"gitId":"chuhann"},"content":"\t* Justification:"},{"lineNumber":36,"author":{"gitId":"chuhann"},"content":"Reminder \"pop up\" message can be a little annoying if it comes up every 5 minutes, hence this feature gives user an option to delay the \"pop up\" message"},{"lineNumber":37,"author":{"gitId":"chuhann"},"content":"\t* Highlights:"},{"lineNumber":38,"author":{"gitId":"chuhann"},"content":"Snooze feature can be improved by adding more fields to cater for more options"},{"lineNumber":39,"author":{"gitId":"chuhann"},"content":"\t* Credits (optional):"},{"lineNumber":40,"author":{"gitId":"chuhann"},"content":"@johanesrafael for improving the code quality"},{"lineNumber":41,"author":{"gitId":"chuhann"},"content":"\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":43,"author":{"gitId":"chuhann"},"content":"* New Feature: Focus"},{"lineNumber":44,"author":{"gitId":"chuhann"},"content":"\t* What it does:"},{"lineNumber":45,"author":{"gitId":"chuhann"},"content":"Allows the user to change context to \"todo\", \"event\", \"deadline\", \"task\", \"mod\", \"selected\" or \"taken\""},{"lineNumber":46,"author":{"gitId":"chuhann"},"content":"\t* Justification:"},{"lineNumber":47,"author":{"gitId":"chuhann"},"content":"Instead of viewing a whole list of combined tasks, changing context to specific task such as \"todo\" only lists on \"todo\" stuff and makes viewing of tasks neater"},{"lineNumber":48,"author":{"gitId":"chuhann"},"content":"\t* Highlights:"},{"lineNumber":49,"author":{"gitId":"chuhann"},"content":"This feature can be enhanced to change the context to multiple context such as \"todo\" and \"event\" in the future"},{"lineNumber":50,"author":{"gitId":"chuhann"},"content":"\t* Credits (optional): "},{"lineNumber":51,"author":{"gitId":"chuhann"},"content":"@tomlbz for fixing the bugs and code quality"},{"lineNumber":52,"author":{"gitId":"chuhann"},"content":"\u003cbr\u003e"},{"lineNumber":53,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":54,"author":{"gitId":"chuhann"},"content":"**Code Contributed**: [Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dchuhann\u0026tabRepo\u003dAY2021S1-CS2113-T13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code)"},{"lineNumber":55,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":56,"author":{"gitId":"chuhann"},"content":"### 2.2 Contributions to UG:"},{"lineNumber":57,"author":{"gitId":"chuhann"},"content":"* Contributed to the structure of user guide and command summary"},{"lineNumber":58,"author":{"gitId":"chuhann"},"content":"* Documented guide for various commands."},{"lineNumber":59,"author":{"gitId":"chuhann"},"content":"* Ensuring the formatting and links are in place"},{"lineNumber":60,"author":{"gitId":"chuhann"},"content":"* Resolve issues from peer testing"},{"lineNumber":61,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":62,"author":{"gitId":"chuhann"},"content":"### 2.3 Contributions to DG:"},{"lineNumber":63,"author":{"gitId":"chuhann"},"content":"* Designed the overall flow of DOMSUN"},{"lineNumber":64,"author":{"gitId":"chuhann"},"content":"* Contributed to the standardisation of sequence diagram"},{"lineNumber":65,"author":{"gitId":"chuhann"},"content":"* Contributed to the Reminder feature flow"},{"lineNumber":66,"author":{"gitId":"chuhann"},"content":"* Resolve issues from peer testing"},{"lineNumber":67,"author":{"gitId":"chuhann"},"content":"* Grammer and spelling checks for developer guide"},{"lineNumber":68,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":69,"author":{"gitId":"chuhann"},"content":"### 2.4 Contributions to team-based tasks: "},{"lineNumber":70,"author":{"gitId":"chuhann"},"content":"* Overall testing for main program"},{"lineNumber":71,"author":{"gitId":"chuhann"},"content":"* Checks on input validation"}],"authorContributionMap":{"chuhann":71}},{"path":"docs/team/johanesrafael.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"# Johanes Rafael Sudardji - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"johanesrafael"},"content":"\u003c!-- @@author johanesrafael --\u003e"},{"lineNumber":3,"author":{"gitId":"johanesrafael"},"content":"## 1. Overview"},{"lineNumber":4,"author":{"gitId":"johanesrafael"},"content":"### 1.1 Project Overview "},{"lineNumber":5,"author":{"gitId":"johanesrafael"},"content":"DOMNUS - is a desktop application that helps in module and task tracking. It was developed under the module CS2113 Software Engineering \u0026 Object Oriented Programming. Within the schedule of approximately 7 weeks, my team of 5 Computer Engineering students successfully created DOMNUS to help students to stay organize with respective to the modules they take in NUS. "},{"lineNumber":6,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":7,"author":{"gitId":"johanesrafael"},"content":"## 2. Summary of Contributions"},{"lineNumber":8,"author":{"gitId":"johanesrafael"},"content":"Given below are my contributions to the project. "},{"lineNumber":9,"author":{"gitId":"johanesrafael"},"content":"- Co-SubTeam Lead: Responsible for daily task functionality enhancements project coordination alongside Kwek Chu Han. "},{"lineNumber":10,"author":{"gitId":"johanesrafael"},"content":"- GitHub Expert: Responsible for setting up, monitoring GitHub workflow, and solving GitHub-related issues."},{"lineNumber":11,"author":{"gitId":"johanesrafael"},"content":"- Integrating, Scheduling, and Tracking: In charge of assigning and tracking daily task enhancements task. Worked with Kwek Chu Han for implementing additional features."},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"- In charge of `focus`, `reminder`, `snooze`, `postpone` of the code. "},{"lineNumber":13,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":14,"author":{"gitId":"johanesrafael"},"content":"### 2.1 Enhancements Implemented: "},{"lineNumber":15,"author":{"gitId":"johanesrafael"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":17,"author":{"gitId":"johanesrafael"},"content":"New Feature: `Postpone [index] or [h/w/y] [index]`"},{"lineNumber":18,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e "},{"lineNumber":19,"author":{"gitId":"johanesrafael"},"content":"What it does: Typing `postpone [index] or [h /w /y] [index]` delays a task specified by the user or by default a day with option `h` for an hour,`w` for a week, or `y` for a year."},{"lineNumber":20,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":21,"author":{"gitId":"johanesrafael"},"content":"Justification: To postpone a deadline or event task directly if the user schedule changes at any time."},{"lineNumber":22,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"johanesrafael"},"content":"Highlights: This commands can be enhanced in the future for intelligent postpone functionality that could also handle custom date and/or time such as Mon, and/or 9 pm."},{"lineNumber":24,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":26,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":27,"author":{"gitId":"johanesrafael"},"content":"New Feature: `Snooze`"},{"lineNumber":28,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"johanesrafael"},"content":"What it does: Typing `snooze` delays reminder popup by a default of 1 minute."},{"lineNumber":30,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"johanesrafael"},"content":"Justification: reminder popup can sometimes be disturbing to the user so by typing snooze, the popup will have a longer delay. Hence, the user can type without disturbance."},{"lineNumber":32,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"johanesrafael"},"content":"Highlights: This enhancement affects the automatic reminder functionality."},{"lineNumber":34,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":36,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":37,"author":{"gitId":"johanesrafael"},"content":"New Feature: `Reminder`"},{"lineNumber":38,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"johanesrafael"},"content":"What it does: Typing `reminder` prints the tasks that are due within a certain time range or to activate the reminder."},{"lineNumber":40,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"johanesrafael"},"content":"Justification: since the reminder popup scheduler sometimes can be too long for the user. The user can easily call the reminder popup by typing reminder."},{"lineNumber":42,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"johanesrafael"},"content":"Highlights: The reminder popup may affect the whole user experience. However, this particular feature will only be executed when typing `reminder` "},{"lineNumber":44,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":46,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":47,"author":{"gitId":"johanesrafael"},"content":"New Feature: `Focus` (Created the first version)"},{"lineNumber":48,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"johanesrafael"},"content":"What it does: changes the context that all other commands are based on the specified target. "},{"lineNumber":50,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"johanesrafael"},"content":"Justification: The user should also be able to change context so that the user can only focus on single task type list."},{"lineNumber":52,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":53,"author":{"gitId":"johanesrafael"},"content":"Highlights: The first implementation of this command affected existing commands drastically. The updated version is currently present and working."},{"lineNumber":54,"author":{"gitId":"johanesrafael"},"content":"\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":56,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":57,"author":{"gitId":"johanesrafael"},"content":"**Code Contributed**: [Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djohanesrafael\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other) to view the report of code contribution."},{"lineNumber":58,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":59,"author":{"gitId":"johanesrafael"},"content":"### 2.2 Contributions to UG: "},{"lineNumber":60,"author":{"gitId":"johanesrafael"},"content":"Filled up the following: [Features Notes](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/302/commits/3e8b227b25d479d2318e4123e859eea179e0e9c1), [Snooze](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/254/files), [Postpone](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/254/files), [Reminder](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/254/commits/ee660f51f5d00c0bc319cc9a6e0529860b11c183)."},{"lineNumber":61,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":62,"author":{"gitId":"johanesrafael"},"content":"### 2.3 Contributions to DG:"},{"lineNumber":63,"author":{"gitId":"johanesrafael"},"content":"Created the following: [Postpone](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/179/files), Snooze([#210](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/210/commits/71648f59e06871760376f7df811aea4dced64d5f) and [direct commit](https://github.com/AY2021S1-CS2113-T13-2/tp/commit/fd2f42a35c72814287a7456069e234cf3b8e36f8)), [Focus](https://github.com/AY2021S1-CS2113-T13-2/tp/commit/2d32787c08255977dbe9dea2d8ff7f22ed4457d3)"},{"lineNumber":64,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":65,"author":{"gitId":"johanesrafael"},"content":"### 2.4 Contributions to team-based tasks: "},{"lineNumber":66,"author":{"gitId":"johanesrafael"},"content":"Set up the GitHub team organization and repository, monitored repository, co-created milestones and proposed [issues](https://github.com/AY2021S1-CS2113-T13-2/tp/issues?q\u003dis%3Aissue+is%3Aclosed+author%3Ajohanesrafael). Updated [User Guide](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/UserGuide.md) documents and [HelpText](https://github.com/AY2021S1-CS2113-T13-2/tp/pull/302/files) class."}],"authorContributionMap":{"johanesrafael":66}},{"path":"docs/team/scjx123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":"# Chan Jian Xiang - Project Portfolio Page"},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"## 1. Overview"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"### 1.1 Project Overview "},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"DOMNUS - is a desktop application that helps in module and task tracking. It was developed under the module CS2113 Software Engineering \u0026 Object Oriented Programming. Within the schedule of approximately 7 weeks, my team of 5 Computer Engineering students successfully created DOMNUS to help students to stay organize with respective to the modules they take in NUS. "},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":"This is what out product looks like: "},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"![here](../../UI.png)"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":"## 2. Summary of Contributions"},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"Given below are my contributions to the project. "},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":"### 2.1 Enhancements Implemented: "},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"**MC Feature**: Added the ability to list total number of MCs or the individual components that made up the MC based on the selected list.\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":"**What it does**: Allows the user to print the total number of MC based on the list that he/she is focusing on (i.e list of taken module). See the individual components that made up the total MC using this feature by typing `mc -d`\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"**Justification**: This feature improves the product as user would want to keep track of his current taken module\u0027s MC so as to prevent overloading/under-loading of modules in the upcoming semester. \u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"**Highlights**: This enhancement works well with the existing CAP calculation feature, as it allows the aforementioned feature to make use of the total MC to do further mathematical calculation of the user\u0027s CAP. This aligns with the practice of code reusability. \u003cbr\u003e"},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"**Statistic Feature**: Added the ability to show the statistics of the number of task that have been completed. \u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"**What it does**: Allows users to track the current completion status of their tasks. \u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"**Justification**: Very often, students are not sure of how much task have been completed or how much are they left with for the week. This feature enables them to keep track of their weekly progress. \u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"**Highlights**:  This feature is capable of keeping track of individual module\u0027s task progress as well. This works in conjuncture with the ability to add individual task to the modules which allow user to better track his/her progress. \u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"**Recurrence Feature**: Added the ability to allow user to add Recurring Tasks.\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"**What it does**: Allows user to add weekly recurring task such as a weekly meeting or weekly quiz. \u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":"**Justification**: It is common to have a weekly meeting amongst the busy students schedule. This features enables the user to do so simply by adding `Weekly` at the end of a deadline or event command. Be it a weekly quiz or weekly CCA meeting, this helps users to quickly setup a weekly schedule. \u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"**Highlights**: The combination of this feature with the reminder feature done by the 2 other student Computer Engineer on our team, will enable the student using this app to plan ahead of his time for the upcoming schedule. Which is a key factor in productivity for the student. \u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":"**Code Contributed**: "},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":"[Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dscjx123\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"### 2.2 Contributions to UG: "},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"The following section shows my contribution to the DOMNUS User Guide. It includes: Domsun Tutorial, mc and stats. \u003cbr\u003e"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":"{start of extract}\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"### Domsun Tutorial "},{"lineNumber":39,"author":{"gitId":"scjx123"},"content":"As a beginning, here is how Domsun works. It has 3 lists that you should take note of as shown below. (The lists shown are non-exhaustive, as there are other dynamic lists that are created based on the `focus` command. Do refer to `focus` section of this User Guide for more details). "},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":"![here](../Images/Overview1.PNG)"},{"lineNumber":41,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"1. `focus` command focuses the app onto the list of tasks that you currently have. "},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"2. Likewise, `focus mod` focuses the app on the entire list of modules available in NUS, while `focus taken` is the list of taken modules of your choice. "},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"3. To add a task under a module, you may enter the command `add -task 1 3 -mod CS2113`. 1 and 3 here are indices of the tasks in the task list. So be sure to have some task added BEFORE typing this command. "},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"4. To mark a module as \u0027taken\u0027, you may enter `take CS2113 CS1010` while focusing on the module list by using `focus mod`. alternatively, you may use the indices method as before such as `take 1 4` to take the 1st and 2nd module available on the module list. "},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":"5. The `list` commands follows the app\u0027s current focus. If it is focusing on list of tasks, typing `list` will show all tasks. Likewise for modules and taken. "},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"6. Typing `detail 1` when focusing on tasks list, will display the 1st index, task details. "},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"7. Note that `detail 2` here will display different results as the two indices of 2 represent different modules! The one on the left represents CG2027 while the one on the right represent CS1010. "},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":"**A point to note before venturing into the libraries of commands that we have.**\u003cbr\u003e "},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"- You can switch between fancy mode display, and plain display anytime during the program. "},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"During `list` command, you will be able to toggle between pages of fancy by using `prev` and `next`"},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":"However, the current version of fancy mode is still in beta, hence, it is expected to not be able to fully display certain commands that are too long. such as `help`, `detail`,`mc` etc. Do look forward to the next update!\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":"![here](../Images/Overview2.PNG)\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"{end of extract} \u003cbr\u003e"},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":"The Domsun tutorial section was a result of the peer feedback during the PE Dry run. As i realised the importance of building the intuition in user to know how the app actually works, i decided to bridge the learning gap by providing a pictorial guide for the user. \u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"Below shows the extract of the `mc` and `stats` section contributed by me in the User Guide. \u003cbr\u003e"},{"lineNumber":59,"author":{"gitId":"scjx123"},"content":"{start of extract} \u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":"### `mc` - Prints MCs"},{"lineNumber":61,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":62,"author":{"gitId":"scjx123"},"content":"Typing `mc` prints the number of MCs based on selected option. By default, this command focuses on the entire module list. In order to print the MC of taken modules, do remember to enter \u0027focus taken\u0027 before proceeding with this command. "},{"lineNumber":63,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":"Syntax:"},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"`mc [-option] [-detail]` \u003cbr\u003e"},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":"`option: -d(detailed)`"},{"lineNumber":68,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":"Example of usage (when there are modules in the target): "},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":"`mc`"},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":"Expected outcome:"},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"   ```  "},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":77,"author":{"gitId":"scjx123"},"content":"    Here is the total MC:"},{"lineNumber":78,"author":{"gitId":"scjx123"},"content":"    22"},{"lineNumber":79,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":80,"author":{"gitId":"scjx123"},"content":"   ```"},{"lineNumber":81,"author":{"gitId":"scjx123"},"content":"Example of usage (when there are modules in the target): "},{"lineNumber":82,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":83,"author":{"gitId":"scjx123"},"content":"`mc -d`"},{"lineNumber":84,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":85,"author":{"gitId":"scjx123"},"content":"Expected outcome:"},{"lineNumber":86,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":87,"author":{"gitId":"scjx123"},"content":"   ```  "},{"lineNumber":88,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":89,"author":{"gitId":"scjx123"},"content":"    Here is the total MC:"},{"lineNumber":90,"author":{"gitId":"scjx123"},"content":"    EE1001: 4MCs"},{"lineNumber":91,"author":{"gitId":"scjx123"},"content":"    EE1001X: 4MCs"},{"lineNumber":92,"author":{"gitId":"scjx123"},"content":"    EE1002: 4MCs"},{"lineNumber":93,"author":{"gitId":"scjx123"},"content":"    EE1003: 4MCs"},{"lineNumber":94,"author":{"gitId":"scjx123"},"content":"    EE1111: 6MCs"},{"lineNumber":95,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":96,"author":{"gitId":"scjx123"},"content":"   ```"},{"lineNumber":97,"author":{"gitId":"scjx123"},"content":"### `stats` - Prints Statistics"},{"lineNumber":98,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":99,"author":{"gitId":"scjx123"},"content":"Typing `stats` prints the percentage of the task completed."},{"lineNumber":100,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":101,"author":{"gitId":"scjx123"},"content":"Syntax:"},{"lineNumber":102,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":103,"author":{"gitId":"scjx123"},"content":"`stats [-option] [-detail]` \u003cbr\u003e"},{"lineNumber":104,"author":{"gitId":"scjx123"},"content":"`option: -mod` \u003cbr\u003e"},{"lineNumber":105,"author":{"gitId":"scjx123"},"content":"`detail: [module code]`"},{"lineNumber":106,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":107,"author":{"gitId":"scjx123"},"content":"Example of usage (when focused on task list, and no task is completed): "},{"lineNumber":108,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":109,"author":{"gitId":"scjx123"},"content":"`stats`"},{"lineNumber":110,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":111,"author":{"gitId":"scjx123"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":113,"author":{"gitId":"scjx123"},"content":"   ```  "},{"lineNumber":114,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":115,"author":{"gitId":"scjx123"},"content":"    Here are the statistics: "},{"lineNumber":116,"author":{"gitId":"scjx123"},"content":"    [0.0%]"},{"lineNumber":117,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":118,"author":{"gitId":"scjx123"},"content":"   ```"},{"lineNumber":119,"author":{"gitId":"scjx123"},"content":"Example of usage (when checking specific modules, with all task completed): "},{"lineNumber":120,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":121,"author":{"gitId":"scjx123"},"content":"`stats -mod CS2113 `"},{"lineNumber":122,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":123,"author":{"gitId":"scjx123"},"content":"Expected outcome:"},{"lineNumber":124,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":125,"author":{"gitId":"scjx123"},"content":"   ```  "},{"lineNumber":126,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":127,"author":{"gitId":"scjx123"},"content":"    Here are the statistics: "},{"lineNumber":128,"author":{"gitId":"scjx123"},"content":"    [100.0%]"},{"lineNumber":129,"author":{"gitId":"scjx123"},"content":"    ____________________________________________________________"},{"lineNumber":130,"author":{"gitId":"scjx123"},"content":"   ```"},{"lineNumber":131,"author":{"gitId":"scjx123"},"content":"{end of extract} "},{"lineNumber":132,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":133,"author":{"gitId":"scjx123"},"content":"### 2.3 Contributions to DG:"},{"lineNumber":134,"author":{"gitId":"scjx123"},"content":"The following section shows my contribution to the DOMNUS Developer Guide. It includes: Introduction, Setting up, (Design) 4.1, 4.2, 4.5, 4.6, (Implementation) 5.2, Appendix A,B,C,D,E,F. \u003cbr\u003e"},{"lineNumber":135,"author":{"gitId":"scjx123"},"content":"{start of extract}"},{"lineNumber":136,"author":{"gitId":"scjx123"},"content":"### 4.1 Architecture"},{"lineNumber":137,"author":{"gitId":"scjx123"},"content":"The **Architecture Diagram** below represents a high-level design overview of the App. Specifically, it is done with an N-tier architectural style, where the higher layers make use of services provided by lower layers. "},{"lineNumber":138,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":139,"author":{"gitId":"scjx123"},"content":"![here](../Images/Architecture_Diagram.PNG)"},{"lineNumber":140,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":141,"author":{"gitId":"scjx123"},"content":"As shown in the above diagram, the user only interacts with the UI layer and their commands, in turn, will be passed to the next adjacent layer. Given below is a quick overview of each component. "},{"lineNumber":142,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":143,"author":{"gitId":"scjx123"},"content":"**4.2 Main Layer**\u003cbr\u003e"},{"lineNumber":144,"author":{"gitId":"scjx123"},"content":"The `main` layer, it contains a single class known as `Domnus`. Its purpose can be split into 3 parts: "},{"lineNumber":145,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":146,"author":{"gitId":"scjx123"},"content":"At Start-Up: It calls upon the `storage` component to load the user\u0027s past data and it also loads the complete module list that is packaged inside the JAR file. \u003cbr\u003e"},{"lineNumber":147,"author":{"gitId":"scjx123"},"content":"At Operating: It connects the relevant component of the program to ensure the program is operating as per the intended logic flow. \u003cbr\u003e"},{"lineNumber":148,"author":{"gitId":"scjx123"},"content":"At Shutdown: It exits the running loop of the program to shut down the program successfully. \u003cbr\u003e"},{"lineNumber":149,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":150,"author":{"gitId":"scjx123"},"content":"**4.5 Execute Layer**\u003cbr\u003e"},{"lineNumber":151,"author":{"gitId":"scjx123"},"content":"The `Execute` layer carries out the relevant actions required based on the analyzed input. All of the features in the program are stored under this layer which is under the package name `command`. To summarize, this layer is responsible for: "},{"lineNumber":152,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":153,"author":{"gitId":"scjx123"},"content":"1) Match the user\u0027s command to the relevant actions."},{"lineNumber":154,"author":{"gitId":"scjx123"},"content":"2) Throw any exception based on erroneous user input/invalid conditions. "},{"lineNumber":155,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":156,"author":{"gitId":"scjx123"},"content":"**4.6 Storage Layer**\u003cbr\u003e"},{"lineNumber":157,"author":{"gitId":"scjx123"},"content":"The `Storage` layer loads, saves, and do pre-data processing before performing the two aforementioned action. It is active in 2 phases. "},{"lineNumber":158,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":159,"author":{"gitId":"scjx123"},"content":"During the loading phase: "},{"lineNumber":160,"author":{"gitId":"scjx123"},"content":"1) For the user\u0027s task: This layer translates the previously (if any) saved data format into recognizable commands and loads these data as per how the app functions during runtime. "},{"lineNumber":161,"author":{"gitId":"scjx123"},"content":"2) For the module list: This layer conducts simple parsing of the text file containing all the modules and stores them creates individual items known as `SingleModule` before loading them into an ArrayList. "},{"lineNumber":162,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":163,"author":{"gitId":"scjx123"},"content":"During the saving phase: "},{"lineNumber":164,"author":{"gitId":"scjx123"},"content":"1) For the user\u0027s task: This layer saves any changes that the user made to the task list onto a text file. "},{"lineNumber":165,"author":{"gitId":"scjx123"},"content":"2) For the module list: This layer saves any module marked `TAKEN` by the user onto a text file, together with the relevant module information such as module\u0027s code, and grade attained (if any).  "},{"lineNumber":166,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":167,"author":{"gitId":"scjx123"},"content":"### 5.2 Statistic Feature "},{"lineNumber":168,"author":{"gitId":"scjx123"},"content":"The statistic feature is facilitated by the `StatsAction` class. It extends `Action` class, and it functions under the architectural component `execute`. Internally, it stores an arraylist of Item object in `targetList`. This class implements the following operation: "},{"lineNumber":169,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":170,"author":{"gitId":"scjx123"},"content":" - `prepare()` - Sets `isMod` flag according to user\u0027s "},{"lineNumber":171,"author":{"gitId":"scjx123"},"content":" - `act()`- Gets `targetList` and calculates the raw ratio of the completed items."},{"lineNumber":172,"author":{"gitId":"scjx123"},"content":" - `roundedRatioBar()`- Returns a rounded ratio enclosed in square brackets for printing. \u003cbr\u003e"},{"lineNumber":173,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":174,"author":{"gitId":"scjx123"},"content":"The diagram below shows the various class associated with `StatsAction`"},{"lineNumber":175,"author":{"gitId":"scjx123"},"content":"![statsDiagram](../Images/StatsActionClass.png)"},{"lineNumber":176,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":177,"author":{"gitId":"scjx123"},"content":"Given below is an example usage scenario and how the statistic mechanism behaves at each step. "},{"lineNumber":178,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":179,"author":{"gitId":"scjx123"},"content":"Step 1. The user enters `stats -mod CS2113`\tonce the execute layer executes the message and calls `action.prepare()` class, `StatsAction` will begin its `prepare()` operation"},{"lineNumber":180,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":181,"author":{"gitId":"scjx123"},"content":"Step 2. `prepare()` looks at the input called `ParamNode args` which is user command processed by Command Interpreter layer, and starts to identify whether the user has entered the keyword `mod ` if `userInput` contains the keyword, then `isMod` flag will be set. "},{"lineNumber":182,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":183,"author":{"gitId":"scjx123"},"content":"Step 3. Next, execute layer will call `action.act()` which causes StatsAction to begin its `act()` operation. If `isMod` flag is set, `act()` will search for the user-specified module and get the list of tasks tagged to it."},{"lineNumber":184,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":185,"author":{"gitId":"scjx123"},"content":"Step 5. Once the list of tasks is obtained, the operation will loop through the task list and count the number of completed tasks followed by generating a ratio. "},{"lineNumber":186,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":187,"author":{"gitId":"scjx123"},"content":"Step 6. This ratio will be passed into `roundedRatioBar` to return *String* of a rounded ratio to 1 decimal place enclosing it in square brackets. "},{"lineNumber":188,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":189,"author":{"gitId":"scjx123"},"content":"Step 7. Now `StatsAction` is completed and it will return this string back to `Command` to store it under the String variable `result`. The `Main` layer will retrieve `result`, before passing it onto `UI` layer for printing. "},{"lineNumber":190,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":191,"author":{"gitId":"scjx123"},"content":"![statsDiagram](../Images/StatsAction.png)"},{"lineNumber":192,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":193,"author":{"gitId":"scjx123"},"content":"**Design consideration:**"},{"lineNumber":194,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":195,"author":{"gitId":"scjx123"},"content":"**Aspect: How statistics executes**"},{"lineNumber":196,"author":{"gitId":"scjx123"},"content":" - **Alternative 1 (current choice):** Create a separate class and get list of tasks/taken modules\u0027 task and scan through them to calculate statistics"},{"lineNumber":197,"author":{"gitId":"scjx123"},"content":"\t - Pros: Reduces Coupling and increase testability as a software unit itself. "},{"lineNumber":198,"author":{"gitId":"scjx123"},"content":"\t - Cons: May have performance issues in terms of memory usage "},{"lineNumber":199,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":200,"author":{"gitId":"scjx123"},"content":" - **Alternative 2:** initialize statistics as zero and each task contains an aspect called statistics"},{"lineNumber":201,"author":{"gitId":"scjx123"},"content":"\t - Pros: Will use less memory since the task itself will be deleted. "},{"lineNumber":202,"author":{"gitId":"scjx123"},"content":"\t - Cons: Stats will be updated constantly even though we do not need it. "},{"lineNumber":203,"author":{"gitId":"scjx123"},"content":"\t "},{"lineNumber":204,"author":{"gitId":"scjx123"},"content":"## Appendix A. Product scope"},{"lineNumber":205,"author":{"gitId":"scjx123"},"content":"### Target user profile"},{"lineNumber":206,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":207,"author":{"gitId":"scjx123"},"content":" - needs to manage a significant number of schedules "},{"lineNumber":208,"author":{"gitId":"scjx123"},"content":" - prefer desktop apps over other types "},{"lineNumber":209,"author":{"gitId":"scjx123"},"content":" - can type fast"},{"lineNumber":210,"author":{"gitId":"scjx123"},"content":" - prefers typing to mouse interactions "},{"lineNumber":211,"author":{"gitId":"scjx123"},"content":" - is reasonably comfortable using CLI apps "},{"lineNumber":212,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":213,"author":{"gitId":"scjx123"},"content":"### Value proposition"},{"lineNumber":214,"author":{"gitId":"scjx123"},"content":"All in one app to track tasks and their dates, monitor productivity, and calculate cap. "},{"lineNumber":215,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":216,"author":{"gitId":"scjx123"},"content":"## Appendix B. User Stories"},{"lineNumber":217,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":218,"author":{"gitId":"scjx123"},"content":"|Priority| As a ... | I want to ... | So that I can ...|"},{"lineNumber":219,"author":{"gitId":"scjx123"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":220,"author":{"gitId":"scjx123"},"content":"| *** |Student before the start of semester|List the modules MC|Follow the recommended MC |"},{"lineNumber":221,"author":{"gitId":"scjx123"},"content":"| *** |Student before the start of semester|List of module available|Easily Choose which modules to take|"},{"lineNumber":222,"author":{"gitId":"scjx123"},"content":"| ** |Student before the start of semester|Find the modules either by keyword, module code, or even MC |Easily see the desired modules |"},{"lineNumber":223,"author":{"gitId":"scjx123"},"content":"| ** |Student before the start of semester|Select the modules but not taking it yet |Easily whether the MC fits my requirement |"},{"lineNumber":224,"author":{"gitId":"scjx123"},"content":"| *  |Student before the start of semester|Find out the details of the Module|To find out more about the modules.|"},{"lineNumber":225,"author":{"gitId":"scjx123"},"content":"| *** |Student before the start of semester|Take the desired modules|Mark the modules that I want to take as taken  |"},{"lineNumber":226,"author":{"gitId":"scjx123"},"content":"| *** |Student during the semester|Add tasks such as todo, deadline, and event into my list|Easily keep track of all the task I have to complete  |"},{"lineNumber":227,"author":{"gitId":"scjx123"},"content":"| ** |Student during the semester|Have a Reminder of which deadline is due soon|Ensure that no task is missed out  |"},{"lineNumber":228,"author":{"gitId":"scjx123"},"content":"| *** |Student during the semester|Add a task to modules |Easily know which tasks belong to which modules  |"},{"lineNumber":229,"author":{"gitId":"scjx123"},"content":"| *** |Student during the semester|Delete task once they are completed |Remove unnecessary task on the list |"},{"lineNumber":230,"author":{"gitId":"scjx123"},"content":"| ** |Student after the semester|Calculate the CAP of my modules|Easily find out my performance this semester |"},{"lineNumber":231,"author":{"gitId":"scjx123"},"content":"| * |Student after the semester|Clear the list of tasks and modules|Start afresh for the next semester |"},{"lineNumber":232,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":233,"author":{"gitId":"scjx123"},"content":"{More to be added}"},{"lineNumber":234,"author":{"gitId":"scjx123"},"content":"## Appendix C. Use Cases: "},{"lineNumber":235,"author":{"gitId":"scjx123"},"content":"This section describes the Use Cases for some of the features implemented in DOMNUS. "},{"lineNumber":236,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":237,"author":{"gitId":"scjx123"},"content":"**Use Case: Taking a module "},{"lineNumber":238,"author":{"gitId":"scjx123"},"content":"MSS:** "},{"lineNumber":239,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":240,"author":{"gitId":"scjx123"},"content":" 1. User requests to list all modules "},{"lineNumber":241,"author":{"gitId":"scjx123"},"content":" 2. DOMNUS shows a list of modules "},{"lineNumber":242,"author":{"gitId":"scjx123"},"content":" 3. User requests to mark a specific module as \u0027taken\u0027 "},{"lineNumber":243,"author":{"gitId":"scjx123"},"content":" 4. DOMNUS marks the module as taken"},{"lineNumber":244,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":245,"author":{"gitId":"scjx123"},"content":"Use case ends.\u003cbr\u003e"},{"lineNumber":246,"author":{"gitId":"scjx123"},"content":"**Extensions** \\"},{"lineNumber":247,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;3a. The module given is invalid\\"},{"lineNumber":248,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a.1Use case shows `[NOT FOUND]` message"},{"lineNumber":249,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 3\\"},{"lineNumber":250,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;3b. User adds in the wrong module \\"},{"lineNumber":251,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3b.1The `untake` command can be used to untake the taken module"},{"lineNumber":252,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":253,"author":{"gitId":"scjx123"},"content":"**Use Case: List MC**"},{"lineNumber":254,"author":{"gitId":"scjx123"},"content":"**MSS:**"},{"lineNumber":255,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":256,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":257,"author":{"gitId":"scjx123"},"content":" 1. User requests to list total MC on the current list."},{"lineNumber":258,"author":{"gitId":"scjx123"},"content":" 2. DOMNUS shows the total MC of the current list. The default list is the entire modules list."},{"lineNumber":259,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":260,"author":{"gitId":"scjx123"},"content":"Use case ends.\u003cbr\u003e "},{"lineNumber":261,"author":{"gitId":"scjx123"},"content":"**Extensions** "},{"lineNumber":262,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":263,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;1a. User not focusing on the correct list \\"},{"lineNumber":264,"author":{"gitId":"scjx123"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. DOMNUS shows the entire module list total MC instead of the \u0027taken\u0027 list MC"},{"lineNumber":265,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":266,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":267,"author":{"gitId":"scjx123"},"content":"## Appendix D. Non-Functional Requirements"},{"lineNumber":268,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":269,"author":{"gitId":"scjx123"},"content":"1.  Should work on any  _mainstream OS_  as long as it has Java  `11`  or above installed."},{"lineNumber":270,"author":{"gitId":"scjx123"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."},{"lineNumber":271,"author":{"gitId":"scjx123"},"content":"3.  A user with above-average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":272,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":273,"author":{"gitId":"scjx123"},"content":"_{More to be added}_"},{"lineNumber":274,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":275,"author":{"gitId":"scjx123"},"content":"## Appendix E. Glossary"},{"lineNumber":276,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":277,"author":{"gitId":"scjx123"},"content":" - N-tier Architectural Style "},{"lineNumber":278,"author":{"gitId":"scjx123"},"content":"\t - In the n-tier style, high layers make use of services provided by lower layers. Lower layers are independent of higher layers. "},{"lineNumber":279,"author":{"gitId":"scjx123"},"content":" - Mainstream OS: Windows, Linux, Unix, OS-X"},{"lineNumber":280,"author":{"gitId":"scjx123"},"content":" - Private contact detail "},{"lineNumber":281,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":282,"author":{"gitId":"scjx123"},"content":"## Appendix F. Instructions for manual testing"},{"lineNumber":283,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":284,"author":{"gitId":"scjx123"},"content":"1. Launch and Shutdown "},{"lineNumber":285,"author":{"gitId":"scjx123"},"content":"Step 1: Download the latest version of  `DOMNUS`  from  [Our Release Page](https://github.com/AY2021S1-CS2113-T13-2/tp/releases/tag/v1.0).\\"},{"lineNumber":286,"author":{"gitId":"scjx123"},"content":"Step 2: Copy the file to the folder you want to use as the home folder for your Mobile Nusmod.\\"},{"lineNumber":287,"author":{"gitId":"scjx123"},"content":"Step 3: Open the Command Prompt if you are running on Windows or Terminal if you are running on Mac OS.\\"},{"lineNumber":288,"author":{"gitId":"scjx123"},"content":"Step 4: Navigate to your home folder and type  **‘java -jar domnus.jar’**"},{"lineNumber":289,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":290,"author":{"gitId":"scjx123"},"content":"2. Switching between Fancy and CLI "},{"lineNumber":291,"author":{"gitId":"scjx123"},"content":"Test case: `fancy`\u003cbr\u003e"},{"lineNumber":292,"author":{"gitId":"scjx123"},"content":"Expected: Switches to fancy mode of display \u003cbr\u003e"},{"lineNumber":293,"author":{"gitId":"scjx123"},"content":"Test case: `plain`\u003cbr\u003e"},{"lineNumber":294,"author":{"gitId":"scjx123"},"content":"Expected: Switches to plain mode of display\u003cbr\u003e"},{"lineNumber":295,"author":{"gitId":"scjx123"},"content":"Test case: `Fancy` ,`Plain`\u003cbr\u003e"},{"lineNumber":296,"author":{"gitId":"scjx123"},"content":"Expected: Error message due to cap sensitive. \u003cbr\u003e"},{"lineNumber":297,"author":{"gitId":"scjx123"},"content":"3. Focusing on a different list"},{"lineNumber":298,"author":{"gitId":"scjx123"},"content":"Test case: `focus mod`/`task`/`todo`/`deadline`/`event`/`selected`/`taken`\u003cbr\u003e"},{"lineNumber":299,"author":{"gitId":"scjx123"},"content":"           Expected: Shows the current list you are focused on. No list will be shown. \u003cbr\u003e"},{"lineNumber":300,"author":{"gitId":"scjx123"},"content":"Test case: `focus taken` \u003cbr\u003e"},{"lineNumber":301,"author":{"gitId":"scjx123"},"content":"Expected: Shows the current list of modules you have taken. \u003cbr\u003e"},{"lineNumber":302,"author":{"gitId":"scjx123"},"content":"Other incorrect focus commands to try: `focus 0` , `focus what?`, ... (focus on non-existent list) \u003cbr\u003e"},{"lineNumber":303,"author":{"gitId":"scjx123"},"content":"Expected: Error message due to invalid command. \u003cbr\u003e"},{"lineNumber":304,"author":{"gitId":"scjx123"},"content":"\t"},{"lineNumber":305,"author":{"gitId":"scjx123"},"content":"4. List Modules/Task"},{"lineNumber":306,"author":{"gitId":"scjx123"},"content":"Test case: `focus mod` -\u003e `list`\u003cbr\u003e"},{"lineNumber":307,"author":{"gitId":"scjx123"},"content":"Expected: Shows the list of modules. \u003cbr\u003e"},{"lineNumber":308,"author":{"gitId":"scjx123"},"content":"Test case: `focus task` -\u003e `list` \u003cbr\u003e"},{"lineNumber":309,"author":{"gitId":"scjx123"},"content":"Expected: Shows the current list of tasks. \u003cbr\u003e"},{"lineNumber":310,"author":{"gitId":"scjx123"},"content":"\t"},{"lineNumber":311,"author":{"gitId":"scjx123"},"content":"5. Find Modules "},{"lineNumber":312,"author":{"gitId":"scjx123"},"content":"Test case: `focus mod` -\u003e `find Engin`\u003cbr\u003e"},{"lineNumber":313,"author":{"gitId":"scjx123"},"content":"Expected: Shows the list of available modules with keyword \u0027Engin\u0027 \u003cbr\u003e"},{"lineNumber":314,"author":{"gitId":"scjx123"},"content":"Test case:  `focus mod` -\u003e `find 2113`\u003cbr\u003e"},{"lineNumber":315,"author":{"gitId":"scjx123"},"content":"Expected: Shows the list of modules with keyword \u00272113\u0027\u003cbr\u003e"},{"lineNumber":316,"author":{"gitId":"scjx123"},"content":"Test case: `focus task`-\u003e find deadline \u003cbr\u003e"},{"lineNumber":317,"author":{"gitId":"scjx123"},"content":"Expected: Show list of deadline modules "},{"lineNumber":318,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":319,"author":{"gitId":"scjx123"},"content":"6. Details of Modules "},{"lineNumber":320,"author":{"gitId":"scjx123"},"content":"Test cases: `detail CS2113`\u003cbr\u003e"},{"lineNumber":321,"author":{"gitId":"scjx123"},"content":"Expected: Shows Module code, name, mc, and description. \u003cbr\u003e"},{"lineNumber":322,"author":{"gitId":"scjx123"},"content":"Test cases: `detail 1`\u003cbr\u003e"},{"lineNumber":323,"author":{"gitId":"scjx123"},"content":"Expected: Shows the information of the 1st task based on the current list focused on. \u003cbr\u003e"},{"lineNumber":324,"author":{"gitId":"scjx123"},"content":"Test cases: `detail xyz` No detail of such item is found. \u003cbr\u003e"},{"lineNumber":325,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":326,"author":{"gitId":"scjx123"},"content":"7. Take Modules "},{"lineNumber":327,"author":{"gitId":"scjx123"},"content":"Test cases: `focus mod` -\u003e `take 1 2` \u003cbr\u003e"},{"lineNumber":328,"author":{"gitId":"scjx123"},"content":"Expected: Takes the 1st and 2nd module on the module list.\u003cbr\u003e"},{"lineNumber":329,"author":{"gitId":"scjx123"},"content":"Test cases: `focus task` -\u003e `take 1 2` \u003cbr\u003e"},{"lineNumber":330,"author":{"gitId":"scjx123"},"content":"Expected: Task is not module, therefore it cannot be taken.\u003cbr\u003e"},{"lineNumber":331,"author":{"gitId":"scjx123"},"content":"Test cases: `focus mod` -\u003e `take CS2113` \u003cbr\u003e"},{"lineNumber":332,"author":{"gitId":"scjx123"},"content":"Expected: Mark CS2113 as taken.\u003cbr\u003e"},{"lineNumber":333,"author":{"gitId":"scjx123"},"content":"Test cases: `focus mod` -\u003e `take cs2113`\u003cbr\u003e"},{"lineNumber":334,"author":{"gitId":"scjx123"},"content":"Expected: Module not found as inputs are case sensitive. \u003cbr\u003e"},{"lineNumber":335,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":336,"author":{"gitId":"scjx123"},"content":"8. Reminder \u003cbr\u003e"},{"lineNumber":337,"author":{"gitId":"scjx123"},"content":"Test cases: `reminder `\u003cbr\u003e"},{"lineNumber":338,"author":{"gitId":"scjx123"},"content":"Expected: Shows tasks that are due within 3 days. \u003cbr\u003e"},{"lineNumber":339,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":340,"author":{"gitId":"scjx123"},"content":"9. Cap Calculation \u003cbr\u003e"},{"lineNumber":341,"author":{"gitId":"scjx123"},"content":"Test cases: `cap`\u003cbr\u003e"},{"lineNumber":342,"author":{"gitId":"scjx123"},"content":"Expected: Shows you the calculated cap from stored user data. \u003cbr\u003e"},{"lineNumber":343,"author":{"gitId":"scjx123"},"content":"Test cases: `cap -m CS2113 A+ EE2026 B CS1010 B-`\u003cbr\u003e"},{"lineNumber":344,"author":{"gitId":"scjx123"},"content":"Expected: Shows you the calculated cap from given input modules. \u003cbr\u003e"},{"lineNumber":345,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":346,"author":{"gitId":"scjx123"},"content":"{End of extract} "},{"lineNumber":347,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":348,"author":{"gitId":"scjx123"},"content":"### 2.4 Contributions to team-based tasks: "},{"lineNumber":349,"author":{"gitId":"scjx123"},"content":"1. Retrieved a complete list of Module Data that includes its relevant details such as Module Code, MC, Prerequisites, etc. "},{"lineNumber":350,"author":{"gitId":"scjx123"},"content":"2. Wrote the ModuleParser code for (which was really taxing amount of data to sieve through due to incompatible formatting from excel into text file)."},{"lineNumber":351,"author":{"gitId":"scjx123"},"content":"3. For UG: Wrote the \u0027Domnus Tutorial\u0027 section "},{"lineNumber":352,"author":{"gitId":"scjx123"},"content":"4. For DG: Wrote the Introduction, Setting up, (Design) 4.1, 4.2, 4.5, 4.6, Appendix A,B,C,D,E,F"},{"lineNumber":353,"author":{"gitId":"scjx123"},"content":"5. Planned and recorded the first and second video demo. "}],"authorContributionMap":{"scjx123":353}},{"path":"docs/team/tomlbz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"# Li Bozhao (@TomLBZ) - PPP"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":"## 1. Overview"},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"### 1.1 Project Overview "},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":"DOMNUS - is a desktop application that helps in module and task tracking. It was developed under the module CS2113 Software Engineering \u0026 Object Oriented Programming. Within the schedule of approximately 7 weeks, my team of 5 Computer Engineering students successfully created DOMNUS to help students to stay organize with respective to the modules they take in NUS. DOMNUS is written in Java and designed to run on Java11 JVM, which makes it cross-platform. It also has two different UI modes to cater to different user needs."},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"This is what out product looks like: \u003cbr\u003e"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"Plain Mode UI | Fancy Mode UI"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"--- | ---"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"![plain](../Images/textui.png)|![ui](../Images/newUI.png)"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"## 2. Summary of Contributions"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"Given below are my contributions to the project. "},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"### 2.1 Enhancements Implemented: "},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"New Features in ver 2.1: "},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"Name | What it does | Justification | Highlights"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"--- | --- | --- | --- "},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"`edit`|Edit the fields of a Module or Task|The user may want to change the description, type or state of a task after its creation, or modify the grade or linked tasks of a module manually|Supports converting Todos to Events or Deadlines"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"`load`|Loads tasks to the linked task list of one specified Module without modifying the main task list|Allows the program to store linked tasks with the modules and load them on start-up so that users do not need to add tasks to modules everytime he / she restarts Domsun|The main task list is unaffected by the load command"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"Enhancements in ver 2.1:"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"Description | Justification | Highlights"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"--- | --- | --- "},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"Improved error messages|Makes it easier for the users to find out what is actually wrong|When an error happens the program may provide correct syntax together with `Notes` to the user depending on the command"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"Implemented automatic word wrapping for the text region of the fancy UI mode|Makes the UI more readable|The paged view also has improved headings"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"Added restrictions to non-applicable commands|Give the user an error message instead of ignoring the input so that users can learn the commands better|Some commands now suggests the user to use other commands based on the scenario"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"Previous Contributions:"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"|**Action** | **Format**| **Examples**|"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"|------------|-------------|-------------|"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"|**todo**|`todo [description]`|`todo borrow book`|"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"|**deadline**|`deadline [description] -by [time]`|`deadline project submission -by 21/9/15 1:12`|"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"|**event**|`event [description] -at [time]`|`event concert -at May 13 2020 8:00`|"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"|**list**|`list date [asc / desc / spec “date”]`|`list date asc`|"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"|**done**|`done [index]`|`done 2`|"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"|**undone**|`undone [index]`|`undone 2`|"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"|**find**|`find [keyword]`|`find exam`|"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"|**take**|`take [index / module code]`|`take CS2113T`|"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"|**untake**|`untake [index / module code]`|`untake CS2113T`|"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"|**sel**|`sel [index / module code]`|`sel 1 2 3`|"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"|**unsel**|`unsel [index / module code]`|`unsel CS1010 CS2113`|"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"|**detail**|`detail [index / module code]`|`detail CS2113T`|"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"|**grade (current version)**|`grade [-option] [module] [grade] {[module] [grade]...}`|`grade -a CS2113 A CG1112 A-`|"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"|**goal (current version)**|`goal [-option] [total MC] [target CAP] [taken MC] [current CAP]`|`goal -c 160 4.9 100 4.5`|"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"|**mc (current version)**|`mc [-option] [-details]`|`mc -p`|"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"|**cap (current version)**|`cap [-option] [module] [grade] {[module] [grade]...}`|`cap -m CS2113 A CG1112 A-`|"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"|**add**|`add -task [index] -mod [module code]`|`add -task 1 -mod CS2113`|"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"|**clear** | `clear`||"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"|**delete**|`delete [index]`|`delete 2`|"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"|**focus (current version)**|`focus [deadline / todo / event / task / mod / selected / taken]`|`focus deadline`|"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"|**help**|`help [options]`|`help deadline`|"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"|**fancy**|`fancy [option]`|`fancy`|"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"|**plain**|`plain [option]`|`plain`|"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"|**next**|`next [option]`|`next`|"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"|**prev**|`prev [option]`|`prev`|"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"|**bye**|`bye`||"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"**Code Contributed**: [Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dtomlbz\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dTomLBZ\u0026tabRepo\u003dAY2021S1-CS2113-T13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other \"My Reposense\") "},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"### 2.2 Contributions to UG: "},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"Completed the ***Installation*** section of our UG, added pictures to aid understanding.\u003cbr\u003e"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"Wrote parts of the ***Domsun Tutorial***.\u003cbr\u003e"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"Wrote the initial update for ***all*** features in the feature list. Those are updated progressively by my Teammates later after each iteration.\u003cbr\u003e"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"### 2.3 Contributions to DG:"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"Write up the text descriptions for Setting-up, UI layer, Command Interpreter layer.\u003cbr\u003e"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"Write up sections for Take feature.\u003cbr\u003e"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"Contributed to use cases and project scope."},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"### 2.4 Contributions to team-based tasks: "},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"Managing PRs after v1.0\u003cbr\u003e"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"Debugging and fixing the majority of bugs after peer review\u003cbr\u003e"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"Managing priorities and Severities and Types of issues and PRs after v1.0\u003cbr\u003e"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"Implement the backbone and overall structure code of Domsun\u003cbr\u003e"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"Implement APIs of Domsun, such as package `lexical` and `visualize`, `messages`, `io`, etc.\u003cbr\u003e"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"Implement the majority of the features of Actions for Commands."}],"authorContributionMap":{"TomLBZ":84}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.action.UnknownAction;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import command.action.Action;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import constants.HelpText;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Command."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class Command implements Help {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * The Args."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    public ParamNode args;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"     * The Flattened args."},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    public ParamNode[] flattenedArgs;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * The Name."},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public String name;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    private final HelpText helpText;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * The Action."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    public Action action;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     * The Result."},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    public String result \u003d \"\";"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Command."},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * @param args the args"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"    public Command(ParamNode args) {"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        this.args \u003d args;"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        name \u003d args.name;"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        flattenedArgs \u003d new ParamNode[0];"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            flattenedArgs \u003d args.thisData.flatten().toArray(flattenedArgs);"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        helpText \u003d Constants.helpMap.getOrDefault(name, HelpText.UNKNOWN); // later change to help."},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        initiateAction();"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    private boolean isArgsValid() {"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        String[] targetArgs \u003d Constants.compulsoryParamMap.get(name);"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        if (targetArgs \u003d\u003d null) {"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            return true; // does not need any parameter"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            for (ParamNode node : flattenedArgs) {"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"                for (String arg : targetArgs) {"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"                    if (arg.equals(node.name)) {"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"                        return true;"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    private void initiateAction() {"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        action \u003d Constants.actionMap.getOrDefault(name, new UnknownAction());"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     * Execute."},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     * @param data the data"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    public void execute(Data data) {"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            if (isArgsValid()) {"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                action.prepare(args);"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"                result \u003d action.act(data);"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"                throw new InvalidCommandException();"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        } catch (Exception e) {"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder builder \u003d new StringBuilder(e.getMessage());"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            String[] syntaxes \u003d getSyntax();"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            for (String syntax : syntaxes) {"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                builder.append(Constants.SPACE.repeat(4)).append(syntax).append(Constants.WIN_NEWLINE);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            builder.append(Constants.NOTES).append(Constants.WIN_NEWLINE);"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            String[] notes \u003d getNotes();"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            for (String note : notes) {"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"                builder.append(note).append(Constants.WIN_NEWLINE);"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"            result \u003d builder.toString().replace(Constants.WIN_NEWLINE.repeat(2), Constants.WIN_NEWLINE);"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"     * Is exit boolean."},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"    public boolean isBye() {"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        return result.equals(Constants.messageMap.get(Constants.BYE));"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"     * Is fancy boolean."},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"    public boolean isFancy() {"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"        return result.equals(Constants.messageMap.get(Constants.FANCY));"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"     * Is plain boolean."},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"    public boolean isPlain() {"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"        return result.equals(Constants.messageMap.get(Constants.PLAIN));"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"     * Is TimerChanged boolean."},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"    public boolean isSnoozed() {"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"        return result.equals(Constants.messageMap.get(Constants.SNOOZE));"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"    public String getName() {"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"        return name;"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"    public String getDescription() {"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        return helpText.description;"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"    public String[] getSyntax() {"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"        return helpText.syntax;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"    public String[] getNotes() {"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"        return helpText.notes;"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"    public String[] getUsages() {"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"        return helpText.usages;"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"    public String getHelp() {"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"        return helpText.toString();"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"        return args.toString();"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":173}},{"path":"src/main/java/command/Help.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The interface Help."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public interface Help {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * Gets name."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"     * @return the name"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    public String getName();"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * Gets description."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     * @return the description"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    public String getDescription();"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     * Get syntax string [ ]."},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     * @return the string [ ]"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    public String[] getSyntax();"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    public String[] getNotes();"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * Get usages string [ ]."},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     * @return the string [ ]"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    public String[] getUsages();"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     * Gets help."},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * @return the help"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    public String getHelp();"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":47}},{"path":"src/main/java/command/ParamNode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import lexical.Token;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import lexical.Types;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" * The type Param node."},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"public class ParamNode {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     * The Name."},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    public String name;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     * The This data."},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    public ParamNode thisData;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     * The Next data."},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    public ParamNode nextData;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Param node."},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     * @param tokens the tokens"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    public ParamNode(ArrayList\u003cToken\u003e tokens) {"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cToken\u003e tokensClone \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        for (Token token: tokens) {"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"            tokensClone.add(new Token(token.token, token.string));"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        Token head \u003d tokensClone.get(0);"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        tokensClone.remove(head);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        int splitIndex \u003d splitIndex(tokensClone, head.token);"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cToken\u003e thisTokens \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cToken\u003e nextTokens \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"        name \u003d head.string;"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        if (splitIndex \u003c 0) {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"            nextTokens.addAll(tokensClone);"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            for (int i \u003d 0; i \u003c tokensClone.size(); i++) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                if (i \u003c\u003d splitIndex) {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                    thisTokens.add(tokensClone.get(i));"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"                    nextTokens.add(tokensClone.get(i));"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        if (thisTokens.size() \u003e 0) {"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"            thisData \u003d new ParamNode(thisTokens);"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"            thisData \u003d null;"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        if (nextTokens.size() \u003e 0) {"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            Token endToken \u003d nextTokens.get(0);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"            while (endToken.token.equals(Types.END)) {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"                nextTokens.remove(endToken);"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                if (nextTokens.size() \u003e 0) {"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                    endToken \u003d nextTokens.get(0);"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"                    break;"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        if (nextTokens.size() \u003e 0) {"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"            nextData \u003d new ParamNode(nextTokens);"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"            nextData \u003d null;"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Param node."},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"     * @param name     the name"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"     * @param thisData the this data"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"     * @param nextData the next data"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"    public ParamNode(String name, ParamNode thisData, ParamNode nextData) {"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        this.name \u003d name;"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        this.thisData \u003d thisData;"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        this.nextData \u003d nextData;"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"    private int splitIndex(ArrayList\u003cToken\u003e tokens, Types type) {"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"        int i \u003d 0;"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"        for ( ; i \u003c tokens.size(); i++) {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            Token token \u003d tokens.get(i);"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            if (type.equals(Types.STR)) {"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"                if (!token.token.equals(Types.STR)) {"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"                    return i - 1;"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"                if (token.token.equals(type) || token.token.equals(Types.END)) {"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"                    return i - 1;"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        return i - 1;"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    private String shiftTab(String input) {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        String[] strings \u003d input.split(Constants.WIN_NEWLINE);"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        for (String string: strings) {"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"            stringBuilder.append(Constants.TAB).append(string).append(Constants.WIN_NEWLINE);"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        return stringBuilder.toString();"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"     * To flat string string."},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"    public String toFlatString() {"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        String myName \u003d name \u003d\u003d null ? Constants.ZERO_LENGTH_STRING : name + Constants.SPACE;"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"        String nextName \u003d thisData \u003d\u003d null ? Constants.ZERO_LENGTH_STRING : thisData.toFlatString();"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"        return (myName + nextName).trim();"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"        String data \u003d Constants.ZERO_LENGTH_STRING;"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"        if (thisData !\u003d null) {"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"            data \u003d \" {\" + Constants.WIN_NEWLINE + shiftTab(thisData.toString()) + \"}\";"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"        String next \u003d nextData \u003d\u003d null ? \"\" : Constants.WIN_NEWLINE + nextData.toString();"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"        return name + data + next;"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"     * Flatten array list."},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"     * @return the array list"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cParamNode\u003e flatten() {"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cParamNode\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"        output.add(new ParamNode(name, thisData, nextData));"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d 0;"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"        ParamNode nextNode \u003d output.get(index).nextData;"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"        while (nextNode !\u003d null) {"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"            output.get(index).nextData \u003d null;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"            output.add(new ParamNode(nextNode.name, nextNode.thisData, nextNode.nextData));"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"            nextNode \u003d nextNode.nextData;"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"            index++;"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"        return output;"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"     * Extend array list."},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"     * @return the array list"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cParamNode\u003e extend() {"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cParamNode\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"        output.add(new ParamNode(name, thisData, nextData));"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d 0;"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"        ParamNode nextNode \u003d output.get(index).thisData;"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"        while (nextNode !\u003d null) {"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"            output.get(index).thisData \u003d null;"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"            output.add(new ParamNode(nextNode.name, nextNode.thisData, nextNode.nextData));"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"            nextNode \u003d nextNode.thisData;"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"            index++;"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"        return output;"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":177}},{"path":"src/main/java/command/action/Action.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" * The type Action."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"public class Action {"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * The Args."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    protected ParamNode args;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     * The Flattened args."},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    protected ParamNode[] flattenedArgs;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Action."},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    public Action() {"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        args \u003d null;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Action."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * @param args the args"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * @throws Exception the exception"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    public Action(ParamNode args) throws Exception {"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        prepare(args);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     * Act or execute the action."},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * @param data the data"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        return Constants.messageMap.getOrDefault(args.name, Constants.INVALID);"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     * Prepare parameters for task to act."},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"     * @param args the args"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"     * @throws Exception the exception"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        this.args \u003d args;"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"        flattenedArgs \u003d new ParamNode[0];"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData !\u003d null) {"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            flattenedArgs \u003d args.thisData.flatten().toArray(flattenedArgs);"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"     * Replace strings string."},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"     * @param source the source"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"     * @param text   the text"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     * @param count  the count"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"    protected String replaceStrings(String source, String text, int count) {"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        String output \u003d source.replace(Constants.TEXT_PLACEHOLDER, text);"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        return output.replace(Constants.NUMBER_PLACEHOLDER, String.valueOf(count));"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     * Gets index."},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"     * @return the index"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    protected int getIndex(String input) {"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        if (input \u003d\u003d null || input.length() \u003d\u003d 0) {"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"            return -1;"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            return Integer.parseInt(input) - 1;"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        } catch (Exception e) {"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            char character \u003d input.toCharArray()[0];"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            if (Character.isLetter(character)) {"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                character \u003d Character.toUpperCase(character);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                return (int)character - Constants.LETTER_OFFSET - 1;"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            return -1;"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":98}},{"path":"src/main/java/command/action/AddAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import exceptions.ModuleNotFoundException;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import exceptions.TaskNotSpecifiedException;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import exceptions.TypeMismatchException;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import java.util.Arrays;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":" * The type Add action (on progress)."},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"public class AddAction extends Action {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    private ArrayList\u003cInteger\u003e taskIndices;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    private ArrayList\u003cString\u003e modNames;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        String flag \u003d data.flag;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        String tasksFlag \u003d !flag.equals(Constants.MOD) ? flag : Constants.TASK;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e targetTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e tasksInContext \u003d data.getTarget(tasksFlag);"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        for (Integer taskIndex : taskIndices) {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e data.tasks.size() - 1) {"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"                throw new IndexOutOfBoundsException(Constants.INDEX_OUT);"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"            Item task \u003d tasksInContext.get(taskIndex);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            if (!(task instanceof Task)) {"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"                throw new TypeMismatchException();"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            targetTasks.add(tasksInContext.get(taskIndex));"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        if (targetTasks.size() \u003c 1) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            throw new TaskNotSpecifiedException();"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e targetMods \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        data.mods.stream().filter(x -\u003e modNames.contains(x.getName())).forEach(targetMods::add);"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        if (targetMods.size() \u003c 1) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            throw new ModuleNotFoundException();"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        targetMods.forEach(m -\u003e ((SingleModule) m).taskList.addAll(targetTasks));"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        data.refreshTarget(flag);"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        for (Item item : targetMods) {"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder sb \u003d new StringBuilder(item.getName() + \" \u003c\u003c tasks: \");"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"            for (Item i : targetTasks) {"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"                sb.append(((Task) i).getDescription()).append(Constants.CMD_END).append(Constants.SPACE);"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"            builder.append(sb.append(Constants.WIN_NEWLINE).toString());"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        String addStatus \u003d builder.toString();"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        if (addStatus.length() \u003c 1) {"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"            throw new ModuleNotFoundException();"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d super.act(data);"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"        return result.replace(Constants.TEXT_PLACEHOLDER, addStatus);"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        taskIndices \u003d new ArrayList\u003c\u003e();"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        modNames \u003d new ArrayList\u003c\u003e();"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cString\u003e taskNames \u003d new ArrayList\u003c\u003e();"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        for (ParamNode arg : flattenedArgs) {"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"            if (arg.thisData \u003d\u003d null) {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"            if (arg.name.equals(Constants.MOD)) {"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"                String[] strings \u003d arg.thisData.toFlatString().split(Constants.SPACE);"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"                modNames.addAll(Arrays.asList(strings));"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            } else if (arg.name.equals(Constants.TASK)) {"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                String[] strings \u003d arg.thisData.toFlatString().split(Constants.SPACE);"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"                taskNames.addAll(Arrays.asList(strings));"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        for (String name : taskNames) {"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            try {"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"                taskIndices.add(Integer.parseInt(name) - 1);"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"            } catch (Exception e) {"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                char ch \u003d name.toUpperCase().toCharArray()[0];"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"                if (name.length() \u003d\u003d 1 \u0026\u0026 Character.isLetter(ch)) {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"                    taskIndices.add((int) ch - Constants.LETTER_OFFSET - 1);"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"                    throw new TaskNotSpecifiedException();"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":102}},{"path":"src/main/java/command/action/ByeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Bye action."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class ByeAction extends Action {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Bye action."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    public ByeAction() {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":17}},{"path":"src/main/java/command/action/CapAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.text.DecimalFormat;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":" * Calculate user\u0027s cap."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"public class CapAction extends GradeAction {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    private double totalMc;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    private double totalGrade;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    private boolean isAssigned \u003d false;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    private String assignedGrade \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        successes \u003d 0;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        if (isShowing) {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            blindSearch \u003d Constants.TAKEN;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            blindSearch \u003d Constants.SELECTED;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        String output \u003d super.act(data).replace(\"for\", \"for graded modules in\");"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        if (isShowing) {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            output \u003d output.replace(\"selected\", \"taken\");"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        double cap \u003d totalGrade / totalMc;"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        String capString \u003d new DecimalFormat(\"#.##\").format(cap);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        return output + (capString.equals(\"NaN\") ? \"CAP calculation is skipped because there is no Module specified \""},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"                + \"with valid grade.\" + Constants.WIN_NEWLINE + \"Try \\\"grade [module code] [letter grade]\\\" \""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"                + \"to set grades to your modules, or \" + Constants.WIN_NEWLINE"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"                + \"try \\\"help cap\\\" to see other usages using hypothetical grades!\" : \"CAP \u003d \" + capString);"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        String outputGrade \u003d isAssigned ? \"(hypothetical)\" + assignedGrade : ((SingleModule)item).grade;"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        return item.getName() + Constants.DETAILS_SIGNATURE + outputGrade;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        isAssigned \u003d false;"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        assignedGrade \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        assert item instanceof SingleModule;"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        if (((SingleModule) item).isCompleted) {"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"        for (String key : map.keySet()) {"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"            boolean notBlind \u003d !isBlind"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"                    \u0026\u0026 (key.equals(((SingleModule) item).moduleCode) || key.equals(item.immediateData));"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"            boolean blind \u003d isBlind \u0026\u0026 key.equals(\"DEFAULT\");"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            if (notBlind || blind) {"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"                ArrayList\u003cString\u003e values \u003d map.get(key);"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"                String grade \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                if (values \u003d\u003d null || values.size() \u003d\u003d 0) {"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                    grade \u003d null;"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"                    grade \u003d filterGrade(values.get(0));"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"                if (grade \u003d\u003d null) {"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"                    continue;"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"                double mc \u003d 0;"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"                try {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"                    mc \u003d Double.parseDouble(((SingleModule) item).getModuleMC());"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"                } catch (Exception e) {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"                    return false;"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"                isAssigned \u003d true;"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"                assignedGrade \u003d grade;"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"                if (!grade.equals(\"U\")) {"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"                    totalGrade +\u003d parseGrade(grade) * mc;"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                    if (!grade.equals(\"S\")) {"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"                        totalMc +\u003d mc;"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        item.immediateData \u003d null;"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        if (!isAssigned) {"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"            String currentGrade \u003d filterGrade(((SingleModule)item).grade);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"            String score \u003d currentGrade \u003d\u003d null ? \"U\" : currentGrade;"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            double mc \u003d 0;"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            try {"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"                mc \u003d Double.parseDouble(((SingleModule) item).getModuleMC());"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"            } catch (Exception e) {"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"                return false;"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"            if (!score.equals(\"U\")) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"                totalGrade +\u003d parseGrade(score) * mc;"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"                if (!score.equals(\"S\")) {"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"                    totalMc +\u003d mc;"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        successes++;"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        totalMc \u003d 0;"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        totalGrade \u003d 0;"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    protected double parseGrade(String grade) {"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        double gradeValue;"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"        if (grade \u003d\u003d null) {"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"            return 0;"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        switch (grade) {"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        case \"A+\":"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"        case \"A\":"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 5;"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"        case \"A-\":"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 4.5;"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"        case \"B+\":"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 4;"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"        case \"B\":"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 3.5;"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"        case \"B-\":"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 3;"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"        case \"C+\":"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 2.5;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"        case \"C\":"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 2;"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"        case \"D+\":"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 1.5;"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"        case \"D\":"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 1;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"        default: //F, S, U all 0"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"            gradeValue \u003d 0;"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"        return gradeValue;"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":157}},{"path":"src/main/java/command/action/ClearAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Clear action."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class ClearAction extends Action {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs !\u003d null \u0026\u0026 flattenedArgs.length \u003e 0) {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"            if (flattenedArgs[0].name.toLowerCase().contains(\"fancy\")) {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"                return Constants.FANCY_CLEARED + Constants.WIN_NEWLINE;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e items \u003d new ArrayList\u003c\u003e(data.getTarget());"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        items.forEach(data::removeItem);"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        return super.act(data);"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":31}},{"path":"src/main/java/command/action/CompleteAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"public class CompleteAction extends TakeAction {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"        successes \u003d 0;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"        return super.act(data).replace(\"taken\", \"completed\")"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"                .replace(Constants.MODIFY_FAILED, Constants.NOT_COMPLETABLE);"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        assert item instanceof SingleModule;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        if (((SingleModule) item).complete()) {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"            successes++;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"            return true;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":29}},{"path":"src/main/java/command/action/DeadlineAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Deadline;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.MissingDescriptionException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Deadline action."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class DeadlineAction extends Action {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private String description;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    private String by;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d super.act(data);"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        Deadline ddl \u003d new Deadline(description, by);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        data.addTask(ddl);"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        return replaceStrings(result, ddl.toString(), data.tasks.size());"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs.length \u003c 2) {"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs[0] \u003d\u003d null) {"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            throw new MissingDescriptionException();"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs[1].thisData \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        by \u003d flattenedArgs[1].thisData.toFlatString();"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        description \u003d flattenedArgs[0].toFlatString();"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":43}},{"path":"src/main/java/command/action/DeleteAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Delete action."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class DeleteAction extends Action {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        if (index \u003c 0 || index \u003e\u003d data.target.size()) {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDEX_OUT;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        Item item \u003d data.get(index);"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d super.act(data);"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        data.removeItem(index);"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        String notice \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        if (item instanceof SingleModule) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"            result \u003d result.replace(Constants.REMOVED, Constants.REMOVE_MOD);"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            if (item.isSelected) {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"                notice \u003d Constants.WIN_NEWLINE + \"The module is still selected, you may want to \\\"unsel\\\" it.\";"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            if (((SingleModule) item).isTaken) {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"                notice \u003d notice + Constants.WIN_NEWLINE + \"The module is still taken, you may want to \\\"untake\\\" it.\";"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        return replaceStrings(result, item.toString() + notice, data.tasks.size());"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null || args.thisData.name \u003d\u003d null) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        index \u003d getIndex(args.thisData.name);"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":48}},{"path":"src/main/java/command/action/DetailAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"public class DetailAction extends SelectAction {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"        return item.getDetails();"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":19}},{"path":"src/main/java/command/action/DoneAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Done action."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class DoneAction extends Action {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        Item item \u003d data.get(index);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        if (item \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDEX_OUT;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        } else if (item instanceof Task) {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"            ((Task)item).markAsDone();"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"            data.updateItem(index, item);"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"            String result \u003d super.act(data);"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            return result.replace(Constants.TEXT_PLACEHOLDER, item.toString());"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            return Constants.NOT_TASK;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null || args.thisData.name \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        index \u003d getIndex(args.thisData.name);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        assert index \u003e -1 : \"index should be same as input\";"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":43}},{"path":"src/main/java/command/action/EditAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Deadline;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Event;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.ToDo;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDateTime;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"import java.util.Arrays;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"public class EditAction extends Action {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    private class Operation {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        public boolean isMod;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        public String modCode;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        public int itemIndex;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        public ArrayList\u003cString\u003e operations;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        public String operationResult;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        public void defaultOperation() {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"            isMod \u003d false;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            modCode \u003d null;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            itemIndex \u003d -1;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            operations \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        public void normalOperation(boolean isMod, String input) throws Exception {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            this.isMod \u003d isMod;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"            boolean isNumeric \u003d isNumeric(input);"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            if (isNumeric) {"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"                modCode \u003d null;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"                itemIndex \u003d Integer.parseInt(input) - 1;"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"                if (itemIndex \u003c 0) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"                    itemIndex \u003d -1;"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"                if (isMod) {"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"                    modCode \u003d input.trim();"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                    throw new Exception(\"A task must be referenced by an index!\" + Constants.WIN_NEWLINE);"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"            operations \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        public Operation(boolean isMod, ArrayList\u003cString\u003e strings) throws Exception {"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"            if (strings \u003d\u003d null || strings.size() \u003d\u003d 0) {"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"                this.defaultOperation();"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            assert strings !\u003d null;"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"            String input \u003d strings.get(0);"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            strings.remove(0);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"            normalOperation(isMod, input);"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"            if (strings.size() \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                throw new Exception(Constants.NO_OPERATION_POSSIBLE);"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"            operations.addAll(strings);"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        private boolean isNumeric(String input) {"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"            if (input \u003d\u003d null || input.trim().isEmpty()) {"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"                return false;"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"            char[] chars \u003d input.trim().toCharArray();"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"            boolean isNum \u003d true;"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"            for (char c: chars) {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"                isNum \u003d Character.isDigit(c);"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"                if (!isNum) {"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"                    break;"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            return isNum;"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        public Item operate(Item item) throws Exception {"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"            if (isMod \u0026\u0026 item instanceof SingleModule) {"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"                return operateMod((SingleModule) item);"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"                return operateTask((Task) item);"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"        private SingleModule operateMod(SingleModule mod) throws Exception {"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder builder \u003d new StringBuilder(\"Working on Module: \" + mod.moduleCode + Constants.WIN_NEWLINE);"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            mod.immediateData \u003d null;"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            if (!mod.isCompleted) {"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"                for (String operation : operations) {"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"                    String op \u003d operation.replace(Constants.LINE_UNIT, Constants.SPACE).trim();"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"                    boolean operated \u003d true;"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"                    if (op.contains(Constants.EQUALS)) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"                        String[] split \u003d op.split(Constants.EQUALS);"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"                        if (split.length !\u003d 2) {"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"                            throw new Exception(\"Space are not allowed in the \\\"field\u003dnew_value\\\" parameter!\""},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"                                    + Constants.WIN_NEWLINE);"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"                        split[0] \u003d split[0].toLowerCase();"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"                        if (Arrays.stream(Constants.GRADE_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"                            boolean isBroken \u003d false;"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"                            if (split[1].length() \u003e\u003d 1) {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"                                String tmpGrade \u003d split[1].toUpperCase().substring(0, Math.min(2, split[1].length()));"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"                                for (String grade : Constants.VALID_GRADES) {"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"                                    if (grade.equals(tmpGrade)) {"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"                                        mod.grade \u003d tmpGrade;"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"                                        isBroken \u003d true;"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"                                        break;"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"                                    }"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"                                }"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"                            if (!isBroken) {"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"                                StringBuilder validBuilder \u003d new StringBuilder();"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"                                for (String grade : Constants.VALID_GRADES) {"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"                                    validBuilder.append(grade).append(Constants.SPACE);"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"                                }"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"                                String validGrades \u003d validBuilder.toString();"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"                                throw new Exception(\"Grade must be one of [\" + validGrades + \"]!\""},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"                                        + Constants.WIN_NEWLINE);"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"                            mod.isTaken \u003d true; // must be taken in order to have a grade"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"                            op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + mod.grade"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"                                    + \" AND taken \u003d true;\" + Constants.WIN_NEWLINE"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"                                    + \"(The module must be taken in order to have a grade)\";"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"                        } else if (Arrays.stream(Constants.SU_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"                            if (split[1].contains(\"s\")) {"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"                                mod.moduleSU \u003d \"S\";"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"                            } else {"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"                                mod.moduleSU \u003d \"U\";"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"                            op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + mod.moduleSU;"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"                        } else if (Arrays.stream(Constants.SELECTED_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"                            mod.isSelected \u003d split[1].toLowerCase().contains(\"t\");"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"                            op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + mod.isSelected;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"                        } else if (Arrays.stream(Constants.TAKEN_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"                            mod.isTaken \u003d split[1].toLowerCase().contains(\"t\");"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"                            op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + mod.isTaken;"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"                        } else if (Arrays.stream(Constants.TASK_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"                            mod.immediateData \u003d split[1];"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"                        } else {"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"                            builder.append(\"\\\"\").append(op).append(\"\\\" is not a valid operation on module \")"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"                                    .append(mod.moduleCode).append(\", and is skipped.\").append(Constants.WIN_NEWLINE);"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"                            operated \u003d false;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"                    } else {"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"                        operated \u003d false;"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(\"\\\"\").append(op).append(\"\\\" is not a valid operation on module \")"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"                                .append(mod.moduleCode).append(\", and is skipped.\").append(Constants.WIN_NEWLINE);"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"                    if (operated) {"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(mod.moduleCode).append(\": \").append(op)"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"                                .append(Constants.CMD_END).append(Constants.WIN_NEWLINE);"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"            operationResult \u003d builder.toString();"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"            if (operationResult.length() \u003d\u003d 0) {"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"                throw new Exception(Constants.NO_OPERATION_POSSIBLE);"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"            return mod;"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"        private Task operateTask(Task task) throws Exception {"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder builder \u003d new StringBuilder(\"Working on Task: \" + task.toString() + Constants.WIN_NEWLINE);"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"            for (String operation : operations) {"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"                String op \u003d operation.replace(Constants.LINE_UNIT, Constants.SPACE).trim();"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"                boolean operated \u003d true;"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"                if (op.contains(Constants.EQUALS)) {"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"                    String[] split \u003d op.split(Constants.EQUALS);"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"                    if (split.length !\u003d 2) {"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"                        throw new Exception(\"Space are not allowed in the \\\"field\u003dnew_value\\\" parameter!\""},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"                                + Constants.WIN_NEWLINE);"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"                    split[0] \u003d split[0].toLowerCase();"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"                    if (Arrays.stream(Constants.DESCRIPTION_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"                        task.setDescription(split[1]);"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"                    } else if (Arrays.stream(Constants.TYPE_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"                        String dateTime \u003d task.getStringFromDateTime(LocalDateTime.now());"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"                        if (task.isDated) {"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"                            dateTime \u003d task.getDateTimeString();"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"                        switch (split[1].toLowerCase()) {"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"                        case \"deadline\": // same as \"ddl\""},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"                        case \"ddl\": // same as \"d\""},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"                        case \"d\":"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"                            Deadline ddl \u003d new Deadline(task.getDescription(), dateTime);"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"                            ddl.isSelected \u003d task.isSelected;"},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"                            ddl.isWeekly \u003d task.isWeekly;"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"                            if (task.getIsDone()) {"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"                                ddl.markAsDone();"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"                            task \u003d ddl;"},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"                            break;"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"                        case \"event\": // same as \"e\""},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"                        case \"e\":"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"                            Event event \u003d new Event(task.getDescription(), dateTime);"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"                            event.isSelected \u003d task.isSelected;"},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"                            event.isWeekly \u003d task.isWeekly;"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"                            if (task.getIsDone()) {"},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"                                event.markAsDone();"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"                            task \u003d event;"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"                            break;"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"                        case \"todo\": // same as \"t\""},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"                        case \"t\":"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"                            ToDo todo \u003d new ToDo(task.getDescription());"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"                            todo.isSelected \u003d task.isSelected;"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"                            todo.isWeekly \u003d task.isWeekly;"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"                            if (task.getIsDone()) {"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"                                todo.markAsDone();"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"                            task \u003d todo;"},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"                            break;"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"                        default:"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"                            operated \u003d false;"},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"                            break;"},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"                    } else if (Arrays.stream(Constants.DATE_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"                        if (task.isDated) {"},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"                            LocalDateTime localDateTime \u003d Item.parseDateTime(split[1]);"},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"                            if (localDateTime !\u003d null) {"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"                                task.updateDateTime(localDateTime);"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"                            } else {"},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"                                task.setTimeString(split[1]);"},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":"                            }"},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"                        } else {"},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"                            operated \u003d false;"},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"                    } else if (Arrays.stream(Constants.SELECTED_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"                        task.isSelected \u003d split[1].toLowerCase().contains(\"t\");"},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"                        op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + task.isSelected;"},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"                    } else if (Arrays.stream(Constants.WEEKLY_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"                        task.isWeekly \u003d split[1].toLowerCase().contains(\"t\");"},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"                        op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + task.isWeekly;"},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"                    } else if (Arrays.stream(Constants.DONE_ALIAS).anyMatch(s -\u003e s.equals(split[0]))) {"},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"                        if (split[1].toLowerCase().contains(\"t\")) {"},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"                            task.markAsDone();"},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"                        } else {"},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"                            task.markAsUndone();"},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"                        op \u003d split[0] + Constants.SPACE + Constants.EQUALS + Constants.SPACE + task.getIsDone();"},{"lineNumber":249,"author":{"gitId":"TomLBZ"},"content":"                    } else {"},{"lineNumber":250,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(\"\\\"\").append(op).append(\"\\\" is not a valid operation on task \")"},{"lineNumber":251,"author":{"gitId":"TomLBZ"},"content":"                                .append(task.getDescription()).append(\", and is skipped.\")"},{"lineNumber":252,"author":{"gitId":"TomLBZ"},"content":"                                .append(Constants.WIN_NEWLINE);"},{"lineNumber":253,"author":{"gitId":"TomLBZ"},"content":"                        operated \u003d false;"},{"lineNumber":254,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":255,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":256,"author":{"gitId":"TomLBZ"},"content":"                    builder.append(\"\\\"\").append(op).append(\"\\\" is not a valid operation on task \")"},{"lineNumber":257,"author":{"gitId":"TomLBZ"},"content":"                            .append(task.getDescription()).append(\", and is skipped.\").append(Constants.WIN_NEWLINE);"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":"                    operated \u003d false;"},{"lineNumber":259,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":260,"author":{"gitId":"TomLBZ"},"content":"                if (operated) {"},{"lineNumber":261,"author":{"gitId":"TomLBZ"},"content":"                    builder.append(task.getDescription()).append(\": \").append(op).append(Constants.CMD_END)"},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":"                            .append(Constants.WIN_NEWLINE);"},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"            operationResult \u003d builder.toString();"},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"            if (operationResult.length() \u003d\u003d 0) {"},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"                throw new Exception(Constants.NO_OPERATION_POSSIBLE);"},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":"            return task;"},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"    private ArrayList\u003cOperation\u003e operations;"},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"    private Item findMod(ArrayList\u003cItem\u003e mods, ArrayList\u003cItem\u003e targets, int index, String code) throws Exception {"},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":"        if (code !\u003d null) {"},{"lineNumber":277,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : mods) {"},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":"                if (item.getName().equals(code)) {"},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"                    return item;"},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":283,"author":{"gitId":"TomLBZ"},"content":"            if (index \u003c 0 || index \u003e\u003d targets.size()) {"},{"lineNumber":284,"author":{"gitId":"TomLBZ"},"content":"                throw new Exception(Constants.INDEX_OUT);"},{"lineNumber":285,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"            Item target \u003d targets.get(index);"},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":"            if (target instanceof SingleModule) {"},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":"                return target;"},{"lineNumber":289,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":"                return mods.get(index);"},{"lineNumber":291,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":292,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":293,"author":{"gitId":"TomLBZ"},"content":"        throw new Exception(\"The module you specified is either completed or non-existent.\" + Constants.WIN_NEWLINE);"},{"lineNumber":294,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":296,"author":{"gitId":"TomLBZ"},"content":"    private Item findTask(ArrayList\u003cItem\u003e targets, int index) throws Exception {"},{"lineNumber":297,"author":{"gitId":"TomLBZ"},"content":"        if (index \u003c 0 || index \u003e\u003d targets.size()) {"},{"lineNumber":298,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Linked Task Index out of Range! \" + Constants.WIN_NEWLINE"},{"lineNumber":299,"author":{"gitId":"TomLBZ"},"content":"                    + \"Try \\\"detail [code]\\\" to see linked tasks for this module.\" + Constants.WIN_NEWLINE);"},{"lineNumber":300,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":301,"author":{"gitId":"TomLBZ"},"content":"        Item target \u003d targets.get(index);"},{"lineNumber":302,"author":{"gitId":"TomLBZ"},"content":"        if (!(target instanceof SingleModule)) {"},{"lineNumber":303,"author":{"gitId":"TomLBZ"},"content":"            return target;"},{"lineNumber":304,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"TomLBZ"},"content":"        throw new Exception(\"The item with the specified index is not a Task.\" + Constants.WIN_NEWLINE);"},{"lineNumber":306,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":308,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":309,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":310,"author":{"gitId":"TomLBZ"},"content":"        String defaultResult \u003d super.act(data);"},{"lineNumber":311,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":312,"author":{"gitId":"TomLBZ"},"content":"        if (operations \u003d\u003d null || operations.size() \u003d\u003d 0) {"},{"lineNumber":313,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(Constants.NO_OPERATION_POSSIBLE);"},{"lineNumber":314,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":315,"author":{"gitId":"TomLBZ"},"content":"            ArrayList\u003cItem\u003e targets \u003d data.getTarget();"},{"lineNumber":316,"author":{"gitId":"TomLBZ"},"content":"            for (Operation operation : operations) {"},{"lineNumber":317,"author":{"gitId":"TomLBZ"},"content":"                Item target;"},{"lineNumber":318,"author":{"gitId":"TomLBZ"},"content":"                if (operation.isMod) {"},{"lineNumber":319,"author":{"gitId":"TomLBZ"},"content":"                    target \u003d findMod(data.mods, targets, operation.itemIndex, operation.modCode);"},{"lineNumber":320,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":321,"author":{"gitId":"TomLBZ"},"content":"                    target \u003d findTask(targets, operation.itemIndex);"},{"lineNumber":322,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":323,"author":{"gitId":"TomLBZ"},"content":"                Item operatedTarget \u003d operation.operate(target);"},{"lineNumber":324,"author":{"gitId":"TomLBZ"},"content":"                if (operatedTarget instanceof SingleModule) {"},{"lineNumber":325,"author":{"gitId":"TomLBZ"},"content":"                    updateTask((SingleModule)operatedTarget);"},{"lineNumber":326,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":327,"author":{"gitId":"TomLBZ"},"content":"                data.updateItem(target, operatedTarget);"},{"lineNumber":328,"author":{"gitId":"TomLBZ"},"content":"                stringBuilder.append(operation.operationResult);"},{"lineNumber":329,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":330,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":331,"author":{"gitId":"TomLBZ"},"content":"        return defaultResult.replace(Constants.TEXT_PLACEHOLDER, stringBuilder.toString());"},{"lineNumber":332,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":334,"author":{"gitId":"TomLBZ"},"content":"    private void updateTask(SingleModule mod) throws Exception {"},{"lineNumber":335,"author":{"gitId":"TomLBZ"},"content":"        if (mod.immediateData \u003d\u003d null) {"},{"lineNumber":336,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":337,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":338,"author":{"gitId":"TomLBZ"},"content":"        String[] splitStrings \u003d mod.immediateData.split(\"\u003c\");"},{"lineNumber":339,"author":{"gitId":"TomLBZ"},"content":"        if (splitStrings.length !\u003d 2) {"},{"lineNumber":340,"author":{"gitId":"TomLBZ"},"content":"            throw new CommandException();"},{"lineNumber":341,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"TomLBZ"},"content":"        String indexString \u003d splitStrings[1].replace(\"\u003e\", Constants.ZERO_LENGTH_STRING);"},{"lineNumber":343,"author":{"gitId":"TomLBZ"},"content":"        int index;"},{"lineNumber":344,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":345,"author":{"gitId":"TomLBZ"},"content":"            index \u003d Integer.parseInt(indexString) - 1;"},{"lineNumber":346,"author":{"gitId":"TomLBZ"},"content":"        } catch (Exception e) {"},{"lineNumber":347,"author":{"gitId":"TomLBZ"},"content":"            throw new NumberFormatException(\"The format of index seems wrong...\" + Constants.WIN_NEWLINE);"},{"lineNumber":348,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":349,"author":{"gitId":"TomLBZ"},"content":"        if (index \u003c 0 || index \u003e mod.taskList.size() - 1) {"},{"lineNumber":350,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Linked Task Index out of Range! \" + Constants.WIN_NEWLINE"},{"lineNumber":351,"author":{"gitId":"TomLBZ"},"content":"                    + \"Try \\\"detail [module code]\\\" to see linked tasks for this module.\" + Constants.WIN_NEWLINE);"},{"lineNumber":352,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":353,"author":{"gitId":"TomLBZ"},"content":"        if (mod.taskList.get(index) \u003d\u003d null) {"},{"lineNumber":354,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"The specified linked task does not exist\" + Constants.WIN_NEWLINE);"},{"lineNumber":355,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":356,"author":{"gitId":"TomLBZ"},"content":"        String cmd \u003d splitStrings[0];"},{"lineNumber":357,"author":{"gitId":"TomLBZ"},"content":"        switch (cmd) {"},{"lineNumber":358,"author":{"gitId":"TomLBZ"},"content":"        case \"del\":"},{"lineNumber":359,"author":{"gitId":"TomLBZ"},"content":"            mod.taskList.remove(index - 1);"},{"lineNumber":360,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":361,"author":{"gitId":"TomLBZ"},"content":"        case \"done\":"},{"lineNumber":362,"author":{"gitId":"TomLBZ"},"content":"            ((Task)mod.taskList.get(index - 1)).markAsDone();"},{"lineNumber":363,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":364,"author":{"gitId":"TomLBZ"},"content":"        case \"undone\":"},{"lineNumber":365,"author":{"gitId":"TomLBZ"},"content":"            ((Task)mod.taskList.get(index - 1)).markAsUndone();"},{"lineNumber":366,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":367,"author":{"gitId":"TomLBZ"},"content":"        default:"},{"lineNumber":368,"author":{"gitId":"TomLBZ"},"content":"            throw new CommandException();"},{"lineNumber":369,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":371,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":372,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":373,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":374,"author":{"gitId":"TomLBZ"},"content":"        operations \u003d new ArrayList\u003c\u003e();"},{"lineNumber":375,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":376,"author":{"gitId":"TomLBZ"},"content":"        for (ParamNode arg : flattenedArgs) {"},{"lineNumber":377,"author":{"gitId":"TomLBZ"},"content":"            if (arg.thisData \u003d\u003d null) {"},{"lineNumber":378,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":379,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":380,"author":{"gitId":"TomLBZ"},"content":"            if (arg.name.equals(Constants.MOD)) {"},{"lineNumber":381,"author":{"gitId":"TomLBZ"},"content":"                String[] strings \u003d arg.thisData.toFlatString().split(Constants.SPACE);"},{"lineNumber":382,"author":{"gitId":"TomLBZ"},"content":"                operations.add(new Operation(true, new ArrayList\u003c\u003e(Arrays.asList(strings))));"},{"lineNumber":383,"author":{"gitId":"TomLBZ"},"content":"            } else if (arg.name.equals(Constants.TASK)) {"},{"lineNumber":384,"author":{"gitId":"TomLBZ"},"content":"                String[] strings \u003d arg.thisData.toFlatString().split(Constants.SPACE);"},{"lineNumber":385,"author":{"gitId":"TomLBZ"},"content":"                operations.add(new Operation(false, new ArrayList\u003c\u003e(Arrays.asList(strings))));"},{"lineNumber":386,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":387,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":388,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":389,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":390,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":391}},{"path":"src/main/java/command/action/EventAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Event;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import exceptions.MissingDescriptionException;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" * The type Event action."},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"public class EventAction extends Action {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    private String description;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private String at;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d super.act(data);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        Event event \u003d new Event(description, at);"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        data.addTask(event);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        return replaceStrings(result, event.toString(), data.tasks.size());"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs.length \u003c\u003d 1) {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs[0] \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            throw new MissingDescriptionException();"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs[1].thisData \u003d\u003d null) {"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        at \u003d flattenedArgs[1].thisData.toFlatString();"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        description \u003d flattenedArgs[0].toFlatString();"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":42}},{"path":"src/main/java/command/action/FancyAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Fancy action."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class FancyAction extends Action {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Fancy action."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    public FancyAction() {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":17}},{"path":"src/main/java/command/action/FindAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageOptions;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":" * The type Find action."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"public class FindAction extends Action {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    private String keyword;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    private String beforeFound;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        if (keyword \u003d\u003d null || keyword.length() \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder builder \u003d new StringBuilder(Constants.NO_KEYWORD);"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"            if (beforeFound !\u003d null) {"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"                data.setFlag(beforeFound);"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"            data.refreshTarget();"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : data.target) {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"                builder.append(item.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            if (builder.toString().equals(Constants.NO_KEYWORD)) {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"                builder.append(Constants.NOT_FOUND);"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"                data.indexOption \u003d MessageOptions.INDEXED_NUM;"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            return builder.toString();"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            String result \u003d super.act(data);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            if (data.target \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"                return result.replace(Constants.TEXT_PLACEHOLDER, Constants.NOT_FOUND);"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            if (!data.flag.equals(Constants.FOUND)) {"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                beforeFound \u003d data.flag;"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                data.setFlag(Constants.FOUND);"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            data.target.removeIf(x -\u003e !x.toString().contains(keyword));"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : data.target) {"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                builder.append(item.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"            if (builder.toString().equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"                builder.append(Constants.NOT_FOUND);"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"                data.indexOption \u003d MessageOptions.INDEXED_NUM;"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            return result.replace(Constants.TEXT_PLACEHOLDER, builder.toString());"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null) {"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"            keyword \u003d null;"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"            keyword \u003d args.thisData.toFlatString();"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":71}},{"path":"src/main/java/command/action/FocusAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Level;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Logger;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" * The type Focus action."},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"public class FocusAction extends Action {"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FocusAction.class.getName());"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    private String typeTask;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":22,"author":{"gitId":"johanesrafael"},"content":"        //@@author johanesrafael"},{"lineNumber":23,"author":{"gitId":"johanesrafael"},"content":"        // LOGGER.entering(getClass().getName(), \"changeFocus\");"},{"lineNumber":24,"author":{"gitId":"johanesrafael"},"content":"        // LOGGER.log(Level.INFO, \"Type changed\");"},{"lineNumber":25,"author":{"gitId":"johanesrafael"},"content":"        //@@author"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        data.setFlag(typeTask);"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        String output \u003d super.act(data);"},{"lineNumber":28,"author":{"gitId":"johanesrafael"},"content":"        //@@author johanesrafael"},{"lineNumber":29,"author":{"gitId":"johanesrafael"},"content":"        // LOGGER.exiting(getClass().getName(), \"changeFocus\");"},{"lineNumber":30,"author":{"gitId":"johanesrafael"},"content":"        //@@author"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        return output.replace(Constants.TEXT_PLACEHOLDER, typeTask);"},{"lineNumber":32,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":34,"author":{"gitId":"johanesrafael"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"johanesrafael"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":36,"author":{"gitId":"johanesrafael"},"content":"        super.prepare(args);"},{"lineNumber":37,"author":{"gitId":"johanesrafael"},"content":"        if (args.thisData \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            typeTask \u003d Constants.TASK;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            typeTask \u003d args.thisData.name;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            String[] options \u003d Constants.optionalParamMap.get(args.name);"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"            int count \u003d 0;"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"            for (String opt : options) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"                if (opt.equals(typeTask)) {"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                    break;"},{"lineNumber":46,"author":{"gitId":"johanesrafael"},"content":"                } else {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"                    count++;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"            if (count \u003d\u003d options.length) {"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"johanesrafael"},"content":"}"}],"authorContributionMap":{"johanesrafael":17,"TomLBZ":38}},{"path":"src/main/java/command/action/GoalAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.TooManyArgumentsException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.text.DecimalFormat;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":" * Goal planner function."},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"public class GoalAction extends CapAction {"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    double takenMC;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    double takenCap;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    double targetMC;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    double targetCap;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    boolean isDefault \u003d true;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        double goalScore \u003d targetMC * targetCap;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        double currentScore \u003d takenMC * takenCap;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        if (isDefault) {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"            double takenGrade \u003d 0;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            double totalTakenMC \u003d 0;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            double totalCapMC \u003d 0;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            ArrayList\u003cItem\u003e targetBackup \u003d data.target;"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            String flagBackup \u003d data.flag;"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : data.getTarget(Constants.CAP_DATA)) {"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"                String currentGrade \u003d filterGrade(((SingleModule)item).grade);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"                String score \u003d currentGrade \u003d\u003d null ? \"U\" : currentGrade;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"                double mc \u003d 0;"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"                try {"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"                    mc \u003d Double.parseDouble(((SingleModule) item).getModuleMC());"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"                } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"                    throw new Exception(\"One of your taken modules has invalid grade.\" + Constants.WIN_NEWLINE);"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                if (!score.equals(\"U\")) {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                    takenGrade +\u003d parseGrade(score) * mc;"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"                    totalTakenMC +\u003d mc;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"                    if (!score.equals(\"S\")) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                        totalCapMC +\u003d mc;"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"            data.refreshTarget(flagBackup);"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"            data.target \u003d targetBackup;"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"            takenCap \u003d takenGrade / totalCapMC;"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"            takenMC \u003d totalTakenMC;"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"            currentScore \u003d takenGrade;"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        if ((targetMC - takenMC) \u003c\u003d 0) {"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            return Constants.CAN_GRADUATE;"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        double capRequired \u003d (goalScore - currentScore) / (targetMC - takenMC);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        sb.append(Constants.REQUIRED_CAP).append(new DecimalFormat(\"#.##\").format(capRequired))"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                .append(Constants.WIN_NEWLINE).append(\"Try \\\"cap\\\" to see your current cap!\")"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                .append(Constants.WIN_NEWLINE);"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"        if (capRequired \u003c 0) {"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"            sb.append(Constants.WORK_LESS);"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        } else if (capRequired \u003c\u003d 1.0) {"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            sb.append(Constants.LOW_CAP);"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"        } else if (capRequired \u003c\u003d 5.0) {"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"            sb.append(Constants.JIAYOU);"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"            sb.append(Constants.HIGH_CAP);"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"        return sb.toString();"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        targetMC \u003d 0;"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"        targetCap \u003d 0;"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        takenMC \u003d 0;"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        takenCap \u003d 0;"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        isDefault \u003d true;"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        flattenedArgs \u003d args.thisData.flatten().toArray(new ParamNode[0]);"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs.length \u003e 2) {"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            throw new TooManyArgumentsException();"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            targetMC \u003d Double.parseDouble(flattenedArgs[0].thisData.name);"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"            targetCap \u003d Double.parseDouble(flattenedArgs[0].thisData.thisData.name);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"            if (flattenedArgs.length \u003d\u003d 2) {"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"                isDefault \u003d false;"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"                takenMC \u003d Double.parseDouble(flattenedArgs[1].thisData.name);"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"                takenCap \u003d Double.parseDouble(flattenedArgs[1].thisData.thisData.name);"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        } catch (Exception e) {"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"I do not see two parsable non-negative numbers. \""},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"                    + \"Did you make a typo?\" + Constants.WIN_NEWLINE);"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        if (takenMC \u003c 0) {"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Your taken MC cannot be negative!\" + Constants.WIN_NEWLINE);"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        if (takenCap \u003c 0) {"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Your taken CAP cannot be negative!\" + Constants.WIN_NEWLINE);"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        } else if (takenCap \u003e 5) {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Your taken CAP cannot be higher than 5.0!\" + Constants.WIN_NEWLINE);"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        if (targetMC \u003c 0) {"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Your total MC required cannot be negative!\" + Constants.WIN_NEWLINE);"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        if (targetCap \u003c 0) {"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Your target CAP cannot be negative!\" + Constants.WIN_NEWLINE);"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        } else if (targetCap \u003e 5) {"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Your target CAP cannot be higher than 5.0!\" + Constants.WIN_NEWLINE);"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":119}},{"path":"src/main/java/command/action/GradeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":" * Grade input action."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"public class GradeAction extends TakeAction {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    protected HashMap\u003cString, ArrayList\u003cString\u003e\u003e map;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    protected boolean isShowing;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        successes \u003d 0;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        if (isShowing) {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"            blindSearch \u003d Constants.TAKEN;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            blindSearch \u003d Constants.SELECTED;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        String output \u003d super.act(data).replace(\"take or untake\", \"grade\")"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"                .replace(\"taken\", \"graded\").replace(\" or ungraded\", Constants.ZERO_LENGTH_STRING);"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        if (isShowing) {"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            output \u003d output.replace(\"selected\", \"taken\");"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        return output;"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        assert item instanceof SingleModule;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        if (((SingleModule) item).isCompleted) {"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"        for (String key : map.keySet()) {"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"            boolean notBlind \u003d !isBlind"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                    \u0026\u0026 (key.equals(((SingleModule) item).moduleCode) || key.equals(item.immediateData));"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"            boolean blind \u003d isBlind \u0026\u0026 key.equals(\"DEFAULT\");"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            if (notBlind || blind) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                ArrayList\u003cString\u003e values \u003d map.get(key);"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                String grade \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                if (values \u003d\u003d null || values.size() \u003d\u003d 0) {"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"                    grade \u003d null;"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"                    grade \u003d filterGrade(values.get(0));"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"                ((SingleModule) item).grade \u003d grade;"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"                ((SingleModule) item).isTaken \u003d true;"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"                successes++;"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"                return true;"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        item.immediateData \u003d null;"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        if (isShowing) {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"            successes++;"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"        return isShowing;"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"    protected String filterGrade(String rawGrade) {"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        if (rawGrade \u003d\u003d null) {"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"            return null;"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        String myGrade \u003d rawGrade.toUpperCase();"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        for (String grade : Constants.VALID_GRADES) {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"            if (grade.equals(myGrade)) {"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"                return myGrade;"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"        return null;"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        return item.getName() + Constants.DETAILS_SIGNATURE + ((SingleModule)item).grade;"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"    protected void safetyCheck() {"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        isBlind \u003d true;"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        isShowing \u003d true;"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"        isShowing \u003d false;"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        map \u003d new HashMap\u003c\u003e();"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        indices \u003d new ArrayList\u003c\u003e();"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        codes \u003d new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"        super.superPrepare(args);"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        isBlind \u003d false;"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null || flattenedArgs.length \u003c 1) {"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"            safetyCheck();"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        String[] identifiers \u003d args.thisData.toFlatString().split(Constants.SPACE);"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        String lastKey \u003d \"DEFAULT\";"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        for (String id : identifiers) {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            String uid \u003d id.toUpperCase();"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"            try {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"                indices.add(Integer.parseInt(uid) - 1);"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"                lastKey \u003d uid;"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"                map.put(uid, new ArrayList\u003c\u003e());"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"            } catch (Exception e) {"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"                if (uid.matches(\"([A-Z])+([0-9])+[A-Z]*\")) {"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"                    codes.add(uid);"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"                    lastKey \u003d uid;"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"                    map.put(uid, new ArrayList\u003c\u003e());"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"                    if (map.get(lastKey) \u003d\u003d null) {"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"                        isBlind \u003d true;"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"                        map.put(lastKey, new ArrayList\u003c\u003e());"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"                    map.get(lastKey).add(uid);"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":128}},{"path":"src/main/java/command/action/HelpAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.HelpText;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" * The type Help action."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"public class HelpAction extends Action {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     * The Is detailed."},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    boolean isDetailed \u003d false;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     * The Help text."},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    HelpText helpText \u003d null;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        if (isDetailed \u0026\u0026 helpText !\u003d null) {"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"            isDetailed \u003d false;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            return helpText.toString();"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder builder \u003d new StringBuilder(Constants.HELP_HEADING);"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"            for (HelpText help: HelpText.values()) {"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"                builder.append(\"Command: \").append(help.name).append(Constants.SPACE).append(Constants.SPACE).append("},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"                        \"Description: \").append(help.description).append(Constants.WIN_NEWLINE);"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            builder.append(Constants.HELP_PROMPT);"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"            return builder.toString();"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs.length \u003e 0) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            String target \u003d flattenedArgs[0].name;"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"            if (target !\u003d null) {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                isDetailed \u003d true;"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"                helpText \u003d Constants.helpMap.get(target);"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":51}},{"path":"src/main/java/command/action/ListAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageOptions;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDate;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDateTime;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import java.util.Comparator;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import java.util.stream.Collectors;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":" * The type List action."},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"public class ListAction extends Action {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    private boolean isAsc \u003d false;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    private boolean isDesc \u003d false;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    private String stringDate \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder(Constants.LIST_HEAD);"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e target \u003d new ArrayList\u003c\u003e(data.getTarget());"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        if (!stringDate.equals(\"\")) { // this means it\u0027s in specific mode"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            LocalDateTime dateTime \u003d Item.parseDateTime(stringDate);"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            if (dateTime !\u003d null) {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"                LocalDate date \u003d dateTime.toLocalDate();"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"                data.target \u003d target.stream().filter(x -\u003e x instanceof Task \u0026\u0026 x.isDated"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"                        \u0026\u0026 date.compareTo(x.getDate()) \u003d\u003d 0).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"                for (Item item : data.target) {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"                    builder.append(item.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            if (isAsc) {"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                target.removeIf(x -\u003e !x.isDated);"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                target.sort(Comparator.comparing(Item::getDateTime));"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            if (isDesc) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                target.removeIf(x -\u003e !x.isDated);"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                target.sort((x, y) -\u003e -x.getDateTime().compareTo(y.getDateTime()));"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            data.target \u003d target;"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : target) {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"                builder.append(item.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        if (builder.toString().equals(Constants.LIST_HEAD)) {"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            builder.append(Constants.NOT_FOUND);"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            data.indexOption \u003d MessageOptions.INDEXED_NUM;"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        return builder.toString();"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"     * Picking up optional parameter and check if user entered."},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     * @param args the args"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"     * @throws Exception to handle prepare exceptions."},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"        int len \u003d flattenedArgs.length;"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"        if (len \u003d\u003d 0) {"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"            isDesc \u003d false;"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"            isAsc \u003d false;"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"            stringDate \u003d \"\";"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            stringDate \u003d flattenedArgs[0].toFlatString();"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"            String[] optionalParams \u003d Constants.optionalParamMap.get(args.name);"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"            String optionalParam \u003d optionalParams[0];"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"            String asc \u003d optionalParams[1];"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"            String desc \u003d optionalParams[2];"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"            String spec \u003d optionalParams[3];"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            boolean isDated \u003d stringDate.contains(optionalParam);"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            if (isDated) {"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"                stringDate \u003d stringDate.replace(optionalParam, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                String[] options \u003d stringDate.split(Constants.SPACE);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                String option \u003d options[0];"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"                if (option.equals(spec) \u0026\u0026 options.length \u003e 1) {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"                    StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"                    for (int i \u003d 1; i \u003c options.length; i++) {"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(options[i]).append(Constants.SPACE);"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"                    stringDate \u003d builder.toString();"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"                } else if (option.equals(asc)) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"                    isAsc \u003d true;"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"                    isDesc \u003d false;"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"                    stringDate \u003d \"\";"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"                } else if (option.equals(desc)) {"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"                    isDesc \u003d true;"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"                    isAsc \u003d false;"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"                    stringDate \u003d \"\";"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"                    isAsc \u003d false;"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"                    isDesc \u003d false;"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"                    stringDate \u003d \"\";"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"                    throw new Exception();"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            } else if (stringDate.trim().length() \u003d\u003d 0) {"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"                stringDate \u003d \"\";"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"                throw new CommandException();"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":122}},{"path":"src/main/java/command/action/LoadLinkedTasksAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Deadline;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Event;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.ToDo;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDateTime;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"public class LoadLinkedTasksAction extends Action {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    private String moduleCode;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    private ArrayList\u003cString\u003e tasksStrings;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        SingleModule module \u003d null;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        for (Item mod : data.mods) {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            if (((SingleModule) mod).moduleCode.equals(moduleCode)) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"                module \u003d (SingleModule) mod;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        if (module \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(Constants.NOT_FOUND.replace(\"item\", \"module\"));"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Added Tasks: \").append(Constants.WIN_NEWLINE);"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        for (String task : tasksStrings) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            Task myTask;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"            if (task.contains(Constants.TODO_ICON)) {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"                task \u003d task.replace(Constants.TODO_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"                boolean isDone \u003d false;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"                if (task.contains(Constants.TICK_ICON)) {"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"                    isDone \u003d true;"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"                    task \u003d task.replace(Constants.TICK_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                    task \u003d task.replace(Constants.CROSS_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"                myTask \u003d new ToDo(task);"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                if (isDone) {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                    myTask.markAsDone();"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            } else if (task.contains(Constants.DDL_ICON)) {"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"                task \u003d task.replace(Constants.DDL_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"                myTask \u003d getTask(task, \"by:\");"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"            } else if (task.contains(Constants.EVENT_ICON)) {"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"                task \u003d task.replace(Constants.EVENT_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"                myTask \u003d getTask(task, \"at:\");"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"                throw new Exception(\"The task_string parameter has wrong format!\" + Constants.WIN_NEWLINE);"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"            module.taskList.add(myTask);"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            builder.append(myTask.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        return builder.append(\"for module: \").append(moduleCode)"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                .append(Constants.CMD_END).append(Constants.WIN_NEWLINE).append(\"Try \\\"detail \")"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                .append(moduleCode).append(\"\\\" to check it out!\").append(Constants.WIN_NEWLINE).toString();"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"    private Task getTask(String task, String identity) throws Exception {"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        boolean isDone \u003d false;"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"        boolean isDeadline \u003d identity.equals(\"by:\");"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        String errIdentity \u003d isDeadline ? Constants.DEADLINE : Constants.EVENT;"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        if (!task.contains(identity)) {"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"Inner command \\\"\" + errIdentity + \"\\\" has wrong format!\" + Constants.WIN_NEWLINE);"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"        if (task.contains(Constants.TICK_ICON)) {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"            isDone \u003d true;"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"            task \u003d task.replace(Constants.TICK_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"            task \u003d task.replace(Constants.CROSS_ICON, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"        task \u003d task.replace(Constants.PARAM_LEFT, Constants.ZERO_LENGTH_STRING)"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                .replace(Constants.PARAM_RIGHT, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        String[] separated \u003d task.split(identity);"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        String description \u003d separated[0].trim();"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        String date \u003d separated[1].trim();"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        Task myTask \u003d isDeadline ? new Deadline(description, date) : new Event(description, date);"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        if (isDone) {"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"            myTask.markAsDone();"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        return myTask;"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        moduleCode \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        tasksStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"        if (flattenedArgs \u003d\u003d null || flattenedArgs.length !\u003d 1) {"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"            throw new CommandException();"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        String[] argStrings \u003d flattenedArgs[0].toFlatString().split(Constants.SPACE);"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        if (argStrings.length !\u003d 2) {"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"            throw new CommandException();"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        moduleCode \u003d argStrings[0].toUpperCase();"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        if (moduleCode.matches(\"([A-Z])+([0-9])+[A-Z]*\")) {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            String[] tasks \u003d argStrings[1].split(Constants.COMMA);"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"            for (String task : tasks) {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"                tasksStrings.add(task.replace(Constants.LINE_UNIT, Constants.SPACE));"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"            if (tasksStrings.size() \u003d\u003d 0) {"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"                throw new Exception(\"The second parameter has wrong format!\" + Constants.WIN_NEWLINE);"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(\"The first parameter must be a module code!\" + Constants.WIN_NEWLINE);"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":119}},{"path":"src/main/java/command/action/McAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"//@@author scjx123"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import data.Item;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"import data.SingleModule;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"import data.Data;"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":"import exceptions.CommandException;"},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"public class McAction extends Action {"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":"    private boolean isDetail \u003d false;"},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"    private String userInput \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"     * Return a string based on whether user wants to print MC or list individual detail MC."},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"     * @param data the data"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"     * @return builder which appends the resulting MC"},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"     * @throws Exception No specific action"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"        StringBuilder builder \u003d new StringBuilder(Constants.MC_HEAD);"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":"        String flag \u003d data.flag;"},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"        ArrayList\u003cItem\u003e moduleList \u003d new ArrayList\u003c\u003e(data.getTarget());"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"        if (moduleList.equals(data.tasks)) {"},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":"            moduleList \u003d new ArrayList\u003c\u003e(data.mods);"},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":"        if (isDetail) {"},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"            for (Item item : moduleList) {"},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"                SingleModule m \u003d (SingleModule)item;"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":"                builder.append(m.moduleCode).append(Constants.DETAILS_SIGNATURE)"},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"                        .append(m.getModuleMC().trim()).append(\"MCs\").append(Constants.WIN_NEWLINE);"},{"lineNumber":39,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"scjx123"},"content":"            int sum \u003d 0;"},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"            data.getTarget();"},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"            for (Item item : data.target) {"},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"                SingleModule m \u003d (SingleModule)item;"},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"                sum +\u003d Integer.parseInt(m.getModuleMC().trim());"},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":"                assert sum !\u003d 0 : \"sum should not be zero\";"},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"            data.getTarget(flag);"},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":"            builder.append(sum).append(Constants.WIN_NEWLINE); //build a string"},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"        return builder.toString();"},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"     * Set isDetail flag if the user wish to print detailed MC."},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":"     * @param args the args"},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"     * @throws Exception thrown when invalid command is entered"},{"lineNumber":59,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"scjx123"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":62,"author":{"gitId":"scjx123"},"content":"        super.prepare(args);"},{"lineNumber":63,"author":{"gitId":"scjx123"},"content":"        int len \u003d flattenedArgs.length;"},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":"        if (len \u003d\u003d 0) {"},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"            isDetail \u003d false;"},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":"            userInput \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":"            userInput \u003d flattenedArgs[0].toFlatString();"},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":"            String[] optionalParams \u003d Constants.optionalParamMap.get(args.name);"},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":"            String detail \u003d optionalParams[0];"},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":"            isDetail \u003d userInput.equals(detail);"},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":"            if (isDetail) {"},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"                if (len \u003e 1) {"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"                    throw new CommandException();"},{"lineNumber":77,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"scjx123"},"content":"                isDetail \u003d true;"},{"lineNumber":79,"author":{"gitId":"scjx123"},"content":"                userInput \u003d \"\";"},{"lineNumber":80,"author":{"gitId":"scjx123"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"scjx123"},"content":"                throw new CommandException();"},{"lineNumber":82,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"scjx123":85}},{"path":"src/main/java/command/action/NextAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" * The type Next action."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"public class NextAction extends PrevAction {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d getTargetString(Constants.optionalParamMap.get(args.name), arg);"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"        result \u003d result + \"1\";"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        return super.superAct(data).replace(Constants.TEXT_PLACEHOLDER, result);"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":22}},{"path":"src/main/java/command/action/PlainAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Plain action."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class PlainAction extends Action {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Plain action."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    public PlainAction() {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":17}},{"path":"src/main/java/command/action/PostponeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"//@@author johanesrafael"},{"lineNumber":2,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":3,"author":{"gitId":"johanesrafael"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":5,"author":{"gitId":"johanesrafael"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"johanesrafael"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"johanesrafael"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"johanesrafael"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"johanesrafael"},"content":"import data.jobs.Deadline;"},{"lineNumber":10,"author":{"gitId":"johanesrafael"},"content":"import data.jobs.Event;"},{"lineNumber":11,"author":{"gitId":"johanesrafael"},"content":"import data.jobs.ToDo;"},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"import exceptions.CommandException;"},{"lineNumber":13,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":14,"author":{"gitId":"johanesrafael"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"johanesrafael"},"content":" * The type Postpone Action."},{"lineNumber":16,"author":{"gitId":"johanesrafael"},"content":" */"},{"lineNumber":17,"author":{"gitId":"johanesrafael"},"content":"public class PostponeAction extends Action {"},{"lineNumber":18,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":19,"author":{"gitId":"johanesrafael"},"content":"    private int index;"},{"lineNumber":20,"author":{"gitId":"johanesrafael"},"content":"    private String postponeType;"},{"lineNumber":21,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":22,"author":{"gitId":"johanesrafael"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"johanesrafael"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":24,"author":{"gitId":"johanesrafael"},"content":"        Item item \u003d data.get(index);"},{"lineNumber":25,"author":{"gitId":"johanesrafael"},"content":"        if (item \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitId":"johanesrafael"},"content":"            return Constants.INDEX_OUT;"},{"lineNumber":27,"author":{"gitId":"johanesrafael"},"content":"        } else if (item instanceof Deadline || item instanceof Event) {"},{"lineNumber":28,"author":{"gitId":"johanesrafael"},"content":"            item.resetDateTime(postponeType);"},{"lineNumber":29,"author":{"gitId":"johanesrafael"},"content":"            data.updateItem(index, item);"},{"lineNumber":30,"author":{"gitId":"johanesrafael"},"content":"            String result \u003d super.act(data);"},{"lineNumber":31,"author":{"gitId":"johanesrafael"},"content":"            return result.replace(Constants.TEXT_PLACEHOLDER, item.toString());"},{"lineNumber":32,"author":{"gitId":"johanesrafael"},"content":"        } else if (item instanceof ToDo) {"},{"lineNumber":33,"author":{"gitId":"johanesrafael"},"content":"            return Constants.NOT_DEADLINE_OR_EVENT;"},{"lineNumber":34,"author":{"gitId":"johanesrafael"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"johanesrafael"},"content":"            return Constants.NOT_TASK;"},{"lineNumber":36,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":39,"author":{"gitId":"johanesrafael"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"johanesrafael"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":41,"author":{"gitId":"johanesrafael"},"content":"        super.prepare(args);"},{"lineNumber":42,"author":{"gitId":"johanesrafael"},"content":"        if (args.thisData \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitId":"johanesrafael"},"content":"            throw new CommandException();"},{"lineNumber":44,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"johanesrafael"},"content":"        String[] param \u003d args.thisData.toFlatString().split(\" \");"},{"lineNumber":46,"author":{"gitId":"johanesrafael"},"content":"        if (param.length \u003d\u003d 1) {"},{"lineNumber":47,"author":{"gitId":"johanesrafael"},"content":"            index \u003d getIndex(args.thisData.name);"},{"lineNumber":48,"author":{"gitId":"johanesrafael"},"content":"            postponeType \u003d \"d\"; // set to d for day by default"},{"lineNumber":49,"author":{"gitId":"johanesrafael"},"content":"        } else if (param.length \u003d\u003d 2) {"},{"lineNumber":50,"author":{"gitId":"johanesrafael"},"content":"            index \u003d getIndex(param[1]);"},{"lineNumber":51,"author":{"gitId":"johanesrafael"},"content":"            postponeType \u003d param[0];"},{"lineNumber":52,"author":{"gitId":"johanesrafael"},"content":"            String[] options \u003d Constants.optionalParamMap.get(args.name);"},{"lineNumber":53,"author":{"gitId":"johanesrafael"},"content":"            int count \u003d 0;"},{"lineNumber":54,"author":{"gitId":"johanesrafael"},"content":"            for (String opt : options) {"},{"lineNumber":55,"author":{"gitId":"johanesrafael"},"content":"                if (opt.equals(postponeType)) {"},{"lineNumber":56,"author":{"gitId":"johanesrafael"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"johanesrafael"},"content":"                } else {"},{"lineNumber":58,"author":{"gitId":"johanesrafael"},"content":"                    count++;"},{"lineNumber":59,"author":{"gitId":"johanesrafael"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"johanesrafael"},"content":"            if (count \u003d\u003d options.length) {"},{"lineNumber":62,"author":{"gitId":"johanesrafael"},"content":"                throw new CommandException();"},{"lineNumber":63,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"johanesrafael"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"johanesrafael"},"content":"            throw new CommandException();"},{"lineNumber":66,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"johanesrafael"},"content":"}"}],"authorContributionMap":{"johanesrafael":68}},{"path":"src/main/java/command/action/PrevAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" * The type Prev action."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"public class PrevAction extends Action {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    protected String arg \u003d \"a\";"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d getTargetString(Constants.optionalParamMap.get(args.name), arg);"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        result \u003d result + \"-1\";"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        return superAct(data).replace(Constants.TEXT_PLACEHOLDER, result);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    protected String superAct(Data data) throws Exception {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        return super.act(data);"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     * Gets target string."},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * @param params the params"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     * @param arg    the arg"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * @return the target string"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    protected String getTargetString(String[] params, String arg) throws Exception {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d \"\";"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        String i \u003d params[0];"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        String s \u003d params[1];"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        String a \u003d params[2];"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        if (arg.equals(i)) {"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            result \u003d Constants.BMP_LIST_SWITCH;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        } else if (arg.equals(s)) {"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"            result \u003d Constants.BMP_SEL_SWITCH;"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"        } else if (arg.equals(a)) {"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"            result \u003d Constants.BMP_LIST_SWITCH + Constants.BMP_SEL_SWITCH;"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"            throw new CommandException();"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        return result;"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        arg \u003d \"a\";"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        int len \u003d flattenedArgs.length;"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        if (len \u003e 0) {"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            arg \u003d flattenedArgs[0].name.toLowerCase().trim();"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":61}},{"path":"src/main/java/command/action/ReminderAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuhann"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":3,"author":{"gitId":"chuhann"},"content":"import command.ParamNode;"},{"lineNumber":4,"author":{"gitId":"chuhann"},"content":"import constants.Constants;"},{"lineNumber":5,"author":{"gitId":"chuhann"},"content":"import data.Data;"},{"lineNumber":6,"author":{"gitId":"chuhann"},"content":"import data.Item;"},{"lineNumber":7,"author":{"gitId":"chuhann"},"content":"import exceptions.CommandException;"},{"lineNumber":8,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":9,"author":{"gitId":"chuhann"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"chuhann"},"content":"import java.util.Comparator;"},{"lineNumber":11,"author":{"gitId":"chuhann"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"import java.util.logging.Level;"},{"lineNumber":13,"author":{"gitId":"johanesrafael"},"content":"import java.util.logging.Logger;"},{"lineNumber":14,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":15,"author":{"gitId":"johanesrafael"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"johanesrafael"},"content":" * The type Reminder Tasks Action."},{"lineNumber":17,"author":{"gitId":"johanesrafael"},"content":" */"},{"lineNumber":18,"author":{"gitId":"chuhann"},"content":"public class ReminderAction extends Action {"},{"lineNumber":19,"author":{"gitId":"johanesrafael"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ReminderAction.class.getName());"},{"lineNumber":20,"author":{"gitId":"chuhann"},"content":"    public static boolean TIMER_TRIGGER \u003d true;"},{"lineNumber":21,"author":{"gitId":"chuhann"},"content":"    private String switches;"},{"lineNumber":22,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":23,"author":{"gitId":"chuhann"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"chuhann"},"content":"    public String act(Data data) {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"        final String flag \u003d data.flag;"},{"lineNumber":26,"author":{"gitId":"chuhann"},"content":"        StringBuilder builder \u003d new StringBuilder(Constants.REMINDER_HEAD);"},{"lineNumber":27,"author":{"gitId":"chuhann"},"content":"        data.setFlag(Constants.EVENT);"},{"lineNumber":28,"author":{"gitId":"chuhann"},"content":"        ArrayList\u003cItem\u003e tasks \u003d new ArrayList\u003c\u003e(data.getTarget());"},{"lineNumber":29,"author":{"gitId":"chuhann"},"content":"        data.setFlag(Constants.DEADLINE);"},{"lineNumber":30,"author":{"gitId":"chuhann"},"content":"        ArrayList\u003cItem\u003e deadlines \u003d new ArrayList\u003c\u003e(data.getTarget());"},{"lineNumber":31,"author":{"gitId":"chuhann"},"content":"        LocalDateTime lt \u003d LocalDateTime.now();"},{"lineNumber":32,"author":{"gitId":"chuhann"},"content":"        LocalDateTime upper \u003d lt.plusDays(Constants.REMINDER_RANGE);"},{"lineNumber":33,"author":{"gitId":"chuhann"},"content":"        tasks.addAll(deadlines);"},{"lineNumber":34,"author":{"gitId":"chuhann"},"content":"        tasks.removeIf(x -\u003e x.getDateTime() \u003d\u003d null);"},{"lineNumber":35,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":36,"author":{"gitId":"chuhann"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":37,"author":{"gitId":"chuhann"},"content":"            if (!(tasks.get(i).getDateTime().isAfter(lt) \u0026\u0026 tasks.get(i).getDateTime().isBefore(upper))) {"},{"lineNumber":38,"author":{"gitId":"chuhann"},"content":"                tasks.remove(i);"},{"lineNumber":39,"author":{"gitId":"chuhann"},"content":"                i--;"},{"lineNumber":40,"author":{"gitId":"chuhann"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"chuhann"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"chuhann"},"content":"        tasks.sort(Comparator.comparing(Item::getDateTime));"},{"lineNumber":43,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":44,"author":{"gitId":"chuhann"},"content":"        for (Item item : tasks) {"},{"lineNumber":45,"author":{"gitId":"chuhann"},"content":"            builder.append(item.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":46,"author":{"gitId":"chuhann"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"johanesrafael"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":48,"author":{"gitId":"johanesrafael"},"content":"            builder.append(Constants.NO_URGENT_TASKS);"},{"lineNumber":49,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        builder.append(\"Reminder is currently \").append(ReminderAction.TIMER_TRIGGER ? \"on.\" : \"off.\");"},{"lineNumber":51,"author":{"gitId":"chuhann"},"content":"        data.setFlag(flag);"},{"lineNumber":52,"author":{"gitId":"chuhann"},"content":"        return builder.toString();"},{"lineNumber":53,"author":{"gitId":"chuhann"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":55,"author":{"gitId":"johanesrafael"},"content":"    //@@author johanesrafael"},{"lineNumber":56,"author":{"gitId":"johanesrafael"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"johanesrafael"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":58,"author":{"gitId":"johanesrafael"},"content":"        super.prepare(args);"},{"lineNumber":59,"author":{"gitId":"johanesrafael"},"content":"        if (args.thisData !\u003d null) {"},{"lineNumber":60,"author":{"gitId":"johanesrafael"},"content":"            switches \u003d args.thisData.name;"},{"lineNumber":61,"author":{"gitId":"johanesrafael"},"content":"            String[] options \u003d Constants.optionalParamMap.get(args.name);"},{"lineNumber":62,"author":{"gitId":"johanesrafael"},"content":"            int count \u003d 0;"},{"lineNumber":63,"author":{"gitId":"johanesrafael"},"content":"            for (String opt : options) {"},{"lineNumber":64,"author":{"gitId":"johanesrafael"},"content":"                if (opt.equals(switches)) {"},{"lineNumber":65,"author":{"gitId":"johanesrafael"},"content":"                    if (opt.equals(Constants.REMINDER_ON)) {"},{"lineNumber":66,"author":{"gitId":"johanesrafael"},"content":"                        TIMER_TRIGGER \u003d true;"},{"lineNumber":67,"author":{"gitId":"johanesrafael"},"content":"                    } else if (opt.equals(Constants.REMINDER_OFF)) {"},{"lineNumber":68,"author":{"gitId":"johanesrafael"},"content":"                        TIMER_TRIGGER \u003d false;"},{"lineNumber":69,"author":{"gitId":"johanesrafael"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"johanesrafael"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"johanesrafael"},"content":"                } else {"},{"lineNumber":72,"author":{"gitId":"johanesrafael"},"content":"                    count++;"},{"lineNumber":73,"author":{"gitId":"johanesrafael"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"johanesrafael"},"content":"            if (count \u003d\u003d options.length) {"},{"lineNumber":76,"author":{"gitId":"johanesrafael"},"content":"                throw new CommandException();"},{"lineNumber":77,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":81,"author":{"gitId":"johanesrafael"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"johanesrafael"},"content":"     * Gets timer status."},{"lineNumber":83,"author":{"gitId":"johanesrafael"},"content":"     * @return TIMER_TRIGGER"},{"lineNumber":84,"author":{"gitId":"johanesrafael"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"johanesrafael"},"content":"    public Boolean getTimerStatus() {"},{"lineNumber":86,"author":{"gitId":"johanesrafael"},"content":"        return TIMER_TRIGGER;"},{"lineNumber":87,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"johanesrafael"},"content":"}"}],"authorContributionMap":{"johanesrafael":43,"TomLBZ":2,"chuhann":43}},{"path":"src/main/java/command/action/SelectAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import exceptions.ItemNotSpecifiedException;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" * The type Select action."},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"public class SelectAction extends TakeAction {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"        successes \u003d 0;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        data.refreshTarget();"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        if (codes !\u003d null \u0026\u0026 codes.size() \u003e 0) {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"            data.mods.stream().filter(x -\u003e codes.contains(((SingleModule) x).moduleCode)).forEach(m -\u003e {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"                modifyObject(m);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"                builder.append(\"Item: \").append(getObjectInfo(m)).append(Constants.WIN_NEWLINE);"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"            });"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        if (!indices.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            for (int i : indices) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"                if (i \u003c 0 || i \u003e data.target.size() - 1) {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"                    throw new IndexOutOfBoundsException(Constants.INDEX_OUT);"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"                modifyObject(data.target.get(i));"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"                builder.append(\"Item \").append(i + 1).append(\": \")"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"                        .append(getObjectInfo(data.get(i))).append(Constants.WIN_NEWLINE);"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d superAct(data);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        String execution \u003d builder.toString();"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        if (execution.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            execution \u003d execution.concat(Constants.NOT_FOUND);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        return result.replace(Constants.TEXT_PLACEHOLDER, execution);"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        item.isSelected \u003d true;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        successes++;"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        return item.getName() + \": now selected\";"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    protected String getEmptySelectionMessage() {"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        return Constants.SELECTED_CHANGED_FAILED;"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    protected void safetyCheck() throws Exception {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        throw new ItemNotSpecifiedException();"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    protected String superAct(Data data) throws Exception {"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        return super.superAct(data);"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":71}},{"path":"src/main/java/command/action/SnoozeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"//@@author johanesrafael"},{"lineNumber":2,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":3,"author":{"gitId":"johanesrafael"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":5,"author":{"gitId":"johanesrafael"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"johanesrafael"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"johanesrafael"},"content":"import exceptions.CommandException;"},{"lineNumber":8,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":9,"author":{"gitId":"johanesrafael"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"johanesrafael"},"content":" * The type Snooze action."},{"lineNumber":11,"author":{"gitId":"johanesrafael"},"content":" */"},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"public class SnoozeAction extends Action {"},{"lineNumber":13,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":14,"author":{"gitId":"johanesrafael"},"content":"    private String newInterval;"},{"lineNumber":15,"author":{"gitId":"johanesrafael"},"content":"    private String addDefaultDelay \u003d \"60000\"; // default delay for Snooze"},{"lineNumber":16,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":17,"author":{"gitId":"johanesrafael"},"content":"    public SnoozeAction() {"},{"lineNumber":18,"author":{"gitId":"johanesrafael"},"content":"        super();"},{"lineNumber":19,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":21,"author":{"gitId":"johanesrafael"},"content":"    public String getNewInterval() {"},{"lineNumber":22,"author":{"gitId":"johanesrafael"},"content":"        newInterval \u003d Integer.toString(Integer.parseInt(Constants.REMINDER_INTERVAL)"},{"lineNumber":23,"author":{"gitId":"johanesrafael"},"content":"                + Integer.parseInt(addDefaultDelay));"},{"lineNumber":24,"author":{"gitId":"johanesrafael"},"content":"        return newInterval;"},{"lineNumber":25,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":27,"author":{"gitId":"johanesrafael"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"johanesrafael"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":29,"author":{"gitId":"johanesrafael"},"content":"        super.prepare(args);"},{"lineNumber":30,"author":{"gitId":"johanesrafael"},"content":"        if (args.thisData !\u003d null) {"},{"lineNumber":31,"author":{"gitId":"johanesrafael"},"content":"            throw new CommandException();"},{"lineNumber":32,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"johanesrafael"},"content":"}"}],"authorContributionMap":{"johanesrafael":34}},{"path":"src/main/java/command/action/StatsAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"//@@author scjx123"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import command.Command;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import command.ParamNode;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"import data.Data;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"import data.Item;"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":"import data.SingleModule;"},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"import data.jobs.Task;"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":"import exceptions.CommandException;"},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"import exceptions.InvalidListException;"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":"import exceptions.ModuleNotFoundException;"},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":"import java.util.logging.Level;"},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"import java.util.logging.Logger;"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":" * The type Stats action."},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":" */"},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"public class StatsAction extends Action {"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"    boolean isMod \u003d false;"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":"    String userInput \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"    String selectedModule;"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"    SingleModule tempModule \u003d null;"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":"    int doneItem \u003d 0;"},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"    double ratio \u003d 0;"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Data.class.getName());"},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"        StringBuilder builder \u003d new StringBuilder(Constants.STATS_HEAD);"},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"        ArrayList\u003cItem\u003e targetList \u003d new ArrayList\u003c\u003e(data.getTarget());"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"        if (isMod) {"},{"lineNumber":39,"author":{"gitId":"scjx123"},"content":"            LOGGER.log(Level.INFO, \"Calculating Module Statistics\");"},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":"            targetList \u003d new ArrayList\u003c\u003e(data.mods);"},{"lineNumber":41,"author":{"gitId":"scjx123"},"content":"            for (Item item : targetList) {"},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"                if (item.getName().toLowerCase().equals(selectedModule.toLowerCase())) {"},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"                    tempModule \u003d (SingleModule)item;"},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":"            if (tempModule \u003d\u003d null) {"},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"                throw new ModuleNotFoundException();"},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":"            for (Item item : tempModule.getTaskList()) {"},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":"                Task t \u003d (Task)item;"},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"                if (t.getStatusIcon().equals(Constants.TICK)) {"},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"                    doneItem +\u003d 1;"},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"            ratio \u003d (double)doneItem / tempModule.getTaskList().size();"},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":"            builder.append(roundedRatioBar(ratio)).append(Constants.WIN_NEWLINE);"},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"            LOGGER.log(Level.INFO, \"Calculating Statistics\");"},{"lineNumber":59,"author":{"gitId":"scjx123"},"content":"            if (targetList.equals(data.mods)) {"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":"                throw new InvalidListException();"},{"lineNumber":61,"author":{"gitId":"scjx123"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"scjx123"},"content":"                for (Item item : targetList) {"},{"lineNumber":63,"author":{"gitId":"scjx123"},"content":"                    Task t \u003d (Task) item;"},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":"                    if (t.getStatusIcon().equals(Constants.TICK)) {"},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":"                        doneItem +\u003d 1;"},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":"            if (doneItem \u003e 0) {"},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":"                ratio \u003d (double) doneItem / targetList.size();"},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":"                builder.append(roundedRatioBar(ratio)).append(Constants.WIN_NEWLINE);"},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":"                assert ratio \u003e\u003d 0.0 : \"fraction is greater or equal to zero\";"},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":"            } else if (doneItem \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":"                ratio \u003d 0;"},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"                builder.append(roundedRatioBar(ratio)).append(Constants.WIN_NEWLINE);"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"scjx123"},"content":"        return builder.toString();"},{"lineNumber":79,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":81,"author":{"gitId":"scjx123"},"content":"    private String roundedRatioBar(double fraction) {"},{"lineNumber":82,"author":{"gitId":"scjx123"},"content":"        double roundedRatio \u003d Math.round((fraction * 100) * 10) / 10.0;"},{"lineNumber":83,"author":{"gitId":"scjx123"},"content":"        return Constants.ICON_LEFT + roundedRatio + Constants.PERCENT + Constants.ICON_RIGHT;"},{"lineNumber":84,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":86,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"scjx123"},"content":"     * Picking up optional parameter and check if user entered."},{"lineNumber":88,"author":{"gitId":"scjx123"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"scjx123"},"content":"     * @param args the args"},{"lineNumber":90,"author":{"gitId":"scjx123"},"content":"     * @throws Exception to handle prepare exceptions."},{"lineNumber":91,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"scjx123"},"content":"    @Override"},{"lineNumber":93,"author":{"gitId":"scjx123"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":94,"author":{"gitId":"scjx123"},"content":"        super.prepare(args);"},{"lineNumber":95,"author":{"gitId":"scjx123"},"content":"        int len \u003d flattenedArgs.length;"},{"lineNumber":96,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":97,"author":{"gitId":"scjx123"},"content":"        if (len \u003d\u003d 0) {"},{"lineNumber":98,"author":{"gitId":"scjx123"},"content":"            isMod \u003d false;"},{"lineNumber":99,"author":{"gitId":"scjx123"},"content":"            userInput \u003d \"\";"},{"lineNumber":100,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"scjx123"},"content":"            userInput \u003d flattenedArgs[0].toFlatString();"},{"lineNumber":102,"author":{"gitId":"scjx123"},"content":"            String[] optionalParams \u003d Constants.optionalParamMap.get(args.name);"},{"lineNumber":103,"author":{"gitId":"scjx123"},"content":"            String mod \u003d optionalParams[0];"},{"lineNumber":104,"author":{"gitId":"scjx123"},"content":"            isMod \u003d userInput.contains(mod);"},{"lineNumber":105,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":106,"author":{"gitId":"scjx123"},"content":"            if (isMod) {"},{"lineNumber":107,"author":{"gitId":"scjx123"},"content":"                selectedModule \u003d  userInput.replace(\"mod\",\"\").trim();"},{"lineNumber":108,"author":{"gitId":"scjx123"},"content":"                isMod \u003d true;"},{"lineNumber":109,"author":{"gitId":"scjx123"},"content":"                userInput \u003d \"\";"},{"lineNumber":110,"author":{"gitId":"scjx123"},"content":"            } else {"},{"lineNumber":111,"author":{"gitId":"scjx123"},"content":"                throw new InvalidCommandException();"},{"lineNumber":112,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"scjx123":115}},{"path":"src/main/java/command/action/TakeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":" * The type Take action."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"public class TakeAction extends Action {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    protected ArrayList\u003cInteger\u003e indices;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    protected ArrayList\u003cString\u003e codes;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    protected boolean isBlind \u003d false;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    int successes \u003d 0;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    protected String blindSearch \u003d Constants.SELECTED;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        successes \u003d 0;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        boolean isEmptySelection \u003d false;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        String flag \u003d data.flag;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e targetBackup \u003d data.target;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        if (isBlind) {"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder testContent \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            data.getTarget(blindSearch).forEach(x -\u003e {"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"                if (x instanceof SingleModule) {"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"                    if (modifyObject(x)) {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"                        testContent.append(getObjectInfo(x)).append(Constants.WIN_NEWLINE);"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"                    } else {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"                        testContent.append(Constants.MODIFY_FAILED)"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"                                .append(x.getName()).append(Constants.WIN_NEWLINE);"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"            });"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"            if (testContent.toString().length() \u003e 0) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"                builder.append(\"You did not specify modules, looking for your selected modules...\")"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"                        .append(Constants.WIN_NEWLINE).append(testContent.toString());"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"                isEmptySelection \u003d true;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"                builder.append(getEmptySelectionMessage());"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"            if (!indices.isEmpty()) {"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"                for (int i : indices) {"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"                    if (i \u003c 0 || i \u003e data.target.size() - 1) {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"                        throw new IndexOutOfBoundsException(Constants.INDEX_OUT);"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"                    if (data.target.get(i) instanceof SingleModule) {"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"                        Item module \u003d data.target.get(i);"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"                        module.immediateData \u003d String.valueOf(i + 1);"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"                        if (modifyObject(module)) {"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"                            builder.append(\"Module \").append(i + 1).append(\": \")"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"                                    .append(getObjectInfo(module)).append(Constants.WIN_NEWLINE);"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"                        } else {"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"                            builder.append(Constants.MODIFY_FAILED)"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"                                    .append(((SingleModule) module).moduleCode).append(Constants.WIN_NEWLINE);"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                        }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                    } else {"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(\"Item \").append(i + 1).append(\" is not a module, \""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"                                + \"therefore cannot be taken or untaken\").append(Constants.WIN_NEWLINE);"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"            if (!codes.isEmpty()) {"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"                data.mods.stream().filter(x -\u003e codes.contains(((SingleModule) x).moduleCode)).forEach(x -\u003e {"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"                    if (modifyObject(x)) {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(\"Module: \").append(getObjectInfo(x)).append(Constants.WIN_NEWLINE);"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"                    } else {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"                        builder.append(Constants.MODIFY_FAILED)"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"                                .append(x.getName()).append(Constants.WIN_NEWLINE);"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"                });"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        data.setFlag(flag);"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        data.target \u003d targetBackup;"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d super.act(data);"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        String execution \u003d builder.toString();"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        if (execution.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            execution \u003d execution.concat(Constants.NOT_FOUND);"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        if (isEmptySelection) {"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            return execution;"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"        } else if (successes \u003d\u003d 0) {"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"            return Constants.TAKEN_NOT_MODIFIABLE + Constants.WIN_NEWLINE + execution;"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            return result.replace(Constants.TEXT_PLACEHOLDER, execution);"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        if (((SingleModule)item).isCompleted) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        ((SingleModule)item).isTaken \u003d true;"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        ((SingleModule)item).grade \u003d \"T\";"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        successes++;"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        return item.getName() + \": now taken\";"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"    protected String getEmptySelectionMessage() {"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        return Constants.TAKEN_CHANGED_FAILED + Constants.WIN_NEWLINE;"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        isBlind \u003d false;"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"        blindSearch \u003d Constants.SELECTED;"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"        indices \u003d new ArrayList\u003c\u003e();"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        codes \u003d new ArrayList\u003c\u003e();"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null || flattenedArgs.length \u003c 1) {"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"            safetyCheck();"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"        String[] identifiers \u003d args.thisData.toFlatString().split(Constants.SPACE);"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"        for (String id : identifiers) {"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"            try {"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"                indices.add(Integer.parseInt(id) - 1);"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"            } catch (Exception e) {"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"                char ch \u003d id.toUpperCase().toCharArray()[0];"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"                if (id.length() \u003d\u003d 1 \u0026\u0026 Character.isLetter(ch)) {"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"                    indices.add((int) ch - Constants.LETTER_OFFSET - 1);"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"                    codes.add(id.toUpperCase());"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"        boolean isCodes \u003d codes !\u003d null \u0026\u0026 codes.size() \u003e 0;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"        boolean isIndices \u003d indices !\u003d null \u0026\u0026 indices.size() \u003e 0;"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"        if (!isCodes \u0026\u0026 !isIndices) {"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"            throw new CommandException();"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"    protected void safetyCheck() throws Exception {"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"        isBlind \u003d true;"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"    protected String superAct(Data data) throws Exception {"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"        return super.act(data);"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    protected void superPrepare(ParamNode args) throws Exception {"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":159}},{"path":"src/main/java/command/action/TodoAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.ToDo;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import exceptions.MissingDescriptionException;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" * The type Todo action."},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"public class TodoAction extends Action {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    private String description;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        String result \u003d super.act(data);"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        ToDo todo \u003d new ToDo(description);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        data.addTask(todo);"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        return replaceStrings(result, todo.toString(), data.tasks.size());"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            throw new MissingDescriptionException();"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        description \u003d args.thisData.toFlatString();"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":34}},{"path":"src/main/java/command/action/UndoneAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Undone action."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class UndoneAction extends Action {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        Item item \u003d data.get(index);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        if (item \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDEX_OUT;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        } else if (item instanceof Task) {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"            ((Task)item).markAsUndone();"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"            data.updateItem(index, item);"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"            String result \u003d super.act(data);"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            return result.replace(Constants.TEXT_PLACEHOLDER, item.toString());"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            return Constants.NOT_TASK;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    public void prepare(ParamNode args) throws Exception {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        super.prepare(args);"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        if (args.thisData \u003d\u003d null || args.thisData.name \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            throw new InvalidCommandException();"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        index \u003d getIndex(args.thisData.name);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":42}},{"path":"src/main/java/command/action/UnknownAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" * The type Unknown action."},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"public class UnknownAction extends Action {"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    public String act(Data data) throws Exception {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"        return Constants.messageMap.getOrDefault(Constants.UNKNOWN, Constants.INVALID);"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":18}},{"path":"src/main/java/command/action/UnselectAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"public class UnselectAction extends SelectAction {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"        item.isSelected \u003d false;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"        successes++;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"        return item.getName() + \": no longer selected\";"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":20}},{"path":"src/main/java/command/action/UntakeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" * The type Untake action."},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"public class UntakeAction extends TakeAction {"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    protected boolean modifyObject(Item item) {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"        if (((SingleModule)item).isCompleted) {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"        ((SingleModule)item).isTaken \u003d false;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        ((SingleModule)item).grade \u003d null;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        successes++;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    protected String getObjectInfo(Item item) {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        return item.getName() + \": no longer taken\";"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":28}},{"path":"src/main/java/constants/Constants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.action.Action;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import command.action.AddAction;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import command.action.ByeAction;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import command.action.CapAction;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import command.action.ClearAction;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import command.action.CompleteAction;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import command.action.DeadlineAction;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import command.action.DeleteAction;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import command.action.DetailAction;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import command.action.DoneAction;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"import command.action.EditAction;"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import command.action.EventAction;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import command.action.FancyAction;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"import command.action.FindAction;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"import command.action.FocusAction;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"import command.action.GoalAction;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"import command.action.GradeAction;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"import command.action.HelpAction;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"import command.action.ListAction;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"import command.action.LoadLinkedTasksAction;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"import command.action.McAction;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"import command.action.NextAction;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"import command.action.PlainAction;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"import command.action.PostponeAction;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"import command.action.PrevAction;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"import command.action.ReminderAction;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"import command.action.SelectAction;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"import command.action.SnoozeAction;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"import command.action.StatsAction;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"import command.action.TakeAction;"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"import command.action.TodoAction;"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"import command.action.UndoneAction;"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"import command.action.UnknownAction;"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"import command.action.UnselectAction;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"import command.action.UntakeAction;"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"import java.util.Map;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":" * The type Constants."},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"public class Constants {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"     * The constant LPAREN."},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"    public static final char LPAREN \u003d \u0027(\u0027;"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"     * The constant RPAREN."},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    public static final char RPAREN \u003d \u0027)\u0027;"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM."},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"    public static final char PARAM \u003d \u0027/\u0027;"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM_ALIAS."},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    public static final char PARAM_ALIAS \u003d \u0027-\u0027;"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"     * The constant CMD_END."},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    public static final char CMD_END \u003d \u0027;\u0027;"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     * The constant CHAR_SPACE."},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    public static final char CHAR_SPACE \u003d \u0027 \u0027;"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"    public static final char CHAR_DOT \u003d \u0027.\u0027;"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    public static final String EQUALS \u003d \"\u003d\";"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     * The constant LINE_UNIT."},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"    public static final String LINE_UNIT \u003d \"_\";"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     * The constant DOT."},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    public static final String DOT \u003d \".\";"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"     * The constant SPACE."},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"    public static final String SPACE \u003d \" \";"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"     * The constant ICON_LEFT."},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"    public static final String ICON_LEFT \u003d \"[\";"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"     * The constant ICON_RIGHT."},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    public static final String ICON_RIGHT \u003d \"]\";"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM_LEFT."},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"    public static final String PARAM_LEFT \u003d \"(\";"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM_RIGHT."},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"    public static final String PARAM_RIGHT \u003d \")\";"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM_RIGHT."},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"    public static final String PERCENT \u003d \"%\";"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"     * The constant TODO_ICON."},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"    public static final String TODO_ICON \u003d ICON_LEFT + \"T\" + ICON_RIGHT;"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"     * The constant EVENT_ICON."},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"    public static final String EVENT_ICON \u003d ICON_LEFT + \"E\" + ICON_RIGHT;"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"     * The constant DDL_ICON."},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    public static final String DDL_ICON \u003d ICON_LEFT + \"D\" + ICON_RIGHT;"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"     * The constant ICON_SIGNATURE."},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"    public static final String ICON_SIGNATURE \u003d ICON_RIGHT + ICON_LEFT;"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"     * The constant ICON_SEPARATOR."},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"    public static final String ICON_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT + ICON_LEFT;"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"     * The constant BODY_SIGNATURE."},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"    public static final String BODY_SIGNATURE \u003d ICON_RIGHT + SPACE;"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"     * The constant BODY_SEPARATOR."},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"    public static final String BODY_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT;"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM_SIGNATURE."},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"    public static final String PARAM_SIGNATURE \u003d SPACE + PARAM_LEFT;"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"     * The constant PARAM_SEPARATOR."},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"    public static final String PARAM_SEPARATOR \u003d LINE_UNIT + PARAM_LEFT;"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"     * The constant DETAILS_SIGNATURE."},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"    public static final String DETAILS_SIGNATURE \u003d \": \";"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"    public static final String COMMA \u003d \",\";"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"     * The constant TICK."},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"    public static final String TICK \u003d \"V\"; //\"\\u2713\";"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"     * The constant CROSS."},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"    public static final String CROSS \u003d \"X\"; //\"\\u2718\";"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"     * The constant TICK_ICON."},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"    public static final String TICK_ICON \u003d ICON_LEFT + TICK + ICON_RIGHT;"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"     * The constant CROSS_ICON."},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"    public static final String CROSS_ICON \u003d ICON_LEFT + CROSS + ICON_RIGHT;"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"     * The constant TAB."},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"    public static final String TAB \u003d \"\\t\";"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"     * The constant NEWLINE."},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"    public static final String NEWLINE \u003d \"\\n\";"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"     * The constant RETURN."},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"    public static final String RETURN \u003d \"\\r\";"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"     * The constant WIN_NEWLINE."},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"    public static final String WIN_NEWLINE \u003d RETURN + NEWLINE;"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"     * The constant ZERO_LENGTH_STRING."},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"    public static final String ZERO_LENGTH_STRING \u003d \"\";"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"     * The constant TEXT_PLACEHOLDER."},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"    public static final String TEXT_PLACEHOLDER \u003d \"_t_\";"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"     * The constant NUMBER_PLACEHOLDER."},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"    public static final String NUMBER_PLACEHOLDER \u003d \"_n_\";"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"     * The constant SYNTAX_OR."},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"    public static final String SYNTAX_OR \u003d \"    OR    \";"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"     * The constant NOT_FOUND."},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"    public static final String NOT_FOUND \u003d \"Your specified item is not found in the current list.\" + WIN_NEWLINE;"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"     * The constant PATH."},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"    public static final String PATH \u003d \"./data\";"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"     * Domsun FILENAME."},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"    public static final String TASK_FILENAME \u003d \"duke.txt\";"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"     * Module FILENAME."},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"    public static final String COURSE_FILENAME \u003d \"course.txt\";"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"     * Test Domsun TASK_FILENAME."},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"    public static final String TEST_TASK_FILENAME \u003d \"duke_task_test.txt\";"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"     * Test Domsun COURSE_FILENAME."},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"    public static final String TEST_COURSE_FILENAME \u003d \"duke_course_test.txt\";"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"     * The constant BYE."},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"    public static final String BYE \u003d \"bye\";"},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"     * The constant CLEAR."},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"    public static final String CLEAR \u003d \"clear\";"},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":"     * The constant COMPLETE."},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"    public static final String COMPLETE \u003d \"complete\";"},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"     * The constant DEADLINE."},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"     * The constant DELETE."},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"    public static final String DELETE \u003d \"delete\";"},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"     * The constant DONE."},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"     * The constant EDIT."},{"lineNumber":249,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"TomLBZ"},"content":"    public static final String EDIT \u003d \"edit\";"},{"lineNumber":251,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":252,"author":{"gitId":"TomLBZ"},"content":"     * The constant EVENT."},{"lineNumber":253,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":254,"author":{"gitId":"TomLBZ"},"content":"    public static final String EVENT \u003d \"event\";"},{"lineNumber":255,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"TomLBZ"},"content":"     * The constant FIND."},{"lineNumber":257,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":"    public static final String FIND \u003d \"find\";"},{"lineNumber":259,"author":{"gitId":"TomLBZ"},"content":"    public static final String LOAD \u003d \"load\";"},{"lineNumber":260,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":261,"author":{"gitId":"TomLBZ"},"content":"     * The constant FOCUS."},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":"    public static final String FOCUS \u003d \"focus\";"},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER."},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMINDER \u003d \"reminder\";"},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":"     * The constant POSTPONE."},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"    public static final String POSTPONE \u003d \"postpone\";"},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"     * The constant SNOOZE."},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"    public static final String SNOOZE \u003d \"snooze\";"},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":277,"author":{"gitId":"TomLBZ"},"content":"     * The constant HELP."},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"    public static final String HELP \u003d \"help\";"},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"     * The constant LIST."},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"TomLBZ"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":284,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":285,"author":{"gitId":"TomLBZ"},"content":"     * The constant LIST."},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":"    public static final String STATS \u003d \"stats\";"},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":289,"author":{"gitId":"TomLBZ"},"content":"     * The constant TODO."},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":291,"author":{"gitId":"TomLBZ"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":292,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":293,"author":{"gitId":"TomLBZ"},"content":"     * The constant ALL."},{"lineNumber":294,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":295,"author":{"gitId":"TomLBZ"},"content":"    public static final String ALL \u003d \"all\";"},{"lineNumber":296,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":297,"author":{"gitId":"TomLBZ"},"content":"     * The constant UNDONE."},{"lineNumber":298,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":299,"author":{"gitId":"TomLBZ"},"content":"    public static final String UNDONE \u003d \"undone\";"},{"lineNumber":300,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":301,"author":{"gitId":"TomLBZ"},"content":"     * The constant UNKNOWN."},{"lineNumber":302,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":303,"author":{"gitId":"TomLBZ"},"content":"    public static final String UNKNOWN \u003d \"unknown\";"},{"lineNumber":304,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":305,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":306,"author":{"gitId":"TomLBZ"},"content":"     * The constant ATOMIC."},{"lineNumber":307,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"TomLBZ"},"content":"    public static final String ATOMIC \u003d \"_atom_\";"},{"lineNumber":309,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":310,"author":{"gitId":"TomLBZ"},"content":"     * The constant DEFAULT."},{"lineNumber":311,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":312,"author":{"gitId":"TomLBZ"},"content":"    public static final String DEFAULT \u003d \"1\";"},{"lineNumber":313,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":314,"author":{"gitId":"TomLBZ"},"content":"     * The constant EMPTY."},{"lineNumber":315,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":316,"author":{"gitId":"TomLBZ"},"content":"    public static final String EMPTY \u003d \"0\";"},{"lineNumber":317,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":318,"author":{"gitId":"TomLBZ"},"content":"     * The constant NEXT."},{"lineNumber":319,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":320,"author":{"gitId":"TomLBZ"},"content":"    public static final String NEXT \u003d \"next\";"},{"lineNumber":321,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":322,"author":{"gitId":"TomLBZ"},"content":"     * The constant PREV."},{"lineNumber":323,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":324,"author":{"gitId":"TomLBZ"},"content":"    public static final String PREV \u003d \"prev\";"},{"lineNumber":325,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":326,"author":{"gitId":"TomLBZ"},"content":"     * The constant FANCY."},{"lineNumber":327,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":328,"author":{"gitId":"TomLBZ"},"content":"    public static final String FANCY \u003d \"fancy\";"},{"lineNumber":329,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":330,"author":{"gitId":"TomLBZ"},"content":"     * The constant PLAIN."},{"lineNumber":331,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":332,"author":{"gitId":"TomLBZ"},"content":"    public static final String PLAIN \u003d \"plain\";"},{"lineNumber":333,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":334,"author":{"gitId":"TomLBZ"},"content":"     * The constant SEL."},{"lineNumber":335,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":336,"author":{"gitId":"TomLBZ"},"content":"    public static final String SEL \u003d \"sel\";"},{"lineNumber":337,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":338,"author":{"gitId":"TomLBZ"},"content":"     * The constant ADD."},{"lineNumber":339,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":340,"author":{"gitId":"TomLBZ"},"content":"    public static final String ADD \u003d \"add\";"},{"lineNumber":341,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":342,"author":{"gitId":"TomLBZ"},"content":"     * The constant MC."},{"lineNumber":343,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":344,"author":{"gitId":"TomLBZ"},"content":"    public static final String MC \u003d \"mc\";"},{"lineNumber":345,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":346,"author":{"gitId":"TomLBZ"},"content":"     * The constant TAKE."},{"lineNumber":347,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"TomLBZ"},"content":"    public static final String TAKE \u003d \"take\";"},{"lineNumber":349,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":350,"author":{"gitId":"TomLBZ"},"content":"     * The constant UNSEL."},{"lineNumber":351,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":352,"author":{"gitId":"TomLBZ"},"content":"    public static final String UNSEL \u003d \"unsel\";"},{"lineNumber":353,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":354,"author":{"gitId":"TomLBZ"},"content":"     * The constant UNTAKE."},{"lineNumber":355,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":356,"author":{"gitId":"TomLBZ"},"content":"    public static final String UNTAKE \u003d \"untake\";"},{"lineNumber":357,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":358,"author":{"gitId":"TomLBZ"},"content":"     * The constant DETAIL."},{"lineNumber":359,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":360,"author":{"gitId":"TomLBZ"},"content":"    public static final String DETAIL \u003d \"detail\";"},{"lineNumber":361,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":362,"author":{"gitId":"TomLBZ"},"content":"     * The constant CAP."},{"lineNumber":363,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":364,"author":{"gitId":"TomLBZ"},"content":"    public static final String CAP \u003d \"cap\";"},{"lineNumber":365,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":366,"author":{"gitId":"TomLBZ"},"content":"     * The constant GOAL."},{"lineNumber":367,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":368,"author":{"gitId":"TomLBZ"},"content":"    public static final String GOAL \u003d \"goal\";"},{"lineNumber":369,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":370,"author":{"gitId":"TomLBZ"},"content":"     * The constant MOD."},{"lineNumber":371,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":372,"author":{"gitId":"TomLBZ"},"content":"    public static final String MOD \u003d \"mod\";"},{"lineNumber":373,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":374,"author":{"gitId":"TomLBZ"},"content":"     * The constant SU."},{"lineNumber":375,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":376,"author":{"gitId":"TomLBZ"},"content":"    public static final String SU \u003d \"su\";"},{"lineNumber":377,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":378,"author":{"gitId":"TomLBZ"},"content":"     * The constant GRADE."},{"lineNumber":379,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":380,"author":{"gitId":"TomLBZ"},"content":"    public static final String GRADE \u003d \"grade\";"},{"lineNumber":381,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":382,"author":{"gitId":"TomLBZ"},"content":"     * The constant TASK."},{"lineNumber":383,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":384,"author":{"gitId":"TomLBZ"},"content":"    public static final String TASK \u003d \"task\";"},{"lineNumber":385,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":386,"author":{"gitId":"TomLBZ"},"content":"     * The constant SELECTED."},{"lineNumber":387,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":388,"author":{"gitId":"TomLBZ"},"content":"    public static final String SELECTED \u003d \"selected\";"},{"lineNumber":389,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":390,"author":{"gitId":"TomLBZ"},"content":"     * The constant TAKEN."},{"lineNumber":391,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":392,"author":{"gitId":"TomLBZ"},"content":"    public static final String TAKEN \u003d \"taken\";"},{"lineNumber":393,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":394,"author":{"gitId":"TomLBZ"},"content":"     * The constant FOUND."},{"lineNumber":395,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":396,"author":{"gitId":"TomLBZ"},"content":"    public static final String FOUND \u003d \"found\";"},{"lineNumber":397,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":398,"author":{"gitId":"TomLBZ"},"content":"     * The constant COMPLETED."},{"lineNumber":399,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":400,"author":{"gitId":"TomLBZ"},"content":"    public static final String COMPLETED \u003d \"completed\";"},{"lineNumber":401,"author":{"gitId":"TomLBZ"},"content":"    public static final String CAP_DATA \u003d \"capData\";"},{"lineNumber":402,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":403,"author":{"gitId":"TomLBZ"},"content":"     * The constant COMPLETED_LABEL."},{"lineNumber":404,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":405,"author":{"gitId":"TomLBZ"},"content":"    public static final String COMPLETED_LABEL \u003d \"[COMPLETED]\";"},{"lineNumber":406,"author":{"gitId":"TomLBZ"},"content":"    public static final String NOTES \u003d \"Notes:\";"},{"lineNumber":407,"author":{"gitId":"TomLBZ"},"content":"    public static final String SAVE_CORRUPTED \u003d \"The save file is corrupted. Let\u0027s start afresh!\";"},{"lineNumber":408,"author":{"gitId":"TomLBZ"},"content":"    public static final String PAGED \u003d \"Try \\\"next\\\" or \\\"prev\\\" to flip pages for the region below!\";"},{"lineNumber":409,"author":{"gitId":"TomLBZ"},"content":"    public static final String TEXT_HEADER \u003d \"Current Page:\";"},{"lineNumber":410,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":411,"author":{"gitId":"TomLBZ"},"content":"     * The constant INDEX_OUT."},{"lineNumber":412,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":413,"author":{"gitId":"TomLBZ"},"content":"    public static final String INDEX_OUT \u003d \"Index out of range. Index must be a positive integer referencing \""},{"lineNumber":414,"author":{"gitId":"TomLBZ"},"content":"            + \"an existing item.\" + WIN_NEWLINE;"},{"lineNumber":415,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":416,"author":{"gitId":"TomLBZ"},"content":"     * The constant CANNOT_MODIFY_CUSTOM_DATE."},{"lineNumber":417,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":418,"author":{"gitId":"TomLBZ"},"content":"    public static final String CANNOT_MODIFY_CUSTOM_DATE \u003d \"Can not modify the custom date. Please edit the date or \""},{"lineNumber":419,"author":{"gitId":"TomLBZ"},"content":"            + \"select the task which its date is in the preferred format. Then try again.\" + WIN_NEWLINE;"},{"lineNumber":420,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":421,"author":{"gitId":"TomLBZ"},"content":"     * The constant NO_DESCRIPTION."},{"lineNumber":422,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":423,"author":{"gitId":"TomLBZ"},"content":"    public static final String NO_DESCRIPTION \u003d \"No description provided. Try \\\"help [command]\\\" if you are unsure of \""},{"lineNumber":424,"author":{"gitId":"TomLBZ"},"content":"            + \"the command format.\" + WIN_NEWLINE;"},{"lineNumber":425,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":426,"author":{"gitId":"TomLBZ"},"content":"     * The constant MODIFY_FAILED."},{"lineNumber":427,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":428,"author":{"gitId":"TomLBZ"},"content":"    public static final String MODIFY_FAILED \u003d \"This module is completed and you cannot modify it again: \";"},{"lineNumber":429,"author":{"gitId":"TomLBZ"},"content":"    public static final String TAKEN_CHANGED \u003d \"Your \\\"taken\\\" list has been changed,\""},{"lineNumber":430,"author":{"gitId":"TomLBZ"},"content":"            + \" \\\"list\\\" it again to see effects.\";"},{"lineNumber":431,"author":{"gitId":"TomLBZ"},"content":"    public static final String TAKEN_CHANGED_FAILED \u003d \"There is no Modules in your selected list to take or untake.\";"},{"lineNumber":432,"author":{"gitId":"TomLBZ"},"content":"    public static final String TAKEN_NOT_MODIFIABLE \u003d \"This command is not applicable to your selected item because:\";"},{"lineNumber":433,"author":{"gitId":"TomLBZ"},"content":"    public static final String SELECTED_CHANGED \u003d \"Your \\\"selected\\\" list has been changed,\""},{"lineNumber":434,"author":{"gitId":"TomLBZ"},"content":"            + \" \\\"list\\\" it again to see effects.\";"},{"lineNumber":435,"author":{"gitId":"TomLBZ"},"content":"    public static final String SELECTED_CHANGED_FAILED \u003d \"Your selection list is empty, there is no need for change.\";"},{"lineNumber":436,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":437,"author":{"gitId":"TomLBZ"},"content":"     * The constant NOT_COMPLETABLE."},{"lineNumber":438,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":439,"author":{"gitId":"TomLBZ"},"content":"    public static final String NOT_COMPLETABLE \u003d \"Invalid grade or Module not taken / completed already: \";"},{"lineNumber":440,"author":{"gitId":"TomLBZ"},"content":"    public static final String FANCY_CLEARED \u003d \"I have cleared the text region for the fancy UI.\";"},{"lineNumber":441,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":442,"author":{"gitId":"TomLBZ"},"content":"     * The constant ADDED."},{"lineNumber":443,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":444,"author":{"gitId":"TomLBZ"},"content":"    public static final String ADDED \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":445,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":446,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMOVED."},{"lineNumber":447,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":448,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMOVED \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":449,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":450,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMOVE_MOD."},{"lineNumber":451,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":452,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMOVE_MOD \u003d \"Noted. I\u0027ve removed this module from your current list:\";"},{"lineNumber":453,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":454,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":455,"author":{"gitId":"TomLBZ"},"content":"     * The constant COUNT_PREFIX."},{"lineNumber":456,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":457,"author":{"gitId":"TomLBZ"},"content":"    public static final String COUNT_PREFIX \u003d \"Now you have \";"},{"lineNumber":458,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":459,"author":{"gitId":"TomLBZ"},"content":"     * The constant COUNT_SUFFIX."},{"lineNumber":460,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":461,"author":{"gitId":"TomLBZ"},"content":"    public static final String COUNT_SUFFIX \u003d \" tasks in the list.\";"},{"lineNumber":462,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":463,"author":{"gitId":"TomLBZ"},"content":"     * The constant CHANGED."},{"lineNumber":464,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":465,"author":{"gitId":"TomLBZ"},"content":"    public static final String CHANGED \u003d WIN_NEWLINE + TEXT_PLACEHOLDER"},{"lineNumber":466,"author":{"gitId":"TomLBZ"},"content":"            + WIN_NEWLINE + COUNT_PREFIX + NUMBER_PLACEHOLDER + COUNT_SUFFIX;"},{"lineNumber":467,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":468,"author":{"gitId":"TomLBZ"},"content":"     * The constant INVALID."},{"lineNumber":469,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":470,"author":{"gitId":"TomLBZ"},"content":"    public static final String INVALID \u003d \"Invalid Command! Please check the syntax.\" + WIN_NEWLINE;"},{"lineNumber":471,"author":{"gitId":"TomLBZ"},"content":"    public static final String TYPE_MISMATCH \u003d \"The type of the item you specified does not match the Type needed.\""},{"lineNumber":472,"author":{"gitId":"TomLBZ"},"content":"            + WIN_NEWLINE + \"Are you trying to add a Module as a -task parameter?\" + WIN_NEWLINE;"},{"lineNumber":473,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":474,"author":{"gitId":"TomLBZ"},"content":"     * The constant DUPLICATED_TASK."},{"lineNumber":475,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":476,"author":{"gitId":"TomLBZ"},"content":"    public static final String DUPLICATED_TASK \u003d \"Duplicated Task was found. Task not added\" + WIN_NEWLINE;"},{"lineNumber":477,"author":{"gitId":"TomLBZ"},"content":"    public static final String FANCY_ONLY \u003d \"This command should be used in FANCY UI only!\" + WIN_NEWLINE;"},{"lineNumber":478,"author":{"gitId":"TomLBZ"},"content":"    public static final String ONLY_ONE_PAGE \u003d \"You cannot toggle pages when there is only 1 page!\" + WIN_NEWLINE;"},{"lineNumber":479,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":480,"author":{"gitId":"TomLBZ"},"content":"     * The constant WELCOME."},{"lineNumber":481,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":482,"author":{"gitId":"TomLBZ"},"content":"    public static final String WELCOME \u003d \"Hello, I\u0027m Domsun. What can I do for you?\";"},{"lineNumber":483,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":484,"author":{"gitId":"TomLBZ"},"content":"     * The constant HELP_PROMPT."},{"lineNumber":485,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":486,"author":{"gitId":"TomLBZ"},"content":"    public static final String HELP_PROMPT \u003d \"Use \\\"help [target]\\\" to see details :) Try \\\"help help\\\"!\";"},{"lineNumber":487,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":488,"author":{"gitId":"TomLBZ"},"content":"     * The constant DATE_PATTERNS."},{"lineNumber":489,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":490,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] DATE_PATTERNS \u003d {"},{"lineNumber":491,"author":{"gitId":"TomLBZ"},"content":"        \"yyyy-MMM-dd\", \"yyyy-MMM-d\", \"yyyy-MM-dd\", \"yyyy-MM-d\", \"yyyy-M-dd\", \"yyyy-M-d\","},{"lineNumber":492,"author":{"gitId":"TomLBZ"},"content":"        \"yy-MMM-dd\", \"yy-MMM-d\", \"yy-MM-dd\", \"yy-MM-d\", \"yy-M-dd\", \"yy-M-d\","},{"lineNumber":493,"author":{"gitId":"TomLBZ"},"content":"        \"MMM-dd-yyyy\", \"MMM-d-yyyy\", \"MM-dd-yyyy\", \"MM-d-yyyy\", \"M-dd-yyyy\", \"M-d-yyyy\","},{"lineNumber":494,"author":{"gitId":"TomLBZ"},"content":"        \"MMM-dd-yy\", \"MMM-d-yy\", \"MM-dd-yy\", \"MM-d-yy\", \"M-dd-yy\", \"M-d-yy\","},{"lineNumber":495,"author":{"gitId":"TomLBZ"},"content":"        \"dd-MMM-yyyy\", \"d-MMM-yyyy\", \"dd-MM-yyyy\", \"d-MM-yyyy\", \"dd-M-yyyy\", \"d-M-yyyy\","},{"lineNumber":496,"author":{"gitId":"TomLBZ"},"content":"        \"dd-MMM-yy\", \"d-MMM-yy\", \"dd-MM-yy\", \"d-MM-yy\", \"dd-M-yy\", \"d-M-yy\"};"},{"lineNumber":497,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":498,"author":{"gitId":"TomLBZ"},"content":"     * The constant TIME_PATTERNS."},{"lineNumber":499,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":500,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] TIME_PATTERNS \u003d {\"HH:mm:ss\", \"H:mm:ss\", \"HH:m:ss\", \"HH:mm:s\", \"H:m:ss\","},{"lineNumber":501,"author":{"gitId":"TomLBZ"},"content":"        \"HH:m:s\", \"H:mm:s\", \"H:m:s\", \"HH:mm\", \"H:mm\", \"HH:m\", \"H:m\", \"HH\", \"H\", \"\"};"},{"lineNumber":502,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":503,"author":{"gitId":"TomLBZ"},"content":"     * The constant SU_ALIAS."},{"lineNumber":504,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":505,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] SU_ALIAS \u003d {\"su\", \"s/u\", \"s\", \"u\", \"issu\"};"},{"lineNumber":506,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":507,"author":{"gitId":"TomLBZ"},"content":"     * The constant GRADE_ALIAS."},{"lineNumber":508,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":509,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] GRADE_ALIAS \u003d {\"grade\", \"score\", \"grades\", \"scores\", \"letter grade\", \"letter\","},{"lineNumber":510,"author":{"gitId":"TomLBZ"},"content":"        \"points\", \"point\", \"g\"};"},{"lineNumber":511,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":512,"author":{"gitId":"TomLBZ"},"content":"     * The constant SELECTED_ALIAS."},{"lineNumber":513,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":514,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] SELECTED_ALIAS \u003d {\"sel\", \"select\", \"selected\", \"isselect\", \"isselected\", \"selecting\","},{"lineNumber":515,"author":{"gitId":"TomLBZ"},"content":"        \"s\"};"},{"lineNumber":516,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":517,"author":{"gitId":"TomLBZ"},"content":"     * The constant TAKEN_ALIAS."},{"lineNumber":518,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":519,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] TAKEN_ALIAS \u003d {\"taken\", \"take\", \"took\", \"taking\", \"istake\", \"istaken\", \"istaking\","},{"lineNumber":520,"author":{"gitId":"TomLBZ"},"content":"        \"t\"};"},{"lineNumber":521,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] TASK_ALIAS \u003d {\"task\", \"tasks\", \"linked\", \"linkedtask\", \"linkedtasks\", \"l\", \"tsk\","},{"lineNumber":522,"author":{"gitId":"TomLBZ"},"content":"        \"tsks\", \"link\", \"links\", \"assigned\", \"assignedtasks\", \"assignments\", \"due\", \"dues\", \"stuff\", \"things\", \"thing\","},{"lineNumber":523,"author":{"gitId":"TomLBZ"},"content":"        \"del\", \"delete\", \"remove\"};"},{"lineNumber":524,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":525,"author":{"gitId":"TomLBZ"},"content":"     * The constant DESCRIPTION_ALIAS."},{"lineNumber":526,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":527,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] DESCRIPTION_ALIAS \u003d {\"description\", \"describe\", \"text\", \"string\", \"content\", \"d\"};"},{"lineNumber":528,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":529,"author":{"gitId":"TomLBZ"},"content":"     * The constant TYPE_ALIAS."},{"lineNumber":530,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":531,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] TYPE_ALIAS \u003d {\"type\", \"category\", \"t\", \"types\"};"},{"lineNumber":532,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":533,"author":{"gitId":"TomLBZ"},"content":"     * The constant DATE_ALIAS."},{"lineNumber":534,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":535,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] DATE_ALIAS \u003d {\"date\", \"time\", \"dt\", \"d/t\", \"datetime\", \"date/time\", \"day\","},{"lineNumber":536,"author":{"gitId":"TomLBZ"},"content":"        \"date time\"};"},{"lineNumber":537,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":538,"author":{"gitId":"TomLBZ"},"content":"     * The constant DONE_ALIAS."},{"lineNumber":539,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":540,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] DONE_ALIAS \u003d {\"done\", \"isdone\", \"do\", \"did\"};"},{"lineNumber":541,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":542,"author":{"gitId":"TomLBZ"},"content":"     * The constant WEEKLY_ALIAS."},{"lineNumber":543,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":544,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] WEEKLY_ALIAS \u003d {\"weekly\", \"isweekly\", \"week\", \"byweek\", \"reoccuring\"};"},{"lineNumber":545,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":546,"author":{"gitId":"TomLBZ"},"content":"     * The constant VALID_GRADES."},{"lineNumber":547,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":548,"author":{"gitId":"TomLBZ"},"content":"    public static final String[] VALID_GRADES \u003d {\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"D+\", \"D\", \"F\", \"S\", \"U\"};"},{"lineNumber":549,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":550,"author":{"gitId":"TomLBZ"},"content":"     * The constant NO_KEYWORD."},{"lineNumber":551,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":552,"author":{"gitId":"TomLBZ"},"content":"    public static final String NO_KEYWORD \u003d \"No keyword provided, listing all items:\" + WIN_NEWLINE;"},{"lineNumber":553,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":554,"author":{"gitId":"TomLBZ"},"content":"     * The constant MOD_NOT_FOUND."},{"lineNumber":555,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":556,"author":{"gitId":"TomLBZ"},"content":"    public static final String MOD_NOT_FOUND \u003d"},{"lineNumber":557,"author":{"gitId":"TomLBZ"},"content":"        \"Module Not Found! Did you put the module code (e.g. CS2113) correctly?\" + WIN_NEWLINE;"},{"lineNumber":558,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":559,"author":{"gitId":"TomLBZ"},"content":"     * The constant MOD_NOT_TAKEN."},{"lineNumber":560,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":561,"author":{"gitId":"TomLBZ"},"content":"    public static final String MOD_NOT_TAKEN \u003d \"You have not taken this module yet\";"},{"lineNumber":562,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":563,"author":{"gitId":"TomLBZ"},"content":"     * The constant MOD_NO_GRADE."},{"lineNumber":564,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":565,"author":{"gitId":"TomLBZ"},"content":"    public static final String MOD_NO_GRADE \u003d \"You have not input grade for this module yet\";"},{"lineNumber":566,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":567,"author":{"gitId":"TomLBZ"},"content":"     * The constant GRADE_NOT_FOUND."},{"lineNumber":568,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":569,"author":{"gitId":"TomLBZ"},"content":"    public static final String GRADE_NOT_FOUND \u003d \"Do you input your grade (e.g. CS2113 A+) correctly?\" + WIN_NEWLINE;"},{"lineNumber":570,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":571,"author":{"gitId":"TomLBZ"},"content":"     * The constant INVALID_LIST."},{"lineNumber":572,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":573,"author":{"gitId":"TomLBZ"},"content":"    public static final String INVALID_LIST \u003d \"Please focus on task list by typing \u0027focus\u0027\" + WIN_NEWLINE;"},{"lineNumber":574,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":575,"author":{"gitId":"TomLBZ"},"content":"     * The constant TASK_NOT_SPEC."},{"lineNumber":576,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":577,"author":{"gitId":"TomLBZ"},"content":"    public static final String TASK_NOT_SPEC \u003d \"You forgot to specify tasks by index!\" + WIN_NEWLINE;"},{"lineNumber":578,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":579,"author":{"gitId":"TomLBZ"},"content":"     * The constant ITEM_NOT_SPEC."},{"lineNumber":580,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":581,"author":{"gitId":"TomLBZ"},"content":"    public static final String ITEM_NOT_SPEC \u003d \"No item is specified, skipping this command.\" + WIN_NEWLINE;"},{"lineNumber":582,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":583,"author":{"gitId":"TomLBZ"},"content":"     * The constant GRADE_NOT_SPEC."},{"lineNumber":584,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":585,"author":{"gitId":"TomLBZ"},"content":"    public static final String GRADE_NOT_SPEC \u003d \"You have not entered grade for some of your past modules.\""},{"lineNumber":586,"author":{"gitId":"TomLBZ"},"content":"        + WIN_NEWLINE;"},{"lineNumber":587,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":588,"author":{"gitId":"TomLBZ"},"content":"     * The constant MODULE_GRADE_CORRUPT."},{"lineNumber":589,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":590,"author":{"gitId":"TomLBZ"},"content":"    public static final String MODULE_GRADE_CORRUPT \u003d \"Your module / grade data has been corrupted!.\""},{"lineNumber":591,"author":{"gitId":"TomLBZ"},"content":"        + WIN_NEWLINE;"},{"lineNumber":592,"author":{"gitId":"TomLBZ"},"content":"    public static final String TOO_MANY_ARGS \u003d \"Too many arguments. Please check the syntax.\" + WIN_NEWLINE"},{"lineNumber":593,"author":{"gitId":"TomLBZ"},"content":"        + \"Maybe you were trying negative parameters... too bad they are not allowed.\" + WIN_NEWLINE;"},{"lineNumber":594,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":595,"author":{"gitId":"TomLBZ"},"content":"     * The constant NO_OPERATION_POSSIBLE."},{"lineNumber":596,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":597,"author":{"gitId":"TomLBZ"},"content":"    public static final String NO_OPERATION_POSSIBLE \u003d \"No operations possible. Did you provide parameters correctly?\""},{"lineNumber":598,"author":{"gitId":"TomLBZ"},"content":"        + WIN_NEWLINE;"},{"lineNumber":599,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":600,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":601,"author":{"gitId":"TomLBZ"},"content":"     * The constant NO_TASK_TYPE."},{"lineNumber":602,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":603,"author":{"gitId":"TomLBZ"},"content":"    public static final String NO_TASK_TYPE \u003d \"No task type provided, listing all tasks:\" + WIN_NEWLINE;"},{"lineNumber":604,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":605,"author":{"gitId":"TomLBZ"},"content":"     * The constant WORK_LESS."},{"lineNumber":606,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":607,"author":{"gitId":"TomLBZ"},"content":"    public static final String WORK_LESS \u003d \"This means you need to lower your grade to achieve your goal.\""},{"lineNumber":608,"author":{"gitId":"TomLBZ"},"content":"        + SPACE + \"Tank the bell curve for us! :D\" + WIN_NEWLINE;"},{"lineNumber":609,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":610,"author":{"gitId":"TomLBZ"},"content":"     * The constant JIAYOU."},{"lineNumber":611,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":612,"author":{"gitId":"TomLBZ"},"content":"    public static final String JIAYOU \u003d \"Jia you! :D\" + WIN_NEWLINE;"},{"lineNumber":613,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":614,"author":{"gitId":"TomLBZ"},"content":"     * The constant LOW_CAP."},{"lineNumber":615,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":616,"author":{"gitId":"TomLBZ"},"content":"    public static final String LOW_CAP \u003d \"You might want too aim higher\" + WIN_NEWLINE;"},{"lineNumber":617,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":618,"author":{"gitId":"TomLBZ"},"content":"     * The constant HIGH_CAP."},{"lineNumber":619,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":620,"author":{"gitId":"TomLBZ"},"content":"    public static final String HIGH_CAP \u003d \"Looks like the target is a bit far away QAQ\" + WIN_NEWLINE;"},{"lineNumber":621,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":622,"author":{"gitId":"TomLBZ"},"content":"     * The constant REQUIRED_CAP."},{"lineNumber":623,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":624,"author":{"gitId":"TomLBZ"},"content":"    public static final String REQUIRED_CAP \u003d \"Your required average CAP is: \";"},{"lineNumber":625,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":626,"author":{"gitId":"TomLBZ"},"content":"     * The constant CAN_GRADUATE."},{"lineNumber":627,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":628,"author":{"gitId":"TomLBZ"},"content":"    public static final String CAN_GRADUATE \u003d \"You have taken MC sufficient for your graduation! Goal is reached :D\""},{"lineNumber":629,"author":{"gitId":"TomLBZ"},"content":"        + WIN_NEWLINE;"},{"lineNumber":630,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":631,"author":{"gitId":"TomLBZ"},"content":"     * The constant NO_URGENT_TASKS."},{"lineNumber":632,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":633,"author":{"gitId":"TomLBZ"},"content":"    public static final String NO_URGENT_TASKS \u003d \"No task within 3 days from now\" + WIN_NEWLINE;"},{"lineNumber":634,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":635,"author":{"gitId":"TomLBZ"},"content":"     * The constant UNIDENTIFIED_TYPE."},{"lineNumber":636,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":637,"author":{"gitId":"TomLBZ"},"content":"    public static final String UNIDENTIFIED_TYPE \u003d \"Unidentified task type! Please provide the correct task type.\""},{"lineNumber":638,"author":{"gitId":"TomLBZ"},"content":"        + WIN_NEWLINE;"},{"lineNumber":639,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":640,"author":{"gitId":"TomLBZ"},"content":"     * The constant DETAIL."},{"lineNumber":641,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":642,"author":{"gitId":"TomLBZ"},"content":"    public static final String NO_MODULE \u003d \"Sorry, no such module in the list!\" + WIN_NEWLINE;"},{"lineNumber":643,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":644,"author":{"gitId":"TomLBZ"},"content":"     * The constant NOT_DEADLINE_OR_EVENT."},{"lineNumber":645,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":646,"author":{"gitId":"TomLBZ"},"content":"    public static final String NOT_DEADLINE_OR_EVENT \u003d \"Sorry, there is no date in todo task!\" + WIN_NEWLINE;"},{"lineNumber":647,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":648,"author":{"gitId":"TomLBZ"},"content":"     * The constant ITEM_EXIST."},{"lineNumber":649,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":650,"author":{"gitId":"TomLBZ"},"content":"    public static final String ITEM_EXIST \u003d \"Sorry, this item is already in your list!\" + WIN_NEWLINE;"},{"lineNumber":651,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":652,"author":{"gitId":"TomLBZ"},"content":"     * The constant FOCUS_HELP."},{"lineNumber":653,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":654,"author":{"gitId":"TomLBZ"},"content":"    public static final String FOCUS_HELP \u003d FOCUS + SYNTAX_OR + FOCUS + CHAR_SPACE + ICON_LEFT + DEADLINE + CHAR_SPACE"},{"lineNumber":655,"author":{"gitId":"TomLBZ"},"content":"            + PARAM + CHAR_SPACE + TODO + CHAR_SPACE + PARAM + CHAR_SPACE + EVENT + CHAR_SPACE + PARAM + CHAR_SPACE"},{"lineNumber":656,"author":{"gitId":"TomLBZ"},"content":"            + ALL + ICON_RIGHT + WIN_NEWLINE;"},{"lineNumber":657,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":658,"author":{"gitId":"TomLBZ"},"content":"     * The constant CONTEXT_MSG."},{"lineNumber":659,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":660,"author":{"gitId":"TomLBZ"},"content":"    public static final String CONTEXT_MSG \u003d \"Changing context to \";"},{"lineNumber":661,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":662,"author":{"gitId":"TomLBZ"},"content":"     * The constant ADD_HEAD."},{"lineNumber":663,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":664,"author":{"gitId":"TomLBZ"},"content":"    public static final String ADD_HEAD \u003d \"I\u0027ve added this module to your list:\" + WIN_NEWLINE;"},{"lineNumber":665,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":666,"author":{"gitId":"TomLBZ"},"content":"     * The constant LIST_HEAD."},{"lineNumber":667,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":668,"author":{"gitId":"TomLBZ"},"content":"    public static final String LIST_HEAD \u003d \"Here is the list of items:\" + WIN_NEWLINE;"},{"lineNumber":669,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":670,"author":{"gitId":"TomLBZ"},"content":"     * The constant GRADE_HEAD."},{"lineNumber":671,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":672,"author":{"gitId":"TomLBZ"},"content":"    public static final String GRADE_HEAD \u003d \"These are your grades so far:\" + WIN_NEWLINE;"},{"lineNumber":673,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":674,"author":{"gitId":"TomLBZ"},"content":"     * The constant STATS_HEAD."},{"lineNumber":675,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":676,"author":{"gitId":"TomLBZ"},"content":"    public static final String STATS_HEAD \u003d \"Here are the statistics: \" + WIN_NEWLINE;"},{"lineNumber":677,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":678,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER_HEAD."},{"lineNumber":679,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":680,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMINDER_HEAD \u003d \"Auto-reminder: Here are the tasks due within \""},{"lineNumber":681,"author":{"gitId":"TomLBZ"},"content":"            + Constants.REMINDER_RANGE + \" days: \" + WIN_NEWLINE + \"(do not want to see this so often? try \\\"snooze\\\")\""},{"lineNumber":682,"author":{"gitId":"TomLBZ"},"content":"            + WIN_NEWLINE;"},{"lineNumber":683,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":684,"author":{"gitId":"TomLBZ"},"content":"     * The constant MC_HEAD."},{"lineNumber":685,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":686,"author":{"gitId":"TomLBZ"},"content":"    public static final String MC_HEAD \u003d \"Here is the total MC:\" + WIN_NEWLINE;"},{"lineNumber":687,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":688,"author":{"gitId":"TomLBZ"},"content":"     * The constant DETAIL."},{"lineNumber":689,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":690,"author":{"gitId":"TomLBZ"},"content":"    public static final String DETAIL_HEAD \u003d \"Here are the details you requested:\" + WIN_NEWLINE;"},{"lineNumber":691,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":692,"author":{"gitId":"TomLBZ"},"content":"     * The constant HELP_HEADING."},{"lineNumber":693,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":694,"author":{"gitId":"TomLBZ"},"content":"    public static final String HELP_HEADING \u003d \"Here are all available commands:\" + WIN_NEWLINE;"},{"lineNumber":695,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":696,"author":{"gitId":"TomLBZ"},"content":"     * The constant HELP_HEADING."},{"lineNumber":697,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":698,"author":{"gitId":"TomLBZ"},"content":"    public static final String SHOW_CAP \u003d \"Here is your existing CAP: \";"},{"lineNumber":699,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":700,"author":{"gitId":"TomLBZ"},"content":"     * The constant GRADE_REGISTERED."},{"lineNumber":701,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":702,"author":{"gitId":"TomLBZ"},"content":"    public static final String GRADE_REGISTERED \u003d \"Here are your existing grades:\";"},{"lineNumber":703,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":704,"author":{"gitId":"TomLBZ"},"content":"     * The constant NOT_TASK."},{"lineNumber":705,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":706,"author":{"gitId":"TomLBZ"},"content":"    public static final String NOT_TASK \u003d \"The specified item is not a Task, \""},{"lineNumber":707,"author":{"gitId":"TomLBZ"},"content":"            + \"so it cannot be marked as done or undone.\" + WIN_NEWLINE;"},{"lineNumber":708,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":709,"author":{"gitId":"TomLBZ"},"content":"     * The constant INIT_LIST."},{"lineNumber":710,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":711,"author":{"gitId":"TomLBZ"},"content":"    public static final String INIT_LIST \u003d \"Welcome to DomSun! This is the item list.\";"},{"lineNumber":712,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":713,"author":{"gitId":"TomLBZ"},"content":"     * The constant INIT_SEL."},{"lineNumber":714,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":715,"author":{"gitId":"TomLBZ"},"content":"    public static final String INIT_SEL \u003d \"This is the text region. It displays all information except the item list.\";"},{"lineNumber":716,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":717,"author":{"gitId":"TomLBZ"},"content":"     * The constant BMP_LIST_SWITCH."},{"lineNumber":718,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":719,"author":{"gitId":"TomLBZ"},"content":"    public static final String BMP_LIST_SWITCH \u003d \"LIST\";"},{"lineNumber":720,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":721,"author":{"gitId":"TomLBZ"},"content":"     * The constant BMP_SEL_SWITCH."},{"lineNumber":722,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":723,"author":{"gitId":"TomLBZ"},"content":"    public static final String BMP_SEL_SWITCH \u003d \"SEL\";"},{"lineNumber":724,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":725,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER_ON."},{"lineNumber":726,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":727,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMINDER_ON \u003d \"on\";"},{"lineNumber":728,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":729,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER_OFF."},{"lineNumber":730,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":731,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMINDER_OFF \u003d \"off\";"},{"lineNumber":732,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":733,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":734,"author":{"gitId":"TomLBZ"},"content":"     * The constant LINE_REPETITION."},{"lineNumber":735,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":736,"author":{"gitId":"TomLBZ"},"content":"    public static final int LINE_REPETITION \u003d 60;"},{"lineNumber":737,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":738,"author":{"gitId":"TomLBZ"},"content":"     * The constant NO_INDENT."},{"lineNumber":739,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":740,"author":{"gitId":"TomLBZ"},"content":"    public static final int NO_INDENT \u003d 0;"},{"lineNumber":741,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":742,"author":{"gitId":"TomLBZ"},"content":"     * The constant INDENT_1."},{"lineNumber":743,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":744,"author":{"gitId":"TomLBZ"},"content":"    public static final int INDENT_1 \u003d 1;"},{"lineNumber":745,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":746,"author":{"gitId":"TomLBZ"},"content":"     * The constant INDENT_2."},{"lineNumber":747,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":748,"author":{"gitId":"TomLBZ"},"content":"    public static final int INDENT_2 \u003d 2;"},{"lineNumber":749,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":750,"author":{"gitId":"TomLBZ"},"content":"     * The constant INDENT_3."},{"lineNumber":751,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":752,"author":{"gitId":"TomLBZ"},"content":"    public static final int INDENT_3 \u003d 3;"},{"lineNumber":753,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":754,"author":{"gitId":"TomLBZ"},"content":"     * The constant LETTER_OFFSET."},{"lineNumber":755,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":756,"author":{"gitId":"TomLBZ"},"content":"    public static final int LETTER_OFFSET \u003d 64;"},{"lineNumber":757,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":758,"author":{"gitId":"TomLBZ"},"content":"     * The constant BITMAP_W."},{"lineNumber":759,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":760,"author":{"gitId":"TomLBZ"},"content":"    public static final int BITMAP_W \u003d 100;"},{"lineNumber":761,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":762,"author":{"gitId":"TomLBZ"},"content":"     * The constant BITMAP_LIST_H."},{"lineNumber":763,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":764,"author":{"gitId":"TomLBZ"},"content":"    public static final int BITMAP_LIST_H \u003d 15;"},{"lineNumber":765,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":766,"author":{"gitId":"TomLBZ"},"content":"     * The constant BITMAP_SEL_H."},{"lineNumber":767,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":768,"author":{"gitId":"TomLBZ"},"content":"    public static final int BITMAP_SEL_H \u003d 6;"},{"lineNumber":769,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":770,"author":{"gitId":"TomLBZ"},"content":"     * The constant CELL_W."},{"lineNumber":771,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":772,"author":{"gitId":"TomLBZ"},"content":"    public static final int CELL_W \u003d 20;"},{"lineNumber":773,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":774,"author":{"gitId":"TomLBZ"},"content":"     * The constant CELL_H."},{"lineNumber":775,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":776,"author":{"gitId":"TomLBZ"},"content":"    public static final int CELL_H \u003d 2;"},{"lineNumber":777,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":778,"author":{"gitId":"TomLBZ"},"content":"     * The constant BANNER."},{"lineNumber":779,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":780,"author":{"gitId":"TomLBZ"},"content":"    public static final int BANNER \u003d 1;"},{"lineNumber":781,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":782,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER_RANGE."},{"lineNumber":783,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":784,"author":{"gitId":"TomLBZ"},"content":"    public static final int REMINDER_RANGE \u003d 3;"},{"lineNumber":785,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":786,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER_INTERVAL."},{"lineNumber":787,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":788,"author":{"gitId":"TomLBZ"},"content":"    public static final String REMINDER_INTERVAL \u003d \"300000\";"},{"lineNumber":789,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":790,"author":{"gitId":"TomLBZ"},"content":"     * The constant NEW_REMINDER_INTERVAL."},{"lineNumber":791,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":792,"author":{"gitId":"TomLBZ"},"content":"    public static final String NEW_REMINDER_INTERVAL \u003d \"360000\";"},{"lineNumber":793,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":794,"author":{"gitId":"TomLBZ"},"content":"     * The constant REMINDER_DELAY."},{"lineNumber":795,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":796,"author":{"gitId":"TomLBZ"},"content":"    public static final int REMINDER_DELAY \u003d 0;"},{"lineNumber":797,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":798,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":799,"author":{"gitId":"TomLBZ"},"content":"     * The constant actionMap."},{"lineNumber":800,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":801,"author":{"gitId":"TomLBZ"},"content":"    public static final Map\u003cString, Action\u003e actionMap \u003d Map.ofEntries("},{"lineNumber":802,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(BYE, new ByeAction()),"},{"lineNumber":803,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(CLEAR, new ClearAction()),"},{"lineNumber":804,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(COMPLETE, new CompleteAction()),"},{"lineNumber":805,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DEADLINE, new DeadlineAction()),"},{"lineNumber":806,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DELETE, new DeleteAction()),"},{"lineNumber":807,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DONE, new DoneAction()),"},{"lineNumber":808,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(EDIT, new EditAction()),"},{"lineNumber":809,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(EVENT, new EventAction()),"},{"lineNumber":810,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(FIND, new FindAction()),"},{"lineNumber":811,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(ADD, new AddAction()),"},{"lineNumber":812,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(HELP, new HelpAction()),"},{"lineNumber":813,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(GRADE, new GradeAction()),"},{"lineNumber":814,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(LIST, new ListAction()),"},{"lineNumber":815,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(LOAD, new LoadLinkedTasksAction()),"},{"lineNumber":816,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(FOCUS, new FocusAction()),"},{"lineNumber":817,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(REMINDER, new ReminderAction()),"},{"lineNumber":818,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(POSTPONE, new PostponeAction()),"},{"lineNumber":819,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(SNOOZE, new SnoozeAction()),"},{"lineNumber":820,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(MC, new McAction()),"},{"lineNumber":821,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DETAIL, new DetailAction()),"},{"lineNumber":822,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(TODO, new TodoAction()),"},{"lineNumber":823,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNDONE, new UndoneAction()),"},{"lineNumber":824,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNKNOWN, new UnknownAction()),"},{"lineNumber":825,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(PREV, new PrevAction()),"},{"lineNumber":826,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(NEXT, new NextAction()),"},{"lineNumber":827,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(CAP, new CapAction()),"},{"lineNumber":828,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(GOAL, new GoalAction()),"},{"lineNumber":829,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(FANCY, new FancyAction()),"},{"lineNumber":830,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(PLAIN, new PlainAction()),"},{"lineNumber":831,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(TAKE, new TakeAction()),"},{"lineNumber":832,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(SEL, new SelectAction()),"},{"lineNumber":833,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNSEL, new UnselectAction()),"},{"lineNumber":834,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(STATS, new StatsAction()),"},{"lineNumber":835,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNTAKE, new UntakeAction()));"},{"lineNumber":836,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":837,"author":{"gitId":"TomLBZ"},"content":"     * The constant helpMap."},{"lineNumber":838,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":839,"author":{"gitId":"TomLBZ"},"content":"    public static final Map\u003cString, HelpText\u003e helpMap \u003d Map.ofEntries("},{"lineNumber":840,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(BYE, HelpText.BYE),"},{"lineNumber":841,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(CLEAR, HelpText.CLEAR),"},{"lineNumber":842,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(COMPLETE, HelpText.COMPLETE),"},{"lineNumber":843,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DEADLINE, HelpText.DEADLINE),"},{"lineNumber":844,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DELETE, HelpText.DELETE),"},{"lineNumber":845,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DONE, HelpText.DONE),"},{"lineNumber":846,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(EDIT, HelpText.EDIT),"},{"lineNumber":847,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(EVENT, HelpText.EVENT),"},{"lineNumber":848,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(FIND, HelpText.FIND),"},{"lineNumber":849,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(FOCUS, HelpText.FOCUS),"},{"lineNumber":850,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(REMINDER, HelpText.REMINDER),"},{"lineNumber":851,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(POSTPONE, HelpText.POSTPONE),"},{"lineNumber":852,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(HELP, HelpText.HELP),"},{"lineNumber":853,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(GRADE, HelpText.GRADE),"},{"lineNumber":854,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(LIST, HelpText.LIST),"},{"lineNumber":855,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(LOAD, HelpText.LOAD),"},{"lineNumber":856,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(TODO, HelpText.TODO),"},{"lineNumber":857,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNDONE, HelpText.UNDONE),"},{"lineNumber":858,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNKNOWN, HelpText.UNKNOWN),"},{"lineNumber":859,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(PREV, HelpText.PREV),"},{"lineNumber":860,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(NEXT, HelpText.NEXT),"},{"lineNumber":861,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(CAP, HelpText.CAP),"},{"lineNumber":862,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(GOAL, HelpText.GOAL),"},{"lineNumber":863,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(FANCY, HelpText.FANCY),"},{"lineNumber":864,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(PLAIN, HelpText.PLAIN),"},{"lineNumber":865,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(MC, HelpText.MC),"},{"lineNumber":866,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DETAIL, HelpText.DETAIL),"},{"lineNumber":867,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(TAKE, HelpText.TAKE),"},{"lineNumber":868,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(ADD, HelpText.ADD),"},{"lineNumber":869,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(SEL, HelpText.SEL),"},{"lineNumber":870,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(SNOOZE, HelpText.SNOOZE),"},{"lineNumber":871,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNSEL, HelpText.UNSEL),"},{"lineNumber":872,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(STATS, HelpText.STATS),"},{"lineNumber":873,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(UNTAKE, HelpText.UNTAKE));"},{"lineNumber":874,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":875,"author":{"gitId":"TomLBZ"},"content":"     * The constant paramMap."},{"lineNumber":876,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":877,"author":{"gitId":"TomLBZ"},"content":"    public static final Map\u003cString, String[]\u003e compulsoryParamMap \u003d Map.ofEntries("},{"lineNumber":878,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(DEADLINE, new String[]{\"by\"}),"},{"lineNumber":879,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(EVENT, new String[]{\"at\"}),"},{"lineNumber":880,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(ADD, new String[]{MOD, TASK}),"},{"lineNumber":881,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(EDIT, new String[]{MOD, TASK}),"},{"lineNumber":882,"author":{"gitId":"TomLBZ"},"content":"        Map.entry(GOAL, new String[]{\"total\"}));"},{"lineNumber":883,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":884,"author":{"gitId":"TomLBZ"},"content":"     * The constant optionalParamMap."},{"lineNumber":885,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":886,"author":{"gitId":"TomLBZ"},"content":"    public static final Map\u003cString, String[]\u003e optionalParamMap \u003d Map.ofEntries("},{"lineNumber":887,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(MC, new String[]{\"d\"}),"},{"lineNumber":888,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(STATS, new String[]{\"mod\"}),"},{"lineNumber":889,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(DETAIL, new String[]{\"mod\",\"task\",\"cmd\"}),"},{"lineNumber":890,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(ADD, new String[]{\"mod\",\"task\",\"cmd\"}),"},{"lineNumber":891,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(LIST, new String[]{\"date\", \"asc\", \"desc\", \"spec\"}),"},{"lineNumber":892,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(FOCUS, new String[]{DEADLINE, TODO, EVENT, MOD, TASK, SELECTED, TAKEN, SU, COMPLETED}),"},{"lineNumber":893,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(POSTPONE, new String[]{\"h\", \"d\", \"w\", \"m\", \"y\"}),"},{"lineNumber":894,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(PREV, new String[]{\"i\", \"s\", \"a\"}),"},{"lineNumber":895,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(NEXT, new String[]{\"i\", \"s\", \"a\"}),"},{"lineNumber":896,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(REMINDER, new String[]{\"on\", \"off\"}),"},{"lineNumber":897,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(GOAL, new String[]{\"taken\"}));"},{"lineNumber":898,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":899,"author":{"gitId":"TomLBZ"},"content":"     * The constant messageMap."},{"lineNumber":900,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":901,"author":{"gitId":"TomLBZ"},"content":"    public static final Map\u003cString, String\u003e messageMap \u003d Map.ofEntries("},{"lineNumber":902,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(BYE, \"Bye. Hope to see you again soon!\"),"},{"lineNumber":903,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(STATS, \"Here are the statistics for your tasks: \" + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":904,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(CLEAR, \"Nice! I\u0027ve cleared all tasks from the list and left modules alone.\"),"},{"lineNumber":905,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(COMPLETE, \"Marking the specified module as Completed (final): \""},{"lineNumber":906,"author":{"gitId":"TomLBZ"},"content":"                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":907,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(DEADLINE, ADDED + CHANGED),"},{"lineNumber":908,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(DELETE, REMOVED + CHANGED),"},{"lineNumber":909,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(DONE, \"Nice! I\u0027ve marked this task as done:\""},{"lineNumber":910,"author":{"gitId":"TomLBZ"},"content":"                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":911,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(EDIT, \"Trying to modify the attribute(s) you specified:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":912,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(EVENT, ADDED + CHANGED),"},{"lineNumber":913,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(FIND, \"Tasks with the specified keyword are:\""},{"lineNumber":914,"author":{"gitId":"TomLBZ"},"content":"                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":915,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(FOCUS, \"Now we are focusing on:\""},{"lineNumber":916,"author":{"gitId":"TomLBZ"},"content":"                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":917,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(GRADE, \"Grade operation on the specified modules:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":918,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(CAP, \"Calculate cap on specified modules:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":919,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(HELP, TEXT_PLACEHOLDER),"},{"lineNumber":920,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(LIST, TEXT_PLACEHOLDER),"},{"lineNumber":921,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(LOAD, TEXT_PLACEHOLDER),"},{"lineNumber":922,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(TODO, ADDED + CHANGED),"},{"lineNumber":923,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(UNDONE, \"Nice! I\u0027ve marked this task as undone:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":924,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(UNKNOWN, \"OOPS, I don\u0027t know what that means :-(\" + WIN_NEWLINE + \"Try \\\"help\\\"!\"),"},{"lineNumber":925,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(PREV, TEXT_PLACEHOLDER),"},{"lineNumber":926,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(NEXT, TEXT_PLACEHOLDER),"},{"lineNumber":927,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(FANCY, FANCY),"},{"lineNumber":928,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(PLAIN, PLAIN),"},{"lineNumber":929,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(TAKE, TAKEN_CHANGED + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":930,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(ADD, \"I have added the specified tasks to the specified modules.\""},{"lineNumber":931,"author":{"gitId":"TomLBZ"},"content":"                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":932,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(SEL, SELECTED_CHANGED + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":933,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(DETAIL, DETAIL_HEAD + TEXT_PLACEHOLDER),"},{"lineNumber":934,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(UNSEL, SELECTED_CHANGED + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":935,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(UNTAKE, TAKEN_CHANGED + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":936,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(POSTPONE, \"I\u0027ve postpone this task:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"},{"lineNumber":937,"author":{"gitId":"TomLBZ"},"content":"            Map.entry(SNOOZE, \"I\u0027ve snoozed the reminder for 1 minute. Will remind you in 6 minutes.\"));"},{"lineNumber":938,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":938}},{"path":"src/main/java/constants/HelpText.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The enum Help text."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public enum HelpText {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * The Add."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    ADD("},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"        \"add\","},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"        \"Add task(s) to module(s): Add specified task(s) to specified module(s).\","},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"            \"add -task [index(es)] -mod [module code(s)]\","},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index should be a positive integer. Otherwise you should expect an \\\"invalid command\\\" error message\","},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"            \"2. You must reference EXISTING tasks or modules when using this command. For example:\","},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"            \"2.1. If \\\"list\\\" shows only 2 tasks but you try to use \\\"-task 3\\\" as a parameter for \\\"add\\\", you should \""},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"                + \"expect an \\\"index out of range\\\" error message because \\\"3\\\" is out of range for your task list.\","},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"            \"2.2. Similarly, if there is no mod called CS9999 in the module list and you try to use \""},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"-mod CS9999\\\" as a parameter for \\\"add\\\", you should expect a \\\"not found\\\" error message.\","},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"            \"3. Both parameters here (i.e. task and mod) are compulsory.\","},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"            \"4. Once a task is added to a module, it is unlinked from the task list.\""},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"add -task 1 2 -mod CS2113 CS2113T \\\" \u003e\u003e add task 1 and task 2 in the current list to \""},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"                + \"the modules CS2113 and CS2113T\","},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * The Bye."},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    BYE("},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        \"bye\","},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        \"Quit the program\","},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            \"bye\""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"            \"1. Extra inputs after \\\"bye\\\" will be ignored. For example:\","},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            \"1.1. If \\\"bye domsun\\\" is input in, \\\"domsun\\\" will be ignored and \\\"bye\\\" will be executed.\","},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"bye\\\" \u003e\u003e quits the program\""},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"     * Help commands for CAP. (not done)"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    CAP("},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        \"cap\","},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        \"Calculate CAP for courses based on selected option.\","},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"            \"cap [index / code (for modules only)] [letter grade] ...\","},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"            \"cap [index(es) / codes (for modules only)]\","},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            \"cap\""},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index should be a positive integer. Otherwise you should expect an \\\"invalid command\\\" error message\","},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            \"2. You must reference existing tasks or modules when using this command. For example:\","},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"            \"2.1. If \\\"list\\\" shows only 2 tasks but you try to use \\\"-task 3\\\" as a parameter for \\\"add\\\", you should \""},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"                + \"expect an \\\"index out of range\\\" error message because \\\"3\\\" is out of range for your task list.\","},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"            \"2.2. Similarly, if there is no mod called CS9999 in the module list and you try to use \""},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"-mod CS9999\\\" as a parameter for \\\"add\\\", you should expect a \\\"not found\\\" error message.\","},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"cap CS2113 A CG1112 A-\\\" \u003e\u003e calculate the cap using A for CS2113 and A- for CG1112\","},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"cap CS2113 CG1112\\\" \u003e\u003e calculate the cap using existing grades for CS2113 and CG1112 \""},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"                + \"if they have already been assigned a grade using the \\\"grade\\\" command\","},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"cap\\\" \u003e\u003e calculate the cap using all taken and graded modules\","},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"            \"4. \\\"cap CG1111 CG1112 A\\\" \u003e\u003e calculated cap using existing grade for CG1111, and using A for CG1112\","},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     * The Clear."},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"    CLEAR("},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"        \"clear\","},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        \"Clear the task list, or clear the bottom text region for the fancy UI.\","},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            \"clear\","},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"            \"clear fancy\","},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"clear fancy\\\" can only be used in fancy UI mode\","},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"            \"2. Extra inputs after \\\"clear\\\" will get an \\\"invalid command\\\" error unless\""},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"                + \" it contains the word \\\"fancy\\\" (case insensitive). For example:\","},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"            \"2.1. \\\"clear domsun\\\" results in an \\\"invalid command\\\" error.\","},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            \"2.2. If \\\"clear fancy domsun\\\" is input in, \\\"domsun\\\" will be ignored \""},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"                + \"and \\\"clear fancy\\\" will be executed.\","},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"            \"2.3. If \\\"clear MyFancyBoy\\\" is input in, \\\"clear fancy\\\" will be executed.\","},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"clear\\\" \u003e\u003e clears the task list\","},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"clear fancy\\\" \u003e\u003e clears the bottom region of the fancy UI\","},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"     * The Complete."},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    COMPLETE("},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        \"complete\","},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        \"Mark a module as completed\","},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"            \"complete [index / code]\""},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            \"1. Module should first be \\\"taken\\\" and \\\"grade\\\" before this function can run. \""},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"                + \"Otherwise, you should expect an error message\","},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"            \"2. Index should be a positive integer. Otherwise you should expect an \\\"invalid command\\\" error message\","},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"            \"3. Both parameters here (i.e. task and mod) are compulsory.\","},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"            \"4. You must reference existing tasks or modules when using this command. For example:\","},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"            \"4.1. If \\\"list\\\" shows only 2 tasks but you try to use \\\"-task 3\\\" as a parameter for \\\"add\\\", you should \""},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"                + \"expect an \\\"index out of range\\\" error message because \\\"3\\\" is out of range for your task list.\","},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"            \"4.2. Similarly, if there is no mod called CS9999 in the module list and you try to use \""},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"-mod CS9999\\\" as a parameter for \\\"add\\\", you should expect a \\\"not found\\\" error message.\","},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"complete CS2113\\\" \u003e\u003e marks module CS2113 as completed\","},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"complete 1\\\" \u003e\u003e marks the 1st item in the list as completed if it is a module\""},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"     * The Deadline."},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"    DEADLINE("},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"        \"deadline\","},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"        \"Add a deadline to the task list\","},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"            \"deadline [description] -by [time]\""},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"        new String[]{\"1. Deadline description and time parameters here are compulsory.\",},"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"deadline ddl -by 21/9/15 1:12\\\" \u003e\u003e \""},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"                + \"adds a deadline with description \\\"ddl\\\" and time \\\"Sep 15 2021 1:12\\\"\","},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"deadline ddl -by 21/9/15 1:12 Weekly\\\" \u003e\u003e \""},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"                + \"adds a weekly recurring deadline with description \\\"ddl\\\" and time \\\"Sep 15 2021 1:12\\\"\""},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"     * The Delete."},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"    DELETE("},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"        \"delete\","},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"        \"Delete a task from the task list\","},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"            \"delete [index]\""},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index should be a positive integer. Otherwise you should expect an error message\","},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"            \"2. You must reference EXISTING tasks when using this command. For example:\","},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"            \"2.1. If \\\"list\\\" shows only 2 tasks but you try to use \\\"delete 3\\\", you should \""},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"                + \"expect an \\\"index out of range\\\" error message because \\\"3\\\" is out of range for your task list.\","},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"delete 1\\\" \u003e\u003e deletes the task with index 1 from the current list\""},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"     * The Detail."},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"    DETAIL("},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"        \"detail\","},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"        \"Print the details of a specified item.\","},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"            \"detail [module code (for modules only) / index]\","},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index should be a positive integer. Otherwise you should expect an error message\","},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"            \"2. You must reference EXISTING tasks or module when using this command. For example:\","},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"            \"2.1. If \\\"list\\\" shows only 2 tasks but you try to use \\\"detail 3\\\", you should \""},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"                + \"expect an \\\"index out of range\\\" error message because \\\"3\\\" is out of range for your task list.\","},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"            \"2.2. Similarly, if there is no mod called CS9999 in the module list and you try to use \""},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"detail CS9999\\\", you should expect a \\\"not found\\\" error message.\","},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"detail 1\\\" \u003e\u003e print the detail of item 1 in the list\","},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"detail CS2113T\\\" \u003e\u003e print the detail of module CS2113T\","},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"     * Goal Planner."},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"    GOAL("},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"        \"goal\","},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"        \"Calculate how far the user is from his/her target CAP\","},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"            \"goal -total [total MC] [target CAP] -taken [taken MC] [current CAP]\","},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"            \"1. All values on the parameters should be a positive integer. \""},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"                + \"Otherwise you should expect an error message\","},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"            \"2. Both total MC and target CAP are compulsory parameters.\","},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"            \"3. CAP values need to be within 0 to 5.\","},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"goal -total 160 4.9\\\" \u003e\u003e comment on required average grade to achieve CAP of 4.9 \""},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"                + \"with 160MC in total based on current grades\","},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"goal -total 160 4.9 -taken 100 4.5\\\" \u003e\u003e \""},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"                + \"comment on required average grade needed for:\\r\\n\""},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"                + \"- Total MC for graduation: 160\\r\\n\" + \"- Target CAP: 4.9\\r\\n\""},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"                + \"- Total MC taken: 100\\r\\n\" + \"- Current CAP: 4.5\\r\\n\""},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"     * The Done."},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"    DONE("},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"        \"done\","},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"        \"Mark a task as done\","},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"            \"done [index]\""},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index must be a positive integer referencing an existing item.\","},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"            \"2. If the index starts with a letter, it will be treated as a numerical value mapped A to 1 and Z to 26. \""},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"                + \"For example, \\\"done apple\\\" is equivalent to \\\"done 1\\\" and \\\"done C4\\\" is equivalent to \\\"done 3\\\".\""},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"done 1\\\" \u003e\u003e marks the task with index 1 as done\""},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"     * The Edit. (not sure)"},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"    EDIT("},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"        \"edit\","},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"        \"Modify the attributes of an item (task / module), or operate on one linked task of a module\","},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"            \"edit -task [index] field\u003dnew_value {[field\u003dnew_value] ...}\","},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"            \"edit -mod [module code] field\u003dnew_value {[field\u003dnew_value] ...}\","},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"            \"edit -mod [module code] task\u003d[del / done / undone]\u003clinked task index\u003e\","},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"            \"1. Fields for \\\"-task\\\" include \\\"description\\\", \\\"type\\\", \\\"selected\\\", \\\"weekly\\\" and \\\"done\\\"\","},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"            \"2. Fields for \\\"-mod\\\" include \\\"grade\\\", \\\"su\\\", \\\"selected\\\" and \\\"taken\\\"\","},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":"            \"3. No space allowed around the \\\"\u003d\\\" sign. Use \\\"_\\\" in for spaces in \\\"[field\u003dnew_value]\\\" parameters\","},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"            \"4. Modules and task referenced need to exist.\","},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"            \"5. Removing a specified linked task from the module does not delete the task from the task list\","},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"edit -mod CS2113T grade\u003dA\\\" \u003e\u003e changes the \\\"grade\\\" field of module \\\"CS2113T\\\" to be \\\"A\\\"\","},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"edit -task 1 description\u003ddo_homework\\\" \u003e\u003e \""},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"                + \"changes the \\\"description\\\" field of the 1st task in the current list to \\\"do homework\\\"\","},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"edit -task 1 type\u003devent\\\" \u003e\u003e changes the \\\"type\\\" of the 1st task in the current list to \\\"event\\\"\","},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"            \"4. \\\"edit -mod CS2113 grade\u003dA -task 1 description\u003ddo_homework type\u003devent\\\" \u003e\u003e do 1 to 3 sequentially\","},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"            \"5. \\\"edit -mod CS2113 task\u003ddel\u003c1\u003e\\\" \u003e\u003e removes the first linked task from the module if it exists\","},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"            \"6. \\\"edit -mod CS2113 task\u003ddone\u003c1\u003e\\\" \u003e\u003e marks the first linked task from the module as done if it exists\","},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"            \"7. \\\"edit -mod CS2113 task\u003dundone\u003c1\u003e\\\" \u003e\u003e \""},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"                + \"marks the first linked task from the module as undone if it exists\","},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"     * The Event."},{"lineNumber":249,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"TomLBZ"},"content":"    EVENT("},{"lineNumber":251,"author":{"gitId":"TomLBZ"},"content":"        \"event\","},{"lineNumber":252,"author":{"gitId":"TomLBZ"},"content":"        \"Add an event to the task list\","},{"lineNumber":253,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":254,"author":{"gitId":"TomLBZ"},"content":"            \"event [description] -at [time]\""},{"lineNumber":255,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":256,"author":{"gitId":"TomLBZ"},"content":"        new String[]{\"1. Event description and time parameters here are compulsory.\",},"},{"lineNumber":257,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"event e -at May 13 2020 8:00\\\" \u003e\u003e \""},{"lineNumber":259,"author":{"gitId":"TomLBZ"},"content":"                + \"adds an event with description \\\"e\\\" and time \\\"May 13 2020 8:00\\\"\","},{"lineNumber":260,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"event e -at May 13 2020 8:00 Weekly\\\" \u003e\u003e \""},{"lineNumber":261,"author":{"gitId":"TomLBZ"},"content":"                + \"adds an weekly recurring event with description \\\"e\\\" and time \\\"May 13 2020 8:00\\\"\""},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"     * The Fancy."},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"    FANCY("},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"        \"fancy\","},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"        \"Switch to a fancy Cli (requires the shell to support ansi codes).\","},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"            \"fancy\""},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"            \"1. This feature can be used on Linux or Mac only. Error numbers will be displayed on Windows.\","},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"fancy\\\" \u003e\u003e switch to a fancy Cli with graphics. Use \\\"plain\\\" to switch to plain Cli\""},{"lineNumber":277,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"     * Help text to add grade to a course."},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"    GRADE("},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"        \"grade\","},{"lineNumber":283,"author":{"gitId":"TomLBZ"},"content":"        \"Modify grade to the user\u0027s taken course/module.\","},{"lineNumber":284,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":285,"author":{"gitId":"TomLBZ"},"content":"            \"grade [index / code (for modules only)] [letter grade] ...\","},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"            \"grade [index(es) / codes (for modules only)]\","},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":"            \"grade\""},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":289,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":"            \"1. Modules need to be \\\"taken\\\" first before grade is applied!\","},{"lineNumber":291,"author":{"gitId":"TomLBZ"},"content":"            \"2. Grade and module code/index are compulsory parameters.\","},{"lineNumber":292,"author":{"gitId":"TomLBZ"},"content":"            \"3. Grade and module code need to be acceptable grade and module in NUS. For example:\","},{"lineNumber":293,"author":{"gitId":"TomLBZ"},"content":"            \"3.1. If \\\"grade CS2113 Z\\\" or \\\"grade CS9999 A\\\" is input, error message will be displayed.\","},{"lineNumber":294,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":295,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":296,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"grade CS2113 A CG1112 A-\\\" \u003e\u003e make A and A- the grades of modules CS2113 and CG1112 respectively\","},{"lineNumber":297,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"grade CS2113 CG1112\\\" \u003e\u003e delete grade[s] of modules CS2113 and CG1112\","},{"lineNumber":298,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"grade\\\" \u003e\u003e show grades of all taken modules\","},{"lineNumber":299,"author":{"gitId":"TomLBZ"},"content":"            \"4. \\\"grade CG1111 CG1112 A\\\" \u003e\u003e delete the grade of CG1111, and then set the grade of CG1112 to A, \""},{"lineNumber":300,"author":{"gitId":"TomLBZ"},"content":"                + \"equivalent of executing \\\"grade CG1111\\\" followed by \\\"grade CG1112 A\\\" sequentially\","},{"lineNumber":301,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":302,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"TomLBZ"},"content":"     * The Find."},{"lineNumber":304,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":305,"author":{"gitId":"TomLBZ"},"content":"    FIND("},{"lineNumber":306,"author":{"gitId":"TomLBZ"},"content":"        \"find\","},{"lineNumber":307,"author":{"gitId":"TomLBZ"},"content":"        \"Find an event in the task list with the specified keyword\","},{"lineNumber":308,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":309,"author":{"gitId":"TomLBZ"},"content":"            \"find [keyword]\""},{"lineNumber":310,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":311,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":312,"author":{"gitId":"TomLBZ"},"content":"            \"1. Keyword here means any word (time/description) on task list.\","},{"lineNumber":313,"author":{"gitId":"TomLBZ"},"content":"            \"2. Ensure that you are referring to the most updated task list.\","},{"lineNumber":314,"author":{"gitId":"TomLBZ"},"content":"            \"3. If keyword does not exist on the task list, a \\\"no found\\\" message will be shown.\","},{"lineNumber":315,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":316,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":317,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"find exam\\\" \u003e\u003e finds all tasks with the \\\"exam\\\" keyword from the task list\""},{"lineNumber":318,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":319,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":320,"author":{"gitId":"TomLBZ"},"content":"     * The Focus."},{"lineNumber":321,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":322,"author":{"gitId":"TomLBZ"},"content":"    FOCUS("},{"lineNumber":323,"author":{"gitId":"TomLBZ"},"content":"        \"focus\","},{"lineNumber":324,"author":{"gitId":"TomLBZ"},"content":"        \"Change context. Changes the target of other commands to the specified target\","},{"lineNumber":325,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":326,"author":{"gitId":"TomLBZ"},"content":"            \"focus\","},{"lineNumber":327,"author":{"gitId":"TomLBZ"},"content":"            \"focus [deadline / todo / event / task / mod / selected / taken]\""},{"lineNumber":328,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":329,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":330,"author":{"gitId":"TomLBZ"},"content":"            \"1. This function is used together with \\\"list\\\" to see the result of the \\\"focus\\\".\","},{"lineNumber":331,"author":{"gitId":"TomLBZ"},"content":"            \"2. For more explanation, refer to the diagram on \\\"Domsun Tutorial\\\" on the UserGuide.\","},{"lineNumber":332,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":333,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":334,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"focus\\\" \u003e\u003e focus on \\\"task\\\". e.g. \\\"list\\\" will list all tasks from now on\","},{"lineNumber":335,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"focus mod\\\" \u003e\u003e focus on \\\"mod\\\". e.g. \\\"list\\\" will list all modules from now on\","},{"lineNumber":336,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"focus selected\\\" \u003e\u003e focus on \\\"selected\\\". e.g. \\\"list\\\" will list selected items from now on\""},{"lineNumber":337,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":338,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"TomLBZ"},"content":"     * The Postpone."},{"lineNumber":340,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":341,"author":{"gitId":"TomLBZ"},"content":"    POSTPONE("},{"lineNumber":342,"author":{"gitId":"TomLBZ"},"content":"        \"postpone\","},{"lineNumber":343,"author":{"gitId":"TomLBZ"},"content":"        \"postpone task a day by default\","},{"lineNumber":344,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":345,"author":{"gitId":"TomLBZ"},"content":"            \"postpone [index]\","},{"lineNumber":346,"author":{"gitId":"TomLBZ"},"content":"            \"postpone (h / w / y) [index]\""},{"lineNumber":347,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":348,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":349,"author":{"gitId":"TomLBZ"},"content":"            \"1. The tasks should consists of date type i.e. events or deadline tasks, does not work on todo tasks\","},{"lineNumber":350,"author":{"gitId":"TomLBZ"},"content":"            \"2. Each postpone delays the tasks by a day, an hour, a week or a year\","},{"lineNumber":351,"author":{"gitId":"TomLBZ"},"content":"            \"3. Does not work with custom date unless you have updated the task with the preferred date format.\","},{"lineNumber":352,"author":{"gitId":"TomLBZ"},"content":"            \"4. When letter appears without a number as its parameter, the letter will be treated as a numeric value \""},{"lineNumber":353,"author":{"gitId":"TomLBZ"},"content":"                    + \"mapped A to 1 and Z to 26.\" + Constants.WIN_NEWLINE"},{"lineNumber":354,"author":{"gitId":"TomLBZ"},"content":"                    + \"For example, \\\"postpone boy\\\" is equivalent to \\\"postpone 2\\\" and \""},{"lineNumber":355,"author":{"gitId":"TomLBZ"},"content":"                    + \"\\\"postpone h\\\" is equivalent to \\\"postpone 8\\\".\","},{"lineNumber":356,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":357,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":358,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"postpone 1\\\" \u003e\u003e postpone the task with index 1 by a day\","},{"lineNumber":359,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"postpone h 1\\\" \u003e\u003e postpone the task with index 1 by an hour\","},{"lineNumber":360,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"postpone w 1\\\" \u003e\u003e postpone the task with index 1 by a week\","},{"lineNumber":361,"author":{"gitId":"TomLBZ"},"content":"            \"4. \\\"postpone y 1\\\" \u003e\u003e postpone the task with index 1 by a year\""},{"lineNumber":362,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":363,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":364,"author":{"gitId":"TomLBZ"},"content":"     * The Help."},{"lineNumber":365,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":366,"author":{"gitId":"TomLBZ"},"content":"    HELP("},{"lineNumber":367,"author":{"gitId":"TomLBZ"},"content":"        \"help\","},{"lineNumber":368,"author":{"gitId":"TomLBZ"},"content":"        \"Print the list of available commands, or print the details of a specified command\","},{"lineNumber":369,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":370,"author":{"gitId":"TomLBZ"},"content":"            \"help [target]\","},{"lineNumber":371,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":372,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":373,"author":{"gitId":"TomLBZ"},"content":"            \"1. If unknown command is put in as \\\"target\\\", general help of all commands will be displayed.\","},{"lineNumber":374,"author":{"gitId":"TomLBZ"},"content":"            \"2. The parameter \\\"target\\\" is the name of the explained command/feature.\""},{"lineNumber":375,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":376,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":377,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"help\\\" \u003e\u003e prints the list of available commands\","},{"lineNumber":378,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"help event\\\" \u003e\u003e prints the details of the \\\"event\\\" command\""},{"lineNumber":379,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":380,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":381,"author":{"gitId":"TomLBZ"},"content":"     * Statistics help text."},{"lineNumber":382,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":383,"author":{"gitId":"TomLBZ"},"content":"    STATS("},{"lineNumber":384,"author":{"gitId":"TomLBZ"},"content":"        \"stats\","},{"lineNumber":385,"author":{"gitId":"TomLBZ"},"content":"        \"Print statistics for a given modules/tasks\","},{"lineNumber":386,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":387,"author":{"gitId":"TomLBZ"},"content":"            \"stats [-option] [module code]\","},{"lineNumber":388,"author":{"gitId":"TomLBZ"},"content":"            \"option: -mod\""},{"lineNumber":389,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":390,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":391,"author":{"gitId":"TomLBZ"},"content":"            \"1. Module entered should exist. Otherwise you should expect an \\\"Module Not Found\\\" error message\","},{"lineNumber":392,"author":{"gitId":"TomLBZ"},"content":"            \"2. If the command entered is stats alone, ensure that you are focusing on task by typing \\\"focus\\\"\""},{"lineNumber":393,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":394,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":395,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"stats\\\" \u003e\u003e prints statistics of task completed\","},{"lineNumber":396,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"stats -mod CS2113\\\" \u003e\u003e prints statistics of tasks completed under tasks of CS2113\""},{"lineNumber":397,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":398,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":399,"author":{"gitId":"TomLBZ"},"content":"     * The List."},{"lineNumber":400,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":401,"author":{"gitId":"TomLBZ"},"content":"    LIST("},{"lineNumber":402,"author":{"gitId":"TomLBZ"},"content":"        \"list\","},{"lineNumber":403,"author":{"gitId":"TomLBZ"},"content":"        \"Print a list of items depending on the current Focus\","},{"lineNumber":404,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":405,"author":{"gitId":"TomLBZ"},"content":"            \"list\","},{"lineNumber":406,"author":{"gitId":"TomLBZ"},"content":"            \"list date [asc / desc / spec \\\"date\\\"(any common date format)]\""},{"lineNumber":407,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":408,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":409,"author":{"gitId":"TomLBZ"},"content":"            \"1. When updates are done on the list (e.g : new \\\"todo\\\" task is added), \""},{"lineNumber":410,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"list\\\" need to be run again to see the result of the update.\","},{"lineNumber":411,"author":{"gitId":"TomLBZ"},"content":"            \"2. There are 2 main list in this application (i.e. task and module list). \""},{"lineNumber":412,"author":{"gitId":"TomLBZ"},"content":"                + \"For more explanation, refer to the diagram on \\\"Domsun Tutorial\\\" on the UserGuide.\","},{"lineNumber":413,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":414,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":415,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"list\\\" \u003e\u003e list all added items\","},{"lineNumber":416,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"list date asc\\\" \u003e\u003e list items with a \\\"date\\\" field in ascending order\","},{"lineNumber":417,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"list date spec Oct 5 2020\\\" \u003e\u003e list items with specific \\\"date\\\" field of Oct 5 2020\""},{"lineNumber":418,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":419,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":420,"author":{"gitId":"TomLBZ"},"content":"     * The Load."},{"lineNumber":421,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":422,"author":{"gitId":"TomLBZ"},"content":"    LOAD("},{"lineNumber":423,"author":{"gitId":"TomLBZ"},"content":"        \"load\","},{"lineNumber":424,"author":{"gitId":"TomLBZ"},"content":"        \"Loads linked tasks to ONE specified module without adding them to the main task list\","},{"lineNumber":425,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":426,"author":{"gitId":"TomLBZ"},"content":"            \"load [module code] [task_string] ...\","},{"lineNumber":427,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":428,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":429,"author":{"gitId":"TomLBZ"},"content":"            \"1. This command should only be used if you are highly familiar with the save file \""},{"lineNumber":430,"author":{"gitId":"TomLBZ"},"content":"                + \"and you want to manually edit linked tasks to a specific module\","},{"lineNumber":431,"author":{"gitId":"TomLBZ"},"content":"            \"2. We do NOT recommend using this command on a daily basis\""},{"lineNumber":432,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":433,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":434,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"load EE2028 [D][V]_Exam_(by:_Jan_11_2011_11:11)\\\" \u003e\u003e loads a task with attributes: \""},{"lineNumber":435,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"description\u003dExam\\\", \\\"type\u003ddeadline\\\", \\\"date\u003dJan_11_2011_11:11\\\" and \\\"isdone\u003dtrue\\\" \""},{"lineNumber":436,"author":{"gitId":"TomLBZ"},"content":"                + \"into the linked task list of module EE2028, WITHOUT adding this task object to the main task list.\","},{"lineNumber":437,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"load EE2028 [T][X]_test1,[T][V]_test2\\\" \u003e\u003e loads a task with attributes: \""},{"lineNumber":438,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"description\u003dtest1\\\", \\\"type\u003dtodo\\\" and \\\"isdone\u003dfalse\\\", then another task with attributes: \""},{"lineNumber":439,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"description\u003dtest2\\\", \\\"type\u003dtodo\\\" and \\\"isdone\u003dtrue\\\", WITHOUT adding any of these tasks \""},{"lineNumber":440,"author":{"gitId":"TomLBZ"},"content":"                + \"to the main task list\","},{"lineNumber":441,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":442,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":443,"author":{"gitId":"TomLBZ"},"content":"     * The Mc."},{"lineNumber":444,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":445,"author":{"gitId":"TomLBZ"},"content":"    MC("},{"lineNumber":446,"author":{"gitId":"TomLBZ"},"content":"        \"mc\","},{"lineNumber":447,"author":{"gitId":"TomLBZ"},"content":"        \"Print the number of MCs based on selected option.\","},{"lineNumber":448,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":449,"author":{"gitId":"TomLBZ"},"content":"            \"mc [-option]\","},{"lineNumber":450,"author":{"gitId":"TomLBZ"},"content":"            \"option: -d(detailed)\""},{"lineNumber":451,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":452,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":453,"author":{"gitId":"TomLBZ"},"content":"            \"1. Default mc command prints the total mc that exist in the taken list of module\","},{"lineNumber":454,"author":{"gitId":"TomLBZ"},"content":"            \"2. To print out a detailed list of mc belonging to the taken modules, ensure you have entered \""},{"lineNumber":455,"author":{"gitId":"TomLBZ"},"content":"                + \"\\\"focus taken\\\".\""},{"lineNumber":456,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":457,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":458,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"mc\\\" \u003e\u003e print the total number of MCs currently taking\","},{"lineNumber":459,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"mc -d\\\" \u003e\u003e print the detailed MC composition of the selection region\""},{"lineNumber":460,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":461,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":462,"author":{"gitId":"TomLBZ"},"content":"     * The Next."},{"lineNumber":463,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":464,"author":{"gitId":"TomLBZ"},"content":"    NEXT("},{"lineNumber":465,"author":{"gitId":"TomLBZ"},"content":"        \"next\","},{"lineNumber":466,"author":{"gitId":"TomLBZ"},"content":"        \"Switch the target region to the next page, keeping other regions unchanged.\","},{"lineNumber":467,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":468,"author":{"gitId":"TomLBZ"},"content":"            \"next [region]\","},{"lineNumber":469,"author":{"gitId":"TomLBZ"},"content":"            \"region: i(item list), s(selection), a(all, default)\""},{"lineNumber":470,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":471,"author":{"gitId":"TomLBZ"},"content":"        new String[]{\"1. This function should be used in FANCY UI only!\",},"},{"lineNumber":472,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":473,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"next\\\" \u003e\u003e switch both item list (top) and selection (bottom) region to the next page (default)\","},{"lineNumber":474,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"next s\\\" \u003e\u003e switch only the selection (bottom) region to the next page\""},{"lineNumber":475,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":476,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":477,"author":{"gitId":"TomLBZ"},"content":"     * The Plain."},{"lineNumber":478,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":479,"author":{"gitId":"TomLBZ"},"content":"    PLAIN("},{"lineNumber":480,"author":{"gitId":"TomLBZ"},"content":"        \"plain\","},{"lineNumber":481,"author":{"gitId":"TomLBZ"},"content":"        \"Switch to a plain Cli.\","},{"lineNumber":482,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":483,"author":{"gitId":"TomLBZ"},"content":"            \"plain\""},{"lineNumber":484,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":485,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":486,"author":{"gitId":"TomLBZ"},"content":"            \"1. Extra inputs after \\\"plain\\\" will be ignored. For example:\","},{"lineNumber":487,"author":{"gitId":"TomLBZ"},"content":"            \"1.1. If \\\"plain bye\\\" is input in, \\\"bye\\\" will be ignored and \\\"plain\\\" will be executed.\","},{"lineNumber":488,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":489,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":490,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"plain\\\" \u003e\u003e switch to a plain pure-text Cli. Use \\\"fancy\\\" to switch to fancy Cli\""},{"lineNumber":491,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":492,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":493,"author":{"gitId":"TomLBZ"},"content":"     * The Prev."},{"lineNumber":494,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":495,"author":{"gitId":"TomLBZ"},"content":"    PREV("},{"lineNumber":496,"author":{"gitId":"TomLBZ"},"content":"        \"prev\","},{"lineNumber":497,"author":{"gitId":"TomLBZ"},"content":"        \"Switch the target region to the previous page, keeping other regions unchanged.\","},{"lineNumber":498,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":499,"author":{"gitId":"TomLBZ"},"content":"            \"prev [region]\","},{"lineNumber":500,"author":{"gitId":"TomLBZ"},"content":"            \"region: i(items), s(selection), a(all, default)\""},{"lineNumber":501,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":502,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":503,"author":{"gitId":"TomLBZ"},"content":"            \"1. This function should be used in FANCY UI only!\","},{"lineNumber":504,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":505,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":506,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"prev\\\" \u003e\u003e switch both item list (top) and selection (bottom) to the previous page (default)\","},{"lineNumber":507,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"prev s\\\" \u003e\u003e switch the selection (bottom) to the previous page (as explained on UserGuide)\""},{"lineNumber":508,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":509,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":510,"author":{"gitId":"TomLBZ"},"content":"     * The Reminder."},{"lineNumber":511,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":512,"author":{"gitId":"TomLBZ"},"content":"    REMINDER("},{"lineNumber":513,"author":{"gitId":"TomLBZ"},"content":"        \"reminder\","},{"lineNumber":514,"author":{"gitId":"TomLBZ"},"content":"        \"List out events and deadlines tasks that are due within \" + Constants.REMINDER_RANGE + \" days\","},{"lineNumber":515,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":516,"author":{"gitId":"TomLBZ"},"content":"            \"reminder [on/off]\""},{"lineNumber":517,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":518,"author":{"gitId":"TomLBZ"},"content":"        new String[]{ \"1. You should expect the reminder will appear every 5 minutes.\", },"},{"lineNumber":519,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":520,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"reminder\\\" \u003e\u003e list tasks that are due within the set period of time\","},{"lineNumber":521,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"reminder on\\\" \u003e\u003e Switch on reminder\","},{"lineNumber":522,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"reminder off\\\" \u003e\u003e Switch off reminder\""},{"lineNumber":523,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":524,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":525,"author":{"gitId":"TomLBZ"},"content":"     * The Sel."},{"lineNumber":526,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":527,"author":{"gitId":"TomLBZ"},"content":"    SEL("},{"lineNumber":528,"author":{"gitId":"TomLBZ"},"content":"        \"sel\","},{"lineNumber":529,"author":{"gitId":"TomLBZ"},"content":"        \"Make selection: Add specified item(s) to the selection.\","},{"lineNumber":530,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":531,"author":{"gitId":"TomLBZ"},"content":"            \"sel [index(es) (for the currently listed items) / module code(s) (for modules only)]\","},{"lineNumber":532,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":533,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":534,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index must be a positive integer referencing an existing item.\","},{"lineNumber":535,"author":{"gitId":"TomLBZ"},"content":"            \"2. Module code needs to represent legitimate NUS module. Otherwise, an error message can be expected.\","},{"lineNumber":536,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":537,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":538,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"sel 1 2 3\\\" \u003e\u003e add the item with indices 1, 2 and 3 from the item list to the selection\","},{"lineNumber":539,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"sel CS1010 CS2113\\\" \u003e\u003e add the modules CS1010 and CS2113 on the item list to the selection\","},{"lineNumber":540,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"sel 5 CS2113\\\" \u003e\u003e add the item with index 5 and module CS2113 on the item list to the selection\""},{"lineNumber":541,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":542,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":543,"author":{"gitId":"TomLBZ"},"content":"     * The Snooze."},{"lineNumber":544,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":545,"author":{"gitId":"TomLBZ"},"content":"    SNOOZE("},{"lineNumber":546,"author":{"gitId":"TomLBZ"},"content":"        \"snooze\","},{"lineNumber":547,"author":{"gitId":"TomLBZ"},"content":"        \"Delay the reminder pop up by 1 minute.\","},{"lineNumber":548,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":549,"author":{"gitId":"TomLBZ"},"content":"            \"snooze\","},{"lineNumber":550,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":551,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":552,"author":{"gitId":"TomLBZ"},"content":"            \"1. No additional parameter needed!\","},{"lineNumber":553,"author":{"gitId":"TomLBZ"},"content":"            \"2. If there is parameter, you should expect \\\"Invalid Command\\\" message.\""},{"lineNumber":554,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":555,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":556,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"snooze\\\" \u003e\u003e Delay reminder popup by 1 minute\""},{"lineNumber":557,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":558,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":559,"author":{"gitId":"TomLBZ"},"content":"     * The Take."},{"lineNumber":560,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":561,"author":{"gitId":"TomLBZ"},"content":"    TAKE("},{"lineNumber":562,"author":{"gitId":"TomLBZ"},"content":"        \"take\","},{"lineNumber":563,"author":{"gitId":"TomLBZ"},"content":"        \"Take module(s): Mark specified module(s) as taken.\","},{"lineNumber":564,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":565,"author":{"gitId":"TomLBZ"},"content":"            \"take [index(es) / module code(s) (for modules only)]\","},{"lineNumber":566,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":567,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":568,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index must be a positive integer referencing an existing item on the current list.\","},{"lineNumber":569,"author":{"gitId":"TomLBZ"},"content":"            \"2. Module code must be a legitimate NUS module.\","},{"lineNumber":570,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":571,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":572,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"take\\\" \u003e\u003e if there is any module selected but not taken, mark it as taken\","},{"lineNumber":573,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"take 1 2\\\" \u003e\u003e mark module 1 and module 2 as taken\","},{"lineNumber":574,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"take CS2113T\\\" \u003e\u003e mark module CS2113T as taken\","},{"lineNumber":575,"author":{"gitId":"TomLBZ"},"content":"            \"4. \\\"take 1 2 CS2113T\\\" \u003e\u003e mark module 1, module 2 and module CS2113T as taken\","},{"lineNumber":576,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":577,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":578,"author":{"gitId":"TomLBZ"},"content":"     * The Todo."},{"lineNumber":579,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":580,"author":{"gitId":"TomLBZ"},"content":"    TODO("},{"lineNumber":581,"author":{"gitId":"TomLBZ"},"content":"        \"todo\","},{"lineNumber":582,"author":{"gitId":"TomLBZ"},"content":"        \"Add a todo to the task list\","},{"lineNumber":583,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":584,"author":{"gitId":"TomLBZ"},"content":"            \"todo [description]\""},{"lineNumber":585,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":586,"author":{"gitId":"TomLBZ"},"content":"        new String[]{\"1. Todo description parameter here are compulsory.\",},"},{"lineNumber":587,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":588,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"todo class\\\" \u003e\u003e adds a todo with description \\\"class\\\"\""},{"lineNumber":589,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":590,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":591,"author":{"gitId":"TomLBZ"},"content":"     * The Undone."},{"lineNumber":592,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":593,"author":{"gitId":"TomLBZ"},"content":"    UNDONE("},{"lineNumber":594,"author":{"gitId":"TomLBZ"},"content":"        \"undone\","},{"lineNumber":595,"author":{"gitId":"TomLBZ"},"content":"        \"Mark a task as undone\","},{"lineNumber":596,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":597,"author":{"gitId":"TomLBZ"},"content":"            \"undone [index]\""},{"lineNumber":598,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":599,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":600,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index must be a positive integer referencing an existing item on the current list.\","},{"lineNumber":601,"author":{"gitId":"TomLBZ"},"content":"            \"2. If the index starts with a letter, it will be treated as \""},{"lineNumber":602,"author":{"gitId":"TomLBZ"},"content":"                + \"a number mapped A to 1 and Z to 26. For example:\","},{"lineNumber":603,"author":{"gitId":"TomLBZ"},"content":"            \"2.1. \\\"undone apple\\\" is equivalent to \\\"undone 1\\\" and \\\"undone C4\\\" is equivalent to \\\"undone 3\\\".\","},{"lineNumber":604,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":605,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":606,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"undone 1\\\" \u003e\u003e marks the task with index 1 as undone\""},{"lineNumber":607,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":608,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":609,"author":{"gitId":"TomLBZ"},"content":"     * The Unknown."},{"lineNumber":610,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":611,"author":{"gitId":"TomLBZ"},"content":"    UNKNOWN("},{"lineNumber":612,"author":{"gitId":"TomLBZ"},"content":"        \"unknown\","},{"lineNumber":613,"author":{"gitId":"TomLBZ"},"content":"        \"Prints the error message for an unrecognized command for debugging purposes\","},{"lineNumber":614,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":615,"author":{"gitId":"TomLBZ"},"content":"            \"unknown\""},{"lineNumber":616,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":617,"author":{"gitId":"TomLBZ"},"content":"        new String[]{\"1. This fucntion is only used to check if the program is working correctly.\",},"},{"lineNumber":618,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":619,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"unknown\\\" \u003e\u003e prints \\\"OOPS, I don\u0027t know what that means :-( Try \\\"help\\\"!\\\"\""},{"lineNumber":620,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":621,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":622,"author":{"gitId":"TomLBZ"},"content":"     * The Unsel."},{"lineNumber":623,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":624,"author":{"gitId":"TomLBZ"},"content":"    UNSEL("},{"lineNumber":625,"author":{"gitId":"TomLBZ"},"content":"        \"unsel\","},{"lineNumber":626,"author":{"gitId":"TomLBZ"},"content":"        \"Cancel selection: Make specified item(s) no longer selected.\","},{"lineNumber":627,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":628,"author":{"gitId":"TomLBZ"},"content":"            \"unsel [index(es) (for the currently listed items) / module code(s) (for modules only)]\","},{"lineNumber":629,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":630,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":631,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index must be a positive integer referencing an existing item.\","},{"lineNumber":632,"author":{"gitId":"TomLBZ"},"content":"            \"2. Item need to first be selected using \\\"sel\\\" for \\\"unsel\\\" to function properly.\","},{"lineNumber":633,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":634,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":635,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"unsel 1 2 3\\\" \u003e\u003e make items with indices 1, 2and 3 no longer selected\","},{"lineNumber":636,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"unsel CS1010 CS2113\\\" \u003e\u003e make modules CS1010 and CS2113 no longer selected\","},{"lineNumber":637,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"unsel 5 CS2113\\\" \u003e\u003e make the item with index 5 and module CS2113 no longer selected\""},{"lineNumber":638,"author":{"gitId":"TomLBZ"},"content":"        }),"},{"lineNumber":639,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":640,"author":{"gitId":"TomLBZ"},"content":"     * The Untake."},{"lineNumber":641,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":642,"author":{"gitId":"TomLBZ"},"content":"    UNTAKE("},{"lineNumber":643,"author":{"gitId":"TomLBZ"},"content":"        \"untake\","},{"lineNumber":644,"author":{"gitId":"TomLBZ"},"content":"        \"Untake module(s): Mark specified module(s) as not taken.\","},{"lineNumber":645,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":646,"author":{"gitId":"TomLBZ"},"content":"            \"untake [index(es) / module code(s) (for modules only)]\","},{"lineNumber":647,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":648,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":649,"author":{"gitId":"TomLBZ"},"content":"            \"1. Index must be a positive integer referencing an existing item.\","},{"lineNumber":650,"author":{"gitId":"TomLBZ"},"content":"            \"2. If modules that is not taken is input, module will still be marked as \\\"no longer taken\\\".\","},{"lineNumber":651,"author":{"gitId":"TomLBZ"},"content":"        },"},{"lineNumber":652,"author":{"gitId":"TomLBZ"},"content":"        new String[]{"},{"lineNumber":653,"author":{"gitId":"TomLBZ"},"content":"            \"1. \\\"untake\\\" \u003e\u003e if there is any module selected and taken, mark it as not taken\","},{"lineNumber":654,"author":{"gitId":"TomLBZ"},"content":"            \"2. \\\"untake 1 2\\\" \u003e\u003e mark module 1 and module 2 as not taken\","},{"lineNumber":655,"author":{"gitId":"TomLBZ"},"content":"            \"3. \\\"untake CS2113T\\\" \u003e\u003e mark module CS2113T as not taken\","},{"lineNumber":656,"author":{"gitId":"TomLBZ"},"content":"            \"4. \\\"untake 1 2 CS2113T\\\" \u003e\u003e mark module 1, module 2 and module CS2113T as not taken\""},{"lineNumber":657,"author":{"gitId":"TomLBZ"},"content":"        });"},{"lineNumber":658,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":659,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":660,"author":{"gitId":"TomLBZ"},"content":"     * The Name."},{"lineNumber":661,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":662,"author":{"gitId":"TomLBZ"},"content":"    public String name;"},{"lineNumber":663,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":664,"author":{"gitId":"TomLBZ"},"content":"     * The Description."},{"lineNumber":665,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":666,"author":{"gitId":"TomLBZ"},"content":"    public String description;"},{"lineNumber":667,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":668,"author":{"gitId":"TomLBZ"},"content":"     * The Syntax."},{"lineNumber":669,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":670,"author":{"gitId":"TomLBZ"},"content":"    public String[] syntax;"},{"lineNumber":671,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":672,"author":{"gitId":"TomLBZ"},"content":"     * The Notes. Includes pre-requisites, and errors expected in different cases. See add as an example."},{"lineNumber":673,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":674,"author":{"gitId":"TomLBZ"},"content":"    public String[] notes;"},{"lineNumber":675,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":676,"author":{"gitId":"TomLBZ"},"content":"     * The Usages."},{"lineNumber":677,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":678,"author":{"gitId":"TomLBZ"},"content":"    public String[] usages;"},{"lineNumber":679,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":680,"author":{"gitId":"TomLBZ"},"content":"    HelpText(String name, String description, String[] syntax, String[] notes, String[] usages) {"},{"lineNumber":681,"author":{"gitId":"TomLBZ"},"content":"        this.name \u003d name;"},{"lineNumber":682,"author":{"gitId":"TomLBZ"},"content":"        this.syntax \u003d syntax;"},{"lineNumber":683,"author":{"gitId":"TomLBZ"},"content":"        this.notes \u003d notes;"},{"lineNumber":684,"author":{"gitId":"TomLBZ"},"content":"        this.description \u003d description;"},{"lineNumber":685,"author":{"gitId":"TomLBZ"},"content":"        this.usages \u003d usages;"},{"lineNumber":686,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":687,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":688,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":689,"author":{"gitId":"TomLBZ"},"content":"     * Array to string string."},{"lineNumber":690,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":691,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":692,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":693,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":694,"author":{"gitId":"TomLBZ"},"content":"    public String arrayToString(String[] input) {"},{"lineNumber":695,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":696,"author":{"gitId":"TomLBZ"},"content":"        for (String string: input) {"},{"lineNumber":697,"author":{"gitId":"TomLBZ"},"content":"            stringBuilder.append(string).append(Constants.WIN_NEWLINE);"},{"lineNumber":698,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":699,"author":{"gitId":"TomLBZ"},"content":"        return stringBuilder.toString();"},{"lineNumber":700,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":701,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":702,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":703,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":704,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Name:\");"},{"lineNumber":705,"author":{"gitId":"TomLBZ"},"content":"        stringBuilder.append(Constants.SPACE).append(name).append(Constants.WIN_NEWLINE);"},{"lineNumber":706,"author":{"gitId":"TomLBZ"},"content":"        stringBuilder.append(\"Description:\").append(Constants.SPACE).append("},{"lineNumber":707,"author":{"gitId":"TomLBZ"},"content":"                description).append(Constants.WIN_NEWLINE);"},{"lineNumber":708,"author":{"gitId":"TomLBZ"},"content":"        stringBuilder.append(\"Syntax:\").append(Constants.WIN_NEWLINE).append(arrayToString(syntax));"},{"lineNumber":709,"author":{"gitId":"TomLBZ"},"content":"        stringBuilder.append(\"Notes:\").append(Constants.WIN_NEWLINE).append(arrayToString(notes));"},{"lineNumber":710,"author":{"gitId":"TomLBZ"},"content":"        stringBuilder.append(\"Usages:\").append(Constants.WIN_NEWLINE).append(arrayToString(usages));"},{"lineNumber":711,"author":{"gitId":"TomLBZ"},"content":"        return stringBuilder.toString();"},{"lineNumber":712,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":713,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":713}},{"path":"src/main/java/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package data;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Deadline;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Event;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.ToDo;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.DuplicateTaskException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageOptions;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDateTime;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.time.Period;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"import java.util.HashSet;"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Level;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Logger;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"import java.util.stream.Collectors;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":" * The type Task list."},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"public class Data {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Data.class.getName());"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public String flag;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     * The Tasks."},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cItem\u003e tasks;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * The default list of modules read in from finalcourselist.txt."},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cItem\u003e mods;"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     * Default period of recurrence is 7 days."},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    Period recurrence \u003d Period.ofDays(7);"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * The Index option."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"    public MessageOptions indexOption;"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cItem\u003e target;"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     * The Last input."},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    public String lastInput;"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     * The Last index option."},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    public MessageOptions lastIndexOption;"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Task list."},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    public Data() {"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        lastInput \u003d \"\";"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"        lastIndexOption \u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        indexOption \u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        target \u003d tasks;"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        mods \u003d new ArrayList\u003c\u003e();"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        flag \u003d Constants.TASK;"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    public void setFlag(String flag) {"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        this.flag \u003d flag;"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        target \u003d getTarget();"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cItem\u003e getTarget() {"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        return getTarget(flag);"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cItem\u003e getTarget(String flag) {"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"        refreshTarget(flag);"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"        return target;"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    public void refreshTarget() {"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        refreshTarget(flag);"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"    public void refreshTarget(String flag) {"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        switch (flag) {"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        case Constants.DEADLINE: // break is unreachable"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"            target \u003d tasks.stream().filter(x -\u003e x instanceof Deadline).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        case Constants.EVENT: // break is unreachable"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"            target \u003d tasks.stream().filter(x -\u003e x instanceof Event).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"        case Constants.TODO: // break is unreachable"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            target \u003d tasks.stream().filter(x -\u003e x instanceof ToDo).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        case Constants.MOD:"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"            target \u003d mods.stream().filter(x -\u003e x instanceof SingleModule)"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        case Constants.SU:"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"            target \u003d mods.stream().filter("},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"                x -\u003e ((SingleModule) x).hasSU).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        case Constants.SELECTED:"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"            target \u003d mods.stream().filter(x -\u003e x.isSelected).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"            target.addAll(tasks.stream().filter(x -\u003e x.isSelected).collect(Collectors.toList()));"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        case Constants.TAKEN:"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"            target \u003d mods.stream().filter("},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"                x -\u003e ((SingleModule) x).isTaken).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        case Constants.FOUND: // should not refresh target."},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        case Constants.COMPLETED:"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"            target \u003d mods.stream().filter("},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"                x -\u003e ((SingleModule) x).isCompleted).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        case Constants.CAP_DATA:"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"            target \u003d mods.stream().filter(x -\u003e ((SingleModule)x).isTaken)"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"                    .filter(x -\u003e ((SingleModule)x).isGraded()).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        default:"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"            target \u003d tasks.stream().filter(x -\u003e x instanceof Task).collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"    public void addTask(Task task) {"},{"lineNumber":130,"author":{"gitId":"scjx123"},"content":"        //@@author scjx123"},{"lineNumber":131,"author":{"gitId":"scjx123"},"content":"        if (task.isWeekly) {"},{"lineNumber":132,"author":{"gitId":"scjx123"},"content":"            LocalDateTime newDate \u003d checkRecurrenceDate(task);"},{"lineNumber":133,"author":{"gitId":"scjx123"},"content":"            if (newDate !\u003d null) {"},{"lineNumber":134,"author":{"gitId":"scjx123"},"content":"                task.setDateTime(newDate);"},{"lineNumber":135,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"scjx123"},"content":"        //@@author"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"        if (tasks.contains(task)) {"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"            if (task instanceof ToDo) {"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"                LOGGER.log(Level.INFO, \"Duplicate found! Nudged the description of the task.\");"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"                task.description +\u003d Constants.LINE_UNIT;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"                if (task.dateTime !\u003d null) {"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"                    LOGGER.log(Level.INFO, \"Duplicate found! Nudged the dateTime of the task.\");"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"                    task.setDateTime(task.dateTime.plusSeconds(1));"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"                    LOGGER.log(Level.INFO, \"Duplicate found! Nudged the description of the task.\");"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"                    task.description +\u003d Constants.LINE_UNIT;"},{"lineNumber":149,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":150,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"            addTask(task);"},{"lineNumber":152,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"            tasks.add(task);"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"            refreshTarget();"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"    public void removeItem(Item item) {"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"        target.remove(item);"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"        if (item instanceof Task) { //modules are not removable from mods list."},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"            tasks.remove(item);"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"        refreshTarget();"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"    public void removeItem(int index) {"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"        Item currentItem \u003d target.get(index);"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"        removeItem(currentItem);"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"    public void updateItem(int index, Item newItem) {"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"        if (index \u003c 0 || index \u003e\u003d target.size()) {"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"        Item currentItem \u003d target.get(index);"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"        target.set(target.indexOf(currentItem), newItem);"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"        if (currentItem instanceof SingleModule) {"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"            if (mods.contains(currentItem)) {"},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"                mods.set(mods.indexOf(currentItem), newItem);"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"            if (tasks.contains(currentItem)) {"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"                tasks.set(tasks.indexOf(currentItem), newItem);"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"        refreshTarget();"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"    public void updateItem(Item oldItem, Item newItem) {"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"        if (target.contains(oldItem)) {"},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"            target.set(target.indexOf(oldItem), newItem);"},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"        if (oldItem instanceof SingleModule) {"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"            if (mods.contains(oldItem)) {"},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"                mods.set(mods.indexOf(oldItem), newItem);"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"            if (tasks.contains(oldItem)) {"},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"                tasks.set(tasks.indexOf(oldItem), newItem);"},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"        refreshTarget();"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"     * Get task."},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"     * @param index the index"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"     * @return the task"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"    public Item get(int index) throws Exception {"},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"        if (index \u003c 0 || index \u003e\u003d target.size()) {"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"            throw new Exception(Constants.INDEX_OUT);"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"        return target.get(index);"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":218,"author":{"gitId":"scjx123"},"content":"    //@@author scjx123"},{"lineNumber":219,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":220,"author":{"gitId":"scjx123"},"content":"     * Check if today is the day for the tasks if yes, it will \u0027update\u0027 the"},{"lineNumber":221,"author":{"gitId":"scjx123"},"content":"     * assignment with a new deadline."},{"lineNumber":222,"author":{"gitId":"scjx123"},"content":"     *"},{"lineNumber":223,"author":{"gitId":"scjx123"},"content":"     * @return true if today is the date of the assignment."},{"lineNumber":224,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"scjx123"},"content":"    public LocalDateTime checkRecurrenceDate(Task task) {"},{"lineNumber":226,"author":{"gitId":"scjx123"},"content":"        LocalDateTime newDate \u003d null;"},{"lineNumber":227,"author":{"gitId":"scjx123"},"content":"        if (task.isWeekly) {"},{"lineNumber":228,"author":{"gitId":"scjx123"},"content":"            //assuming 7 days recurrence"},{"lineNumber":229,"author":{"gitId":"scjx123"},"content":"            LocalDateTime todayDate \u003d LocalDateTime.now();"},{"lineNumber":230,"author":{"gitId":"scjx123"},"content":"            LocalDateTime endDate \u003d task.getDateTime();"},{"lineNumber":231,"author":{"gitId":"scjx123"},"content":"            if (todayDate.isAfter(endDate)) {"},{"lineNumber":232,"author":{"gitId":"scjx123"},"content":"                newDate \u003d endDate.plus(recurrence);"},{"lineNumber":233,"author":{"gitId":"scjx123"},"content":"                assert newDate !\u003d null;"},{"lineNumber":234,"author":{"gitId":"scjx123"},"content":"                assert newDate.isAfter(endDate) : \"Updated date should be later than previous date\";"},{"lineNumber":235,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":236,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"scjx123"},"content":"        return newDate;"},{"lineNumber":238,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":240,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":241,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"TomLBZ":206,"scjx123":35}},{"path":"src/main/java/data/DataDummy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":"import io.ModuleParser;"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import io.Storage;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import messages.MessageOptions;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"public class DataDummy extends Data {"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"    ModuleParser moduleloader \u003d new ModuleParser();"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":"    public DataDummy() {"},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"        lastInput \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"        lastIndexOption \u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"            mods \u003d moduleloader.load();"},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"        } catch (IOException e) {"},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"        flag \u003d Constants.TASK;"},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":27}},{"path":"src/main/java/data/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package data;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Deadline;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Event;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.ToDo;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import exceptions.CommandException;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.text.DateFormat;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.time.DayOfWeek;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDate;"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDateTime;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalTime;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":" * The type Item."},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"public class Item {"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     * Item description."},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    protected String description;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    public String immediateData;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * The Is dated."},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    public boolean isDated \u003d false;"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     * The Is Weekly."},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    public boolean isWeekly \u003d false;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * The Is Weekly."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"    public static boolean WeeklyFlag \u003d false;"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     * Item Date time."},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    public boolean isSelected \u003d false;"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Item."},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     * @param description the description"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    public Item(String description) {"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        this.description \u003d description;"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"    public String getStringFromDateTime(LocalDateTime dateTime) {"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-mm-dd hh:mm:ss\");"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        return dateFormat.format(dateTime);"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"     * Gets name."},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     * @return the name"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"    public String getName() {"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        return description;"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"    private static ArrayList\u003cString\u003e getPatterns(boolean isDateOnly) {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cString\u003e patterns \u003d new ArrayList\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"        if (isDateOnly) {"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"            for (String datePattern : Constants.DATE_PATTERNS) {"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"                patterns.add(datePattern);"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"                patterns.add(datePattern.replace(Constants.PARAM_ALIAS, Constants.PARAM));"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"                patterns.add(datePattern.replace(Constants.PARAM_ALIAS, Constants.CHAR_SPACE));"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                patterns.add(datePattern.replace(Constants.PARAM_ALIAS, Constants.CHAR_DOT));"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"            for (String datePattern : Constants.DATE_PATTERNS) {"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"                for (String timePattern : Constants.TIME_PATTERNS) {"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"                    String concat \u003d datePattern + Constants.SPACE + timePattern;"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"                    patterns.add(concat);"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"                    patterns.add(concat.replace(Constants.PARAM_ALIAS, Constants.PARAM));"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"                    patterns.add(concat.replace(Constants.PARAM_ALIAS, Constants.CHAR_SPACE));"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                    patterns.add(datePattern.replace(Constants.PARAM_ALIAS, Constants.CHAR_DOT));"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        return patterns;"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"     * Parse date time local date time."},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"     * @param input date time in string"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"     * @return the local date time"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"    public static LocalDateTime parseDateTime(String input) {"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        if (input.contains(\"Weekly\")) {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            WeeklyFlag \u003d true;"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"            input \u003d input.replace(\"Weekly\",\"\");"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        LocalDateTime dateTime \u003d null;"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cString\u003e patterns \u003d getPatterns(false);"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        for (String pattern : patterns) {"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            if (dateTime \u003d\u003d null) {"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"                try {"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"                    dateTime \u003d LocalDateTime.parse(input.trim(), DateTimeFormatter.ofPattern(pattern));"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"                } catch (Exception e) {"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"                    e.addSuppressed(new CommandException()); // do nothing basically."},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        if (dateTime \u003d\u003d null) {"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"            patterns \u003d getPatterns(true);"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"            for (String datePattern : patterns) {"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"                if (dateTime \u003d\u003d null) {"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"                    try {"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"                        dateTime \u003d LocalDate.parse(input.trim(),"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"                                DateTimeFormatter.ofPattern(datePattern)).atStartOfDay();"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"                    } catch (Exception e) {"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"                        e.addSuppressed(new CommandException()); // do nothing basically."},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"                    break;"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"        return dateTime;"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"     * Gets date."},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"     * @return the date"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"    public LocalDate getDate() {"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"        if (dateTime \u003d\u003d null) {"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"            return null;"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"            return dateTime.toLocalDate();"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"     * Gets date time."},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"     * @param date the date"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"    protected void setDateTime(String date) {"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"        dateTime \u003d parseDateTime(date);"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"        isDated \u003d dateTime !\u003d null;"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"        isWeekly \u003d WeeklyFlag;"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"        WeeklyFlag \u003d false;"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"     * Sets date time using LocalDatetime."},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"     * @param date the date"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"    protected void setDateTime(LocalDateTime date) {"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"        updateDateTime(date);"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"        //isWeekly \u003d true;"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"     * Gets time."},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"     * @return the time"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"    public LocalTime getTime() {"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"        if (dateTime \u003d\u003d null) {"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"            return null;"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"            return dateTime.toLocalTime();"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"     * Gets date time."},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"     * @return the date time"},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"        return dateTime;"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"    public void updateDateTime(LocalDateTime localDateTime) {"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"        dateTime \u003d localDateTime;"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"        isDated \u003d dateTime !\u003d null;"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"     * Gets date time string."},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"     * @param input date time input"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"     * @return the date time string"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"    protected String getDateTimeString(String input) {"},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"        String result;"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"        DateTimeFormatter datePattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"        if (dateTime \u003d\u003d null) {"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"            result \u003d input;"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"            String date \u003d getDate().format(datePattern);"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"            String time \u003d getTime().toString();"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"            result \u003d date + Constants.SPACE + time;"},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"        return result;"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"    public String getDetails() {"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"        return toString().concat(isSelected ? \" Selected\" : \"\");"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"    public DayOfWeek getDay() {"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"        LocalDateTime theDate \u003d getDateTime();"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"        return theDate.getDayOfWeek();"},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":233,"author":{"gitId":"johanesrafael"},"content":"    //@@author johanesrafael"},{"lineNumber":234,"author":{"gitId":"johanesrafael"},"content":"    /**"},{"lineNumber":235,"author":{"gitId":"johanesrafael"},"content":"     * Re-set date time."},{"lineNumber":236,"author":{"gitId":"johanesrafael"},"content":"     * @param opt option input"},{"lineNumber":237,"author":{"gitId":"johanesrafael"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"johanesrafael"},"content":"    public void resetDateTime(String opt) throws Exception {"},{"lineNumber":239,"author":{"gitId":"johanesrafael"},"content":"        if (dateTime \u003d\u003d null) {"},{"lineNumber":240,"author":{"gitId":"johanesrafael"},"content":"            throw new Exception(Constants.CANNOT_MODIFY_CUSTOM_DATE);"},{"lineNumber":241,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"johanesrafael"},"content":"        switch (opt) {"},{"lineNumber":243,"author":{"gitId":"johanesrafael"},"content":"        case \"d\":"},{"lineNumber":244,"author":{"gitId":"johanesrafael"},"content":"            dateTime \u003d dateTime.plusDays(1);"},{"lineNumber":245,"author":{"gitId":"johanesrafael"},"content":"            break;"},{"lineNumber":246,"author":{"gitId":"johanesrafael"},"content":"        case \"h\":"},{"lineNumber":247,"author":{"gitId":"johanesrafael"},"content":"            dateTime \u003d dateTime.plusHours(1);"},{"lineNumber":248,"author":{"gitId":"johanesrafael"},"content":"            break;"},{"lineNumber":249,"author":{"gitId":"johanesrafael"},"content":"        case \"w\":"},{"lineNumber":250,"author":{"gitId":"johanesrafael"},"content":"            dateTime \u003d dateTime.plusWeeks(1);"},{"lineNumber":251,"author":{"gitId":"johanesrafael"},"content":"            break;"},{"lineNumber":252,"author":{"gitId":"johanesrafael"},"content":"        case \"m\":"},{"lineNumber":253,"author":{"gitId":"johanesrafael"},"content":"            dateTime \u003d dateTime.plusMonths(1);"},{"lineNumber":254,"author":{"gitId":"johanesrafael"},"content":"            break;"},{"lineNumber":255,"author":{"gitId":"johanesrafael"},"content":"        case \"y\":"},{"lineNumber":256,"author":{"gitId":"johanesrafael"},"content":"            dateTime \u003d dateTime.plusYears(1);"},{"lineNumber":257,"author":{"gitId":"johanesrafael"},"content":"            break;"},{"lineNumber":258,"author":{"gitId":"johanesrafael"},"content":"        default:"},{"lineNumber":259,"author":{"gitId":"johanesrafael"},"content":"            throw new CommandException();"},{"lineNumber":260,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"johanesrafael"},"content":"    //@@author"},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"    public boolean equals(Object o) {"},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"            return true;"},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":"        if (!(o instanceof Item)) {"},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":"        Item item \u003d (Item)o;"},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"        return item.getDetails().equals(getDetails());"},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"johanesrafael":30,"TomLBZ":244,"-":1}},{"path":"src/main/java/data/SingleModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package data;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" * The type Single module."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class SingleModule extends Item {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * The Module code."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public String moduleCode;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     * The Module mc."},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String moduleMC;"},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"     * The Module mc."},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"    public String moduleSU;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     * The Module name."},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public String moduleName;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * The Module description."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String moduleDescription;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     * The Module prerequisite."},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String modulePrerequisite;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cItem\u003e taskList;"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    public boolean isTaken \u003d false;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"    public boolean isCompleted \u003d false;"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"    public boolean hasSU \u003d false;"},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"    public String grade;"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Single module."},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"adinata15"},"content":"     * @param code        module code"},{"lineNumber":53,"author":{"gitId":"adinata15"},"content":"     * @param name        module name"},{"lineNumber":54,"author":{"gitId":"adinata15"},"content":"     * @param description module description"},{"lineNumber":55,"author":{"gitId":"adinata15"},"content":"     * @param mc          number of mc"},{"lineNumber":56,"author":{"gitId":"adinata15"},"content":"     * @param prereq      module prerequisite"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"    public SingleModule(String code, String name, String description, String mc, String prereq, String su) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(code); //moduleDescription is handle here."},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"        this.moduleCode \u003d replaceBlanks(code);"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        this.moduleDescription \u003d replaceBlanks(description);"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        this.moduleName \u003d replaceBlanks(name);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        this.moduleMC \u003d replaceBlanks(mc);"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        this.modulePrerequisite \u003d replaceBlanks(prereq);"},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":"        this.moduleSU \u003d replaceBlanks(su);"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"    public String replaceBlanks(String input) {"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        if (input !\u003d null) {"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"            return input.replace(Constants.TAB, Constants.SPACE).replace(Constants.NEWLINE, Constants.SPACE)"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"                    .replace(Constants.RETURN, Constants.SPACE).replace(\"  \", Constants.SPACE).trim();"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"            return null;"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String getName() {"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        return (isCompleted ? Constants.COMPLETED_LABEL : Constants.ZERO_LENGTH_STRING) + moduleCode;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":84,"author":{"gitId":"scjx123"},"content":"    @Override"},{"lineNumber":85,"author":{"gitId":"scjx123"},"content":"    public String toString() {"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        return getName() + Constants.SPACE + moduleName + Constants.SPACE"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"                + moduleMC + (isTaken ? \"MC Taken\" : \"MC\") + (isSelected ? \" Selected\" : \"\");"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"    public boolean complete() {"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        if (isCompleted || !isTaken) {"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"        for (String grade : Constants.VALID_GRADES) {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            if (grade.equals(this.grade.toUpperCase())) {"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"                isCompleted \u003d true;"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"                isTaken \u003d false;"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        return isCompleted;"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"    public String getDetails() {"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder(toString());"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        builder.append(Constants.WIN_NEWLINE).append(removeBlanks(moduleDescription.trim()))"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"                .append(Constants.WIN_NEWLINE).append(\"Tasks: \").append(Constants.WIN_NEWLINE);"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        if (taskList !\u003d null \u0026\u0026 taskList.size() \u003e 0) {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : taskList) {"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"                builder.append((item).getDetails()).append(Constants.WIN_NEWLINE);"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            builder.append(Constants.NOT_FOUND);"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"        return builder.toString();"},{"lineNumber":117,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"    private String removeBlanks(String input) {"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"        input \u003d input.replace(Constants.TAB, Constants.SPACE).replace(Constants.WIN_NEWLINE, Constants.SPACE)"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"                .replace(Constants.NEWLINE, Constants.SPACE);"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        return input.replace(Constants.SPACE.repeat(2), Constants.SPACE);"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"     * Gets module mc."},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"     * @return the module mc"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String getModuleMC() {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return moduleMC;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"scjx123"},"content":"     * Gets module mc."},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"scjx123"},"content":"     * @return the module mc"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"scjx123"},"content":"    public ArrayList\u003cItem\u003e getTaskList() {"},{"lineNumber":141,"author":{"gitId":"scjx123"},"content":"        return taskList;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"    public boolean isGraded() {"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        if (grade \u003d\u003d null) {"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"            for (String g : Constants.VALID_GRADES) {"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"                if (g.equals(grade)) {"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"                    return true;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"        return false;"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TomLBZ":104,"-":23,"scjx123":23,"adinata15":7}},{"path":"src/main/java/data/jobs/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package data.jobs;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":" * The type Deadline."},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Deadline."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * @param description deadline description"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     * @param by          deadline due time"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        this.timeString \u003d by;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        setDateTime(by);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        String byTime \u003d getDateTimeString(timeString);"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        if (isWeekly) {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            return Constants.DDL_ICON + super.toString() + \" (by: \" + byTime + \")\" + \" Weekly\";"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            return Constants.DDL_ICON + super.toString() + \" (by: \" + byTime + \")\";"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":34}},{"path":"src/main/java/data/jobs/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package data.jobs;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":" * The type Event."},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Event."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * @param description the description"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     * @param at          the at"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    public Event(String description, String at) {"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        timeString \u003d at;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        setDateTime(at);"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        String atTime \u003d getDateTimeString(timeString);"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        if (isWeekly) {"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"            return Constants.EVENT_ICON + super.toString() + \" (at: \" + atTime + \")\" + \" Weekly\";"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            return Constants.EVENT_ICON + super.toString() + \" (at: \" + atTime + \")\";"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":33}},{"path":"src/main/java/data/jobs/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package data.jobs;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import java.time.ZoneOffset;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * The type Task."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"public class Task extends Item {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * The Is done."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    protected boolean isDone;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    protected String timeString;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Task."},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * @param description the description"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public Task(String description) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        super(description);"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        this.isDone \u003d false;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        this.description \u003d description;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        dateTime \u003d null;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        isDated \u003d false;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"        isWeekly \u003d false;"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    public void setTimeString(String input) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        timeString \u003d input;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * Gets description of the task."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * @return description"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    public String getDescription() {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        return description;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    public void setDescription(String description) {"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        this.description \u003d description;"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"     * Get status icon string."},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"    public String getStatusIcon() {"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"        return (isDone ? Constants.TICK : Constants.CROSS);"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    public String getDateTimeString() {"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        if (isDated) {"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            String result;"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"            DateTimeFormatter datePattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"            if (dateTime \u003d\u003d null) {"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"                result \u003d null;"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"                String date \u003d getDate().format(datePattern);"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"                String time \u003d getTime().toString();"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"                result \u003d date + Constants.SPACE + time;"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"            return result;"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"            return null;"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"    public boolean getIsDone() {"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        return isDone;"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"     * Mark as done."},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"    public void markAsDone() {"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"        isDone \u003d true;"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"     * Mark as undone."},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    public void markAsUndone() {"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        isDone \u003d false;"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":102}},{"path":"src/main/java/data/jobs/ToDo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package data.jobs;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":" * The type To do."},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"public class ToDo extends Task {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new To do."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * @param description the description"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    public ToDo(String description) {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        return Constants.TODO_ICON + super.toString();"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":25}},{"path":"src/main/java/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":" * The type Command exception."},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"public class CommandException extends Exception {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"        return Constants.INVALID;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":15}},{"path":"src/main/java/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"public class DuplicateTaskException extends Exception {"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"        return Constants.DUPLICATED_TASK;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"scjx123":10}},{"path":"src/main/java/exceptions/GradeNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"public class GradeNotSpecifiedException extends CommandException {"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"        return Constants.GRADE_NOT_SPEC;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":10}},{"path":"src/main/java/exceptions/GradeUnidentifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"public class GradeUnidentifiedException extends CommandException {"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"        return Constants.GRADE_NOT_FOUND;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":10}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Invalid command exception."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class InvalidCommandException extends CommandException {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":9}},{"path":"src/main/java/exceptions/InvalidListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"public class InvalidListException extends CommandException {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"        return Constants.INVALID_LIST;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":12}},{"path":"src/main/java/exceptions/ItemNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"public class ItemNotSpecifiedException extends CommandException {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"        return Constants.ITEM_NOT_SPEC;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":12}},{"path":"src/main/java/exceptions/MissingDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"public class MissingDescriptionException extends CommandException {"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"        return Constants.NO_DESCRIPTION;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":10}},{"path":"src/main/java/exceptions/ModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":" * The type Module exception."},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":" */"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"public class ModuleException extends Exception {"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"TomLBZ":1,"adinata15":7}},{"path":"src/main/java/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":" * The type Invalid command exception."},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":" */"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"public class ModuleNotFoundException extends ModuleException {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"        return Constants.MOD_NOT_FOUND;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"TomLBZ":6,"adinata15":7}},{"path":"src/main/java/exceptions/TaskNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"public class TaskNotSpecifiedException extends CommandException {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"        return Constants.TASK_NOT_SPEC;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":12}},{"path":"src/main/java/exceptions/TooManyArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"public class TooManyArgumentsException extends CommandException {"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"        return Constants.TOO_MANY_ARGS;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":10}},{"path":"src/main/java/exceptions/TypeMismatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"public class TypeMismatchException extends CommandException {"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"        return Constants.TYPE_MISMATCH;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":10}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package exceptions;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Unknown command exception."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class UnknownCommandException extends CommandException {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":9}},{"path":"src/main/java/io/FileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package io;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" * The type File loader."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"public class FileLoader extends IO {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new File loader."},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * @param path     the path"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     * @param fileName the file name"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    public FileLoader(String path, String fileName) {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        super(path, fileName);"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * Load all lines string [ ]."},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     * @return the string [ ]"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    public String[] loadAllLines() {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            if (isFileInvalid()) {"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"                throw new IOException();"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            String[] lines \u003d new String[0];"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"            lines \u003d Files.readAllLines("},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"                    Paths.get(path + \"/\" + fileName), StandardCharsets.UTF_8).toArray(lines);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"            return lines;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            return null;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":44}},{"path":"src/main/java/io/FileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package io;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.jobs.Task;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import java.io.Console;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.nio.file.Files;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":" * The type File saver."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"public class FileSaver extends IO {"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new File saver."},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     * @param path     the path"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * @param fileName the file name"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public FileSaver(String path, String fileName) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        super(path, fileName);"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * Save tasks to storage."},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     * @param tasks the tasks"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    public boolean saveTask(ArrayList\u003cItem\u003e tasks) {"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder strBuilder \u003d new StringBuilder();"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            for (Item item: tasks) {"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"                Task task \u003d (Task)item;"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"                strBuilder.append(task.toString()).append(System.lineSeparator());"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"            if (isFileInvalid()) {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                throw new IOException();"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            Files.writeString("},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"                    Paths.get(path + \"/\" + fileName),"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"                    strBuilder.toString(), StandardCharsets.UTF_8);"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"            return true;"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"     * Save boolean."},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"     * @param string the string"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    public boolean saveTask(String string) {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"            Files.writeString(Paths.get(path + \"/\" + fileName),"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                string, StandardCharsets.UTF_8);"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"     * Save tasks to storage."},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     * @param courses the tasks"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    public boolean saveCourse(ArrayList\u003cItem\u003e courses) {"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder strBuilder \u003d new StringBuilder();"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            for (Item item: courses) {"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                SingleModule module \u003d (SingleModule) item;"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"                strBuilder.append(module.getName()).append(Constants.SPACE).append(module.grade)"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"                        .append(Constants.SPACE).append(getTaskListString((SingleModule)item))"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"                        .append(System.lineSeparator());"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            if (isFileInvalid()) {"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"                throw new IOException();"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            Files.writeString("},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                Paths.get(path + \"/\" + fileName),"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                strBuilder.toString(), StandardCharsets.UTF_8);"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            return true;"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"    private String getTaskListString(SingleModule mod) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        if (mod.taskList \u003d\u003d null || mod.taskList.size() \u003d\u003d 0) {"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"            return Constants.ZERO_LENGTH_STRING;"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        for (Item item : mod.taskList) {"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"            builder.append(item.toString().replace(Constants.SPACE, Constants.LINE_UNIT)).append(Constants.SPACE);"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        return builder.toString().trim().replace(Constants.SPACE, Constants.COMMA);"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":110}},{"path":"src/main/java/io/IO.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package io;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" * The type Io."},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"public class IO {"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     * The Path."},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    protected String path;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * The File name."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    protected String fileName;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Io."},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     * @param path     the path"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * @param fileName the file name"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public IO(String path, String fileName) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        this.path \u003d path;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * Is file invalid boolean."},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     * @return the boolean"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     * @throws IOException the io exception"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    protected boolean isFileInvalid()"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            throws IOException {"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        boolean isValidated \u003d true;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        File path \u003d new File(this.path);"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"        if (!path.exists() || !path.isDirectory()) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"            isValidated \u003d path.mkdirs();"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        File file \u003d new File(this.path + \"/\" + this.fileName);"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        if (!file.exists() || !file.isFile()) {"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"            isValidated \u003d isValidated \u0026\u0026 file.createNewFile();"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        return !isValidated;"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":53}},{"path":"src/main/java/io/ModuleParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"//@@author scjx123"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package io;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import java.io.InputStream;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import java.lang.module.ModuleDescriptor;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":"import java.util.StringTokenizer;"},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"import java.util.regex.Pattern;"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":"import data.Item;"},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"import data.SingleModule;"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"import javax.swing.event.ListDataEvent;"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"public class ModuleParser {"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"     * The Module name."},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":"    static String moduleName;"},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"     * The Module code."},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"    static String moduleCode;"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":"     * The Module description."},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":"    static String moduleDescription;"},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"     * The Module mc."},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"    static String moduleMC;"},{"lineNumber":39,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":"     * The Module SU."},{"lineNumber":41,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"    static String moduleSU;"},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"     * The Module prerequisite."},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":"    static String modulePrerequisite;"},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"     * The St."},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":"    static StringTokenizer st;"},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"     * The Temp string."},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":"    static String tempString;"},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"    private String[] input;"},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"     * Constructor of ModuleParser."},{"lineNumber":59,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":"    public ModuleParser() {"},{"lineNumber":61,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":62,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":"     * New modules are being created here."},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"     * Master list of modules are being created here."},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":"     * New modules are being added here to the masterList."},{"lineNumber":68,"author":{"gitId":"scjx123"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":"    public ArrayList\u003cItem\u003e load() throws IOException {"},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":"        InputStream is \u003d getClass().getResourceAsStream(\"finalcourselist.txt\");"},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":"        ArrayList\u003cItem\u003e masterList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":"        Scanner s \u003d new Scanner(is);"},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":"        while (s.hasNext()) {"},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"            tempString \u003d s.nextLine();"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"            parseFile(tempString);"},{"lineNumber":77,"author":{"gitId":"scjx123"},"content":"            SingleModule m \u003d new SingleModule(moduleCode, moduleName, moduleDescription,"},{"lineNumber":78,"author":{"gitId":"scjx123"},"content":"                    moduleMC, modulePrerequisite, moduleSU);"},{"lineNumber":79,"author":{"gitId":"scjx123"},"content":"            if (moduleCode !\u003d null) {"},{"lineNumber":80,"author":{"gitId":"scjx123"},"content":"                if (moduleSU.equals(\"true\")) {"},{"lineNumber":81,"author":{"gitId":"scjx123"},"content":"                    m.hasSU \u003d true;"},{"lineNumber":82,"author":{"gitId":"scjx123"},"content":"                } else {"},{"lineNumber":83,"author":{"gitId":"scjx123"},"content":"                    m.hasSU \u003d false;"},{"lineNumber":84,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"scjx123"},"content":"                masterList.add(m);"},{"lineNumber":86,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"scjx123"},"content":"            moduleCode \u003d null;"},{"lineNumber":88,"author":{"gitId":"scjx123"},"content":"            moduleSU \u003d \"false\";"},{"lineNumber":89,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"scjx123"},"content":"        return masterList;"},{"lineNumber":91,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":93,"author":{"gitId":"scjx123"},"content":"    private boolean checkValidInput(String input, String useCase) {"},{"lineNumber":94,"author":{"gitId":"scjx123"},"content":"        if (useCase.equals(\"code\")) {"},{"lineNumber":95,"author":{"gitId":"scjx123"},"content":"            if (input.length() \u003e\u003d 9"},{"lineNumber":96,"author":{"gitId":"scjx123"},"content":"                    || input.length() \u003c 5"},{"lineNumber":97,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\" \")"},{"lineNumber":98,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\":\")) {"},{"lineNumber":99,"author":{"gitId":"scjx123"},"content":"                return false;"},{"lineNumber":100,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"scjx123"},"content":"        if (useCase.equals(\"mc\")) {"},{"lineNumber":103,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":104,"author":{"gitId":"scjx123"},"content":"            return false;"},{"lineNumber":105,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"scjx123"},"content":"        if (useCase.equals(\"name\")) {"},{"lineNumber":107,"author":{"gitId":"scjx123"},"content":"            if (input.contains(\",\")"},{"lineNumber":108,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\"\\\"\")"},{"lineNumber":109,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\"/\")"},{"lineNumber":110,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\".\")"},{"lineNumber":111,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\"(\")"},{"lineNumber":112,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\"?\")"},{"lineNumber":113,"author":{"gitId":"scjx123"},"content":"                    || input.contains(\"\u0027\")) {"},{"lineNumber":114,"author":{"gitId":"scjx123"},"content":"                return true;"},{"lineNumber":115,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"scjx123"},"content":"        if (!input.contains(\".\")"},{"lineNumber":118,"author":{"gitId":"scjx123"},"content":"                \u0026\u0026 !input.contains(\"(\")"},{"lineNumber":119,"author":{"gitId":"scjx123"},"content":"                \u0026\u0026 !input.contains(\"\\\"\")"},{"lineNumber":120,"author":{"gitId":"scjx123"},"content":"                \u0026\u0026 !input.contains(\"OR\")"},{"lineNumber":121,"author":{"gitId":"scjx123"},"content":"                \u0026\u0026 !input.contains(\"?\")) {"},{"lineNumber":122,"author":{"gitId":"scjx123"},"content":"            return true;"},{"lineNumber":123,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"scjx123"},"content":"            return false;"},{"lineNumber":125,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":128,"author":{"gitId":"scjx123"},"content":"    private void parseFile(String tempString) {"},{"lineNumber":129,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":130,"author":{"gitId":"scjx123"},"content":"        if (tempString !\u003d null) {"},{"lineNumber":131,"author":{"gitId":"scjx123"},"content":"            input \u003d tempString.split(\"\\t\");"},{"lineNumber":132,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":134,"author":{"gitId":"scjx123"},"content":"        if (input.length \u003e\u003d 1) {"},{"lineNumber":135,"author":{"gitId":"scjx123"},"content":"            for (int i \u003d 0; i \u003c input.length; i++) {"},{"lineNumber":136,"author":{"gitId":"scjx123"},"content":"                if (input[i].matches(\"[0-9]+\")) {"},{"lineNumber":137,"author":{"gitId":"scjx123"},"content":"                    moduleMC \u003d input[i];"},{"lineNumber":138,"author":{"gitId":"scjx123"},"content":"                    moduleDescription \u003d input[i - 1];"},{"lineNumber":139,"author":{"gitId":"scjx123"},"content":"                    if (i + 3 \u003c\u003d input.length) {"},{"lineNumber":140,"author":{"gitId":"scjx123"},"content":"                        modulePrerequisite \u003d input[i + 2];"},{"lineNumber":141,"author":{"gitId":"scjx123"},"content":"                    }"},{"lineNumber":142,"author":{"gitId":"scjx123"},"content":"                    if (i + 1 !\u003d input.length \u0026\u0026 input[i + 1].equals(\"TRUE\")) {"},{"lineNumber":143,"author":{"gitId":"scjx123"},"content":"                        moduleSU \u003d \"true\";"},{"lineNumber":144,"author":{"gitId":"scjx123"},"content":"                    }"},{"lineNumber":145,"author":{"gitId":"scjx123"},"content":"                }"},{"lineNumber":146,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":149,"author":{"gitId":"scjx123"},"content":"        if (checkValidInput(input[0], \"code\")) {"},{"lineNumber":150,"author":{"gitId":"scjx123"},"content":"            moduleCode \u003d input[0];"},{"lineNumber":151,"author":{"gitId":"scjx123"},"content":"            if (input.length \u003e 1 \u0026\u0026 checkValidInput(input[1], \"name\")) {"},{"lineNumber":152,"author":{"gitId":"scjx123"},"content":"                moduleName \u003d input[1];"},{"lineNumber":153,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"scjx123"},"content":"}"},{"lineNumber":157,"author":{"gitId":"scjx123"},"content":"//@@author"}],"authorContributionMap":{"scjx123":157}},{"path":"src/main/java/io/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package io;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.Command;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import lexical.Parser;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.util.stream.Collectors;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":" * The type Storage."},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    private final FileLoader taskLoader;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    private final FileSaver taskSaver;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    private final FileLoader courseLoader;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    private final FileSaver courseSaver;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    private final Parser parser;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    private final ModuleParser moduleLoader;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Storage."},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * @param directory    the directory"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     * @param taskFileName the file name"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * @param parser       the parser"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    public Storage(String directory, String taskFileName, String courseFileName, Parser parser) {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        taskLoader \u003d new FileLoader(directory, taskFileName);"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        taskSaver \u003d new FileSaver(directory, taskFileName);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        courseLoader \u003d new FileLoader(directory, courseFileName);"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"        courseSaver \u003d new FileSaver(directory, courseFileName);"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"        this.parser \u003d parser;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"        this.moduleLoader \u003d new ModuleParser();"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     * Save user\u0027s data."},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     * @param tasks user\u0027s tasks"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    public void save(ArrayList\u003cItem\u003e tasks, ArrayList\u003cItem\u003e courses) {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cItem\u003e takenCourses \u003d (ArrayList\u003cItem\u003e) courses.stream()"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"            .filter(course -\u003e (course instanceof SingleModule)"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"                    \u0026\u0026 (((SingleModule) course).isTaken || ((SingleModule) course).isCompleted))"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"            .collect(Collectors.toList());"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        taskSaver.saveTask(tasks);"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        courseSaver.saveCourse(takenCourses);"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"     * Load all storage data."},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"     * @return the task list"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    public Data load() {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        String[] lines \u003d taskLoader.loadAllLines();"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d 0;"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"        Data list \u003d new Data();"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        //load stored tasks"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        for (String line : lines) {"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            String output \u003d taskDataToCommand(line, index);"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"            if (!output.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"                index++;"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"                ArrayList\u003cCommand\u003e commands \u003d parser.parse(output);"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"                for (Command c : commands) {"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"                    c.execute(list);"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        //load module list"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"            list.mods \u003d moduleLoader.load();"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        } catch (IOException e) {"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"            e.addSuppressed(new IOException());"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        //load stored courses"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"        String[] coursesWithGrades \u003d courseLoader.loadAllLines();"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"        for (String dataInput : coursesWithGrades) {"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"            String output \u003d courseDataToCommand(dataInput);"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            if (!output.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                ArrayList\u003cCommand\u003e commands \u003d parser.parse(output);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                for (Command c : commands) {"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"                    c.execute(list);"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"        return list;"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"    private String taskDataToCommand(String input, int index) {"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        boolean isDone \u003d false;"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        String output \u003d Constants.ZERO_LENGTH_STRING;"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        String iconCleared \u003d input.replace(Constants.ICON_SIGNATURE, Constants.ICON_SEPARATOR);"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        String[] iconSeparated \u003d iconCleared.split(Constants.LINE_UNIT);"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        switch (iconSeparated[0]) {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        case Constants.TODO_ICON:"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"            output \u003d Constants.TODO + Constants.SPACE;"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        case Constants.EVENT_ICON:"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"            output \u003d Constants.EVENT + Constants.SPACE;"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        case Constants.DDL_ICON:"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"            output \u003d Constants.DEADLINE + Constants.SPACE;"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        default:"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"            return output; //break is unreachable"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"        String statusCleared \u003d iconSeparated[1].replace(Constants.BODY_SIGNATURE, Constants.BODY_SEPARATOR);"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"        String[] statusSeparated \u003d statusCleared.split(Constants.LINE_UNIT);"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        if (statusSeparated[0].equals(Constants.TICK_ICON)) {"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"            isDone \u003d true;"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"        String bodyCleared \u003d statusSeparated[1].replace(Constants.PARAM_SIGNATURE, Constants.PARAM_SEPARATOR);"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"        String[] bodySeparated \u003d bodyCleared.split(Constants.LINE_UNIT);"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"        if (bodySeparated.length \u003d\u003d 1) { // no params"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"            output +\u003d bodyCleared;"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"            output +\u003d bodySeparated[0] + Constants.SPACE;"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"            String params \u003d bodySeparated[1].replace(Constants.PARAM_LEFT, Constants.ZERO_LENGTH_STRING).replace("},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"                Constants.PARAM_RIGHT, Constants.ZERO_LENGTH_STRING).trim();"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"            output +\u003d Constants.PARAM + params.replace(Constants.DETAILS_SIGNATURE, Constants.SPACE);"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"        if (isDone) {"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"            output +\u003d Constants.CMD_END + Constants.DONE + Constants.SPACE + (index + 1);"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"        return output;"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"    private String courseDataToCommand(String input) {"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"        String[] iconSeparated \u003d input.split(Constants.SPACE);"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"        String courseName \u003d iconSeparated[0];"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        boolean isCompleted \u003d courseName.contains(Constants.COMPLETED_LABEL);"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"        if (isCompleted) {"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"            courseName \u003d courseName.replace(Constants.COMPLETED_LABEL, Constants.ZERO_LENGTH_STRING);"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"        if (!courseName.isBlank()) {"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"            output.append(Constants.GRADE + Constants.SPACE)"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"                    .append(courseName).append(Constants.SPACE).append(iconSeparated[1]);"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"        if (isCompleted) {"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"            output.append(Constants.CMD_END + Constants.COMPLETE + Constants.SPACE).append(courseName);"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"        if (iconSeparated.length \u003e 2) {"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"            String linkedTasksString \u003d iconSeparated[2];"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"            output.append(Constants.CMD_END + Constants.LOAD + Constants.SPACE)"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"                    .append(courseName).append(Constants.SPACE).append(linkedTasksString);"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"        return output.toString();"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":163}},{"path":"src/main/java/lexical/Lexer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package lexical;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" * The type Lexer."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"public class Lexer {"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    private String getCommand(String s, int i) {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"        int j \u003d i;"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"        while (j \u003c s.length()) {"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"            if (Character.isLetter(s.charAt(j))) {"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"                j++;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        return s.substring(i, j);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    private String getAtom(String s, int i) {"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        int j \u003d i;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"        while (j \u003c s.length()) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"            char c \u003d s.charAt(j);"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"            if (c !\u003d Constants.CHAR_SPACE \u0026\u0026 c !\u003d Constants.CMD_END) {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"                j++;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        return s.substring(i, j);"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     * Analyze array list."},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * @return the array list"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cToken\u003e analyze(String input) {"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cToken\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        String inString \u003d input.trim();"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        boolean isCommand \u003d true;"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c inString.length(); ) {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"            char c \u003d inString.charAt(i);"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"            switch (c) {"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            case Constants.LPAREN:"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"                result.add(new Token(Types.LPA, c));"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"                i++;"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"            case Constants.RPAREN:"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"                result.add(new Token(Types.RPN, c));"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"                i++;"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"            case Constants.CHAR_SPACE:"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"                i++;"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"            case Constants.PARAM: //this case is the same as the next case, thus no break"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"            case Constants.PARAM_ALIAS:"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"                i++;"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"                String command \u003d getCommand(inString, i);"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"                i +\u003d command.length(); //skip away the rest of the commands"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"                result.add(new Token(Types.PAR, command));"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            case Constants.CMD_END:"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"                result.add(new Token(Types.END, c));"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"                i++;"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"                isCommand \u003d true;"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"            default:    //atom or cmd"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"                String atom \u003d getAtom(inString, i);"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"                i +\u003d atom.length();"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"                if (isCommand) {"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"                    result.add(new Token(Types.COM, atom));"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"                    isCommand \u003d false;"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"                    result.add(new Token(Types.STR, atom));"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        return result;"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":90}},{"path":"src/main/java/lexical/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package lexical;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.Command;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import command.ParamNode;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" * The type Parser."},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    private Lexer lexer;"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Parser."},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    public Parser() {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        lexer \u003d new Lexer();"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * Parse tree array list."},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     * @return the array list"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cCommand\u003e parseTree(ArrayList\u003cToken\u003e input) {"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        ParamNode node \u003d new ParamNode(input);"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cParamNode\u003e flattened \u003d node.flatten();"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"        for (ParamNode args: flattened) {"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"            commands.add(new Command(args));"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        return commands;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * Parse array list."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     * @return the array list"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"    public ArrayList\u003cCommand\u003e parse(String input) {"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            input \u003d Constants.UNKNOWN;"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        return parseTree(lexer.analyze(input));"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":54}},{"path":"src/main/java/lexical/Token.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package lexical;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Token."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class Token {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * The Token."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    public Types token;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * The String."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    public final String string;"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Token."},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"     * @param t the t"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     * @param c the c"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    public Token(Types t, char c) {"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"        this.token \u003d t;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"        this.string \u003d Character.toString(c);"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Token."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * @param t the t"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * @param s the s"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    public Token(Types t, String s) {"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        this.token \u003d t;"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        this.string \u003d s;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * Change type."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * @param newType the new type"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    public void changeType(Types newType) {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        this.token \u003d newType;"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        if (token \u003d\u003d Types.STR) {"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"            return \"STR\\t\u003c\" + string + \"\u003e\";"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        } else if (token \u003d\u003d Types.PAR) {"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"            return \"PAR\\t\u003c\" + string + \"\u003e\";"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        } else if (token \u003d\u003d Types.COM) {"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"            return \"COM\\t\u003c\" + string + \"\u003e\";"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"        return token.toString();"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":60}},{"path":"src/main/java/lexical/Types.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package lexical;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The enum Types."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public enum Types {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"     * Lpa types."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    LPA,    //left parenthesis"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     * Rpn types."},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    RPN,    //right parenthesis"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * Str types."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    STR,    //string"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"     * Par types."},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    PAR,    //parameter indicator"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * Com types."},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    COM,    //command"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     * End types."},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    END,    //line end"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * Atm types."},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    ATM,    //atomic"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":37}},{"path":"src/main/java/messages/MessageFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package messages;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":" * The type Message format."},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"public class MessageFormat {"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    private final ArrayList\u003cMessageOptions\u003e messageOptionsList;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Message format."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     * @param options the options"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    public MessageFormat(MessageOptions[] options) {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        messageOptionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(options));"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     * Add message option."},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * @param option the option"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    public void addMessageOption(MessageOptions option) {"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"        messageOptionsList.add(option);"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * Remove message option."},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     * @param option the option"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    public void removeMessageOption(MessageOptions option) {"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        messageOptionsList.remove(option);"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * Get message options message options [ ]."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * @return the message options [ ]"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    public MessageOptions[] getMessageOptions() {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        MessageOptions[] output \u003d new MessageOptions[messageOptionsList.size()];"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        return messageOptionsList.toArray(output);"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":50}},{"path":"src/main/java/messages/MessageOptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package messages;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The enum Message options."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public enum MessageOptions {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"     * Line indent 1 message options."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    LINE_INDENT_1,"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"     * Line indent 2 message options."},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    LINE_INDENT_2,"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     * Line indent 3 message options."},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    LINE_INDENT_3,"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"     * Line before message options."},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    LINE_BEFORE,"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * Indented 1 message options."},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    INDENTED_1,"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     * Indented 2 message options."},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    INDENTED_2,"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * Indented 3 message options."},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    INDENTED_3,"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     * Not indexed message options."},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    NOT_INDEXED,"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * Indexed num message options."},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"    INDEXED_NUM,"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     * Indexed abc message options."},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    INDEXED_ABC,"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"     * Auto return message options."},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    AUTO_RETURN,"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"     * Line after message options."},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"    LINE_AFTER"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":57}},{"path":"src/main/java/messages/MessageWrapper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package messages;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" * The type Message wrapper."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"public class MessageWrapper {"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    private String lineBase;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Message wrapper."},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     * @param length   the length"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     * @param baseUnit the base unit"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    public MessageWrapper(int length, String baseUnit) {"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"        setLineBase(length, baseUnit);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     * Sets line base."},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     * @param length   the length"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     * @param baseUnit the base unit"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    public void setLineBase(int length, String baseUnit) {"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        lineBase \u003d baseUnit.repeat(length);"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     * Wrap string."},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     * @param input   the input"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     * @param options the options"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"    public String wrap(String input, MessageOptions[] options) {"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"        return wrap(new String[]{input}, options);"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     * Wrap string."},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"     * @param inputs  the inputs"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     * @param options the options"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"    public String wrap(String[] inputs, MessageOptions[] options) {"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        boolean isLineBefore \u003d Arrays.asList(options).contains("},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"                MessageOptions.LINE_BEFORE);"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        boolean isLineAfter \u003d Arrays.asList(options).contains("},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"                MessageOptions.LINE_AFTER);"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        boolean isAutoReturn \u003d Arrays.asList(options).contains("},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"                MessageOptions.AUTO_RETURN);"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        MessageOptions indexOption \u003d getIndexOption(options);"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"        int lineIndent \u003d getLineIndent(options);"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        int textIndent \u003d getTextIndent(options);"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        if (isLineBefore) {"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"            stringBuilder.append(buildLine(lineIndent, lineBase));"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"            int index \u003d i + 1;"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"            stringBuilder.append(buildMessage("},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"                    textIndent, index, inputs[i], isAutoReturn, indexOption));"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        if (isLineAfter) {"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"            stringBuilder.append(buildLine(lineIndent, lineBase));"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"        return stringBuilder.toString();"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     * Show."},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"     * @param stream  the stream"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"     * @param inputs  the inputs"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"     * @param options the options"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"    public void show(PrintStream stream, String[] inputs, MessageOptions[] options) {"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"        stream.print(wrap(inputs, options));"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"     * Show."},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"     * @param stream  the stream"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"     * @param input   the input"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"     * @param options the options"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    public void show(PrintStream stream, String input, MessageOptions[] options) {"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        stream.print(wrap(input, options));"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    private int getLineIndent(MessageOptions[] options) {"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_1)) {"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDENT_1;"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_2)) {"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDENT_2;"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_3)) {"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDENT_3;"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        return Constants.NO_INDENT;"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"    private int getTextIndent(MessageOptions[] options) {"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        if (Arrays.asList(options).contains(MessageOptions.INDENTED_1)) {"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDENT_1;"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_2)) {"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDENT_2;"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_3)) {"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"            return Constants.INDENT_3;"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"        return Constants.NO_INDENT;"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"    private MessageOptions getIndexOption(MessageOptions[] options) {"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        if (Arrays.asList(options).contains(MessageOptions.INDEXED_NUM)) {"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"            return MessageOptions.INDEXED_NUM;"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"        } else if (Arrays.asList(options).contains(MessageOptions.INDEXED_ABC)) {"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"            return MessageOptions.INDEXED_ABC;"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"        return MessageOptions.NOT_INDEXED;"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"    private String buildLine(int lineIndent, String lineBase) {"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"        return Constants.TAB.repeat(lineIndent) + lineBase + Constants.WIN_NEWLINE;"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"    private String buildMessage(int indent, int index, String message,"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"                                boolean isAutoReturn, MessageOptions indexOption) {"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"        String formattedMessage \u003d Constants.TAB.repeat(indent);"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"        if (index \u003e 0) {"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"            if (indexOption \u003d\u003d MessageOptions.INDEXED_NUM) {"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"                formattedMessage +\u003d index + Constants.DOT;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"            } else if (indexOption \u003d\u003d MessageOptions.INDEXED_ABC) {"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"                formattedMessage +\u003d (char) (index + Constants.LETTER_OFFSET) + Constants.DOT;"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"        formattedMessage +\u003d message;"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"        if (isAutoReturn) {"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"            formattedMessage +\u003d Constants.WIN_NEWLINE;"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"        return formattedMessage;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":152}},{"path":"src/main/java/seedu/duke/Domsun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"chuhann"},"content":"import java.util.Timer;"},{"lineNumber":7,"author":{"gitId":"chuhann"},"content":"import java.util.TimerTask;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import command.Command;"},{"lineNumber":11,"author":{"gitId":"chuhann"},"content":"import command.action.ReminderAction;"},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"import command.action.SnoozeAction;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import constants.Constants;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import io.Storage;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import lexical.Parser;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import visualize.Cli;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import visualize.FancyCli;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":" * The type Domsun."},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"public class Domsun {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Storage storage;"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    private final FancyCli fui; // fancy ui"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    private final Cli pui; //plain ui"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Parser parser;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    private Data data;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    private Cli ui;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    private boolean isFancy;"},{"lineNumber":32,"author":{"gitId":"chuhann"},"content":"    private Timer timer;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    //@@author TomLBZ"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Domsun."},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     * @param isFancy        toggle between fancy and normal layout"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     * @param stream         the stream"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     * @param input          the input"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     * @param directory      the directory"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * @param taskFileName   task file name"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * @param courseFileName course file name"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    public Domsun(boolean isFancy, PrintStream stream, InputStream input, String directory,"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"                  String taskFileName, String courseFileName) {"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"        fui \u003d new FancyCli(stream, input);"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        pui \u003d new Cli(stream, input);"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        ui \u003d isFancy ? fui : pui;"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        this.isFancy \u003d isFancy;"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        ui.showWelcome();"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        parser \u003d new Parser();"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        storage \u003d new Storage(directory, taskFileName, courseFileName, parser);"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"            data \u003d storage.load();"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        } catch (Exception e) {"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"            ui.showText(Constants.SAVE_CORRUPTED);"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"            data \u003d new Data();"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":62,"author":{"gitId":"johanesrafael"},"content":"    //@@author johanesrafael"},{"lineNumber":63,"author":{"gitId":"johanesrafael"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"johanesrafael"},"content":"     * Make Reminder scheduler."},{"lineNumber":65,"author":{"gitId":"johanesrafael"},"content":"     * @param delay     the delay"},{"lineNumber":66,"author":{"gitId":"johanesrafael"},"content":"     * @param interval  the interval"},{"lineNumber":67,"author":{"gitId":"johanesrafael"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"johanesrafael"},"content":"    public void reminderTimer(int delay, String interval) {"},{"lineNumber":69,"author":{"gitId":"johanesrafael"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"johanesrafael"},"content":"            if (interval.equals(Constants.REMINDER_INTERVAL)) { // when the interval is default"},{"lineNumber":71,"author":{"gitId":"johanesrafael"},"content":"                timer \u003d new Timer();"},{"lineNumber":72,"author":{"gitId":"johanesrafael"},"content":"                timer.schedule(new TimerTask() {"},{"lineNumber":73,"author":{"gitId":"johanesrafael"},"content":"                    @Override"},{"lineNumber":74,"author":{"gitId":"johanesrafael"},"content":"                    public void run() {"},{"lineNumber":75,"author":{"gitId":"johanesrafael"},"content":"                        Boolean status \u003d reminderStatus();"},{"lineNumber":76,"author":{"gitId":"johanesrafael"},"content":"                        if (status) {"},{"lineNumber":77,"author":{"gitId":"johanesrafael"},"content":"                            ui.showReminder(data);"},{"lineNumber":78,"author":{"gitId":"johanesrafael"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":80,"author":{"gitId":"johanesrafael"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"johanesrafael"},"content":"                }, delay, Integer.parseInt(interval));"},{"lineNumber":82,"author":{"gitId":"johanesrafael"},"content":"            } else if (interval.equals(Constants.NEW_REMINDER_INTERVAL)) {"},{"lineNumber":83,"author":{"gitId":"johanesrafael"},"content":"                timer.cancel();"},{"lineNumber":84,"author":{"gitId":"johanesrafael"},"content":"                timer \u003d new Timer();"},{"lineNumber":85,"author":{"gitId":"johanesrafael"},"content":"                timer.schedule(new TimerTask() { // when it is snoozed"},{"lineNumber":86,"author":{"gitId":"johanesrafael"},"content":"                    @Override"},{"lineNumber":87,"author":{"gitId":"johanesrafael"},"content":"                    public void run() {"},{"lineNumber":88,"author":{"gitId":"johanesrafael"},"content":"                        ui.showReminder(data);"},{"lineNumber":89,"author":{"gitId":"johanesrafael"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"johanesrafael"},"content":"                }, Integer.parseInt(interval), Integer.parseInt(interval));"},{"lineNumber":91,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"johanesrafael"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":93,"author":{"gitId":"johanesrafael"},"content":"            ui.showText(\"Invalid interval. Reminder scheduler can not work properly.\");"},{"lineNumber":94,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    //@@author TomLBZ"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"     * The entry point of application."},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"     * @param args the input arguments"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"    public static void main(String[] args) {"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        // Starts up using colored CLI on mac or linux, and pure text on windows (for now)."},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"        // This is because ansi sequences needed to be enabled on programs started by cmd in recent windows versions."},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        // this is an intended behaviour brought by microsoft developers, so that programs called by cmd"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        // do not inherit the appearance of cmd.exe (which by default supports ansi escape sequences)."},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        // when cmd runs \"java -jar xxx\", the javac.exe is started by cmd.exe"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        // which does not enable the ansi mode by default."},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        // if the jar was started by something else such as gitbash or intelliJ shell, there is no such problem"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        // thus, we need to find a way to reliable call the windows api to set such mode"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        // However, no matter what mode it starts in, I have created switching commands."},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        // you can use \"fancy\" command to switch to fancyCli, and use \"plain\" command to switch to plain Cli."},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        // [AFTER READING THE ABOVE TEXT, PLEASE UNCOMMENT THE FOLLOWING 2 LINES TO RUN THE PROGRAM]"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        // boolean isWindows \u003d System.getProperty(\"os.name\").toLowerCase().contains(\"win\");"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"        // new Domsun(!isWindows, System.out, System.in, Constants.PATH,"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        //        Constants.TASK_FILENAME, Constants.COURSE_FILENAME).run();"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"    //@@author TomLBZ"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"    private void reattachUI(boolean isFancy, boolean isPlain) {"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        if (this.isFancy \u0026\u0026 isPlain) {"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"            ui \u003d pui;"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"            this.isFancy \u003d false;"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"            ui.setSwitched();"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"        } else if (!this.isFancy \u0026\u0026 isFancy) {"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"            ui \u003d fui;"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"            this.isFancy \u003d true;"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"            ui.setSwitched();"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"    //@@author TomLBZ"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"     * Run."},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"    public void run() {"},{"lineNumber":139,"author":{"gitId":"johanesrafael"},"content":"        //@@author johanesrafael"},{"lineNumber":140,"author":{"gitId":"johanesrafael"},"content":"        // schedule reminder every 6 minutes"},{"lineNumber":141,"author":{"gitId":"johanesrafael"},"content":"        reminderTimer(Constants.REMINDER_DELAY, Constants.REMINDER_INTERVAL);"},{"lineNumber":142,"author":{"gitId":"johanesrafael"},"content":"        //@@author"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        while (!isExit) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.nextLine();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                ArrayList\u003cCommand\u003e commands \u003d parser.parse(fullCommand); //array list of commands"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                for (Command c : commands) {"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"                    c.execute(data);"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"                    reattachUI(c.isFancy(), c.isPlain());"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"                    ui.update(c.result, data);"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"                    isExit \u003d c.isBye();"},{"lineNumber":153,"author":{"gitId":"johanesrafael"},"content":"                    //@@author johanesrafael"},{"lineNumber":154,"author":{"gitId":"johanesrafael"},"content":"                    boolean isSnoozed \u003d c.isSnoozed();"},{"lineNumber":155,"author":{"gitId":"johanesrafael"},"content":"                    if (isSnoozed) {"},{"lineNumber":156,"author":{"gitId":"johanesrafael"},"content":"                        snoozeReminder();"},{"lineNumber":157,"author":{"gitId":"johanesrafael"},"content":"                    }"},{"lineNumber":158,"author":{"gitId":"johanesrafael"},"content":"                    //@@author"},{"lineNumber":159,"author":{"gitId":"chuhann"},"content":"                    if (isExit) {"},{"lineNumber":160,"author":{"gitId":"chuhann"},"content":"                        // stops timer"},{"lineNumber":161,"author":{"gitId":"chuhann"},"content":"                        timer.cancel();"},{"lineNumber":162,"author":{"gitId":"chuhann"},"content":"                    }"},{"lineNumber":163,"author":{"gitId":"adinata15"},"content":"                    storage.save(data.tasks, data.mods);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            } catch (Exception e) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                String message \u003d e.getMessage();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                if (message \u003d\u003d null) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    message \u003d Constants.INDEX_OUT;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"                ui.update(message, data);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"chuhann"},"content":""},{"lineNumber":175,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":176,"author":{"gitId":"johanesrafael"},"content":"    //@@author: johanesrafael"},{"lineNumber":177,"author":{"gitId":"johanesrafael"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"johanesrafael"},"content":"     * Snooze Reminder."},{"lineNumber":179,"author":{"gitId":"johanesrafael"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"johanesrafael"},"content":"    public void snoozeReminder() {"},{"lineNumber":181,"author":{"gitId":"johanesrafael"},"content":"        String newInterval \u003d new SnoozeAction().getNewInterval();"},{"lineNumber":182,"author":{"gitId":"johanesrafael"},"content":"        reminderTimer(Constants.REMINDER_DELAY, newInterval);"},{"lineNumber":183,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":185,"author":{"gitId":"johanesrafael"},"content":"    public Boolean reminderStatus() {"},{"lineNumber":186,"author":{"gitId":"johanesrafael"},"content":"        Boolean status \u003d new ReminderAction().getTimerStatus();"},{"lineNumber":187,"author":{"gitId":"johanesrafael"},"content":"        return status;"},{"lineNumber":188,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":190,"author":{"gitId":"johanesrafael"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"johanesrafael"},"content":"     * Execute JUnit test."},{"lineNumber":192,"author":{"gitId":"johanesrafael"},"content":"     *"},{"lineNumber":193,"author":{"gitId":"johanesrafael"},"content":"     * @param command   Command of user"},{"lineNumber":194,"author":{"gitId":"johanesrafael"},"content":"     * @param isStored  determines if output will be stored in duke.txt"},{"lineNumber":195,"author":{"gitId":"johanesrafael"},"content":"     * @param isPrinted determines if output will be to console"},{"lineNumber":196,"author":{"gitId":"johanesrafael"},"content":"     * @return Domsun\u0027s response"},{"lineNumber":197,"author":{"gitId":"johanesrafael"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"johanesrafael"},"content":"    public String testSut(String command, boolean isStored, boolean isPrinted) {"},{"lineNumber":199,"author":{"gitId":"johanesrafael"},"content":"        try {"},{"lineNumber":200,"author":{"gitId":"johanesrafael"},"content":"            String fullCommand \u003d command;"},{"lineNumber":201,"author":{"gitId":"johanesrafael"},"content":"            ArrayList\u003cCommand\u003e commands \u003d parser.parse(fullCommand); //array list of commands"},{"lineNumber":202,"author":{"gitId":"johanesrafael"},"content":"            for (Command c : commands) {"},{"lineNumber":203,"author":{"gitId":"johanesrafael"},"content":"                c.execute(data);"},{"lineNumber":204,"author":{"gitId":"johanesrafael"},"content":"                if (isPrinted) {"},{"lineNumber":205,"author":{"gitId":"johanesrafael"},"content":"                    reattachUI(c.isFancy(), c.isPlain());"},{"lineNumber":206,"author":{"gitId":"johanesrafael"},"content":"                    ui.update(c.result, data);"},{"lineNumber":207,"author":{"gitId":"johanesrafael"},"content":"                }"},{"lineNumber":208,"author":{"gitId":"johanesrafael"},"content":"                if (isStored) {"},{"lineNumber":209,"author":{"gitId":"johanesrafael"},"content":"                    // check the taken_course path"},{"lineNumber":210,"author":{"gitId":"johanesrafael"},"content":"                    storage.save(data.tasks, data.mods);"},{"lineNumber":211,"author":{"gitId":"johanesrafael"},"content":"                }"},{"lineNumber":212,"author":{"gitId":"johanesrafael"},"content":"                return c.result;"},{"lineNumber":213,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"johanesrafael"},"content":"        } catch (Exception e) {"},{"lineNumber":215,"author":{"gitId":"johanesrafael"},"content":"            String message \u003d e.getMessage();"},{"lineNumber":216,"author":{"gitId":"johanesrafael"},"content":"            if (message \u003d\u003d null) {"},{"lineNumber":217,"author":{"gitId":"johanesrafael"},"content":"                message \u003d Constants.INDEX_OUT;"},{"lineNumber":218,"author":{"gitId":"johanesrafael"},"content":"            }"},{"lineNumber":219,"author":{"gitId":"johanesrafael"},"content":"            ui.showText(message);"},{"lineNumber":220,"author":{"gitId":"johanesrafael"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"johanesrafael"},"content":"        return \"0\";"},{"lineNumber":222,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"johanesrafael"},"content":"}"}],"authorContributionMap":{"johanesrafael":96,"TomLBZ":85,"chuhann":9,"-":30,"scjx123":2,"adinata15":1}},{"path":"src/main/java/visualize/Bitmap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":" * The type Bitmap."},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"public class Bitmap {"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    private final ColoredString[] map;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     * The Width."},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    public final int width;"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     * The Height."},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    public final int height;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Bitmap."},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     * @param width  the width"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     * @param height the height"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    public Bitmap(int width, int height) {"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"        this.width \u003d width;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"        this.height \u003d height;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        map \u003d new ColoredString[width * height];"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c map.length; i++) {"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            map[i] \u003d new ColoredString(Sprite.IGNORE);"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     * Sets pixel color."},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"     * @param x the x"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * @param y the y"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * @param c the c"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     * @throws IndexOutOfBoundsException the index out of bounds exception"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"    public void setPixelColor(int x, int y, Color c) throws IndexOutOfBoundsException {"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"        if (x \u003c 0 || x \u003e\u003d width || y \u003c 0 || y \u003e\u003d height) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d x + y * width;"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        map[index].setBackColor(c);"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     * Flush."},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"     * @param c the c"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    public void flush(Color c) {"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"        for (ColoredString coloredString : map) {"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"            coloredString.setString(Sprite.SPACE);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"            coloredString.setBackColor(c);"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"            coloredString.setForeColor(c);"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     * Sets pixel text."},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"     * @param x         the x"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"     * @param y         the y"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"     * @param character the character"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"     * @throws IndexOutOfBoundsException the index out of bounds exception"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"    public void setPixelText(int x, int y, String character) throws  IndexOutOfBoundsException {"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"        if (x \u003c 0 || x \u003e\u003d width || y \u003c 0 || y \u003e\u003d height) {"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d x + y * width;"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        map[index].setString(character);"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"     * Sets pixel text color."},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"     * @param x the x"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"     * @param y the y"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"     * @param c the c"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"     * @throws IndexOutOfBoundsException the index out of bounds exception"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"    public void setPixelTextColor(int x, int y, Color c) throws IndexOutOfBoundsException {"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"        if (x \u003c 0 || x \u003e\u003d width || y \u003c 0 || y \u003e\u003d height) {"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d x + y * width;"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        map[index].setForeColor(c);"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"    private boolean isInRange(int x, int y, int width, int height) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        boolean isXInRange \u003d x \u003e\u003d 0 || x \u003c width;"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        boolean isYInRange \u003d y \u003e\u003d 0 || y \u003c height;"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        return isXInRange \u0026\u0026 isYInRange;"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"    private boolean isAllInRange(ArrayList\u003cint[]\u003e points, int width, int height) {"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        boolean output \u003d true;"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        if (points \u003d\u003d null || points.isEmpty()) {"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        for (int[] point: points) {"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"            if (point.length !\u003d 2) {"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"                continue;"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"            output \u003d output \u0026\u0026 isInRange(point[0], point[1], width, height);"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        return output;"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"    private void checkValidInput(int x1, int y1, int x2, int y2, String string)"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"            throws IndexOutOfBoundsException, NullPointerException {"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cint[]\u003e points \u003d new ArrayList\u003c\u003e();"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        points.add(new int[]{x1, y1});"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        points.add(new int[]{x2, y2});"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"        if (!isAllInRange(points, width, height)) {"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"        if (string \u003d\u003d null) {"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"            throw new NullPointerException();"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"     * Draw line."},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"     * @param x1         the x 1"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"     * @param y1         the y 1"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"     * @param x2         the x 2"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"     * @param y2         the y 2"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"     * @param string     the string"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"     * @param backColor  the back color"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"     * @param foreColor  the fore color"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"     * @param isAutoFill the is auto fill"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"     * @throws IndexOutOfBoundsException the index out of bounds exception"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"     * @throws NullPointerException      the null pointer exception"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"    public void drawLine("},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"            int x1, int y1, int x2, int y2, String string,"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"            Color backColor, Color foreColor, boolean isAutoFill)"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"            throws IndexOutOfBoundsException, NullPointerException {"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"        checkValidInput(x1, y1, x2, y2, string);"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"        int index \u003d 0;"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"        int dx;"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"        int dy;"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"        dx \u003d x2 - x1;"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"        dy \u003d y2 - y1;"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"        int x;"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"        int y;"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"        int p;  //parameter p of Bresenham\u0027s Line Algorithm"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"        x \u003d x1; // set x to initial value"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"        y \u003d y1; // set y to initial value"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"        p \u003d 2 * dy - dx;"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"        while (x \u003c\u003d x2) {"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"            setAttributes(string, backColor, foreColor, index, x, y);"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"            if (p \u003e\u003d 0) {"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"                y++;"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"                p \u003d p + 2 * dy - 2 * dx;"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"                p \u003d p + 2 * dy;"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"            x++;"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"            index++;"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"            if (index \u003d\u003d string.length() \u0026\u0026 isAutoFill) {"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"                index -\u003d string.length();"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"    private void setAttributes(String string, Color backColor, Color foreColor, int index, int x, int y) {"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"        String target \u003d index \u003c string.length() ? string.substring(index, index + 1) : String.valueOf(Constants.SPACE);"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"        if (!target.equals(Sprite.IGNORE)) {"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"            if (foreColor !\u003d null) {"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"                setPixelTextColor(x, y, foreColor);"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"            if (backColor !\u003d null) {"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"                setPixelColor(x, y, backColor);"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"            setPixelText(x, y, target);"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"     * Draw sprite."},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"     * @param x1        the x 1"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"     * @param y1        the y 1"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"     * @param scaleX    the scale x"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"     * @param scaleY    the scale y"},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"     * @param sprite    the sprite"},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"     * @param backColor the back color"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"     * @param foreColor the fore color"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"     * @throws IndexOutOfBoundsException the index out of bounds exception"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"     * @throws NullPointerException      the null pointer exception"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"    public void drawSprite("},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"            int x1, int y1, int scaleX, int scaleY, Sprite sprite,"},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"            Color backColor, Color foreColor)"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"            throws IndexOutOfBoundsException, NullPointerException {"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"        int x2 \u003d x1 + sprite.width * scaleX - 1;"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"        int y2 \u003d y1 + sprite.height * scaleY - 1;"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"        checkValidInput(x1, y1, x2, y2, sprite.toString());"},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"        if (scaleX \u003d\u003d 0) {"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"        int spriteX \u003d 0;"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"        int spriteY \u003d 0;"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"        for (int y \u003d y1; y \u003c\u003d y2; y++) {"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"            if (y - y1 \u003d\u003d (spriteY + 1) * scaleY) {"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"                spriteY++;"},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"            for (int x \u003d x1; x \u003c\u003d x2; x++) {"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"                if (x - x1 \u003d\u003d (spriteX + 1) * scaleX) {"},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"                    spriteX++;"},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"                int spriteIndex \u003d spriteX + sprite.width * spriteY;"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"                String strSprite \u003d sprite.toString();"},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"                setAttributes(strSprite, backColor, foreColor, spriteIndex, x, y);"},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"            spriteX \u003d 0;"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"     * Get string."},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"    public String get() {"},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();"},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c map.length; i++) {"},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"            strBuilder.append(map[i].get());"},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"            if ((i + 1) % width \u003d\u003d 0) {"},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"                strBuilder.append(\"\\r\\n\");"},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"        return strBuilder.toString();"},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":248}},{"path":"src/main/java/visualize/Cli.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageFormat;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageOptions;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageWrapper;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.io.InputStream;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.io.PrintStream;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.util.Arrays;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":" * The type Cli."},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"public class Cli extends UI {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"     * The Msg format."},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    protected MessageFormat msgFormat;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"     * The Msg wrapper."},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    protected MessageWrapper msgWrapper;"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Cli."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * @param stream the stream"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     * @param input  the input"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    public Cli(PrintStream stream, InputStream input) {"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"        super(stream, input);"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"        msgFormat \u003d new MessageFormat(new MessageOptions[]{"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions.LINE_INDENT_1,"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions.LINE_BEFORE,"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions.INDENTED_2,"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions.AUTO_RETURN,"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions.LINE_AFTER"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"        });"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"        msgWrapper \u003d new MessageWrapper(Constants.LINE_REPETITION, Constants.LINE_UNIT);"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    public void showWelcome() {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        msgWrapper.show(stream, Constants.WELCOME, msgFormat.getMessageOptions());"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"    public void showText(String input) {"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        String wrappedText \u003d wrapStringArray(input.split(Constants.WIN_NEWLINE));"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        String[] lines \u003d wrappedText.split(Constants.WIN_NEWLINE);"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        msgWrapper.show(stream, lines, msgFormat.getMessageOptions());"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"     * Show list text."},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"     * @param input       the input"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"     * @param indexOption the index option"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    public void showListText(String input, MessageOptions indexOption) {"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"        String wrappedText \u003d wrapStringArray(input.split(Constants.WIN_NEWLINE));"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(Arrays.asList(wrappedText.split(Constants.WIN_NEWLINE)));"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"        String head \u003d lines.get(0);"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"        lines.remove(head);"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"        msgFormat.removeMessageOption(MessageOptions.LINE_AFTER);"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        msgWrapper.show(stream, head, msgFormat.getMessageOptions());"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        msgFormat.addMessageOption(MessageOptions.LINE_AFTER);"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"        msgFormat.removeMessageOption(MessageOptions.LINE_BEFORE);"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"        msgFormat.addMessageOption(indexOption);"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"        String[] strings \u003d new String[0];"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"        strings \u003d lines.toArray(strings);"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"        msgWrapper.show(stream, strings, msgFormat.getMessageOptions());"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"        msgFormat.addMessageOption(MessageOptions.LINE_BEFORE);"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"        msgFormat.removeMessageOption(indexOption);"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"    public void update(String input, Data data) {"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        String wrappedInput \u003d wrapStringArray(input.split(Constants.WIN_NEWLINE));"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        if (freshlySwitched) {"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"            String replay \u003d data.lastInput;"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions replayOption \u003d data.lastIndexOption;"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"            if (replay \u003d\u003d null || replay.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"                showWelcome();"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"                replay \u003d \"Keeping last output: \" + replay;"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"                showListText(replay, replayOption);"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"            freshlySwitched \u003d false;"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        if (wrappedInput.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"            showText(Constants.ZERO_LENGTH_STRING);"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        } else if (wrappedInput.contains(Constants.BMP_LIST_SWITCH)"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"                || wrappedInput.contains(Constants.BMP_SEL_SWITCH)) {"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"            data.lastInput \u003d Constants.FANCY_ONLY;"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"            showText(Constants.FANCY_ONLY);"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"        } else if (wrappedInput.contains(Constants.FANCY_CLEARED)) {"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"            data.lastInput \u003d Constants.FANCY_ONLY;"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"            showText(Constants.FANCY_ONLY);"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"            showListText(wrappedInput, data.indexOption);"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"            data.lastInput \u003d wrappedInput;"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"            data.lastIndexOption \u003d data.indexOption;"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        data.indexOption \u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":115}},{"path":"src/main/java/visualize/Color.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The enum Color."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public enum Color {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * White color."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    White(\"000000\", 0),"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * Maroon color."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    Maroon(\"800000\", 1),"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"     * Green color."},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    Green(\"008000\", 2),"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"     * Olive color."},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    Olive(\"808000\", 3),"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"     * Navy color."},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    Navy(\"000080\", 4),"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     * Purple color."},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    Purple(\"800080\", 5),"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"     * Teal color."},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    Teal(\"008080\", 6),"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     * Silver color."},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    Silver(\"c0c0c0\", 7),"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * Grey color."},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    Grey(\"808080\", 8),"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     * Red color."},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    Red(\"ff0000\", 9),"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"     * Lime color."},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"    Lime(\"00ff00\", 10),"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"     * Yellow color."},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"    Yellow(\"ffff00\", 11),"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"     * Blue color."},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"    Blue(\"0000ff\", 12),"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"     * Fuchsia color."},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"    Fuchsia(\"ff00ff\", 13),"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"     * Aqua color."},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"    Aqua(\"00ffff\", 14),"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"     * Black color."},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    Black(\"ffffff\", 15),"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"     * Grey 1 color."},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"    Grey1(\"000000\", 16),"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"     * Navy blue color."},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"    NavyBlue(\"00005f\", 17),"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"     * Dark blue color."},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"    DarkBlue(\"000087\", 18),"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"     * Blue 1 color."},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"    Blue1(\"0000af\", 19),"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"     * Blue 2 color."},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"    Blue2(\"0000d7\", 20),"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"     * Blue 3 color."},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    Blue3(\"0000ff\", 21),"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"     * Dark green color."},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    DarkGreen(\"005f00\", 22),"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue color."},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue(\"005f5f\", 23),"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue 1 color."},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue1(\"005f87\", 24),"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue 2 color."},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue2(\"005faf\", 25),"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"     * Dodger blue color."},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"    DodgerBlue(\"005fd7\", 26),"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"     * Dodger blue 1 color."},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"    DodgerBlue1(\"005fff\", 27),"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"     * Green 1 color."},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"    Green1(\"008700\", 28),"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"     * Spring green color."},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"    SpringGreen(\"00875f\", 29),"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"     * Turquoise color."},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"    Turquoise(\"008787\", 30),"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue 3 color."},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue3(\"0087af\", 31),"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue 4 color."},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue4(\"0087d7\", 32),"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"     * Dodger blue 2 color."},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"    DodgerBlue2(\"0087ff\", 33),"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"     * Green 2 color."},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"    Green2(\"00af00\", 34),"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"     * Spring green 1 color."},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"    SpringGreen1(\"00af5f\", 35),"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"     * Dark cyan color."},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"    DarkCyan(\"00af87\", 36),"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"     * Light sea green color."},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"    LightSeaGreen(\"00afaf\", 37),"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue 5 color."},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue5(\"00afd7\", 38),"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"     * Deep sky blue 6 color."},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"    DeepSkyBlue6(\"00afff\", 39),"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"     * Green 3 color."},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"    Green3(\"00d700\", 40),"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"     * Spring green 2 color."},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"    SpringGreen2(\"00d75f\", 41),"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"     * Spring green 3 color."},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"    SpringGreen3(\"00d787\", 42),"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"     * Cyan color."},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"    Cyan(\"00d7af\", 43),"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"     * Dark turquoise color."},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"    DarkTurquoise(\"00d7d7\", 44),"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"     * Turquoise 2 color."},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"    Turquoise2(\"00d7ff\", 45),"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"     * Green 4 color."},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"    Green4(\"00ff00\", 46),"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"     * Spring green 4 color."},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"    SpringGreen4(\"00ff5f\", 47),"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"     * Spring green 5 color."},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"    SpringGreen5(\"00ff87\", 48),"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"     * Medium spring green color."},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"    MediumSpringGreen(\"00ffaf\", 49),"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"     * Cyan 1 color."},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"    Cyan1(\"00ffd7\", 50),"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"     * Cyan 2 color."},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"    Cyan2(\"00ffff\", 51),"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"     * Dark red color."},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"    DarkRed(\"5f0000\", 52),"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink color."},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"    DeepPink(\"5f005f\", 53),"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"     * Purple 1 color."},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"    Purple1(\"5f0087\", 54),"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"     * Purple 2 color."},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"    Purple2(\"5f00af\", 55),"},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"     * Purple 3 color."},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"    Purple3(\"5f00d7\", 56),"},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"     * Blue violet color."},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"    BlueViolet(\"5f00ff\", 57),"},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"     * Orange color."},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"    Orange(\"5f5f00\", 58),"},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"     * Grey 2 color."},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":249,"author":{"gitId":"TomLBZ"},"content":"    Grey2(\"5f5f5f\", 59),"},{"lineNumber":250,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple color."},{"lineNumber":252,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple(\"5f5f87\", 60),"},{"lineNumber":254,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"TomLBZ"},"content":"     * Slate blue color."},{"lineNumber":256,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"TomLBZ"},"content":"    SlateBlue(\"5f5faf\", 61),"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":259,"author":{"gitId":"TomLBZ"},"content":"     * Slate blue 1 color."},{"lineNumber":260,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"TomLBZ"},"content":"    SlateBlue1(\"5f5fd7\", 62),"},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":"     * Royal blue color."},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"    RoyalBlue(\"5f5fff\", 63),"},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"     * Chartreuse color."},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":"    Chartreuse(\"5f8700\", 64),"},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green color."},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen(\"5f875f\", 65),"},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"     * Pale turquoise color."},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":277,"author":{"gitId":"TomLBZ"},"content":"    PaleTurquoise(\"5f8787\", 66),"},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"     * Steel blue color."},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"    SteelBlue(\"5f87af\", 67),"},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":283,"author":{"gitId":"TomLBZ"},"content":"     * Steel blue 1 color."},{"lineNumber":284,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":285,"author":{"gitId":"TomLBZ"},"content":"    SteelBlue1(\"5f87d7\", 68),"},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":"     * Cornflower blue color."},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":289,"author":{"gitId":"TomLBZ"},"content":"    CornflowerBlue(\"5f87ff\", 69),"},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":291,"author":{"gitId":"TomLBZ"},"content":"     * Chartreuse 1 color."},{"lineNumber":292,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":293,"author":{"gitId":"TomLBZ"},"content":"    Chartreuse1(\"5faf00\", 70),"},{"lineNumber":294,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":295,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 1 color."},{"lineNumber":296,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":297,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen1(\"5faf5f\", 71),"},{"lineNumber":298,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":299,"author":{"gitId":"TomLBZ"},"content":"     * Cadet blue color."},{"lineNumber":300,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":301,"author":{"gitId":"TomLBZ"},"content":"    CadetBlue(\"5faf87\", 72),"},{"lineNumber":302,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"TomLBZ"},"content":"     * Cadet blue 1 color."},{"lineNumber":304,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":305,"author":{"gitId":"TomLBZ"},"content":"    CadetBlue1(\"5fafaf\", 73),"},{"lineNumber":306,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":307,"author":{"gitId":"TomLBZ"},"content":"     * Sky blue color."},{"lineNumber":308,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":309,"author":{"gitId":"TomLBZ"},"content":"    SkyBlue(\"5fafd7\", 74),"},{"lineNumber":310,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":311,"author":{"gitId":"TomLBZ"},"content":"     * Steel blue 2 color."},{"lineNumber":312,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"TomLBZ"},"content":"    SteelBlue2(\"5fafff\", 75),"},{"lineNumber":314,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":315,"author":{"gitId":"TomLBZ"},"content":"     * Chartreuse 2 color."},{"lineNumber":316,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":317,"author":{"gitId":"TomLBZ"},"content":"    Chartreuse2(\"5fd700\", 76),"},{"lineNumber":318,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":319,"author":{"gitId":"TomLBZ"},"content":"     * Pale green color."},{"lineNumber":320,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"TomLBZ"},"content":"    PaleGreen(\"5fd75f\", 77),"},{"lineNumber":322,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":323,"author":{"gitId":"TomLBZ"},"content":"     * Sea green color."},{"lineNumber":324,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":325,"author":{"gitId":"TomLBZ"},"content":"    SeaGreen(\"5fd787\", 78),"},{"lineNumber":326,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":327,"author":{"gitId":"TomLBZ"},"content":"     * Aquamarine color."},{"lineNumber":328,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":329,"author":{"gitId":"TomLBZ"},"content":"    Aquamarine(\"5fd7af\", 79),"},{"lineNumber":330,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":331,"author":{"gitId":"TomLBZ"},"content":"     * Medium turquoise color."},{"lineNumber":332,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":333,"author":{"gitId":"TomLBZ"},"content":"    MediumTurquoise(\"5fd7d7\", 80),"},{"lineNumber":334,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":335,"author":{"gitId":"TomLBZ"},"content":"     * Steel blue 3 color."},{"lineNumber":336,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":337,"author":{"gitId":"TomLBZ"},"content":"    SteelBlue3(\"5fd7ff\", 81),"},{"lineNumber":338,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"TomLBZ"},"content":"     * Chartreuse 3 color."},{"lineNumber":340,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":341,"author":{"gitId":"TomLBZ"},"content":"    Chartreuse3(\"5fff00\", 82),"},{"lineNumber":342,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":343,"author":{"gitId":"TomLBZ"},"content":"     * Sea green 1 color."},{"lineNumber":344,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":345,"author":{"gitId":"TomLBZ"},"content":"    SeaGreen1(\"5fff5f\", 83),"},{"lineNumber":346,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"TomLBZ"},"content":"     * Sea green 2 color."},{"lineNumber":348,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":349,"author":{"gitId":"TomLBZ"},"content":"    SeaGreen2(\"5fff87\", 84),"},{"lineNumber":350,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":351,"author":{"gitId":"TomLBZ"},"content":"     * Sea green 3 color."},{"lineNumber":352,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":353,"author":{"gitId":"TomLBZ"},"content":"    SeaGreen3(\"5fffaf\", 85),"},{"lineNumber":354,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"TomLBZ"},"content":"     * Aquamarine 1 color."},{"lineNumber":356,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":357,"author":{"gitId":"TomLBZ"},"content":"    Aquamarine1(\"5fffd7\", 86),"},{"lineNumber":358,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":359,"author":{"gitId":"TomLBZ"},"content":"     * Dark slate gray color."},{"lineNumber":360,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":361,"author":{"gitId":"TomLBZ"},"content":"    DarkSlateGray(\"5fffff\", 87),"},{"lineNumber":362,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":363,"author":{"gitId":"TomLBZ"},"content":"     * Dark red 1 color."},{"lineNumber":364,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":365,"author":{"gitId":"TomLBZ"},"content":"    DarkRed1(\"870000\", 88),"},{"lineNumber":366,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":367,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 1 color."},{"lineNumber":368,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":369,"author":{"gitId":"TomLBZ"},"content":"    DeepPink1(\"87005f\", 89),"},{"lineNumber":370,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":371,"author":{"gitId":"TomLBZ"},"content":"     * Dark magenta color."},{"lineNumber":372,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":373,"author":{"gitId":"TomLBZ"},"content":"    DarkMagenta(\"870087\", 90),"},{"lineNumber":374,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":375,"author":{"gitId":"TomLBZ"},"content":"     * Dark magenta 1 color."},{"lineNumber":376,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":377,"author":{"gitId":"TomLBZ"},"content":"    DarkMagenta1(\"8700af\", 91),"},{"lineNumber":378,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":379,"author":{"gitId":"TomLBZ"},"content":"     * Dark violet color."},{"lineNumber":380,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":381,"author":{"gitId":"TomLBZ"},"content":"    DarkViolet(\"8700d7\", 92),"},{"lineNumber":382,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":383,"author":{"gitId":"TomLBZ"},"content":"     * Purple 4 color."},{"lineNumber":384,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":385,"author":{"gitId":"TomLBZ"},"content":"    Purple4(\"8700ff\", 93),"},{"lineNumber":386,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":387,"author":{"gitId":"TomLBZ"},"content":"     * Orange 1 color."},{"lineNumber":388,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":389,"author":{"gitId":"TomLBZ"},"content":"    Orange1(\"875f00\", 94),"},{"lineNumber":390,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"TomLBZ"},"content":"     * Light pink color."},{"lineNumber":392,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"TomLBZ"},"content":"    LightPink(\"875f5f\", 95),"},{"lineNumber":394,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":395,"author":{"gitId":"TomLBZ"},"content":"     * Plum color."},{"lineNumber":396,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":397,"author":{"gitId":"TomLBZ"},"content":"    Plum(\"875f87\", 96),"},{"lineNumber":398,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":399,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple 1 color."},{"lineNumber":400,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":401,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple1(\"875faf\", 97),"},{"lineNumber":402,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":403,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple 2 color."},{"lineNumber":404,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":405,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple2(\"875fd7\", 98),"},{"lineNumber":406,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":407,"author":{"gitId":"TomLBZ"},"content":"     * Slate blue 2 color."},{"lineNumber":408,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":409,"author":{"gitId":"TomLBZ"},"content":"    SlateBlue2(\"875fff\", 99),"},{"lineNumber":410,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":411,"author":{"gitId":"TomLBZ"},"content":"     * Yellow 1 color."},{"lineNumber":412,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":413,"author":{"gitId":"TomLBZ"},"content":"    Yellow1(\"878700\", 100),"},{"lineNumber":414,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":415,"author":{"gitId":"TomLBZ"},"content":"     * Wheat color."},{"lineNumber":416,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":417,"author":{"gitId":"TomLBZ"},"content":"    Wheat(\"87875f\", 101),"},{"lineNumber":418,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":419,"author":{"gitId":"TomLBZ"},"content":"     * Grey 3 color."},{"lineNumber":420,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":421,"author":{"gitId":"TomLBZ"},"content":"    Grey3(\"878787\", 102),"},{"lineNumber":422,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":423,"author":{"gitId":"TomLBZ"},"content":"     * Light slate grey color."},{"lineNumber":424,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":425,"author":{"gitId":"TomLBZ"},"content":"    LightSlateGrey(\"8787af\", 103),"},{"lineNumber":426,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":427,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple 3 color."},{"lineNumber":428,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":429,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple3(\"8787d7\", 104),"},{"lineNumber":430,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":431,"author":{"gitId":"TomLBZ"},"content":"     * Light slate blue color."},{"lineNumber":432,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":433,"author":{"gitId":"TomLBZ"},"content":"    LightSlateBlue(\"8787ff\", 105),"},{"lineNumber":434,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":435,"author":{"gitId":"TomLBZ"},"content":"     * Yellow 2 color."},{"lineNumber":436,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":437,"author":{"gitId":"TomLBZ"},"content":"    Yellow2(\"87af00\", 106),"},{"lineNumber":438,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":439,"author":{"gitId":"TomLBZ"},"content":"     * Dark olive green 3 color."},{"lineNumber":440,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":441,"author":{"gitId":"TomLBZ"},"content":"    DarkOliveGreen3(\"87af5f\", 107),"},{"lineNumber":442,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":443,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 2 color."},{"lineNumber":444,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":445,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen2(\"87af87\", 108),"},{"lineNumber":446,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":447,"author":{"gitId":"TomLBZ"},"content":"     * Light sky blue color."},{"lineNumber":448,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":449,"author":{"gitId":"TomLBZ"},"content":"    LightSkyBlue(\"87afaf\", 109),"},{"lineNumber":450,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":451,"author":{"gitId":"TomLBZ"},"content":"     * Light sky blue 1 color."},{"lineNumber":452,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":453,"author":{"gitId":"TomLBZ"},"content":"    LightSkyBlue1(\"87afd7\", 110),"},{"lineNumber":454,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":455,"author":{"gitId":"TomLBZ"},"content":"     * Sky blue 1 color."},{"lineNumber":456,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":457,"author":{"gitId":"TomLBZ"},"content":"    SkyBlue1(\"87afff\", 111),"},{"lineNumber":458,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":459,"author":{"gitId":"TomLBZ"},"content":"     * Chartreuse 4 color."},{"lineNumber":460,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":461,"author":{"gitId":"TomLBZ"},"content":"    Chartreuse4(\"87d700\", 112),"},{"lineNumber":462,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":463,"author":{"gitId":"TomLBZ"},"content":"     * Dark olive green color."},{"lineNumber":464,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":465,"author":{"gitId":"TomLBZ"},"content":"    DarkOliveGreen(\"87d75f\", 113),"},{"lineNumber":466,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":467,"author":{"gitId":"TomLBZ"},"content":"     * Pale green 1 color."},{"lineNumber":468,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":469,"author":{"gitId":"TomLBZ"},"content":"    PaleGreen1(\"87d787\", 114),"},{"lineNumber":470,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":471,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 3 color."},{"lineNumber":472,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":473,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen3(\"87d7af\", 115),"},{"lineNumber":474,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":475,"author":{"gitId":"TomLBZ"},"content":"     * Dark slate gray 1 color."},{"lineNumber":476,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":477,"author":{"gitId":"TomLBZ"},"content":"    DarkSlateGray1(\"87d7d7\", 116),"},{"lineNumber":478,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":479,"author":{"gitId":"TomLBZ"},"content":"     * Sky blue 2 color."},{"lineNumber":480,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":481,"author":{"gitId":"TomLBZ"},"content":"    SkyBlue2(\"87d7ff\", 117),"},{"lineNumber":482,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":483,"author":{"gitId":"TomLBZ"},"content":"     * Chartreuse 5 color."},{"lineNumber":484,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":485,"author":{"gitId":"TomLBZ"},"content":"    Chartreuse5(\"87ff00\", 118),"},{"lineNumber":486,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":487,"author":{"gitId":"TomLBZ"},"content":"     * Light green color."},{"lineNumber":488,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":489,"author":{"gitId":"TomLBZ"},"content":"    LightGreen(\"87ff5f\", 119),"},{"lineNumber":490,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":491,"author":{"gitId":"TomLBZ"},"content":"     * Light green 1 color."},{"lineNumber":492,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":493,"author":{"gitId":"TomLBZ"},"content":"    LightGreen1(\"87ff87\", 120),"},{"lineNumber":494,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":495,"author":{"gitId":"TomLBZ"},"content":"     * Pale green 2 color."},{"lineNumber":496,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":497,"author":{"gitId":"TomLBZ"},"content":"    PaleGreen2(\"87ffaf\", 121),"},{"lineNumber":498,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":499,"author":{"gitId":"TomLBZ"},"content":"     * Aquamarine 2 color."},{"lineNumber":500,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":501,"author":{"gitId":"TomLBZ"},"content":"    Aquamarine2(\"87ffd7\", 122),"},{"lineNumber":502,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":503,"author":{"gitId":"TomLBZ"},"content":"     * Dark slate gray 2 color."},{"lineNumber":504,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":505,"author":{"gitId":"TomLBZ"},"content":"    DarkSlateGray2(\"87ffff\", 123),"},{"lineNumber":506,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":507,"author":{"gitId":"TomLBZ"},"content":"     * Red 1 color."},{"lineNumber":508,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":509,"author":{"gitId":"TomLBZ"},"content":"    Red1(\"af0000\", 124),"},{"lineNumber":510,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":511,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 2 color."},{"lineNumber":512,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":513,"author":{"gitId":"TomLBZ"},"content":"    DeepPink2(\"af005f\", 125),"},{"lineNumber":514,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":515,"author":{"gitId":"TomLBZ"},"content":"     * Medium violet red color."},{"lineNumber":516,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":517,"author":{"gitId":"TomLBZ"},"content":"    MediumVioletRed(\"af0087\", 126),"},{"lineNumber":518,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":519,"author":{"gitId":"TomLBZ"},"content":"     * Magenta color."},{"lineNumber":520,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":521,"author":{"gitId":"TomLBZ"},"content":"    Magenta(\"af00af\", 127),"},{"lineNumber":522,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":523,"author":{"gitId":"TomLBZ"},"content":"     * Dark violet 1 color."},{"lineNumber":524,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":525,"author":{"gitId":"TomLBZ"},"content":"    DarkViolet1(\"af00d7\", 128),"},{"lineNumber":526,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":527,"author":{"gitId":"TomLBZ"},"content":"     * Purple 5 color."},{"lineNumber":528,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":529,"author":{"gitId":"TomLBZ"},"content":"    Purple5(\"af00ff\", 129),"},{"lineNumber":530,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":531,"author":{"gitId":"TomLBZ"},"content":"     * Dark orange color."},{"lineNumber":532,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":533,"author":{"gitId":"TomLBZ"},"content":"    DarkOrange(\"af5f00\", 130),"},{"lineNumber":534,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":535,"author":{"gitId":"TomLBZ"},"content":"     * Indian red color."},{"lineNumber":536,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":537,"author":{"gitId":"TomLBZ"},"content":"    IndianRed(\"af5f5f\", 131),"},{"lineNumber":538,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":539,"author":{"gitId":"TomLBZ"},"content":"     * Hot pink color."},{"lineNumber":540,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":541,"author":{"gitId":"TomLBZ"},"content":"    HotPink(\"af5f87\", 132),"},{"lineNumber":542,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":543,"author":{"gitId":"TomLBZ"},"content":"     * Medium orchid color."},{"lineNumber":544,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":545,"author":{"gitId":"TomLBZ"},"content":"    MediumOrchid(\"af5faf\", 133),"},{"lineNumber":546,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":547,"author":{"gitId":"TomLBZ"},"content":"     * Medium orchid 1 color."},{"lineNumber":548,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":549,"author":{"gitId":"TomLBZ"},"content":"    MediumOrchid1(\"af5fd7\", 134),"},{"lineNumber":550,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":551,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple 4 color."},{"lineNumber":552,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":553,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple4(\"af5fff\", 135),"},{"lineNumber":554,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":555,"author":{"gitId":"TomLBZ"},"content":"     * Dark goldenrod color."},{"lineNumber":556,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":557,"author":{"gitId":"TomLBZ"},"content":"    DarkGoldenrod(\"af8700\", 136),"},{"lineNumber":558,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":559,"author":{"gitId":"TomLBZ"},"content":"     * Light salmon color."},{"lineNumber":560,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":561,"author":{"gitId":"TomLBZ"},"content":"    LightSalmon(\"af875f\", 137),"},{"lineNumber":562,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":563,"author":{"gitId":"TomLBZ"},"content":"     * Rosy brown color."},{"lineNumber":564,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":565,"author":{"gitId":"TomLBZ"},"content":"    RosyBrown(\"af8787\", 138),"},{"lineNumber":566,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":567,"author":{"gitId":"TomLBZ"},"content":"     * Grey 4 color."},{"lineNumber":568,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":569,"author":{"gitId":"TomLBZ"},"content":"    Grey4(\"af87af\", 139),"},{"lineNumber":570,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":571,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple 5 color."},{"lineNumber":572,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":573,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple5(\"af87d7\", 140),"},{"lineNumber":574,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":575,"author":{"gitId":"TomLBZ"},"content":"     * Medium purple 6 color."},{"lineNumber":576,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":577,"author":{"gitId":"TomLBZ"},"content":"    MediumPurple6(\"af87ff\", 141),"},{"lineNumber":578,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":579,"author":{"gitId":"TomLBZ"},"content":"     * Gold color."},{"lineNumber":580,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":581,"author":{"gitId":"TomLBZ"},"content":"    Gold(\"afaf00\", 142),"},{"lineNumber":582,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":583,"author":{"gitId":"TomLBZ"},"content":"     * Dark khaki color."},{"lineNumber":584,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":585,"author":{"gitId":"TomLBZ"},"content":"    DarkKhaki(\"afaf5f\", 143),"},{"lineNumber":586,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":587,"author":{"gitId":"TomLBZ"},"content":"     * Navajo white color."},{"lineNumber":588,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":589,"author":{"gitId":"TomLBZ"},"content":"    NavajoWhite(\"afaf87\", 144),"},{"lineNumber":590,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":591,"author":{"gitId":"TomLBZ"},"content":"     * Grey 5 color."},{"lineNumber":592,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":593,"author":{"gitId":"TomLBZ"},"content":"    Grey5(\"afafaf\", 145),"},{"lineNumber":594,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":595,"author":{"gitId":"TomLBZ"},"content":"     * Light steel blue color."},{"lineNumber":596,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":597,"author":{"gitId":"TomLBZ"},"content":"    LightSteelBlue(\"afafd7\", 146),"},{"lineNumber":598,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":599,"author":{"gitId":"TomLBZ"},"content":"     * Light steel blue 1 color."},{"lineNumber":600,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":601,"author":{"gitId":"TomLBZ"},"content":"    LightSteelBlue1(\"afafff\", 147),"},{"lineNumber":602,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":603,"author":{"gitId":"TomLBZ"},"content":"     * Yellow 3 color."},{"lineNumber":604,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":605,"author":{"gitId":"TomLBZ"},"content":"    Yellow3(\"afd700\", 148),"},{"lineNumber":606,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":607,"author":{"gitId":"TomLBZ"},"content":"     * Dark olive green 1 color."},{"lineNumber":608,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":609,"author":{"gitId":"TomLBZ"},"content":"    DarkOliveGreen1(\"afd75f\", 149),"},{"lineNumber":610,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":611,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 4 color."},{"lineNumber":612,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":613,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen4(\"afd787\", 150),"},{"lineNumber":614,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":615,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 5 color."},{"lineNumber":616,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":617,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen5(\"afd7af\", 151),"},{"lineNumber":618,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":619,"author":{"gitId":"TomLBZ"},"content":"     * Light cyan color."},{"lineNumber":620,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":621,"author":{"gitId":"TomLBZ"},"content":"    LightCyan(\"afd7d7\", 152),"},{"lineNumber":622,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":623,"author":{"gitId":"TomLBZ"},"content":"     * Light sky blue 2 color."},{"lineNumber":624,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":625,"author":{"gitId":"TomLBZ"},"content":"    LightSkyBlue2(\"afd7ff\", 153),"},{"lineNumber":626,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":627,"author":{"gitId":"TomLBZ"},"content":"     * Green yellow color."},{"lineNumber":628,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":629,"author":{"gitId":"TomLBZ"},"content":"    GreenYellow(\"afff00\", 154),"},{"lineNumber":630,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":631,"author":{"gitId":"TomLBZ"},"content":"     * Dark olive green 2 color."},{"lineNumber":632,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":633,"author":{"gitId":"TomLBZ"},"content":"    DarkOliveGreen2(\"afff5f\", 155),"},{"lineNumber":634,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":635,"author":{"gitId":"TomLBZ"},"content":"     * Pale green 3 color."},{"lineNumber":636,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":637,"author":{"gitId":"TomLBZ"},"content":"    PaleGreen3(\"afff87\", 156),"},{"lineNumber":638,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":639,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 6 color."},{"lineNumber":640,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":641,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen6(\"afffaf\", 157),"},{"lineNumber":642,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":643,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 7 color."},{"lineNumber":644,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":645,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen7(\"afffd7\", 158),"},{"lineNumber":646,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":647,"author":{"gitId":"TomLBZ"},"content":"     * Pale turquoise 1 color."},{"lineNumber":648,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":649,"author":{"gitId":"TomLBZ"},"content":"    PaleTurquoise1(\"afffff\", 159),"},{"lineNumber":650,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":651,"author":{"gitId":"TomLBZ"},"content":"     * Red 2 color."},{"lineNumber":652,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":653,"author":{"gitId":"TomLBZ"},"content":"    Red2(\"d70000\", 160),"},{"lineNumber":654,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":655,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 3 color."},{"lineNumber":656,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":657,"author":{"gitId":"TomLBZ"},"content":"    DeepPink3(\"d7005f\", 161),"},{"lineNumber":658,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":659,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 4 color."},{"lineNumber":660,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":661,"author":{"gitId":"TomLBZ"},"content":"    DeepPink4(\"d70087\", 162),"},{"lineNumber":662,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":663,"author":{"gitId":"TomLBZ"},"content":"     * Magenta 1 color."},{"lineNumber":664,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":665,"author":{"gitId":"TomLBZ"},"content":"    Magenta1(\"d700af\", 163),"},{"lineNumber":666,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":667,"author":{"gitId":"TomLBZ"},"content":"     * Magenta 2 color."},{"lineNumber":668,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":669,"author":{"gitId":"TomLBZ"},"content":"    Magenta2(\"d700d7\", 164),"},{"lineNumber":670,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":671,"author":{"gitId":"TomLBZ"},"content":"     * Magenta 3 color."},{"lineNumber":672,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":673,"author":{"gitId":"TomLBZ"},"content":"    Magenta3(\"d700ff\", 165),"},{"lineNumber":674,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":675,"author":{"gitId":"TomLBZ"},"content":"     * Dark orange 1 color."},{"lineNumber":676,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":677,"author":{"gitId":"TomLBZ"},"content":"    DarkOrange1(\"d75f00\", 166),"},{"lineNumber":678,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":679,"author":{"gitId":"TomLBZ"},"content":"     * Indian red 1 color."},{"lineNumber":680,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":681,"author":{"gitId":"TomLBZ"},"content":"    IndianRed1(\"d75f5f\", 167),"},{"lineNumber":682,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":683,"author":{"gitId":"TomLBZ"},"content":"     * Hot pink 1 color."},{"lineNumber":684,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":685,"author":{"gitId":"TomLBZ"},"content":"    HotPink1(\"d75f87\", 168),"},{"lineNumber":686,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":687,"author":{"gitId":"TomLBZ"},"content":"     * Hot pink 2 color."},{"lineNumber":688,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":689,"author":{"gitId":"TomLBZ"},"content":"    HotPink2(\"d75faf\", 169),"},{"lineNumber":690,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":691,"author":{"gitId":"TomLBZ"},"content":"     * Orchid color."},{"lineNumber":692,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":693,"author":{"gitId":"TomLBZ"},"content":"    Orchid(\"d75fd7\", 170),"},{"lineNumber":694,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":695,"author":{"gitId":"TomLBZ"},"content":"     * Medium orchid 2 color."},{"lineNumber":696,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":697,"author":{"gitId":"TomLBZ"},"content":"    MediumOrchid2(\"d75fff\", 171),"},{"lineNumber":698,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":699,"author":{"gitId":"TomLBZ"},"content":"     * Orange 2 color."},{"lineNumber":700,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":701,"author":{"gitId":"TomLBZ"},"content":"    Orange2(\"d78700\", 172),"},{"lineNumber":702,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":703,"author":{"gitId":"TomLBZ"},"content":"     * Light salmon 1 color."},{"lineNumber":704,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":705,"author":{"gitId":"TomLBZ"},"content":"    LightSalmon1(\"d7875f\", 173),"},{"lineNumber":706,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":707,"author":{"gitId":"TomLBZ"},"content":"     * Light pink 1 color."},{"lineNumber":708,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":709,"author":{"gitId":"TomLBZ"},"content":"    LightPink1(\"d78787\", 174),"},{"lineNumber":710,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":711,"author":{"gitId":"TomLBZ"},"content":"     * Pink color."},{"lineNumber":712,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":713,"author":{"gitId":"TomLBZ"},"content":"    Pink(\"d787af\", 175),"},{"lineNumber":714,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":715,"author":{"gitId":"TomLBZ"},"content":"     * Plum 1 color."},{"lineNumber":716,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":717,"author":{"gitId":"TomLBZ"},"content":"    Plum1(\"d787d7\", 176),"},{"lineNumber":718,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":719,"author":{"gitId":"TomLBZ"},"content":"     * Violet color."},{"lineNumber":720,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":721,"author":{"gitId":"TomLBZ"},"content":"    Violet(\"d787ff\", 177),"},{"lineNumber":722,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":723,"author":{"gitId":"TomLBZ"},"content":"     * Gold 1 color."},{"lineNumber":724,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":725,"author":{"gitId":"TomLBZ"},"content":"    Gold1(\"d7af00\", 178),"},{"lineNumber":726,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":727,"author":{"gitId":"TomLBZ"},"content":"     * Light goldenrod color."},{"lineNumber":728,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":729,"author":{"gitId":"TomLBZ"},"content":"    LightGoldenrod(\"d7af5f\", 179),"},{"lineNumber":730,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":731,"author":{"gitId":"TomLBZ"},"content":"     * Tan color."},{"lineNumber":732,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":733,"author":{"gitId":"TomLBZ"},"content":"    Tan(\"d7af87\", 180),"},{"lineNumber":734,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":735,"author":{"gitId":"TomLBZ"},"content":"     * Misty rose color."},{"lineNumber":736,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":737,"author":{"gitId":"TomLBZ"},"content":"    MistyRose(\"d7afaf\", 181),"},{"lineNumber":738,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":739,"author":{"gitId":"TomLBZ"},"content":"     * Thistle color."},{"lineNumber":740,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":741,"author":{"gitId":"TomLBZ"},"content":"    Thistle(\"d7afd7\", 182),"},{"lineNumber":742,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":743,"author":{"gitId":"TomLBZ"},"content":"     * Plum 2 color."},{"lineNumber":744,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":745,"author":{"gitId":"TomLBZ"},"content":"    Plum2(\"d7afff\", 183),"},{"lineNumber":746,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":747,"author":{"gitId":"TomLBZ"},"content":"     * Yellow 4 color."},{"lineNumber":748,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":749,"author":{"gitId":"TomLBZ"},"content":"    Yellow4(\"d7d700\", 184),"},{"lineNumber":750,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":751,"author":{"gitId":"TomLBZ"},"content":"     * Khaki color."},{"lineNumber":752,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":753,"author":{"gitId":"TomLBZ"},"content":"    Khaki(\"d7d75f\", 185),"},{"lineNumber":754,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":755,"author":{"gitId":"TomLBZ"},"content":"     * Light goldenrod 1 color."},{"lineNumber":756,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":757,"author":{"gitId":"TomLBZ"},"content":"    LightGoldenrod1(\"d7d787\", 186),"},{"lineNumber":758,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":759,"author":{"gitId":"TomLBZ"},"content":"     * Light yellow color."},{"lineNumber":760,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":761,"author":{"gitId":"TomLBZ"},"content":"    LightYellow(\"d7d7af\", 187),"},{"lineNumber":762,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":763,"author":{"gitId":"TomLBZ"},"content":"     * Grey 6 color."},{"lineNumber":764,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":765,"author":{"gitId":"TomLBZ"},"content":"    Grey6(\"d7d7d7\", 188),"},{"lineNumber":766,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":767,"author":{"gitId":"TomLBZ"},"content":"     * Light steel blue 2 color."},{"lineNumber":768,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":769,"author":{"gitId":"TomLBZ"},"content":"    LightSteelBlue2(\"d7d7ff\", 189),"},{"lineNumber":770,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":771,"author":{"gitId":"TomLBZ"},"content":"     * Yellow 5 color."},{"lineNumber":772,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":773,"author":{"gitId":"TomLBZ"},"content":"    Yellow5(\"d7ff00\", 190),"},{"lineNumber":774,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":775,"author":{"gitId":"TomLBZ"},"content":"     * Dark olive green 4 color."},{"lineNumber":776,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":777,"author":{"gitId":"TomLBZ"},"content":"    DarkOliveGreen4(\"d7ff5f\", 191),"},{"lineNumber":778,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":779,"author":{"gitId":"TomLBZ"},"content":"     * Dark olive green 5 color."},{"lineNumber":780,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":781,"author":{"gitId":"TomLBZ"},"content":"    DarkOliveGreen5(\"d7ff87\", 192),"},{"lineNumber":782,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":783,"author":{"gitId":"TomLBZ"},"content":"     * Dark sea green 8 color."},{"lineNumber":784,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":785,"author":{"gitId":"TomLBZ"},"content":"    DarkSeaGreen8(\"d7ffaf\", 193),"},{"lineNumber":786,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":787,"author":{"gitId":"TomLBZ"},"content":"     * Honeydew color."},{"lineNumber":788,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":789,"author":{"gitId":"TomLBZ"},"content":"    Honeydew(\"d7ffd7\", 194),"},{"lineNumber":790,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":791,"author":{"gitId":"TomLBZ"},"content":"     * Light cyan 1 color."},{"lineNumber":792,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":793,"author":{"gitId":"TomLBZ"},"content":"    LightCyan1(\"d7ffff\", 195),"},{"lineNumber":794,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":795,"author":{"gitId":"TomLBZ"},"content":"     * Red 3 color."},{"lineNumber":796,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":797,"author":{"gitId":"TomLBZ"},"content":"    Red3(\"ff0000\", 196),"},{"lineNumber":798,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":799,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 5 color."},{"lineNumber":800,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":801,"author":{"gitId":"TomLBZ"},"content":"    DeepPink5(\"ff005f\", 197),"},{"lineNumber":802,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":803,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 6 color."},{"lineNumber":804,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":805,"author":{"gitId":"TomLBZ"},"content":"    DeepPink6(\"ff0087\", 198),"},{"lineNumber":806,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":807,"author":{"gitId":"TomLBZ"},"content":"     * Deep pink 7 color."},{"lineNumber":808,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":809,"author":{"gitId":"TomLBZ"},"content":"    DeepPink7(\"ff00af\", 199),"},{"lineNumber":810,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":811,"author":{"gitId":"TomLBZ"},"content":"     * Magenta 4 color."},{"lineNumber":812,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":813,"author":{"gitId":"TomLBZ"},"content":"    Magenta4(\"ff00d7\", 200),"},{"lineNumber":814,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":815,"author":{"gitId":"TomLBZ"},"content":"     * Magenta 5 color."},{"lineNumber":816,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":817,"author":{"gitId":"TomLBZ"},"content":"    Magenta5(\"ff00ff\", 201),"},{"lineNumber":818,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":819,"author":{"gitId":"TomLBZ"},"content":"     * Orange red color."},{"lineNumber":820,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":821,"author":{"gitId":"TomLBZ"},"content":"    OrangeRed(\"ff5f00\", 202),"},{"lineNumber":822,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":823,"author":{"gitId":"TomLBZ"},"content":"     * Indian red 2 color."},{"lineNumber":824,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":825,"author":{"gitId":"TomLBZ"},"content":"    IndianRed2(\"ff5f5f\", 203),"},{"lineNumber":826,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":827,"author":{"gitId":"TomLBZ"},"content":"     * Indian red 3 color."},{"lineNumber":828,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":829,"author":{"gitId":"TomLBZ"},"content":"    IndianRed3(\"ff5f87\", 204),"},{"lineNumber":830,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":831,"author":{"gitId":"TomLBZ"},"content":"     * Hot pink 3 color."},{"lineNumber":832,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":833,"author":{"gitId":"TomLBZ"},"content":"    HotPink3(\"ff5faf\", 205),"},{"lineNumber":834,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":835,"author":{"gitId":"TomLBZ"},"content":"     * Hot pink 4 color."},{"lineNumber":836,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":837,"author":{"gitId":"TomLBZ"},"content":"    HotPink4(\"ff5fd7\", 206),"},{"lineNumber":838,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":839,"author":{"gitId":"TomLBZ"},"content":"     * Medium orchid 3 color."},{"lineNumber":840,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":841,"author":{"gitId":"TomLBZ"},"content":"    MediumOrchid3(\"ff5fff\", 207),"},{"lineNumber":842,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":843,"author":{"gitId":"TomLBZ"},"content":"     * Dark orange 2 color."},{"lineNumber":844,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":845,"author":{"gitId":"TomLBZ"},"content":"    DarkOrange2(\"ff8700\", 208),"},{"lineNumber":846,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":847,"author":{"gitId":"TomLBZ"},"content":"     * Salmon color."},{"lineNumber":848,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":849,"author":{"gitId":"TomLBZ"},"content":"    Salmon(\"ff875f\", 209),"},{"lineNumber":850,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":851,"author":{"gitId":"TomLBZ"},"content":"     * Light coral color."},{"lineNumber":852,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":853,"author":{"gitId":"TomLBZ"},"content":"    LightCoral(\"ff8787\", 210),"},{"lineNumber":854,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":855,"author":{"gitId":"TomLBZ"},"content":"     * Pale violet red color."},{"lineNumber":856,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":857,"author":{"gitId":"TomLBZ"},"content":"    PaleVioletRed(\"ff87af\", 211),"},{"lineNumber":858,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":859,"author":{"gitId":"TomLBZ"},"content":"     * Orchid 1 color."},{"lineNumber":860,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":861,"author":{"gitId":"TomLBZ"},"content":"    Orchid1(\"ff87d7\", 212),"},{"lineNumber":862,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":863,"author":{"gitId":"TomLBZ"},"content":"     * Orchid 2 color."},{"lineNumber":864,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":865,"author":{"gitId":"TomLBZ"},"content":"    Orchid2(\"ff87ff\", 213),"},{"lineNumber":866,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":867,"author":{"gitId":"TomLBZ"},"content":"     * Orange 3 color."},{"lineNumber":868,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":869,"author":{"gitId":"TomLBZ"},"content":"    Orange3(\"ffaf00\", 214),"},{"lineNumber":870,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":871,"author":{"gitId":"TomLBZ"},"content":"     * Sandy brown color."},{"lineNumber":872,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":873,"author":{"gitId":"TomLBZ"},"content":"    SandyBrown(\"ffaf5f\", 215),"},{"lineNumber":874,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":875,"author":{"gitId":"TomLBZ"},"content":"     * Light salmon 2 color."},{"lineNumber":876,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":877,"author":{"gitId":"TomLBZ"},"content":"    LightSalmon2(\"ffaf87\", 216),"},{"lineNumber":878,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":879,"author":{"gitId":"TomLBZ"},"content":"     * Light pink 2 color."},{"lineNumber":880,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":881,"author":{"gitId":"TomLBZ"},"content":"    LightPink2(\"ffafaf\", 217),"},{"lineNumber":882,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":883,"author":{"gitId":"TomLBZ"},"content":"     * Pink 1 color."},{"lineNumber":884,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":885,"author":{"gitId":"TomLBZ"},"content":"    Pink1(\"ffafd7\", 218),"},{"lineNumber":886,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":887,"author":{"gitId":"TomLBZ"},"content":"     * Plum 3 color."},{"lineNumber":888,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":889,"author":{"gitId":"TomLBZ"},"content":"    Plum3(\"ffafff\", 219),"},{"lineNumber":890,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":891,"author":{"gitId":"TomLBZ"},"content":"     * Gold 2 color."},{"lineNumber":892,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":893,"author":{"gitId":"TomLBZ"},"content":"    Gold2(\"ffd700\", 220),"},{"lineNumber":894,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":895,"author":{"gitId":"TomLBZ"},"content":"     * Light goldenrod 2 color."},{"lineNumber":896,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":897,"author":{"gitId":"TomLBZ"},"content":"    LightGoldenrod2(\"ffd75f\", 221),"},{"lineNumber":898,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":899,"author":{"gitId":"TomLBZ"},"content":"     * Light goldenrod 3 color."},{"lineNumber":900,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":901,"author":{"gitId":"TomLBZ"},"content":"    LightGoldenrod3(\"ffd787\", 222),"},{"lineNumber":902,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":903,"author":{"gitId":"TomLBZ"},"content":"     * Navajo white 1 color."},{"lineNumber":904,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":905,"author":{"gitId":"TomLBZ"},"content":"    NavajoWhite1(\"ffd7af\", 223),"},{"lineNumber":906,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":907,"author":{"gitId":"TomLBZ"},"content":"     * Misty rose 1 color."},{"lineNumber":908,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":909,"author":{"gitId":"TomLBZ"},"content":"    MistyRose1(\"ffd7d7\", 224),"},{"lineNumber":910,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":911,"author":{"gitId":"TomLBZ"},"content":"     * Thistle 1 color."},{"lineNumber":912,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":913,"author":{"gitId":"TomLBZ"},"content":"    Thistle1(\"ffd7ff\", 225),"},{"lineNumber":914,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":915,"author":{"gitId":"TomLBZ"},"content":"     * Yellow 6 color."},{"lineNumber":916,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":917,"author":{"gitId":"TomLBZ"},"content":"    Yellow6(\"ffff00\", 226),"},{"lineNumber":918,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":919,"author":{"gitId":"TomLBZ"},"content":"     * Light goldenrod 4 color."},{"lineNumber":920,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":921,"author":{"gitId":"TomLBZ"},"content":"    LightGoldenrod4(\"ffff5f\", 227),"},{"lineNumber":922,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":923,"author":{"gitId":"TomLBZ"},"content":"     * Khaki 1 color."},{"lineNumber":924,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":925,"author":{"gitId":"TomLBZ"},"content":"    Khaki1(\"ffff87\", 228),"},{"lineNumber":926,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":927,"author":{"gitId":"TomLBZ"},"content":"     * Wheat 1 color."},{"lineNumber":928,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":929,"author":{"gitId":"TomLBZ"},"content":"    Wheat1(\"ffffaf\", 229),"},{"lineNumber":930,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":931,"author":{"gitId":"TomLBZ"},"content":"     * Cornsilk color."},{"lineNumber":932,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":933,"author":{"gitId":"TomLBZ"},"content":"    Cornsilk(\"ffffd7\", 230),"},{"lineNumber":934,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":935,"author":{"gitId":"TomLBZ"},"content":"     * Grey 100 color."},{"lineNumber":936,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":937,"author":{"gitId":"TomLBZ"},"content":"    Grey100(\"ffffff\", 231),"},{"lineNumber":938,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":939,"author":{"gitId":"TomLBZ"},"content":"     * Grey 7 color."},{"lineNumber":940,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":941,"author":{"gitId":"TomLBZ"},"content":"    Grey7(\"080808\", 232),"},{"lineNumber":942,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":943,"author":{"gitId":"TomLBZ"},"content":"     * Grey 8 color."},{"lineNumber":944,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":945,"author":{"gitId":"TomLBZ"},"content":"    Grey8(\"121212\", 233),"},{"lineNumber":946,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":947,"author":{"gitId":"TomLBZ"},"content":"     * Grey 9 color."},{"lineNumber":948,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":949,"author":{"gitId":"TomLBZ"},"content":"    Grey9(\"1c1c1c\", 234),"},{"lineNumber":950,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":951,"author":{"gitId":"TomLBZ"},"content":"     * Grey 10 color."},{"lineNumber":952,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":953,"author":{"gitId":"TomLBZ"},"content":"    Grey10(\"262626\", 235),"},{"lineNumber":954,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":955,"author":{"gitId":"TomLBZ"},"content":"     * Grey 11 color."},{"lineNumber":956,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":957,"author":{"gitId":"TomLBZ"},"content":"    Grey11(\"303030\", 236),"},{"lineNumber":958,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":959,"author":{"gitId":"TomLBZ"},"content":"     * Grey 12 color."},{"lineNumber":960,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":961,"author":{"gitId":"TomLBZ"},"content":"    Grey12(\"3a3a3a\", 237),"},{"lineNumber":962,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":963,"author":{"gitId":"TomLBZ"},"content":"     * Grey 13 color."},{"lineNumber":964,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":965,"author":{"gitId":"TomLBZ"},"content":"    Grey13(\"444444\", 238),"},{"lineNumber":966,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":967,"author":{"gitId":"TomLBZ"},"content":"     * Grey 14 color."},{"lineNumber":968,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":969,"author":{"gitId":"TomLBZ"},"content":"    Grey14(\"4e4e4e\", 239),"},{"lineNumber":970,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":971,"author":{"gitId":"TomLBZ"},"content":"     * Grey 15 color."},{"lineNumber":972,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":973,"author":{"gitId":"TomLBZ"},"content":"    Grey15(\"585858\", 240),"},{"lineNumber":974,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":975,"author":{"gitId":"TomLBZ"},"content":"     * Grey 16 color."},{"lineNumber":976,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":977,"author":{"gitId":"TomLBZ"},"content":"    Grey16(\"626262\", 241),"},{"lineNumber":978,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":979,"author":{"gitId":"TomLBZ"},"content":"     * Grey 17 color."},{"lineNumber":980,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":981,"author":{"gitId":"TomLBZ"},"content":"    Grey17(\"6c6c6c\", 242),"},{"lineNumber":982,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":983,"author":{"gitId":"TomLBZ"},"content":"     * Grey 18 color."},{"lineNumber":984,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":985,"author":{"gitId":"TomLBZ"},"content":"    Grey18(\"767676\", 243),"},{"lineNumber":986,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":987,"author":{"gitId":"TomLBZ"},"content":"     * Grey 19 color."},{"lineNumber":988,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":989,"author":{"gitId":"TomLBZ"},"content":"    Grey19(\"808080\", 244),"},{"lineNumber":990,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":991,"author":{"gitId":"TomLBZ"},"content":"     * Grey 20 color."},{"lineNumber":992,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":993,"author":{"gitId":"TomLBZ"},"content":"    Grey20(\"8a8a8a\", 245),"},{"lineNumber":994,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":995,"author":{"gitId":"TomLBZ"},"content":"     * Grey 21 color."},{"lineNumber":996,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":997,"author":{"gitId":"TomLBZ"},"content":"    Grey21(\"949494\", 246),"},{"lineNumber":998,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":999,"author":{"gitId":"TomLBZ"},"content":"     * Grey 22 color."},{"lineNumber":1000,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1001,"author":{"gitId":"TomLBZ"},"content":"    Grey22(\"9e9e9e\", 247),"},{"lineNumber":1002,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1003,"author":{"gitId":"TomLBZ"},"content":"     * Grey 23 color."},{"lineNumber":1004,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1005,"author":{"gitId":"TomLBZ"},"content":"    Grey23(\"a8a8a8\", 248),"},{"lineNumber":1006,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1007,"author":{"gitId":"TomLBZ"},"content":"     * Grey 24 color."},{"lineNumber":1008,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1009,"author":{"gitId":"TomLBZ"},"content":"    Grey24(\"b2b2b2\", 249),"},{"lineNumber":1010,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1011,"author":{"gitId":"TomLBZ"},"content":"     * Grey 25 color."},{"lineNumber":1012,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1013,"author":{"gitId":"TomLBZ"},"content":"    Grey25(\"bcbcbc\", 250),"},{"lineNumber":1014,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1015,"author":{"gitId":"TomLBZ"},"content":"     * Grey 26 color."},{"lineNumber":1016,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1017,"author":{"gitId":"TomLBZ"},"content":"    Grey26(\"c6c6c6\", 251),"},{"lineNumber":1018,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1019,"author":{"gitId":"TomLBZ"},"content":"     * Grey 27 color."},{"lineNumber":1020,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1021,"author":{"gitId":"TomLBZ"},"content":"    Grey27(\"d0d0d0\", 252),"},{"lineNumber":1022,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1023,"author":{"gitId":"TomLBZ"},"content":"     * Grey 28 color."},{"lineNumber":1024,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1025,"author":{"gitId":"TomLBZ"},"content":"    Grey28(\"dadada\", 253),"},{"lineNumber":1026,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1027,"author":{"gitId":"TomLBZ"},"content":"     * Grey 29 color."},{"lineNumber":1028,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1029,"author":{"gitId":"TomLBZ"},"content":"    Grey29(\"e4e4e4\", 254),"},{"lineNumber":1030,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1031,"author":{"gitId":"TomLBZ"},"content":"     * Grey 30 color."},{"lineNumber":1032,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1033,"author":{"gitId":"TomLBZ"},"content":"    Grey30(\"eeeeee\", 255);"},{"lineNumber":1034,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1035,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1036,"author":{"gitId":"TomLBZ"},"content":"     * The Red."},{"lineNumber":1037,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1038,"author":{"gitId":"TomLBZ"},"content":"    int red;"},{"lineNumber":1039,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1040,"author":{"gitId":"TomLBZ"},"content":"     * The Green."},{"lineNumber":1041,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1042,"author":{"gitId":"TomLBZ"},"content":"    int green;"},{"lineNumber":1043,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1044,"author":{"gitId":"TomLBZ"},"content":"     * The Blue."},{"lineNumber":1045,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1046,"author":{"gitId":"TomLBZ"},"content":"    int blue;"},{"lineNumber":1047,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1048,"author":{"gitId":"TomLBZ"},"content":"     * The Code."},{"lineNumber":1049,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1050,"author":{"gitId":"TomLBZ"},"content":"    int code;"},{"lineNumber":1051,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1052,"author":{"gitId":"TomLBZ"},"content":"     * The Codename."},{"lineNumber":1053,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1054,"author":{"gitId":"TomLBZ"},"content":"    String codename;"},{"lineNumber":1055,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1056,"author":{"gitId":"TomLBZ"},"content":"    Color(String colorCode, int code) {"},{"lineNumber":1057,"author":{"gitId":"TomLBZ"},"content":"        if (colorCode.length() !\u003d 6) {"},{"lineNumber":1058,"author":{"gitId":"TomLBZ"},"content":"            red \u003d 0;"},{"lineNumber":1059,"author":{"gitId":"TomLBZ"},"content":"            green \u003d 0;"},{"lineNumber":1060,"author":{"gitId":"TomLBZ"},"content":"            blue \u003d 0;"},{"lineNumber":1061,"author":{"gitId":"TomLBZ"},"content":"            this.code \u003d 0;"},{"lineNumber":1062,"author":{"gitId":"TomLBZ"},"content":"            codename \u003d \"000000\";"},{"lineNumber":1063,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":1064,"author":{"gitId":"TomLBZ"},"content":"            try {"},{"lineNumber":1065,"author":{"gitId":"TomLBZ"},"content":"                red \u003d Integer.parseInt(colorCode.substring(0, 1), 16);"},{"lineNumber":1066,"author":{"gitId":"TomLBZ"},"content":"                green \u003d Integer.parseInt(colorCode.substring(2, 3), 16);"},{"lineNumber":1067,"author":{"gitId":"TomLBZ"},"content":"                blue \u003d Integer.parseInt(colorCode.substring(4, 5), 16);"},{"lineNumber":1068,"author":{"gitId":"TomLBZ"},"content":"                codename \u003d colorCode;"},{"lineNumber":1069,"author":{"gitId":"TomLBZ"},"content":"                this.code \u003d code;"},{"lineNumber":1070,"author":{"gitId":"TomLBZ"},"content":"            } catch (Exception e) {"},{"lineNumber":1071,"author":{"gitId":"TomLBZ"},"content":"                red \u003d 0;"},{"lineNumber":1072,"author":{"gitId":"TomLBZ"},"content":"                green \u003d 0;"},{"lineNumber":1073,"author":{"gitId":"TomLBZ"},"content":"                blue \u003d 0;"},{"lineNumber":1074,"author":{"gitId":"TomLBZ"},"content":"                this.code \u003d 0;"},{"lineNumber":1075,"author":{"gitId":"TomLBZ"},"content":"                codename \u003d \"000000\";"},{"lineNumber":1076,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":1077,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":1078,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":1079,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":1080,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":1081,"author":{"gitId":"TomLBZ"},"content":"     * Gets from code."},{"lineNumber":1082,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":1083,"author":{"gitId":"TomLBZ"},"content":"     * @param code the code"},{"lineNumber":1084,"author":{"gitId":"TomLBZ"},"content":"     * @return the from code"},{"lineNumber":1085,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":1086,"author":{"gitId":"TomLBZ"},"content":"    public static Color getFromCode(int code) {"},{"lineNumber":1087,"author":{"gitId":"TomLBZ"},"content":"        for (Color c: Color.values()) {"},{"lineNumber":1088,"author":{"gitId":"TomLBZ"},"content":"            if (c.code \u003d\u003d code) {"},{"lineNumber":1089,"author":{"gitId":"TomLBZ"},"content":"                return c;"},{"lineNumber":1090,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":1091,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":1092,"author":{"gitId":"TomLBZ"},"content":"        return Color.Black;"},{"lineNumber":1093,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":1094,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":1094}},{"path":"src/main/java/visualize/ColoredString.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The type Colored string."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public class ColoredString {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    private String string;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"    private Color foreColor;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"    private Color backColor;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Colored string."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"     * @param string the string"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    public ColoredString(String string) {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        setString(string);"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        if (!string.equals(Sprite.IGNORE)) {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"            setForeColor(Color.White);"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"            setBackColor(Color.Black);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     * Sets string."},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"     * @param string the string"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    public void setString(String string) {"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"        this.string \u003d string;"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     * Sets fore color."},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     * @param color the color"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    public void setForeColor(Color color) {"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"        foreColor \u003d color;"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     * Sets back color."},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     * @param color the color"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    public void setBackColor(Color color) {"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        backColor \u003d color;"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"     * Bold."},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"    public void bold() {"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"        string \u003d \"\\u001b[1m\" + string;"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     * Underline."},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"    public void underline() {"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        string \u003d \"\\u001b[4m\" + string;"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     * Reversed color."},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    public void reversedColor() {"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        string \u003d \"\\u001b[7m\" + string;"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     * Sub string colored string."},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     * @param start the start"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"     * @param end   the end"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     * @return the colored string"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    public ColoredString subString(int start, int end) {"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        ColoredString output \u003d new ColoredString(string.substring(start, end));"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        output.setForeColor(foreColor);"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"        output.setBackColor(backColor);"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"        return output;"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"     * Get string."},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    public String get() {"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"        String strForeColor \u003d \"\";"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"        String strBackColor \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"        if (foreColor !\u003d null) {"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"            strForeColor \u003d \"\\u001b[38;5;\" + foreColor.code + \"m\";"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"        if (backColor !\u003d null) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"            strBackColor \u003d \"\\u001b[48;5;\" + backColor.code + \"m\";"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        return strForeColor + strBackColor + string.replace(Sprite.IGNORE, Sprite.SPACE) + \"\\u001b[0m\";"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        return get();"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":110}},{"path":"src/main/java/visualize/FancyCli.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.action.FocusAction;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Item;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import messages.MessageOptions;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.io.InputStream;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.io.PrintStream;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Logger;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":" * The type Fancy cli."},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"public class FancyCli extends Cli {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    private final Bitmap bmpList;"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    private final Bitmap bmpSel;"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    private final Color listBackground \u003d Color.DarkBlue;"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    private final Color selBackground \u003d Color.DarkMagenta;"},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"    private final Color foreground \u003d Color.getFromCode(255); // greyscale white"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    private final Color listBarColor \u003d Color.DarkGreen;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    private final Color selBarColor \u003d Color.LightCyan;"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"    private final Color selBarText \u003d Color.getFromCode(232); // greyscale black"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"    private final int maxX \u003d Constants.BITMAP_W - 1;"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    private final int maxListY \u003d Constants.BITMAP_LIST_H - 1;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    private final int maxSelY \u003d Constants.BITMAP_SEL_H - 1;"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    private int currentColor;"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FocusAction.class.getName());"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    private String[] listString;"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"    private String[] selString;"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    private int listIndex;"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    private int selIndex;"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    private boolean listFlipped \u003d false;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"    private boolean selFlipped \u003d false;"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Fancy cli."},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     * @param stream the stream"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     * @param input  the input"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"    public FancyCli(PrintStream stream, InputStream input) {"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        super(stream, input);"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        currentColor \u003d 29;"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        this.bmpList \u003d new Bitmap(Constants.BITMAP_W, Constants.BITMAP_LIST_H);"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        this.bmpSel \u003d new Bitmap(Constants.BITMAP_W, Constants.BITMAP_SEL_H);"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        listString \u003d new String[0];"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        selString \u003d new String[0];"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"        listIndex \u003d 0;"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"        selIndex \u003d 0;"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"     * Initialize."},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    public void initialize() {"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"        initializeList();"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"        initializeSel();"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     * Initialize list."},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    public void initializeList() {"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"        bmpList.flush(listBackground);"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawLine(0, 0, maxX, 0, Constants.INIT_LIST, listBarColor, foreground, false);"},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     * Initialize list."},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"     * @param text the text"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"    public void initializeList(String text) {"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"        bmpList.flush(listBackground);"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"        String drawnText \u003d text.replace(Constants.WIN_NEWLINE, Constants.ZERO_LENGTH_STRING);"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawLine(0, 0, maxX, 0, drawnText, listBarColor, foreground, false);"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"     * Initialize sel."},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"    public void initializeSel() {"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"        bmpSel.flush(selBackground);"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"        bmpSel.drawLine(0, 0, maxX, 0, Constants.INIT_SEL, selBarColor, selBarText, false);"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"     * Initialize sel."},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"     * @param text the text"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"    public void initializeSel(String text) {"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"        bmpSel.flush(selBackground);"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"        String drawnText \u003d text.replace(Constants.WIN_NEWLINE, Constants.ZERO_LENGTH_STRING);"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"        bmpSel.drawLine(0, 0, maxX, 0, drawnText, selBarColor, selBarText, false);"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    public void showWelcome() {"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"        initialize();"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(0, Constants.BANNER, 1, 1, Sprite.W, foreground, foreground);"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(6, Constants.BANNER, 1, 1, Sprite.e, foreground, foreground);"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(12, Constants.BANNER, 1, 1, Sprite.l, foreground, foreground);"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(18, Constants.BANNER, 1, 1, Sprite.c, foreground, foreground);"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(24, Constants.BANNER, 1, 1, Sprite.o, foreground, foreground);"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(30, Constants.BANNER, 1, 1, Sprite.m, foreground, foreground);"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(36, Constants.BANNER, 1, 1, Sprite.e, foreground, foreground);"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(45, Constants.BANNER, 1, 1, Sprite.t, foreground, foreground);"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(51, Constants.BANNER, 1, 1, Sprite.o, foreground, foreground);"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(60, Constants.BANNER, 1, 1, Sprite.D, foreground, foreground);"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(66, Constants.BANNER, 1, 1, Sprite.o, foreground, foreground);"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(72, Constants.BANNER, 1, 1, Sprite.m, foreground, foreground);"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(78, Constants.BANNER, 1, 1, Sprite.S, foreground, foreground);"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(84, Constants.BANNER, 1, 1, Sprite.u, foreground, foreground);"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"        bmpList.drawSprite(90, Constants.BANNER, 1, 1, Sprite.n, foreground, foreground);"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        draw();"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"     * Show block."},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"     * @param x             the x"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"     * @param y             the y"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"     * @param width         the width"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"     * @param height        the height"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"     * @param rawInput      the raw input"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"     * @param isDisplayMode the is display mode"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"    public void showBlock(int x, int y, int width, int height, String rawInput, boolean isDisplayMode) {"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"        int startIndex \u003d 0;"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"        int deltaY \u003d 0;"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"        int myWidth \u003d isDisplayMode ? width : maxX - x;"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"        int myHeight \u003d isDisplayMode ? height : 1;"},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"        int maxY \u003d isDisplayMode ? maxListY : maxSelY;"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"        int maxLen \u003d Math.min(myWidth * myHeight, rawInput.length());"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"        String input \u003d rawInput.substring(0, maxLen);"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"        boolean isBroken \u003d false;"},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"        LOGGER.entering(getClass().getName(), \"UI fancy logger\");"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"        if (isDisplayMode) {"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"            if ((y - 1) / Constants.CELL_H % 2 \u003d\u003d 0) { // even lines"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"                if (currentColor \u003d\u003d 61 || currentColor \u003d\u003d 55) {"},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"                    currentColor \u003d 23;"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"                } else if (currentColor \u003d\u003d 23) {"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"                    currentColor \u003d 29;"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"                    currentColor \u003d 23;"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"                if (currentColor \u003d\u003d 23 || currentColor \u003d\u003d 29) {"},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"                    currentColor \u003d 55;"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"                } else if (currentColor \u003d\u003d 61) {"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"                    currentColor \u003d 55;"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"                    currentColor \u003d 61;"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"        while (startIndex + myWidth - 1 \u003c input.length()) {"},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"            if (y + deltaY \u003e maxY) {"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"                isBroken \u003d true;"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"            String string \u003d input.substring(startIndex, startIndex + myWidth);"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"            startIndex +\u003d myWidth;"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"            fillCellLine(x, y + deltaY, myWidth, isDisplayMode, string);"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"            deltaY++;"},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"            if (deltaY \u003e\u003d myHeight) {"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"                isBroken \u003d true;"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"        if (y + deltaY \u003e maxY) {"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"            isBroken \u003d true;"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"        if (!isBroken) {"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"            String string \u003d input.substring(startIndex);"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"            fillCellLine(x, y + deltaY, myWidth, isDisplayMode, string);"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"    private void fillCellLine(int x, int y, int width, boolean isDisplayMode, String string) {"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"        LOGGER.log(Level.INFO, \"Successfully filled cell\");"},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"        Color backColor \u003d isDisplayMode ? Color.getFromCode(currentColor) : selBackground;"},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"        if (isDisplayMode) {"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"            bmpList.drawLine(x, y, x + width - 1, y, string, backColor, foreground, false);"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"            bmpSel.drawLine(x, y, x + width - 1, y, string, backColor, foreground, false);"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"     * Show text."},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"     * @param input         the input"},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"     * @param isDisplayMode the is display mode"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"     * @param indexState    the index state"},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"    public void showText(String input, boolean isDisplayMode, MessageOptions indexState) {"},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"        String wrappedText \u003d wrapStringArray(input.split(Constants.WIN_NEWLINE));"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"        currentColor \u003d 29;"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"        String[] lines \u003d wrappedText.split(Constants.WIN_NEWLINE);"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"        if (lines.length \u003d\u003d 0) {"},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"        if (isDisplayMode) {"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"            initializeList(lines[0]);"},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"            bmpSel.drawLine(0, 0, maxX, 0,"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"                     \"This command did not update the text region. Keeping the last content:\","},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"                    selBarColor, selBarText, false);"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"            initializeSel(lines[0]);"},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"        switch (indexState) {"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"        case INDEXED_NUM:"},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"            for (int i \u003d 1; i \u003c lines.length; i++) {"},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"                lines[i] \u003d i + Constants.DOT + Constants.SPACE + lines[i];"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"        case INDEXED_ABC:"},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"            for (int i \u003d 1; i \u003c lines.length; i++) {"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"                lines[i] \u003d (i + Constants.LETTER_OFFSET) + Constants.DOT + Constants.SPACE + lines[i];"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":"        default:"},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"            break;"},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"        int y \u003d Constants.BANNER;"},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"        int x \u003d 0;"},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"        int maxY \u003d isDisplayMode ? maxListY : maxSelY;"},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 1; i \u003c lines.length; i++) {"},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"            String line \u003d lines[i];"},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"            showBlock(x, y, Constants.CELL_W, Constants.CELL_H, line, isDisplayMode);"},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"            if (isDisplayMode) {"},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"                x +\u003d Constants.CELL_W;"},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"                if (x + Constants.CELL_W - 1 \u003e maxX) {"},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"                    x \u003d 0;"},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"                    y +\u003d Constants.CELL_H;"},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"                y++;"},{"lineNumber":249,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":250,"author":{"gitId":"TomLBZ"},"content":"            if (y \u003e maxY) {"},{"lineNumber":251,"author":{"gitId":"TomLBZ"},"content":"                break;"},{"lineNumber":252,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":253,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":256,"author":{"gitId":"TomLBZ"},"content":"    @Override"},{"lineNumber":257,"author":{"gitId":"TomLBZ"},"content":"    public void showText(String input) {"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":"        showText(input, false, MessageOptions.NOT_INDEXED);"},{"lineNumber":259,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":261,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":"     * Update."},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"     * @param input         the input"},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"     * @param data         the data"},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"    public void update(String input, Data data) {"},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"        selFlipped \u003d false;"},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":"        listFlipped \u003d false;"},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"        String wrappedInput \u003d wrapStringArray(input.split(Constants.WIN_NEWLINE));"},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"        if (freshlySwitched) {"},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":"            String replay \u003d data.lastInput;"},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"            MessageOptions replayOption \u003d data.lastIndexOption;"},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":"            if (replay \u003d\u003d null || replay.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"                showWelcome();"},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":277,"author":{"gitId":"TomLBZ"},"content":"                replay \u003d \"Keeping last output: \" + Constants.WIN_NEWLINE + replay;"},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":"                boolean displayMode \u003d replayOption !\u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"                separatePages(replay, displayMode);"},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":"                fixIndex();"},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"                if (displayMode) {"},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"                    initializeSel();"},{"lineNumber":283,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":284,"author":{"gitId":"TomLBZ"},"content":"                    refreshList(data);"},{"lineNumber":285,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"                showText(getShownText(displayMode), displayMode, replayOption);"},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":"                draw();"},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":289,"author":{"gitId":"TomLBZ"},"content":"            freshlySwitched \u003d false;"},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":291,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"TomLBZ"},"content":"        if (wrappedInput.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":293,"author":{"gitId":"TomLBZ"},"content":"            showText(Constants.ZERO_LENGTH_STRING);"},{"lineNumber":294,"author":{"gitId":"TomLBZ"},"content":"        } else if (wrappedInput.contains(Constants.BMP_LIST_SWITCH)"},{"lineNumber":295,"author":{"gitId":"TomLBZ"},"content":"                || wrappedInput.contains(Constants.BMP_SEL_SWITCH)) {"},{"lineNumber":296,"author":{"gitId":"TomLBZ"},"content":"            flipPage(wrappedInput);"},{"lineNumber":297,"author":{"gitId":"TomLBZ"},"content":"            if (!data.lastInput.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":298,"author":{"gitId":"TomLBZ"},"content":"                if (listString.length \u003e 0) {"},{"lineNumber":299,"author":{"gitId":"TomLBZ"},"content":"                    String shownText \u003d getShownText(true);"},{"lineNumber":300,"author":{"gitId":"TomLBZ"},"content":"                    if (!listFlipped) {"},{"lineNumber":301,"author":{"gitId":"TomLBZ"},"content":"                        shownText \u003d shownText.replaceFirst(\".*\" + Constants.WIN_NEWLINE, Constants.ONLY_ONE_PAGE);"},{"lineNumber":302,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":303,"author":{"gitId":"TomLBZ"},"content":"                    showText(shownText, true, MessageOptions.INDEXED_NUM);"},{"lineNumber":304,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":305,"author":{"gitId":"TomLBZ"},"content":"                    showText(Constants.ONLY_ONE_PAGE, true, MessageOptions.INDEXED_NUM);"},{"lineNumber":306,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":307,"author":{"gitId":"TomLBZ"},"content":"                if (selString.length \u003e 0) {"},{"lineNumber":308,"author":{"gitId":"TomLBZ"},"content":"                    String shownText \u003d getShownText(false);"},{"lineNumber":309,"author":{"gitId":"TomLBZ"},"content":"                    if (!selFlipped) {"},{"lineNumber":310,"author":{"gitId":"TomLBZ"},"content":"                        shownText \u003d shownText.replaceFirst(\".*\" + Constants.WIN_NEWLINE, Constants.ONLY_ONE_PAGE);"},{"lineNumber":311,"author":{"gitId":"TomLBZ"},"content":"                    }"},{"lineNumber":312,"author":{"gitId":"TomLBZ"},"content":"                    showText(shownText, false, MessageOptions.NOT_INDEXED);"},{"lineNumber":313,"author":{"gitId":"TomLBZ"},"content":"                } else {"},{"lineNumber":314,"author":{"gitId":"TomLBZ"},"content":"                    showText(Constants.ONLY_ONE_PAGE, false, MessageOptions.NOT_INDEXED);"},{"lineNumber":315,"author":{"gitId":"TomLBZ"},"content":"                }"},{"lineNumber":316,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":317,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":318,"author":{"gitId":"TomLBZ"},"content":"            boolean displayMode \u003d data.indexOption !\u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":319,"author":{"gitId":"TomLBZ"},"content":"            if (!displayMode) {"},{"lineNumber":320,"author":{"gitId":"TomLBZ"},"content":"                refreshList(data);"},{"lineNumber":321,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":322,"author":{"gitId":"TomLBZ"},"content":"            separatePages(wrappedInput, displayMode);"},{"lineNumber":323,"author":{"gitId":"TomLBZ"},"content":"            fixIndex();"},{"lineNumber":324,"author":{"gitId":"TomLBZ"},"content":"            showText(getShownText(displayMode), displayMode, data.indexOption);"},{"lineNumber":325,"author":{"gitId":"TomLBZ"},"content":"            data.lastInput \u003d wrappedInput;"},{"lineNumber":326,"author":{"gitId":"TomLBZ"},"content":"            data.lastIndexOption \u003d data.indexOption;"},{"lineNumber":327,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":328,"author":{"gitId":"TomLBZ"},"content":"        data.indexOption \u003d MessageOptions.NOT_INDEXED;"},{"lineNumber":329,"author":{"gitId":"TomLBZ"},"content":"        draw();"},{"lineNumber":330,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":332,"author":{"gitId":"TomLBZ"},"content":"    private void refreshList(Data data) {"},{"lineNumber":333,"author":{"gitId":"TomLBZ"},"content":"        if (listString !\u003d null \u0026\u0026 listString.length \u003e 0) {"},{"lineNumber":334,"author":{"gitId":"TomLBZ"},"content":"            StringBuilder refreshBuilder \u003d new StringBuilder(listString[0].split(Constants.WIN_NEWLINE)[0]);"},{"lineNumber":335,"author":{"gitId":"TomLBZ"},"content":"            refreshBuilder.append(Constants.WIN_NEWLINE);"},{"lineNumber":336,"author":{"gitId":"TomLBZ"},"content":"            for (Item item : data.target) {"},{"lineNumber":337,"author":{"gitId":"TomLBZ"},"content":"                refreshBuilder.append(item.toString()).append(Constants.WIN_NEWLINE);"},{"lineNumber":338,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":339,"author":{"gitId":"TomLBZ"},"content":"            separatePages(refreshBuilder.toString(), true);"},{"lineNumber":340,"author":{"gitId":"TomLBZ"},"content":"            fixIndex();"},{"lineNumber":341,"author":{"gitId":"TomLBZ"},"content":"            showText(getShownText(true), true, MessageOptions.INDEXED_NUM);"},{"lineNumber":342,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":343,"author":{"gitId":"TomLBZ"},"content":"            initializeList();"},{"lineNumber":344,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":346,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":347,"author":{"gitId":"TomLBZ"},"content":"    private void flipPage(String input) {"},{"lineNumber":348,"author":{"gitId":"TomLBZ"},"content":"        boolean isList \u003d input.contains(Constants.BMP_LIST_SWITCH);"},{"lineNumber":349,"author":{"gitId":"TomLBZ"},"content":"        boolean isSel \u003d input.contains(Constants.BMP_SEL_SWITCH);"},{"lineNumber":350,"author":{"gitId":"TomLBZ"},"content":"        String number \u003d input;"},{"lineNumber":351,"author":{"gitId":"TomLBZ"},"content":"        if (isList) {"},{"lineNumber":352,"author":{"gitId":"TomLBZ"},"content":"            number \u003d number.replace(Constants.BMP_LIST_SWITCH, Constants.ZERO_LENGTH_STRING);"},{"lineNumber":353,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":354,"author":{"gitId":"TomLBZ"},"content":"        if (isSel) {"},{"lineNumber":355,"author":{"gitId":"TomLBZ"},"content":"            number \u003d number.replace(Constants.BMP_SEL_SWITCH, Constants.ZERO_LENGTH_STRING);"},{"lineNumber":356,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":357,"author":{"gitId":"TomLBZ"},"content":"        int num \u003d Integer.parseInt(number.trim());"},{"lineNumber":358,"author":{"gitId":"TomLBZ"},"content":"        int oldListIndex \u003d listIndex;"},{"lineNumber":359,"author":{"gitId":"TomLBZ"},"content":"        listIndex \u003d flipNumber(listIndex, isList, num, listString.length);"},{"lineNumber":360,"author":{"gitId":"TomLBZ"},"content":"        listFlipped \u003d !isList || (oldListIndex !\u003d listIndex);"},{"lineNumber":361,"author":{"gitId":"TomLBZ"},"content":"        int oldSelIndex \u003d selIndex;"},{"lineNumber":362,"author":{"gitId":"TomLBZ"},"content":"        selIndex \u003d flipNumber(selIndex, isSel, num, selString.length);"},{"lineNumber":363,"author":{"gitId":"TomLBZ"},"content":"        selFlipped \u003d !isSel || (oldSelIndex !\u003d selIndex);"},{"lineNumber":364,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":366,"author":{"gitId":"TomLBZ"},"content":"    private int flipNumber(int currentNumber, boolean condition, int increment, int max) {"},{"lineNumber":367,"author":{"gitId":"TomLBZ"},"content":"        int result \u003d currentNumber;"},{"lineNumber":368,"author":{"gitId":"TomLBZ"},"content":"        if (condition \u0026\u0026 max \u003e 1) {"},{"lineNumber":369,"author":{"gitId":"TomLBZ"},"content":"            result +\u003d increment;"},{"lineNumber":370,"author":{"gitId":"TomLBZ"},"content":"            if (result \u003e max - 1) {"},{"lineNumber":371,"author":{"gitId":"TomLBZ"},"content":"                result -\u003d max;"},{"lineNumber":372,"author":{"gitId":"TomLBZ"},"content":"            } else if (result \u003c 0) {"},{"lineNumber":373,"author":{"gitId":"TomLBZ"},"content":"                result +\u003d max;"},{"lineNumber":374,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":375,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":376,"author":{"gitId":"TomLBZ"},"content":"        return result;"},{"lineNumber":377,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":379,"author":{"gitId":"TomLBZ"},"content":"    private void fixIndex() {"},{"lineNumber":380,"author":{"gitId":"TomLBZ"},"content":"        if (listString \u003d\u003d null || listString.length \u003d\u003d 0) {"},{"lineNumber":381,"author":{"gitId":"TomLBZ"},"content":"            listIndex \u003d 0;"},{"lineNumber":382,"author":{"gitId":"TomLBZ"},"content":"        } else if (listIndex \u003e\u003d listString.length) {"},{"lineNumber":383,"author":{"gitId":"TomLBZ"},"content":"            listIndex \u003d listString.length - 1;"},{"lineNumber":384,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":385,"author":{"gitId":"TomLBZ"},"content":"        if (selString \u003d\u003d null || selString.length \u003d\u003d 0) {"},{"lineNumber":386,"author":{"gitId":"TomLBZ"},"content":"            selIndex \u003d 0;"},{"lineNumber":387,"author":{"gitId":"TomLBZ"},"content":"        } else if (selIndex \u003e\u003d selString.length) {"},{"lineNumber":388,"author":{"gitId":"TomLBZ"},"content":"            selIndex \u003d selString.length - 1;"},{"lineNumber":389,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":390,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":392,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":393,"author":{"gitId":"TomLBZ"},"content":"     * Gets shown text."},{"lineNumber":394,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":395,"author":{"gitId":"TomLBZ"},"content":"     * @param isDisplayMode the is display mode"},{"lineNumber":396,"author":{"gitId":"TomLBZ"},"content":"     * @return the shown text"},{"lineNumber":397,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":398,"author":{"gitId":"TomLBZ"},"content":"    String getShownText(boolean isDisplayMode) {"},{"lineNumber":399,"author":{"gitId":"TomLBZ"},"content":"        if (isDisplayMode) {"},{"lineNumber":400,"author":{"gitId":"TomLBZ"},"content":"            return listString[listIndex];"},{"lineNumber":401,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":402,"author":{"gitId":"TomLBZ"},"content":"            return selString[selIndex];"},{"lineNumber":403,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":404,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":406,"author":{"gitId":"TomLBZ"},"content":"    private void draw() {"},{"lineNumber":407,"author":{"gitId":"TomLBZ"},"content":"        stream.print(bmpList.get());"},{"lineNumber":408,"author":{"gitId":"TomLBZ"},"content":"        stream.print(bmpSel.get());"},{"lineNumber":409,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":410,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":411,"author":{"gitId":"TomLBZ"},"content":"    private void separatePages(String input, boolean isDisplayMode) {"},{"lineNumber":412,"author":{"gitId":"TomLBZ"},"content":"        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":413,"author":{"gitId":"TomLBZ"},"content":"            return;"},{"lineNumber":414,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":415,"author":{"gitId":"TomLBZ"},"content":"        String[] lines \u003d input.split(Constants.WIN_NEWLINE);"},{"lineNumber":416,"author":{"gitId":"TomLBZ"},"content":"        int numLines \u003d lines.length - 1;"},{"lineNumber":417,"author":{"gitId":"TomLBZ"},"content":"        if (isDisplayMode) {"},{"lineNumber":418,"author":{"gitId":"TomLBZ"},"content":"            int cellNum \u003d (bmpList.width / Constants.CELL_W) * ((bmpList.height - 1) / Constants.CELL_H);"},{"lineNumber":419,"author":{"gitId":"TomLBZ"},"content":"            if (numLines \u003c\u003d cellNum) {"},{"lineNumber":420,"author":{"gitId":"TomLBZ"},"content":"                listString \u003d new String[]{input};"},{"lineNumber":421,"author":{"gitId":"TomLBZ"},"content":"                return;"},{"lineNumber":422,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":423,"author":{"gitId":"TomLBZ"},"content":"            int pages \u003d (int) Math.ceil((double) numLines / (double) cellNum);"},{"lineNumber":424,"author":{"gitId":"TomLBZ"},"content":"            listString \u003d groupStrings(lines, pages, cellNum, true);"},{"lineNumber":425,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":426,"author":{"gitId":"TomLBZ"},"content":"            numLines++;"},{"lineNumber":427,"author":{"gitId":"TomLBZ"},"content":"            int lineNum \u003d bmpSel.height - 1;"},{"lineNumber":428,"author":{"gitId":"TomLBZ"},"content":"            if (numLines \u003c\u003d lineNum) {"},{"lineNumber":429,"author":{"gitId":"TomLBZ"},"content":"                selString \u003d new String[]{input};"},{"lineNumber":430,"author":{"gitId":"TomLBZ"},"content":"                return;"},{"lineNumber":431,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":432,"author":{"gitId":"TomLBZ"},"content":"            int pages \u003d (int) Math.ceil((double) numLines / (double) lineNum);"},{"lineNumber":433,"author":{"gitId":"TomLBZ"},"content":"            selString \u003d groupStrings(lines, pages, lineNum, false);"},{"lineNumber":434,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":435,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":436,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":437,"author":{"gitId":"TomLBZ"},"content":"    private boolean isIntString(String strNum) {"},{"lineNumber":438,"author":{"gitId":"TomLBZ"},"content":"        if (strNum \u003d\u003d null) {"},{"lineNumber":439,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":440,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":441,"author":{"gitId":"TomLBZ"},"content":"        try {"},{"lineNumber":442,"author":{"gitId":"TomLBZ"},"content":"            int d \u003d Integer.parseInt(strNum);"},{"lineNumber":443,"author":{"gitId":"TomLBZ"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":444,"author":{"gitId":"TomLBZ"},"content":"            return false;"},{"lineNumber":445,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":446,"author":{"gitId":"TomLBZ"},"content":"        return true;"},{"lineNumber":447,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":449,"author":{"gitId":"TomLBZ"},"content":"    private String[] groupStrings(String[] strings, int groups, int groupLength, boolean isDisplayMode) {"},{"lineNumber":450,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder[] builders \u003d new StringBuilder[groups];"},{"lineNumber":451,"author":{"gitId":"TomLBZ"},"content":"        String heading \u003d isDisplayMode ? strings[0] : Constants.TEXT_HEADER;"},{"lineNumber":452,"author":{"gitId":"TomLBZ"},"content":"        String paged \u003d Constants.PAGED;"},{"lineNumber":453,"author":{"gitId":"TomLBZ"},"content":"        if (isDisplayMode) {"},{"lineNumber":454,"author":{"gitId":"TomLBZ"},"content":"            paged \u003d paged.replace(\"next\", \"next i\").replace(\"prev\", \"prev i\");"},{"lineNumber":455,"author":{"gitId":"TomLBZ"},"content":"        } else {"},{"lineNumber":456,"author":{"gitId":"TomLBZ"},"content":"            paged \u003d paged.replace(\"next\", \"next s\").replace(\"prev\", \"prev s\");"},{"lineNumber":457,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":458,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c groups; i++) {"},{"lineNumber":459,"author":{"gitId":"TomLBZ"},"content":"            String numString;"},{"lineNumber":460,"author":{"gitId":"TomLBZ"},"content":"            String suffix;"},{"lineNumber":461,"author":{"gitId":"TomLBZ"},"content":"            String[] heads \u003d heading.replace(Constants.PARAM_SIGNATURE, Constants.LINE_UNIT)"},{"lineNumber":462,"author":{"gitId":"TomLBZ"},"content":"                    .split(Constants.LINE_UNIT);"},{"lineNumber":463,"author":{"gitId":"TomLBZ"},"content":"            numString \u003d heads[heads.length - 1].replace(Constants.PARAM_RIGHT, Constants.LINE_UNIT)"},{"lineNumber":464,"author":{"gitId":"TomLBZ"},"content":"                    .split(Constants.LINE_UNIT)[0];"},{"lineNumber":465,"author":{"gitId":"TomLBZ"},"content":"            if (isIntString(numString)) {"},{"lineNumber":466,"author":{"gitId":"TomLBZ"},"content":"                suffix \u003d \" (\" + numString + \") \" + paged;"},{"lineNumber":467,"author":{"gitId":"TomLBZ"},"content":"            } else {"},{"lineNumber":468,"author":{"gitId":"TomLBZ"},"content":"                suffix \u003d heading.replace(heads[0], Constants.ZERO_LENGTH_STRING);"},{"lineNumber":469,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":470,"author":{"gitId":"TomLBZ"},"content":"            String bracket \u003d Constants.SPACE + Constants.PARAM_LEFT + (i + 1) + Constants.PARAM_RIGHT + Constants.SPACE;"},{"lineNumber":471,"author":{"gitId":"TomLBZ"},"content":"            builders[i] \u003d new StringBuilder(heading.replace(suffix, Constants.ZERO_LENGTH_STRING))"},{"lineNumber":472,"author":{"gitId":"TomLBZ"},"content":"                    .append(bracket).append(paged).append(Constants.WIN_NEWLINE);"},{"lineNumber":473,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":474,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d isDisplayMode ? 1 : 0; i \u003c strings.length; i++) {"},{"lineNumber":475,"author":{"gitId":"TomLBZ"},"content":"            int counter \u003d isDisplayMode ? (i - 1) : i;"},{"lineNumber":476,"author":{"gitId":"TomLBZ"},"content":"            int currentGroup \u003d counter / groupLength;"},{"lineNumber":477,"author":{"gitId":"TomLBZ"},"content":"            builders[currentGroup].append(strings[i]).append(Constants.WIN_NEWLINE);"},{"lineNumber":478,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"TomLBZ"},"content":"        String[] groupedStrings \u003d new String[groups];"},{"lineNumber":480,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c groups; i++) {"},{"lineNumber":481,"author":{"gitId":"TomLBZ"},"content":"            groupedStrings[i] \u003d builders[i].toString();"},{"lineNumber":482,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":483,"author":{"gitId":"TomLBZ"},"content":"        return groupedStrings;"},{"lineNumber":484,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":485,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":485}},{"path":"src/main/java/visualize/Sprite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":" * The enum Sprite."},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"public enum Sprite {"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"     * Square sprite."},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    SQUARE(\"+\",1,1),"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"     * Hollowsquare sprite."},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    HOLLOWSQUARE(\"++++`++++\",3,3),"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"     * Zero sprite."},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"    ZERO(\"++++`++`++`++++\",3,5),"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     * One sprite."},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    ONE(\"``+``+``+``+``+\",3,5),"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     * Two sprite."},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    TWO(\"++++`+`+`+``+++\",3,5),"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"     * Three sprite."},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"    THREE(\"+++``++++``++++\",3,5),"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"     * Four sprite."},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"    FOUR(\"+`++`++++``+``+\",3,5),"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"     * Five sprite."},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    FIVE(\"++++``+++``++++\",3,5),"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     * Six sprite."},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"    SIX(\"++++``++++`++++\",3,5),"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"     * Seven sprite."},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"    SEVEN(\"+++``+`+``+``+`\",3,5),"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"     * Eight sprite."},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"    EIGHT(\"++++`+++++`++++\",3,5),"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"     * Nine sprite."},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    NINE(\"++++`++++``++++\",3,5),"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"     * A sprite."},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    A(\"``+```+`+`++++++```++```+\",5,5),"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"     * B sprite."},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"    B(\"++++`+```+++++`+```+++++`\",5,5),"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     * C sprite."},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"    C(\"`+++`+```++````+```+`+++`\",5,5),"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":"     * D sprite."},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"    D(\"+++``+``+`+```++``+`+++``\",5,5),"},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     * E sprite."},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"    E(\"++++++````++++++````+++++\",5,5),"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"     * F sprite."},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":"    F(\"++++++````++++++````+````\",5,5),"},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"     * G sprite."},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"    G(\"`+++`+````+``+++```+`+++`\",5,5),"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"     * H sprite."},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"    H(\"+```++```+++++++```++```+\",5,5),"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":"     * sprite."},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"    I(\"`+++```+````+````+```+++`\",5,5),"},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"     * J sprite."},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    J(\"`+++```+````+````+```++``\",5,5),"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"     * K sprite."},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"    K(\"+```++``+`+++``+``+`+```+\",5,5),"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"     * L sprite."},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    L(\"+````+````+````+````+++++\",5,5),"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"     * M sprite."},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"    M(\"+```+++`+++`+`++`+`++```+\",5,5),"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"     * N sprite."},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"    N(\"+```+++``++`+`++``+++```+\",5,5),"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"     * O sprite."},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"    O(\"`+++`+```++```++```+`+++`\",5,5),"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"     * P sprite."},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"    P(\"++++`+```+++++`+````+````\",5,5),"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"     * Q sprite."},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":"    Q(\"`+++`+```++`+`++``+``++`+\",5,5),"},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"     * R sprite."},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"    R(\"`+++`+```+++++`+``+`+```+\",5,5),"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"     * S sprite."},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"    S(\"`+++++`````+++`````+++++`\",5,5),"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"     * T sprite."},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"    T(\"+++++``+````+````+````+``\",5,5),"},{"lineNumber":140,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"TomLBZ"},"content":"     * U sprite."},{"lineNumber":142,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"TomLBZ"},"content":"    U(\"+```++```++```++```+`+++`\",5,5),"},{"lineNumber":144,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"TomLBZ"},"content":"     * V sprite."},{"lineNumber":146,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"TomLBZ"},"content":"    V(\"+```++```+`+`+``+`+```+``\",5,5),"},{"lineNumber":148,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"TomLBZ"},"content":"     * W sprite."},{"lineNumber":150,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"TomLBZ"},"content":"    W(\"+```++`+`++`+`+`+`+``+`+`\",5,5),"},{"lineNumber":152,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"TomLBZ"},"content":"     * X sprite."},{"lineNumber":154,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"TomLBZ"},"content":"    X(\"+```+`+`+```+```+`+`+```+\",5,5),"},{"lineNumber":156,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"TomLBZ"},"content":"     * Y sprite."},{"lineNumber":158,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"TomLBZ"},"content":"    Y(\"+```+`+`+```+````+````+``\",5,5),"},{"lineNumber":160,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"TomLBZ"},"content":"     * Z sprite."},{"lineNumber":162,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"TomLBZ"},"content":"    Z(\"++++++``+```+```+``++++++\",5,5),"},{"lineNumber":164,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":165,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"TomLBZ"},"content":"     * A sprite."},{"lineNumber":167,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"TomLBZ"},"content":"    a(\"`+++`````+`+++++``++`++`+\",5,5),"},{"lineNumber":169,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"TomLBZ"},"content":"     * B sprite."},{"lineNumber":171,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"TomLBZ"},"content":"    b(\"++````+````+++``+``+`+++`\",5,5),"},{"lineNumber":173,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"TomLBZ"},"content":"     * C sprite."},{"lineNumber":175,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"TomLBZ"},"content":"    c(\"``````+++`+````+``+``++``\",5,5),"},{"lineNumber":177,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"TomLBZ"},"content":"     * D sprite."},{"lineNumber":179,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"TomLBZ"},"content":"    d(\"```++```+``+++`+``+``++`+\",5,5),"},{"lineNumber":181,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"TomLBZ"},"content":"     * E sprite."},{"lineNumber":183,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"TomLBZ"},"content":"    e(\"``````+++`+``++`++````+++\",5,5),"},{"lineNumber":185,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"TomLBZ"},"content":"     * F sprite."},{"lineNumber":187,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"TomLBZ"},"content":"    f(\"```++``+```+++```+``++```\",5,5),"},{"lineNumber":189,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"TomLBZ"},"content":"     * G sprite."},{"lineNumber":191,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"TomLBZ"},"content":"    g(\"`++``+``+``+++````+``++``\",5,5),"},{"lineNumber":193,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"TomLBZ"},"content":"     * H sprite."},{"lineNumber":195,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"TomLBZ"},"content":"    h(\"```+```+````++``+``++``+`\",5,5),"},{"lineNumber":197,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"TomLBZ"},"content":"     * sprite."},{"lineNumber":199,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"TomLBZ"},"content":"    i(\"``+`````````+````+````++`\",5,5),"},{"lineNumber":201,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"TomLBZ"},"content":"     * J sprite."},{"lineNumber":203,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"TomLBZ"},"content":"    j(\"``+`````````+````+```++``\",5,5),"},{"lineNumber":205,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"TomLBZ"},"content":"     * K sprite."},{"lineNumber":207,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"TomLBZ"},"content":"    k(\"``+````+++``+`+`+`+``+``+\",5,5),"},{"lineNumber":209,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"TomLBZ"},"content":"     * L sprite."},{"lineNumber":211,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":212,"author":{"gitId":"TomLBZ"},"content":"    l(\"```+```+````+```+````++``\",5,5),"},{"lineNumber":213,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"TomLBZ"},"content":"     * M sprite."},{"lineNumber":215,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"TomLBZ"},"content":"    m(\"``````+++`+`+`++`+`++`+`+\",5,5),"},{"lineNumber":217,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"TomLBZ"},"content":"     * N sprite."},{"lineNumber":219,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":220,"author":{"gitId":"TomLBZ"},"content":"    n(\"`````+`++``+``++``+`+```+\",5,5),"},{"lineNumber":221,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":222,"author":{"gitId":"TomLBZ"},"content":"     * O sprite."},{"lineNumber":223,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"TomLBZ"},"content":"    o(\"```````++``+``++``+``++``\",5,5),"},{"lineNumber":225,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"TomLBZ"},"content":"     * P sprite."},{"lineNumber":227,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"TomLBZ"},"content":"    p(\"+`++``+``+`+++``+```+````\",5,5),"},{"lineNumber":229,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"TomLBZ"},"content":"     * Q sprite."},{"lineNumber":231,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":232,"author":{"gitId":"TomLBZ"},"content":"    q(\"`++``+``+``++```+```+++``\",5,5),"},{"lineNumber":233,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"TomLBZ"},"content":"     * R sprite."},{"lineNumber":235,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"TomLBZ"},"content":"    r(\"`````+`++``+``+`+````+```\",5,5),"},{"lineNumber":237,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"TomLBZ"},"content":"     * S sprite."},{"lineNumber":239,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":240,"author":{"gitId":"TomLBZ"},"content":"    s(\"``+++`+`````+`````+`+++``\",5,5),"},{"lineNumber":241,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":242,"author":{"gitId":"TomLBZ"},"content":"     * T sprite."},{"lineNumber":243,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"TomLBZ"},"content":"    t(\"``+``++++``+````+`````++`\",5,5),"},{"lineNumber":245,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"TomLBZ"},"content":"     * U sprite."},{"lineNumber":247,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"TomLBZ"},"content":"    u(\"``````+``++``+`+``+``++`+\",5,5),"},{"lineNumber":249,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":250,"author":{"gitId":"TomLBZ"},"content":"     * V sprite."},{"lineNumber":251,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":252,"author":{"gitId":"TomLBZ"},"content":"    v(\"`````+```+`+`+``+`+```+``\",5,5),"},{"lineNumber":253,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":254,"author":{"gitId":"TomLBZ"},"content":"     * W sprite."},{"lineNumber":255,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":256,"author":{"gitId":"TomLBZ"},"content":"    w(\"`````+`+`++`+`++`+`+`+`+`\",5,5),"},{"lineNumber":257,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"TomLBZ"},"content":"     * X sprite."},{"lineNumber":259,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":260,"author":{"gitId":"TomLBZ"},"content":"    x(\"`````++`++``+````+``++`++\",5,5),"},{"lineNumber":261,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"TomLBZ"},"content":"     * Y sprite."},{"lineNumber":263,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":264,"author":{"gitId":"TomLBZ"},"content":"    y(\"`+``+`+`+```++`+``+``++``\",5,5),"},{"lineNumber":265,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"TomLBZ"},"content":"     * Z sprite."},{"lineNumber":267,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"TomLBZ"},"content":"    z(\"`+++++``+```+```+``+++++`\",5,5);"},{"lineNumber":269,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":270,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"TomLBZ"},"content":"     * The constant IGNORE."},{"lineNumber":272,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"TomLBZ"},"content":"    public static final String IGNORE \u003d \"`\";"},{"lineNumber":274,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":275,"author":{"gitId":"TomLBZ"},"content":"     * The constant SPACE."},{"lineNumber":276,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":277,"author":{"gitId":"TomLBZ"},"content":"    public static final String SPACE \u003d \" \";"},{"lineNumber":278,"author":{"gitId":"TomLBZ"},"content":"    private final String sprite;"},{"lineNumber":279,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":280,"author":{"gitId":"TomLBZ"},"content":"     * The Width."},{"lineNumber":281,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":282,"author":{"gitId":"TomLBZ"},"content":"    public int width;"},{"lineNumber":283,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":284,"author":{"gitId":"TomLBZ"},"content":"     * The Height."},{"lineNumber":285,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":286,"author":{"gitId":"TomLBZ"},"content":"    public int height;"},{"lineNumber":287,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":288,"author":{"gitId":"TomLBZ"},"content":"    Sprite(String sprite, int width, int height) {"},{"lineNumber":289,"author":{"gitId":"TomLBZ"},"content":"        this.sprite \u003d sprite;"},{"lineNumber":290,"author":{"gitId":"TomLBZ"},"content":"        this.width \u003d width;"},{"lineNumber":291,"author":{"gitId":"TomLBZ"},"content":"        this.height \u003d height;"},{"lineNumber":292,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":294,"author":{"gitId":"TomLBZ"},"content":"    public String toString() {"},{"lineNumber":295,"author":{"gitId":"TomLBZ"},"content":"        return sprite;"},{"lineNumber":296,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":297}},{"path":"src/main/java/visualize/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package visualize;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import command.action.ReminderAction;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import data.SingleModule;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":"import data.Data;"},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import java.io.InputStream;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":"import java.io.PrintStream;"},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"import java.util.logging.Logger;"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":" * The type Ui."},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"public class UI {"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    protected final Logger logger \u003d Logger.getLogger(UI.class.getName());"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"     * The Stream."},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"    protected PrintStream stream;"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"     * The Input."},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"    protected InputStream input;"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"     * The Freshly switched."},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"    protected boolean freshlySwitched;"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"     * The Input getter."},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"    protected Scanner inputGetter;"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"     * Instantiates a new Ui."},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"     * @param stream the stream"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"     * @param input  the input"},{"lineNumber":47,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"TomLBZ"},"content":"    public UI(PrintStream stream, InputStream input) {"},{"lineNumber":49,"author":{"gitId":"TomLBZ"},"content":"        assert stream !\u003d null : \"Null output stream\";"},{"lineNumber":50,"author":{"gitId":"TomLBZ"},"content":"        assert input !\u003d null : \"Null input stream\";"},{"lineNumber":51,"author":{"gitId":"TomLBZ"},"content":"        // logger.log(Level.INFO, \"UI instantiated\");"},{"lineNumber":52,"author":{"gitId":"TomLBZ"},"content":"        this.stream \u003d stream;"},{"lineNumber":53,"author":{"gitId":"TomLBZ"},"content":"        this.input \u003d input;"},{"lineNumber":54,"author":{"gitId":"TomLBZ"},"content":"        inputGetter \u003d new Scanner(input);"},{"lineNumber":55,"author":{"gitId":"TomLBZ"},"content":"        freshlySwitched \u003d false;"},{"lineNumber":56,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":58,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"TomLBZ"},"content":"     * Show welcome."},{"lineNumber":60,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"TomLBZ"},"content":"    public void showWelcome() {"},{"lineNumber":62,"author":{"gitId":"TomLBZ"},"content":"        stream.print(Constants.WELCOME);"},{"lineNumber":63,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":65,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"TomLBZ"},"content":"     * Show text."},{"lineNumber":67,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":69,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"TomLBZ"},"content":"    public void showText(String input) {"},{"lineNumber":71,"author":{"gitId":"TomLBZ"},"content":"        stream.print(input);"},{"lineNumber":72,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":74,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"TomLBZ"},"content":"     * Update."},{"lineNumber":76,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"TomLBZ"},"content":"     * @param input the input"},{"lineNumber":78,"author":{"gitId":"TomLBZ"},"content":"     * @param tasks the tasks"},{"lineNumber":79,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"TomLBZ"},"content":"    public void update(String input, Data tasks) {"},{"lineNumber":81,"author":{"gitId":"TomLBZ"},"content":"        showText(input);"},{"lineNumber":82,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":84,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"TomLBZ"},"content":"     * Next line string."},{"lineNumber":86,"author":{"gitId":"TomLBZ"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"TomLBZ"},"content":"     * @return the string"},{"lineNumber":88,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"TomLBZ"},"content":"    public String nextLine() {"},{"lineNumber":90,"author":{"gitId":"TomLBZ"},"content":"        return inputGetter.nextLine();"},{"lineNumber":91,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":93,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":94,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"TomLBZ"},"content":"     * Sets switched."},{"lineNumber":96,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"TomLBZ"},"content":"    public void setSwitched() {"},{"lineNumber":98,"author":{"gitId":"TomLBZ"},"content":"        freshlySwitched \u003d true;"},{"lineNumber":99,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":101,"author":{"gitId":"TomLBZ"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"TomLBZ"},"content":"     * Shows Reminder."},{"lineNumber":103,"author":{"gitId":"TomLBZ"},"content":"     * @param data the data"},{"lineNumber":104,"author":{"gitId":"TomLBZ"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"TomLBZ"},"content":"    public void showReminder(Data data) {"},{"lineNumber":106,"author":{"gitId":"TomLBZ"},"content":"        showText(new ReminderAction().act(data));"},{"lineNumber":107,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":109,"author":{"gitId":"TomLBZ"},"content":"    protected String wrapString(String input) {"},{"lineNumber":110,"author":{"gitId":"TomLBZ"},"content":"        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"},{"lineNumber":111,"author":{"gitId":"TomLBZ"},"content":"            return Constants.WIN_NEWLINE;"},{"lineNumber":112,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":114,"author":{"gitId":"TomLBZ"},"content":"        String[] words \u003d input.split(Constants.SPACE);"},{"lineNumber":115,"author":{"gitId":"TomLBZ"},"content":"        int wordLength \u003d 0;"},{"lineNumber":116,"author":{"gitId":"TomLBZ"},"content":"        for (String word : words) {"},{"lineNumber":117,"author":{"gitId":"TomLBZ"},"content":"            int incrementLength \u003d word.length() + 1;"},{"lineNumber":118,"author":{"gitId":"TomLBZ"},"content":"            wordLength +\u003d incrementLength;"},{"lineNumber":119,"author":{"gitId":"TomLBZ"},"content":"            if (wordLength \u003e\u003d Constants.BITMAP_W) {"},{"lineNumber":120,"author":{"gitId":"TomLBZ"},"content":"                builder.append(Constants.WIN_NEWLINE);"},{"lineNumber":121,"author":{"gitId":"TomLBZ"},"content":"                wordLength -\u003d Constants.BITMAP_W;"},{"lineNumber":122,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"TomLBZ"},"content":"            builder.append(word).append(Constants.SPACE);"},{"lineNumber":124,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"TomLBZ"},"content":"        return builder.toString();"},{"lineNumber":126,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":128,"author":{"gitId":"TomLBZ"},"content":"    protected String wrapStringArray(String[] input) {"},{"lineNumber":129,"author":{"gitId":"TomLBZ"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":130,"author":{"gitId":"TomLBZ"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {"},{"lineNumber":131,"author":{"gitId":"TomLBZ"},"content":"            builder.append(wrapString(input[i]));"},{"lineNumber":132,"author":{"gitId":"TomLBZ"},"content":"            if (i \u003c input.length - 1) {"},{"lineNumber":133,"author":{"gitId":"TomLBZ"},"content":"                builder.append(Constants.WIN_NEWLINE);"},{"lineNumber":134,"author":{"gitId":"TomLBZ"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"TomLBZ"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"TomLBZ"},"content":"        return builder.toString();"},{"lineNumber":137,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":139,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":139}},{"path":"src/test/java/command/action/AddActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"class AddActionTest {"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":"    public void act_userModule_calculatedCapValue() {"},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"take cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs1231 a ma1513 b cg1112 c\", false, false);"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline watch Spongebob roundpants s3 /by 22-01-2001 12:00\", false, false);"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat banana while watching Minions s4\", false, false);"},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"        String[] testCustomInputsCommand \u003d {\"add -task 1 -mod CS1231\", \"add -task 2 -mod CS1231 ma1513\"};"},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"        String[] expectedOutput \u003d {"},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"            \"I have added the specified tasks to the specified modules.\\r\\n\""},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"                + \"CS1231 \u003c\u003c tasks: watch Spongebob roundpants s3; \\r\\n\","},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"            \"I have added the specified tasks to the specified modules.\\r\\n\""},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"                + \"CS1231 \u003c\u003c tasks: eat banana while watching Minions s4; \\r\\n\","},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Add action test\","},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[0], domsun.testSut(testCustomInputsCommand[0], false, true),"},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"                \"Deadline module link\"),"},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[1], domsun.testSut(testCustomInputsCommand[1], false, true),"},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":"                \"Todo multiple modules link\")"},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"untake cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, false);"},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":39}},{"path":"src/test/java/command/action/CapActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"//@@ adinata15"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":" * Test for CAP calculator."},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":" */"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"class CapActionTest {"},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"    public void act_customModuleInputs_calculatedCapValue() {"},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d"},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"            \"Calculate cap on specified modules:\\r\\n\""},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"                + \"Module: CG1112: (hypothetical)A-\\r\\n\""},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"                + \"Module: CS2113: (hypothetical)A\\r\\n\""},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"                + \"CAP \u003d 4.7\";"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"cap CS2113 A CG1112 A-\";"},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Cap action test\","},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"                \"Custom input grade and modules\")"},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"    public void act_userModule_calculatedCapValue() {"},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"take cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs1231 a ma1513 b cg1112 c\", false, false);"},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d"},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":"            \"Calculate cap on specified modules:\\r\\n\""},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"                + \"You did not specify modules, looking for graded modules in your taken modules...\\r\\n\""},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":"                + \"CG1112: C\\r\\n\""},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":"                + \"CS1231: A\\r\\n\""},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":"                + \"MA1513: B\\r\\n\""},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":"                + \"CAP \u003d 3.25\";"},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"cap\";"},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Cap action test\","},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":"                \"User grade and modules\")"},{"lineNumber":49,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":51,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"untake cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":52,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"TomLBZ":1,"adinata15":52}},{"path":"src/test/java/command/action/DetailActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import seedu.duke.Domsun;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"public class DetailActionTest {"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":"    private String[] testCommand \u003d {\"detail -mod CS2113\", \"detail -mod ST2999\"};"},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":"    Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"    public void act_listedModuleTest_moduleDetail() {"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":"        domsun.testSut(\"focus list\", false, false);"},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"        domsun.testSut(\"clear\", true, false);"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"        assertTrue(domsun.testSut(testCommand[0], false, true)"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"            .contains(\"CS2113\"));"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"    //@@author"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"    public void act_unlistedModuleTest_notFoundMessage() {"},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"        assertEquals(Constants.DETAIL_HEAD + Constants.NOT_FOUND,"},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"            domsun.testSut(testCommand[1],false,true));"},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"TomLBZ":24,"scjx123":2,"adinata15":5}},{"path":"src/test/java/command/action/FocusActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TomLBZ"},"content":"//@@author TomLBZ"},{"lineNumber":2,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":3,"author":{"gitId":"TomLBZ"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":5,"author":{"gitId":"TomLBZ"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"TomLBZ"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"TomLBZ"},"content":"import seedu.duke.Domsun;"},{"lineNumber":8,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":9,"author":{"gitId":"TomLBZ"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":10,"author":{"gitId":"TomLBZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":12,"author":{"gitId":"TomLBZ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TomLBZ"},"content":" * Focus Action Test."},{"lineNumber":14,"author":{"gitId":"TomLBZ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TomLBZ"},"content":"class FocusActionTest {"},{"lineNumber":16,"author":{"gitId":"TomLBZ"},"content":"    //@author: johanesrafael"},{"lineNumber":17,"author":{"gitId":"TomLBZ"},"content":"    private String[] testCommand \u003d {\"focus\", \"focus deadline\", \"focus todo\", \"focus event\", \"focus task\","},{"lineNumber":18,"author":{"gitId":"TomLBZ"},"content":"                                    \"focus mod\", \"focus selected\", \"focus taken\", \"focus asdsds\"};"},{"lineNumber":19,"author":{"gitId":"TomLBZ"},"content":""},{"lineNumber":20,"author":{"gitId":"TomLBZ"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"TomLBZ"},"content":"    void act_customFocusInput_testOutput() {"},{"lineNumber":22,"author":{"gitId":"TomLBZ"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":23,"author":{"gitId":"TomLBZ"},"content":"            Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":24,"author":{"gitId":"TomLBZ"},"content":"        assertAll(\"FocusActionTest\","},{"lineNumber":25,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[0], false, true)"},{"lineNumber":26,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\ntask\")),"},{"lineNumber":27,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[1], false, true)"},{"lineNumber":28,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\ndeadline\")),"},{"lineNumber":29,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[2], false, true)"},{"lineNumber":30,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\ntodo\")),"},{"lineNumber":31,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[3], false, true)"},{"lineNumber":32,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\nevent\")),"},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[4], false, true)"},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\ntask\")),"},{"lineNumber":35,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[5], false, true)"},{"lineNumber":36,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\nmod\")),"},{"lineNumber":37,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[6], false, true)"},{"lineNumber":38,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\nselected\")),"},{"lineNumber":39,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[7], false, true)"},{"lineNumber":40,"author":{"gitId":"TomLBZ"},"content":"                .equals(\"Now we are focusing on:\\r\\ntaken\")),"},{"lineNumber":41,"author":{"gitId":"TomLBZ"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[8], false, true)"},{"lineNumber":42,"author":{"gitId":"TomLBZ"},"content":"                .contains(\"Invalid Command! Please check the syntax.\\r\\n    focus\\r\\n\""},{"lineNumber":43,"author":{"gitId":"TomLBZ"},"content":"                        + \"    focus [deadline / todo / event / task / mod / selected / taken]\\r\\nNotes:\\r\\n\"))"},{"lineNumber":44,"author":{"gitId":"TomLBZ"},"content":"        );"},{"lineNumber":45,"author":{"gitId":"TomLBZ"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TomLBZ"},"content":"}"}],"authorContributionMap":{"TomLBZ":46}},{"path":"src/test/java/command/action/GoalActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"//@@ adinata15"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"class GoalActionTest {"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"    private String[] testCommand \u003d"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"        {\"goal -total 160 4.6 -taken 100 4.5\","},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"            \"goal -total 160 4.9 -taken 100 4.5\","},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"            \"goal -total 220 4.9 -taken 225 4.5\","},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"            \"goal -total 160 4.9 -taken 159 5.0\","},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"            \"goal -total 160 4.8\""},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"    public void act_customModuleInputs_requiredCapValue() {"},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"        String[] expectedOutput \u003d {"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"            \"Your required average CAP is: 4.77\\r\\n\""},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"                + \"Try \\\"cap\\\" to see your current cap!\\r\\n\""},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"                + \"Jia you! :D\\r\\n\","},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"            \"Your required average CAP is: 5.57\\r\\n\""},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":"                + \"Try \\\"cap\\\" to see your current cap!\\r\\n\""},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":"                + \"Looks like the target is a bit far away QAQ\\r\\n\","},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"            \"You have taken MC sufficient for your graduation! Goal is reached :D\\r\\n\","},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"            \"Your required average CAP is: -11\\r\\n\""},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"                + \"Try \\\"cap\\\" to see your current cap!\\r\\n\""},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":"                + \"This means you need to lower your grade to achieve your goal. Tank the bell curve for us! :D\\r\\n\","},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"cap CS2113 A CG1112 A-\";"},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Goal action test\","},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[0], domsun.testSut(testCommand[0], false, true),"},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"                \"Within target\"),"},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[1], domsun.testSut(testCommand[1], false, true),"},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"                \"High target\"),"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[2], domsun.testSut(testCommand[2], false, true),"},{"lineNumber":49,"author":{"gitId":"adinata15"},"content":"                \"Reached goal\"),"},{"lineNumber":50,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[3], domsun.testSut(testCommand[3], false, true),"},{"lineNumber":51,"author":{"gitId":"adinata15"},"content":"                \"Low target\")"},{"lineNumber":52,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":55,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"adinata15"},"content":"    public void act_userModule_requiredCapValue() {"},{"lineNumber":57,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"take cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":58,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs1231 a ma1513 b cg1112 c\", false, false);"},{"lineNumber":59,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d"},{"lineNumber":60,"author":{"gitId":"adinata15"},"content":"            \"Your required average CAP is: 4.93\\r\\n\""},{"lineNumber":61,"author":{"gitId":"adinata15"},"content":"                + \"Try \\\"cap\\\" to see your current cap!\\r\\n\""},{"lineNumber":62,"author":{"gitId":"adinata15"},"content":"                + \"Jia you! :D\\r\\n\";"},{"lineNumber":63,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Goal action test\","},{"lineNumber":64,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCommand[4], false, true),"},{"lineNumber":65,"author":{"gitId":"adinata15"},"content":"                \"User grade and modules\")"},{"lineNumber":66,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":67,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":68,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"untake cs1231 ma1513 cg1112\", false, false);"},{"lineNumber":69,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":70}},{"path":"src/test/java/command/action/GradeActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":" * Test for grade actions."},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":" */"},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"class GradeActionTest {"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"    public void act_ModuleInputs_addedResponseMessage() {"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"take cs2040c ma1508e ee1001x\", false, true);"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"            \"Grade operation on the specified modules:\\r\\n\""},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"            + \"Module: CS2040C: D\\r\\n\""},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"            + \"Module: EE1001X: B+\\r\\n\""},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"            + \"Module: MA1508E: A-\\r\\n\";"},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"grade Cs2040C d ma1508e a- ee1001x b+\";"},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"        assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"            \"Add grade CAP custom input fails\");"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs2040c ma1508e ee1001x\", false, false);"},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"untake cs2040c ma1508e ee1001x\", false, false);"},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":30}},{"path":"src/test/java/command/action/LoadActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":"class LoadActionTest {"},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"    public void act_userModule_calculatedCapValue() {"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline watch Spongebob roundpants s3 -by 22-01-2001 12:00\", false, false);"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat banana while watching Minions s4\", false, false);"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"        String[] testCustomInputsCommand \u003d {"},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"            \"load geq1000 [D][X]_watch_Spongebob_roundpants_s3_(by:_Jan_22_2001_12:00)\","},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"            \"load geq1000 [T][X]_watch_Spongebob_roundpants_s3_(by:_Jan 22_2001_12:00)\","},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"            \"load cs9999 [T][X]_eat_banana_while_watching_Minions_s4\""},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"        String[] expectedOutput \u003d {"},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"            \"Added Tasks: \\r\\n\""},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"                + \"[D][X] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)\\r\\n\""},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"                + \"for module: GEQ1000;\\r\\n\""},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"                + \"Try \\\"detail GEQ1000\\\" to check it out!\\r\\n\","},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"            \"Invalid Command! Please check the syntax.\\r\\n\""},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":"                + \"    load [module code] [task_string] ...\\r\\n\","},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":"            \"Your specified module is not found in the current list.\\r\\n\""},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"                + \"    load [module code] [task_string] ...\\r\\n\","},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Load action test\","},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[0], domsun.testSut(testCustomInputsCommand[0], false, true),"},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":"                \"Normal task module link\"),"},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertTrue(domsun.testSut(testCustomInputsCommand[1], false, true)"},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":"                .contains(expectedOutput[1]), \"Non-existing task modules link\"),"},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertTrue(domsun.testSut(testCustomInputsCommand[2], false, true)"},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":"                .contains(expectedOutput[2]), \"Non-existing module task link\")"},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, false);"},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"}"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":""}],"authorContributionMap":{"adinata15":48}},{"path":"src/test/java/command/action/McActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"//@@author scjx123"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"import seedu.duke.Domsun;"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":" * Module Credits Test."},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":" */"},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"public class McActionTest {"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":"    private String[] testCommand \u003d {\"mc\", \"mc -d\", \"mc -p\", \"mc -d -p\"};"},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"    public void act_moduleCommandsInputs_suitableMcDisplayed() {"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":"            Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"        assertAll(\"McActionTest\","},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[0], false, true)"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"                .contains(\"0\")),"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[1], false, true).contains(\"12\"))"},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"        );"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"    public void mcAction_ExceptionInput_PrintInvalidCommand() {"},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":"            Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":"        assertTrue(() -\u003e d.testSut(testCommand[2], false, true).contains(Constants.INVALID));"},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"        assertTrue(() -\u003e d.testSut(testCommand[3], false, true).contains(Constants.INVALID));"},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"scjx123":38}},{"path":"src/test/java/command/action/ModuleActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":" * Test for grade actions."},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":" */"},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"class ModuleActionTest {"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"    public void actComplete_ModuleInputs_completedResponseMessage() {"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":"        String[] testCustomInputsCommand \u003d {"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"            \"take Cs2040C ma1508e ee1001x\","},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"            \"complete Cs2040C ma1508e\","},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"            \"edit -mod CS2040 grade\u003dA\","},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":"        String[] expectedOutput \u003d {"},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"            \"Your \\\"taken\\\" list has been changed, \\\"list\\\" it again to see effects.\\r\\n\""},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"                + \"Module: CS2040C: now taken\\r\\n\""},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"                + \"Module: EE1001X: now taken\\r\\n\""},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"                + \"Module: MA1508E: now taken\\r\\n\","},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":"            \"Marking the specified module as Completed (final): \\r\\n\""},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"                + \"Module: [COMPLETED]CS2040C: now completed\\r\\n\""},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"                + \"Module: [COMPLETED]MA1508E: now completed\\r\\n\","},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":33,"author":{"gitId":"TomLBZ"},"content":"            \"Trying to modify the attribute(s) you specified:\\r\\nWorking on Module: CS2040\\r\\n\""},{"lineNumber":34,"author":{"gitId":"TomLBZ"},"content":"                + \"CS2040: grade \u003d A AND taken \u003d true;\\r\\n(The module must be taken in order to have a grade);\\r\\n\","},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"        assertEquals(expectedOutput[0], domsun.testSut(testCustomInputsCommand[0], false, true),"},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"            \"Take normal module\");"},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade Cs2040C a ma1508e b ee1001x c+\", false, false);"},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":"        assertEquals(expectedOutput[1], domsun.testSut(testCustomInputsCommand[1], false, true),"},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"            \"Complete normal module\");"},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":"        assertEquals(expectedOutput[2], domsun.testSut(testCustomInputsCommand[2], false, true),"},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":"            \"Edit graded module\");"},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"grade cs2040c ma1508e ee1001x\", false, false);"},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"untake cs2040c ma1508e ee1001x\", false, false);"},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"TomLBZ":2,"adinata15":46}},{"path":"src/test/java/command/action/PostponeActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":"class PostponeActionTest {"},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"    private String[] testCommand \u003d {\"postpone \", \"postpone 1\", \"postpone 5\", \"postpone h 1\", \"postpone a 1\","},{"lineNumber":13,"author":{"gitId":"johanesrafael"},"content":"        \"postpone\", \"postpone 2\", \"postpone 3\", \"postpone w 3\",};"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":"            Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":16,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":17,"author":{"gitId":"johanesrafael"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"johanesrafael"},"content":"    void act_postponeInput_testOutput() {"},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":20,"author":{"gitId":"johanesrafael"},"content":"        domsun.testSut(\"deadline e /by 2020-11-11 08:30\", false, false);"},{"lineNumber":21,"author":{"gitId":"johanesrafael"},"content":"        assertAll(\"PostponeActionTest\","},{"lineNumber":22,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertTrue(domsun.testSut(testCommand[0], false, true)"},{"lineNumber":23,"author":{"gitId":"johanesrafael"},"content":"                .contains(Constants.INVALID)),"},{"lineNumber":24,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertTrue(domsun.testSut(testCommand[1], false, true)"},{"lineNumber":25,"author":{"gitId":"johanesrafael"},"content":"                .contains(\"I\u0027ve postpone this task:\")),"},{"lineNumber":26,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertTrue(domsun.testSut(testCommand[2], false, true)"},{"lineNumber":27,"author":{"gitId":"johanesrafael"},"content":"                .contains(Constants.INDEX_OUT)),"},{"lineNumber":28,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertTrue(domsun.testSut(testCommand[3], false, true)"},{"lineNumber":29,"author":{"gitId":"johanesrafael"},"content":"                .contains(\"I\u0027ve postpone this task:\")),"},{"lineNumber":30,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertTrue(domsun.testSut(testCommand[4], false, true)"},{"lineNumber":31,"author":{"gitId":"johanesrafael"},"content":"                .contains(Constants.INVALID))"},{"lineNumber":32,"author":{"gitId":"johanesrafael"},"content":"        );"},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat banana while watching Minions s4\", false, false);"},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline watch Spongebob roundpants s3 -by 22-01-2001 12:00\", false, false);"},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"        String[] expectedOutput \u003d {"},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"            \"Invalid Command! Please check the syntax.\\r\\n\""},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"                + \"    postpone [index]\\r\\n\""},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"                + \"    postpone (h / w / y) [index]\\r\\n\","},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"            \"Sorry, there is no date in todo task!\\r\\n\","},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":"            \"I\u0027ve postpone this task:\\r\\n\""},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":"                + \"[D][X] watch Spongebob roundpants s3 (by: Jan 23 2001 12:00)\","},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"            \"I\u0027ve postpone this task:\\r\\n\""},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"                + \"[D][X] watch Spongebob roundpants s3 (by: Jan 30 2001 12:00)\","},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":49,"author":{"gitId":"adinata15"},"content":"        assertAll(\"PostponeActionTest\","},{"lineNumber":50,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertTrue(domsun.testSut(testCommand[5], true, true)"},{"lineNumber":51,"author":{"gitId":"adinata15"},"content":"                .contains(expectedOutput[0]), \"Invalid command\"),"},{"lineNumber":52,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertEquals(expectedOutput[1], domsun.testSut(testCommand[6], false, true),"},{"lineNumber":53,"author":{"gitId":"adinata15"},"content":"                \"Invalid task type (todo)\"),"},{"lineNumber":54,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertEquals(expectedOutput[2], domsun.testSut(testCommand[7], false, true),"},{"lineNumber":55,"author":{"gitId":"adinata15"},"content":"                \"Normal input default\"),"},{"lineNumber":56,"author":{"gitId":"johanesrafael"},"content":"            () -\u003e assertEquals(expectedOutput[3], domsun.testSut(testCommand[8], false, true),"},{"lineNumber":57,"author":{"gitId":"adinata15"},"content":"                \"Normal input week\")"},{"lineNumber":58,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":60,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"johanesrafael":23,"adinata15":38}},{"path":"src/test/java/command/action/ReminderActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"//@author johanesrafael"},{"lineNumber":2,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import seedu.duke.Domsun;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"class ReminderActionTest {"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"    public void act_reminderInput_testOutput() {"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"            Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"        assertTrue(d.testSut(\"reminder\", false, true).contains(Constants.REMINDER_HEAD));"},{"lineNumber":18,"author":{"gitId":"johanesrafael"},"content":"        assertTrue(d.testSut(\"reminder on\", false, true).contains(Constants.REMINDER_ON));"},{"lineNumber":19,"author":{"gitId":"johanesrafael"},"content":"        assertTrue(d.testSut(\"reminder off\", false, true).contains(Constants.REMINDER_OFF));"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":"}"}],"authorContributionMap":{"johanesrafael":4,"scjx123":15,"adinata15":2}},{"path":"src/test/java/command/action/SnoozeActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"johanesrafael"},"content":"package command.action;"},{"lineNumber":2,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":3,"author":{"gitId":"johanesrafael"},"content":"import constants.Constants;"},{"lineNumber":4,"author":{"gitId":"johanesrafael"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"johanesrafael"},"content":"import seedu.duke.Domsun;"},{"lineNumber":6,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":7,"author":{"gitId":"johanesrafael"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":8,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":9,"author":{"gitId":"johanesrafael"},"content":"public class SnoozeActionTest {"},{"lineNumber":10,"author":{"gitId":"johanesrafael"},"content":"    private String[] testCommand \u003d {\"snooze\", \"snooze 5\", \"snooze bye\"};"},{"lineNumber":11,"author":{"gitId":"johanesrafael"},"content":""},{"lineNumber":12,"author":{"gitId":"johanesrafael"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"johanesrafael"},"content":"    void act_customFocusInput_testOutput() {"},{"lineNumber":14,"author":{"gitId":"johanesrafael"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":15,"author":{"gitId":"johanesrafael"},"content":"                Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":16,"author":{"gitId":"johanesrafael"},"content":"        assertTrue(d.testSut(testCommand[0], false, true).contains(\"I\u0027ve snoozed the reminder for 1\""},{"lineNumber":17,"author":{"gitId":"johanesrafael"},"content":"            + \" minute. Will remind you in 6 minutes.\"));"},{"lineNumber":18,"author":{"gitId":"johanesrafael"},"content":"        assertTrue(d.testSut(testCommand[1], false, true).contains(Constants.INVALID));"},{"lineNumber":19,"author":{"gitId":"johanesrafael"},"content":"        assertTrue(d.testSut(testCommand[2], false, true).contains(Constants.INVALID));"},{"lineNumber":20,"author":{"gitId":"johanesrafael"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"johanesrafael"},"content":"}"}],"authorContributionMap":{"johanesrafael":21}},{"path":"src/test/java/command/action/StatsActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"//@@author scjx123"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import exceptions.CommandException;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":"import seedu.duke.Domsun;"},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"public class StatsActionTest {"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":"    private String[] testCommand \u003d {\"stats\", \"stats -mod CS2113\",\"stats -garbage\"};"},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"    private Boolean isMod;"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"    private String selectedModule;"},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":"    public void statsAction_statsCommandsInputs_PercentageDisplayed() {"},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"                Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"        assertAll(\"StatsActionTest\", () -\u003e assertTrue(d.testSut(testCommand[0], false, true)"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"                        .contains(\"%\")),"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":"            () -\u003e assertNotEquals(Constants.INVALID,d.testSut(testCommand[1], false, true).contains(\"[0.0%]\")),"},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"            () -\u003e assertTrue(d.testSut(testCommand[2], false, true).contains(Constants.INVALID))"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"        );"},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"    void statsAction_statsExceptionTesting_InvalidCommandDisplayed() {"},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"        Exception exception \u003d assertThrows(CommandException.class,"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":"            () -\u003e prepareTest(testCommand[2]));"},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"        assertTrue(exception.getMessage().contains(Constants.INVALID));"},{"lineNumber":39,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":41,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"    void statsAction_LongRatioAndZero_CorrectPercentage() {"},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"        int x \u003d 0;"},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"        double y \u003d 1.0999999;"},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"        assertAll(\"roundedRatioBarAssertion\","},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":"            () -\u003e assertEquals(\"[0.0%]\", roundedRatioBar(x)),"},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"            () -\u003e assertEquals(\"[110.0%]\", roundedRatioBar(y))"},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"    private String roundedRatioBar(double fraction) {"},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"        assert fraction \u003e\u003d 0.0 : \"fraction is greater or equal to zero\";"},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":"        double roundedRatio \u003d Math.round((fraction * 100) * 10) / 10.0;"},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":"        return Constants.ICON_LEFT + roundedRatio + Constants.PERCENT + Constants.ICON_RIGHT;"},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":"    public void prepareTest(String userInput) throws CommandException {"},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"        String[] optionalParams \u003d Constants.optionalParamMap.get(\"stats\");"},{"lineNumber":59,"author":{"gitId":"scjx123"},"content":"        String mod \u003d optionalParams[0];"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":"        isMod \u003d userInput.contains(mod);"},{"lineNumber":61,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":62,"author":{"gitId":"scjx123"},"content":"        if (userInput \u003d\u003d null) {"},{"lineNumber":63,"author":{"gitId":"scjx123"},"content":"            isMod \u003d false;"},{"lineNumber":64,"author":{"gitId":"scjx123"},"content":"            userInput \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"scjx123"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"scjx123"},"content":"            if (isMod) {"},{"lineNumber":67,"author":{"gitId":"scjx123"},"content":"                selectedModule \u003d userInput.replace(\"mod\", \"\").trim();"},{"lineNumber":68,"author":{"gitId":"scjx123"},"content":"                isMod \u003d true;"},{"lineNumber":69,"author":{"gitId":"scjx123"},"content":"                userInput \u003d \"\";"},{"lineNumber":70,"author":{"gitId":"scjx123"},"content":"            } else {"},{"lineNumber":71,"author":{"gitId":"scjx123"},"content":"                throw new CommandException();"},{"lineNumber":72,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"scjx123"},"content":"}"},{"lineNumber":76,"author":{"gitId":"scjx123"},"content":"//@@author"}],"authorContributionMap":{"scjx123":76}},{"path":"src/test/java/command/action/TaskActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adinata15"},"content":"//@@author adinata15"},{"lineNumber":2,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":3,"author":{"gitId":"adinata15"},"content":"package command.action;"},{"lineNumber":4,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":5,"author":{"gitId":"adinata15"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":7,"author":{"gitId":"adinata15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"adinata15"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"adinata15"},"content":"import seedu.duke.Domsun;"},{"lineNumber":10,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":11,"author":{"gitId":"adinata15"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"adinata15"},"content":" * Tests for various task actions."},{"lineNumber":13,"author":{"gitId":"adinata15"},"content":" */"},{"lineNumber":14,"author":{"gitId":"adinata15"},"content":"class TaskActionTest {"},{"lineNumber":15,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":16,"author":{"gitId":"adinata15"},"content":"    private Domsun domsun \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":17,"author":{"gitId":"adinata15"},"content":"        Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":18,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":19,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"adinata15"},"content":"    public void actClear_normalCase_clearResponseMessage() {"},{"lineNumber":21,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Nice! I\u0027ve cleared all tasks from the list and left modules alone.\";"},{"lineNumber":22,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"clear\";"},{"lineNumber":23,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":24,"author":{"gitId":"adinata15"},"content":"        assertAll(\"McActionTest\","},{"lineNumber":25,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, true, true),"},{"lineNumber":26,"author":{"gitId":"adinata15"},"content":"                \"Clear fails\")"},{"lineNumber":27,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":28,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":30,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"adinata15"},"content":"    public void actDelete_normalCase_deleteResponseMessage() {"},{"lineNumber":32,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, false);"},{"lineNumber":33,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat ice cream\", true, false);"},{"lineNumber":34,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline eat -by Tuesday\", true, false);"},{"lineNumber":35,"author":{"gitId":"adinata15"},"content":"        String[] expectedOutput \u003d {"},{"lineNumber":36,"author":{"gitId":"adinata15"},"content":"            \"Noted. I\u0027ve removed this task:\\r\\n\""},{"lineNumber":37,"author":{"gitId":"adinata15"},"content":"                + \"[T][X] eat ice cream\\r\\n\""},{"lineNumber":38,"author":{"gitId":"adinata15"},"content":"                + \"Now you have 1 tasks in the list.\","},{"lineNumber":39,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":40,"author":{"gitId":"adinata15"},"content":"            \"Index out of range. Index must be a positive integer referencing an existing item.\\r\\n\""},{"lineNumber":41,"author":{"gitId":"adinata15"},"content":"        };"},{"lineNumber":42,"author":{"gitId":"adinata15"},"content":"        String[] testCustomInputsCommand \u003d {\"delete 1\", \"delete 10\"};"},{"lineNumber":43,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Delete action test\","},{"lineNumber":44,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[0], domsun.testSut(testCustomInputsCommand[0], true, true),"},{"lineNumber":45,"author":{"gitId":"adinata15"},"content":"                \"Normal input\"),"},{"lineNumber":46,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput[1], domsun.testSut(testCustomInputsCommand[1], true, true),"},{"lineNumber":47,"author":{"gitId":"adinata15"},"content":"                \"Out of bound\")"},{"lineNumber":48,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":51,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"adinata15"},"content":"    public void actDeadline_randomByTime_customTimeDeadline() {"},{"lineNumber":53,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":54,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""},{"lineNumber":55,"author":{"gitId":"adinata15"},"content":"            + \"[D][X] watch powerRangers episode 2 (by: TODAY!!)\\r\\n\""},{"lineNumber":56,"author":{"gitId":"adinata15"},"content":"            + \"Now you have 1 tasks in the list.\";"},{"lineNumber":57,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"deadline watch powerRangers episode 2 -by TODAY!!\";"},{"lineNumber":58,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Deadline random time\","},{"lineNumber":59,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":60,"author":{"gitId":"adinata15"},"content":"                \"Deadline custom time inputs fails\")"},{"lineNumber":61,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":64,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"adinata15"},"content":"    public void actDeadline_dateTimeFormat_formattedTimeDeadline() {"},{"lineNumber":66,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":67,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""},{"lineNumber":68,"author":{"gitId":"adinata15"},"content":"            + \"[D][X] watch powerRangers episode 3 (by: Feb 23 2022 09:00)\\r\\n\""},{"lineNumber":69,"author":{"gitId":"adinata15"},"content":"            + \"Now you have 1 tasks in the list.\";"},{"lineNumber":70,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"deadline watch powerRangers episode 3 /by 2022-02-23 09:00\";"},{"lineNumber":71,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Deadline date time\","},{"lineNumber":72,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":73,"author":{"gitId":"adinata15"},"content":"                \"Deadline format time inputs fails\"));"},{"lineNumber":74,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":76,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"adinata15"},"content":"    public void actTodo_normalTodo_todoRespondMessage() {"},{"lineNumber":78,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":79,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""},{"lineNumber":80,"author":{"gitId":"adinata15"},"content":"            + \"[T][X] finish CS2113 Project!\\r\\n\""},{"lineNumber":81,"author":{"gitId":"adinata15"},"content":"            + \"Now you have 1 tasks in the list.\";"},{"lineNumber":82,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"todo finish CS2113 Project!\";"},{"lineNumber":83,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Todo\","},{"lineNumber":84,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":85,"author":{"gitId":"adinata15"},"content":"                \"Todo normal inputs fails\"));"},{"lineNumber":86,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":88,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"adinata15"},"content":"    public void actEvent_randomAtTime_customTimeDeadline() {"},{"lineNumber":90,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":91,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""},{"lineNumber":92,"author":{"gitId":"adinata15"},"content":"            + \"[E][X] watch Dora The Explorer episode 2 (at: your Free Time :))\\r\\n\""},{"lineNumber":93,"author":{"gitId":"adinata15"},"content":"            + \"Now you have 1 tasks in the list.\";"},{"lineNumber":94,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"event watch Dora The Explorer episode 2 -at your Free Time :)\";"},{"lineNumber":95,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Event random time\","},{"lineNumber":96,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":97,"author":{"gitId":"adinata15"},"content":"                \"Event custom time inputs fails\")"},{"lineNumber":98,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":99,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":101,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":102,"author":{"gitId":"adinata15"},"content":"    public void actEvent_dateTimeFormat_formattedTimeDeadline() {"},{"lineNumber":103,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":104,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""},{"lineNumber":105,"author":{"gitId":"adinata15"},"content":"            + \"[E][X] watch Dora The Explorer episode 3 (at: Feb 23 2022 00:00)\\r\\n\""},{"lineNumber":106,"author":{"gitId":"adinata15"},"content":"            + \"Now you have 1 tasks in the list.\";"},{"lineNumber":107,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"event watch Dora The Explorer episode 3 /at 2022-02-23\";"},{"lineNumber":108,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Event custom time\","},{"lineNumber":109,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":110,"author":{"gitId":"adinata15"},"content":"                \"Event format time inputs fails\")"},{"lineNumber":111,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":112,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":114,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":115,"author":{"gitId":"adinata15"},"content":"    public void actDone_indexInList_doneResponseMessage() {"},{"lineNumber":116,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":117,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline watch Spongebob roundpants s3 /by 22-01-2001 12:00\", false, false);"},{"lineNumber":118,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat banana while watching Minions s4\", false, false);"},{"lineNumber":119,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"event Tinder meetingg!! /at THE END OF TIME TT\", false, false);"},{"lineNumber":120,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":121,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Nice! I\u0027ve marked this task as done:\\r\\n\""},{"lineNumber":122,"author":{"gitId":"adinata15"},"content":"            + \"[D][V] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)\";"},{"lineNumber":123,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"done 1\";"},{"lineNumber":124,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Mark done\","},{"lineNumber":125,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":126,"author":{"gitId":"adinata15"},"content":"                \"Mark done normal fails\")"},{"lineNumber":127,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":128,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":130,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":131,"author":{"gitId":"adinata15"},"content":"    public void actList_filledList_listResponseMessage() {"},{"lineNumber":132,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":133,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline watch Spongebob roundpants s3 /by 22-01-2001 12:00\", false, false);"},{"lineNumber":134,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat banana while watching Minions s4\", false, false);"},{"lineNumber":135,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"event Tinder meetingg!! /at THE END OF TIME TT\", false, false);"},{"lineNumber":136,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":137,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Here is the list of items:\\r\\n\""},{"lineNumber":138,"author":{"gitId":"adinata15"},"content":"            + \"[D][X] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)\\r\\n\""},{"lineNumber":139,"author":{"gitId":"adinata15"},"content":"            + \"[T][X] eat banana while watching Minions s4\\r\\n\""},{"lineNumber":140,"author":{"gitId":"adinata15"},"content":"            + \"[E][X] Tinder meetingg!! (at: THE END OF TIME TT)\\r\\n\";"},{"lineNumber":141,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"list\";"},{"lineNumber":142,"author":{"gitId":"adinata15"},"content":"        assertAll(\"List normal tasks\","},{"lineNumber":143,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":144,"author":{"gitId":"adinata15"},"content":"                \"List normal tasks fails\")"},{"lineNumber":145,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":146,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":148,"author":{"gitId":"adinata15"},"content":"    @Test"},{"lineNumber":149,"author":{"gitId":"adinata15"},"content":"    public void actUndone_indexInList_undoneResponseMessage() {"},{"lineNumber":150,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"clear\", true, true);"},{"lineNumber":151,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"deadline watch Spongebob round pants s3 /by 22-01-2001 12:00\", false, false);"},{"lineNumber":152,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"todo eat banana while watching Minions s4\", false, false);"},{"lineNumber":153,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"event Tinder meetingg!! /at THE END OF TIME TT\", false, false);"},{"lineNumber":154,"author":{"gitId":"adinata15"},"content":"        domsun.testSut(\"done 1\", false, false);//mark first item as done"},{"lineNumber":155,"author":{"gitId":"adinata15"},"content":""},{"lineNumber":156,"author":{"gitId":"adinata15"},"content":"        String expectedOutput \u003d \"Nice! I\u0027ve marked this task as undone:\\r\\n\""},{"lineNumber":157,"author":{"gitId":"adinata15"},"content":"            + \"[D][X] watch Spongebob round pants s3 (by: Jan 22 2001 12:00)\";"},{"lineNumber":158,"author":{"gitId":"adinata15"},"content":"        String testCustomInputsCommand \u003d \"undone 1\";"},{"lineNumber":159,"author":{"gitId":"adinata15"},"content":"        assertAll(\"Mark undone\","},{"lineNumber":160,"author":{"gitId":"adinata15"},"content":"            () -\u003e assertEquals(expectedOutput, domsun.testSut(testCustomInputsCommand, false, true),"},{"lineNumber":161,"author":{"gitId":"adinata15"},"content":"                \"Mark undone normal fails\")"},{"lineNumber":162,"author":{"gitId":"adinata15"},"content":"        );"},{"lineNumber":163,"author":{"gitId":"adinata15"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"adinata15"},"content":"}"}],"authorContributionMap":{"adinata15":164}},{"path":"src/test/java/data/CheckRecurrenceDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"scjx123"},"content":"//@@author scjx123"},{"lineNumber":2,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":3,"author":{"gitId":"scjx123"},"content":"package data;"},{"lineNumber":4,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":5,"author":{"gitId":"scjx123"},"content":"import constants.Constants;"},{"lineNumber":6,"author":{"gitId":"scjx123"},"content":"import data.jobs.Task;"},{"lineNumber":7,"author":{"gitId":"scjx123"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"scjx123"},"content":"import seedu.duke.Domsun;"},{"lineNumber":9,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":10,"author":{"gitId":"scjx123"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"scjx123"},"content":"import java.time.Period;"},{"lineNumber":12,"author":{"gitId":"scjx123"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":13,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":14,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":15,"author":{"gitId":"scjx123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":16,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":17,"author":{"gitId":"scjx123"},"content":"public class CheckRecurrenceDateTest {"},{"lineNumber":18,"author":{"gitId":"scjx123"},"content":"    Period recurrence \u003d Period.ofDays(7);"},{"lineNumber":19,"author":{"gitId":"scjx123"},"content":"    private boolean isWeekly \u003d false;"},{"lineNumber":20,"author":{"gitId":"scjx123"},"content":"    private static String str \u003d \"2016-03-04 11:30\";"},{"lineNumber":21,"author":{"gitId":"scjx123"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":22,"author":{"gitId":"scjx123"},"content":"    private static LocalDateTime testDate \u003d LocalDateTime.parse(str, formatter);"},{"lineNumber":23,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":24,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"scjx123"},"content":"    public void weekly_GeneralInputWithWeekly_UpdatedDate() {"},{"lineNumber":26,"author":{"gitId":"scjx123"},"content":"        Domsun d \u003d new Domsun(false, System.out, System.in, Constants.PATH,"},{"lineNumber":27,"author":{"gitId":"scjx123"},"content":"                Constants.TEST_TASK_FILENAME, Constants.TEST_COURSE_FILENAME);"},{"lineNumber":28,"author":{"gitId":"scjx123"},"content":"        isWeekly \u003d true;"},{"lineNumber":29,"author":{"gitId":"scjx123"},"content":"        assertTrue(d.testSut(\"deadline eat /by 12-12-2019 11:30 Weekly\", false, true)"},{"lineNumber":30,"author":{"gitId":"scjx123"},"content":"                .contains(\"19\"));"},{"lineNumber":31,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":33,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"scjx123"},"content":"    public void weekly_NormalInputWithWeekly_UpdatedDate() {"},{"lineNumber":35,"author":{"gitId":"scjx123"},"content":"        isWeekly \u003d true;"},{"lineNumber":36,"author":{"gitId":"scjx123"},"content":"        LocalDateTime returnDate \u003d checkRecurrenceDate(testDate);"},{"lineNumber":37,"author":{"gitId":"scjx123"},"content":"        assertTrue(returnDate.isAfter(testDate));"},{"lineNumber":38,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":40,"author":{"gitId":"scjx123"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"scjx123"},"content":"    public void weekly_NormalInputWithouteekly_UpdatedDate() {"},{"lineNumber":42,"author":{"gitId":"scjx123"},"content":"        isWeekly \u003d false;"},{"lineNumber":43,"author":{"gitId":"scjx123"},"content":"        LocalDateTime returnDate \u003d checkRecurrenceDate(testDate);"},{"lineNumber":44,"author":{"gitId":"scjx123"},"content":"        assertNull(returnDate);"},{"lineNumber":45,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":47,"author":{"gitId":"scjx123"},"content":"    public LocalDateTime checkRecurrenceDate(LocalDateTime testDate) {"},{"lineNumber":48,"author":{"gitId":"scjx123"},"content":"        LocalDateTime newDate \u003d null;"},{"lineNumber":49,"author":{"gitId":"scjx123"},"content":"        if (isWeekly) {"},{"lineNumber":50,"author":{"gitId":"scjx123"},"content":"            //assuming 7 days recurrence"},{"lineNumber":51,"author":{"gitId":"scjx123"},"content":"            LocalDateTime todayDate \u003d LocalDateTime.now();"},{"lineNumber":52,"author":{"gitId":"scjx123"},"content":"            LocalDateTime endDate \u003d testDate;"},{"lineNumber":53,"author":{"gitId":"scjx123"},"content":"            if (todayDate.isAfter(endDate)) {"},{"lineNumber":54,"author":{"gitId":"scjx123"},"content":"                newDate \u003d endDate.plus(recurrence);"},{"lineNumber":55,"author":{"gitId":"scjx123"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"scjx123"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"scjx123"},"content":"        return newDate;"},{"lineNumber":58,"author":{"gitId":"scjx123"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"scjx123"},"content":"}"},{"lineNumber":60,"author":{"gitId":"scjx123"},"content":""},{"lineNumber":61,"author":{"gitId":"scjx123"},"content":""}],"authorContributionMap":{"scjx123":61}},{"path":"text-ui-test/input.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"johanesrafael"},"content":"bye"},{"lineNumber":3,"author":{"gitId":"johanesrafael"},"content":""}],"authorContributionMap":{"johanesrafael":2,"-":1}}]
