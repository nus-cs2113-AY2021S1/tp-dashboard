[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "scjx123": 1
    }
  },
  {
    "path": "data/courselist11.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "EE1001_\tEmerging Technologies in Electrical Engineering_\t\"This module introduces students to contemporary issues, emerging technologies and new frontiers in electrical engineering. It serves to demonstrate to students how the EE curriculum is designed to address these aspects via a top-down approach. The module consists of 5 distinct parts of approximately 6  hour lectures and integrated with some self-learning activities. Each part focuses on each of the following areas / topics: Communications and Networking, Control and Energy Systems, Micro / nanoelectronics, Multimedia Signal Processing, Grand challenges for engineering (the role of EE). The lectures will be conducted by a group of faculty members who are experts in the respective areas. Although the lectures are meant to focus on contemporary issues and emerging technologies, an appropriate level of historical perspective will be used to demonstrate how each subfield has evolved from the traditional areas of EE so that students can see both the connections between different areas and the driving force behind the rapid development and expansion of EE in the last few decades. Prior to this series of lectures focusing on specific areas, a detailed introduction of the EE curriculum will also be  given in the first lecture. The philosophy underpinning the curriculum and its strength and constraints will be highlighted. The module will conclude with student presentations on a topic in an area of their  interest. Students are assessed through assignments, reports and presentations._\"\t4_\t\"A-level Math, and A-level Physics_\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "EE1001X_\tEmerging Technologies in Electrical Engineering_\t\"This module introduces students to contemporary issues, emerging technologies and new frontiers in electrical engineering. It serves to demonstrate to students how the EE curriculum is designed to address these aspects via a top-down approach. The module consists of 5 distinct parts of approximately 4  hour lectures and integrated with some self-learning activities. Each part focuses on each of the following areas / topics:Communications and Networking,Power and Energy Systems, Micro / nanoelectronics, Control \u0026 Robotics, Grand challenges for engineering (the role of EE). The lectures will be conducted by a group of faculty members who are experts in the respective areas. Although the lectures are meant to focus on contemporary issues and emerging technologies, an appropriate level of historical perspective will be used to demonstrate how each subfield has evolved from the traditional areas of EE so that students can see both the connections between different areas and the driving force behind the rapid development and expansion of EE in the last few decades. Prior to this series of lectures focusing on specific areas, a detailed introduction of the EE curriculum will also be  given in the first lecture. The philosophy underpinning the curriculum and its strength and constraints will be highlighted. The module will conclude with student presentations on a topic in an area of their  interest. Students are assessed through assignments, reports and presentations._\"\t4_\t\"A-level Math, and A-level Physics_\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "EE1002_\tIntroduction to Circuits and Systems_\t\"This is a first course which introduces students to some electrical and magnetic components which  are the building blocks for  electrical engineering.  Such components include resistors, capacitors, inductors, diodes, transistors, op amps and transformers. Students will work in groups in the lab to design simple circuits and systems using these components.   In the process, students learn about physical quantities of voltage and currents, circuit principles, power and energy, and operations of the diode, transistors, op amps and transformers. Some of the circuits will be integrated into a bigger system (e.g. an autonomous vehicle), culminating in a competition for all students. In this module, students also learn soft-skills such as the importance of resourcefulness, teamwork, time-management, project presentation, integrity and effective communications._\"\t4_\tA-level Physics_"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "EE1003_\tIntroduction to Signals and Communications_\t\"This module introduces students to the important area of signal processing and communications which are two major areas in electrical engineering.  daily lives. It uses an open-ended project approach, and students are guided through the various parts of the project to build the different component modules which can finally be integrated into a complete communication system. It exposes students to the concepts of signals, spectra, sampling, digitization, coding, transmission and reception over physical channels, receiver noise, symbol detection and message reconstruction. Both the systems and the physics aspects of communication are covered. Students will be assessed through assignments, laboratory reports and a final project report with oral presentation._\"\t4_\t\"A-level Math, and A-level Physics_\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "EE1111_\tEngineering Principles and Practice I_\t\"This module introduces electrical engineering students to what engineers do and the engineer\u0027s thought process.This is the first of a two-part module: EngineeringPrinciples and Practice (EPP) I and II. Real engineering systems will be used to show how engineers use differentdisciplines of engineering, and combine them to make things work. Through grasping engineering fundamentals, students learn how engineering systems work and fail (EPP I). Through learning where systems get energy and how they are controlled, students learn how multidisciplinary concepts are tied together (EPP II). The students will learn basic design, experimentation and evaluation of engineering systems._\"\t6_\t_"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "EE1111A_\tElectrical Engineering Principles and Practice I_\t\"This module introduces first year electrical engineering students to what engineers do and to the engineer\u0027s thought process. This is the first of a two-part module: Engineering Principles and Practice (EPP) I and II. Real engineering systems will be used to show how engineers use different disciplines of engineering to make things work. Through grasping engineering fundamentals, students learn how engineering systems work and fail (EPP I). Through learning where systems get energy and how they are controlled, students learn how multi-disciplinary concepts are tied together (EPP II). Students will also learn basic design, experimentation and evaluation of engineering systems._\"\t4_\t_"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "EE1112_\tEngineering Principles and Practice II_\t\"This module is the second part of the two part module Engineering Principles and Practice (EPP) I and II and follows closely the same learning objectives. Most modern engineering systems are more electric. They convert some raw form of energy, such as fuel, mechanical or energy stored in battery, into electrical form. We see this in every engineering system from trains, biomedical devices, chemical plants, electric cars, aircrafts and ships to ICT devices such as computers, handphones, tablets etc. Hence, energy conversion, distribution, and sensing \u0026 control will form the backbone of this knowledge segment._\"\t6_\t_"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "EE2011_\tEngineering Electromagnetics_\t\"Electromagnetic (EM) and transmission line theory is essential in all disciplines of electrical and computer engineering.  EM theory is the fundamental basis for understanding transmission lines and electrical energy transmission. To understand and solve EM and transmission line problems encountered in electrical and computer engineering, rigorous analytical methods are required. At the end of this module, in addition to being able to solve EM and transmission line problems, the student will be able to design transmission line circuits, design electrical elements with lumped behaviour, and mitigate EM interference.  To enhance understanding, case studies and computer visualisation tools will be used.   Topics covered: Static electric and magnetic fields. Maxwell\u0027s equations. Electromagnetic waves: plane-wave propagation, behaviour at interface between media, shielding, electromagnetic compatability. Transmission lines. Impedance matching. Radiation.  Case studies._\"\t4_\tMA1505 and MA1506_"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "EE2011E_\tEngineering Electromagnetics_\t\"Electromagnetic (EM) and transmission line theory is essential in all disciplines of electrical and computer engineering.  EM theory is the fundamental basis for understanding transmission lines and electrical energy transmission. To understand and solve EM and transmission line problems encountered in electrical and computer engineering, rigorous analytical methods are required. At the end of this module, in addition to being able to solve EM and transmission line problems, the student will be able to design transmission line circuits, design electrical elements with lumped behaviour, and mitigate EM interference.  To enhance understanding, case studies and computer visualisation tools will be used.   Topics covered: Static electric and magnetic fields. Maxwell\u0027s equations. Electromagnetic waves: plane-wave propagation, behaviour at interface between media, shielding, electromagnetic compatability. Transmission lines. Impedance matching. Radiation.  Case studies._\"\t4_\tTE2002_"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "EE2012_\tAnalytical Methods in Electrical and Computer Engineering_\t\"This module covers the mathematical fundamentals of probability and statistics which are necessary in the study of integrated circuits,  communications, communication networks, control systems, signal processing, energy and new media. There is a strong emphasis on the application of these concepts to electrical and computer engineering problems, such as the Gaussian distribution in communications, random variable distributions for system reliability, Bayes theorem in parameter estimation, and hypothesis testing for signal detection._\"\t4_\t(MA1505 and MA1506) or (MA1511 and MA1512)_"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "EE2020_\tDigital Fundamentals_\t\"This is a first course that introduces fundamental digital logic, digital circuits, and programmable devices. The course also provides an overview of computer systems. This course provides students with an understanding of the building blocks of modern digital systems and methods of designing, simulating and realizing such systems. The emphasis of this module is on understanding the fundamentals of digital design across different levels of abstraction using hardware description languages._\"\t5_\tEE1002 or CG1108 or EG1108_"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "EE2021_\tDevices and Circuits_\t\"This module builds on  the students� knowledge on electronic devices and their use in the design of circuits. The physical principles behind the operation of these devices, their operation and usage in electronic circuits to achieve important functions will be the back bone of this module.   The topics covered include basic semiconductor physics, drift and diffusion of carriers, pn diode, diode circuits, Bipolar Junction Transistor (BJT), and Metal Oxide Semiconductor (MOSFET), design of single stage amplifiers using BJTs and MOSFETs,  CMOS inverter, multistage amplifiers, current source and sink.  Students will be assessed through assignments, test and a final examination._\"\t4_\tEE1002/EG1108 /CG1108_"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "EE2023_\tSignals and Systems_\t\"This is a fundamental course in signals and systems. Signals in electrical engineering play an important role in carrying information. Signals going through a system is an inevitable process. It allows engineers to understand the system. Thus in this course the relationship between signals and systems will be taught. The concepts which are important include time and frequency  domain representations, Fourier and Laplace transforms, spectrum of a signal, frequency response of systems (Bode diagrams), sampling theorem, linear time invariant systems, convolution, transfer functions, stability of feedback systems, modulation and filters._\"\t4_\tMA1506 or MA1512_"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "EE2023E_\tSignals and Systems_\t\"This is a fundamental course in signals and systems. Signals in electrical engineering play an important role in carrying information. Signals going through a system is an inevitable process. It allows engineers to understand the system. Thus in this course the relationship between signals and systems will be taught. The concepts which are important include time and frequency  domain representations, Fourier and Laplace transforms, spectrum of a signal, frequency response of systems (Bode diagrams), sampling theorem, linear time invariant systems, convolution, transfer functions, stability of feedback systems, modulation and filters._\"\t4_\tTG1401_"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "EE2024_\tProgramming for Computer Interfaces_\tThis course provides students with the experience of programming devices and computer interfaces. The course builds upon the C language programming skills the students have learnt in the previous semester and teaches them how to utilize programming to build simple digital systems. The course culminates in an open-ended project in which students will have the opportunity to design and build a digital system of their choice._\t5_\tEE2020 and CS1010E_"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "EE2025_\tPower Electronics_\t\"Power electronics is an enabling technology used widely in electric power processing unit. It is an integral part of all electronic equipment from household appliances through information technology to transportation systems. This module provides basic working principles and their design for generic power electronic converter circuits. After going through this module students should be able to analyze, evaluate and carry out basic design of power electronic circuits for a large variety of applications. The topics covered are: Power semiconductor devices and terminal characteristics. Switching circuits design and protection circuits. AC-DC converters, DC-DC converters and DC-AC converters: basic analysis and performance evaluation._\"\t4_\tEE1002 Introduction to Circuits and Systems (or EG1108 Electrical Engineering or CG1108 Electrical Engineering)_"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "EE2026_\tDigital Design_\t\"This is a first course that introduces fundamental digital logic, digital circuits, and programmable devices. This course provides students with an understanding of the building blocks of modern digital systems and methods of designing, simulating and realizing such systems. The emphasis of this module is on understanding the fundamentals of digital design across different levels of abstraction using hardware description languages, and developing a solid design perspective towards complex digital systems._\"\t4_\tEG1111_EE2027_\tElectronic Circuits_\t\"Building on the basic circuit concepts introduced through EG1112, this module introduces the operating principles of transistors and how they are used in amplifier circuits. It discusses the foundational concepts of transistor amplifiers and analyses their performance. It also introduces "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "operational amplifiers as a circuit component and describes how functional analog circuits, which can be applied to solving complex engineering problems, can be designed and analysed using operational amplifiers.  LTSpice will be introduced as a circuit analysis tool.  To augment learning, two laboratory sessions will be included focusing on the topics of single transistor amplifiers and Op-Amp circuits, respectively._\"\t4_\tEG1112_EE2028_\tMicrocontroller Programming and Interfacing_\t\"This module teaches students how to program microcontrollers and achieve computer interfacing using C programming and industry standard protocols. The course extends the C programming students have learnt earlier, covers microprocessor instruction sets and how to program microcontrollers to interface with other devices in order to build an embedded system. The course culminates in an assignment in which students design and build an embedded system that meets requirements and specifications._\"\t4_\t\"IT1007, EE2026_\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "EE2031_\tCircuit and Systems Design Lab_\t\"This module emphasizes on the practical aspects related to modules EE2021 Device and Circuits and EE2022 Electrical Energy Systems. It also provides students with an integrated perspective about the two modules. Students will first learn about the device characterizations, such as diode, LED, solar cell, transistor, operational amplifiers, etc. They will then proceed to build interesting circuits blocks involving the devices learnt earlier. With these accumulated knowledge on device and circuit blocks, students will move on to system projects that require the integration of knowledge across different fields, such as devices, circuits and portable electrical energy systems._\"\t3_\tEE2021 Devices and Circuits_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "EE2032_\tSignals \u0026 Communications Design Lab_\t\"This lab module introduces students to the practical aspects of designing a communication system. This module builds on the concepts learnt in EE2011 Engineering Electromagnetism and EE2023 Signals and Systems. Students will start the experiments with the Frequency Modulation (FM) technique in conjunction with a voltage controlled oscillator (VCO). This is followed by experiments with FM demodulation techniques, simplex communication and duplex communication. Then students will learn about the reflection coefficient and plot it in the Smith Chart. Subsequently an antenna is designed and the building blocks of the communication system are characterized. Finally the complete communication system is assembled and measured._\"\t3_\tEE2011 Engineering Electromagnetism and EE2023 Signals and Systems._"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "EE2033_\tIntegrated System Lab_\t\"This module serves as the hands-on counterpart for EE2027 and EE2023.  Students will practice and strengthen the knowledge learnt in electromagnetics, devices and circuits, and signals and systems through a series of experiments with the aim of integrating these knowledge to build an integrated digital communication system.  The experiment will touch on important concepts, such as opamp characterization, circuit design specifications and component choice, frequency domain signal analysis, OOK modulation, frequency spectrum, and wireless communication system. Towards the end, the students will form an integrated view on these topics through a mini-project that encompass all these fields._\"\t4_\t\"EE2023, EE2027_\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "EE2111A_\tElectrical Engineering Principles and Practice II_\t\"This module is the second part of the two part module Engineering Principles and Practice (EPP) I and II and follows closely the same learning objectives. Most modern engineering systems are more electric. They convert some raw form of energy, such as fuel, mechanical or energy stored in battery, into electrical form. We see this in every engineering system from trains, biomedical devices, chemical plants, electric cars, aircrafts and ships to ICT devices such as computers, handphones, tablets etc. Hence, energy conversion, distribution, and sensing \u0026 control will form the backbone of this knowledge segment._\"\t4_\t_"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "EE3013C_\tLabview for Electrical Engineers_\t\"This module will give students some general computing as well as more specific software skills for solving engineering problems. LabVIEW is widely adopted software in the industry for data acquisition and instrument control. The teaching of LabVIEW will be based on engineering fundamentals that students have learnt in the first two years. This will also help them to consolidate concepts that have been learnt in the various technical modules. Through a series of integrated miniprojects carried out in the lab, students will be guided in their exploration of engineering principles and problem solving using the tools available in LabVIEW._\"\t4_\tEG1108/CG1108 / EE1002_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "EE3013E_\tLabview for Electrical Engineers_\t\"This module will give students some general computing as well as more specific software skills for solving engineering problems. LabVIEW is widely adopted software in the industry for data acquisition and instrument control. The teaching of LabVIEW will be based on engineering fundamentals that students have learnt in the first two years. This will also help them to consolidate concepts that have been learnt in the various technical modules. Through a series of integrated miniprojects carried out in the lab, students will be guided in their exploration of engineering principles and problem solving using the tools available in LabVIEW._\"\t4_\t(EE2021E or TEE2027) and TG1401_"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "EE3030A_\tExploring Frugal Engineering_\t\"Frugal engineering is a philosophical approach to product design which addresses the needs of customers with very low purchasing power. In essence, it is about designing a product which meets the needs of customers who cannot afford products with �bells and whistles� features. Frugal engineering involves rethinking entire production and maintainance processes. It is not only a challenging mindset to inculcate in young budding engineers, but it is also a rich training ground to foster critical thinking skills which are pertinent to conceptualizing products that maximizes the value to customers. The objectives of this module is to expose students to frugal engineering through a field trip to the rural communities in the region to observe first-hand the way of life in such communities and to develop ideas of products which will bring benefit to a large segment of this community. Students will also engage with industries with a frugal engineering focus._\"\t3_\tAt least level 2 standing_"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "EE3030B_\tLiving Lab in the Communities_\t\"This module is about placing students in an active environment or community (Living Lab), providing them with opportunities to conceptualize products or services which will later be designed and developed in the ECE laboratories. The Living Labs (LL) may be rehabilitation centres in hospitals, orphanages, block of HDB flats, hawker centres, etc where good opportunities abound for technology to play a role in overall improvements of such places. Students in this module will spend 3 weeks conducting field work, observing and engaging users in the LL, with the objective of conceptualizing products/services which will benefit a large segment of the users. Students will be encouraged to realize their ideas in the other project modules in the curriculum._\"\t2_\tAt least level 2 standing_"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "EE3031_\tInnovation \u0026 Enterprise I_\t\"This is an engineering module that focuses on the conceptualization, design and development of technology oriented new products. It integrates innovation, product planning, marketing, design and manufacturing functions of a company. This module gives students an opportunity to conceptualize and design a product which they will eventually prototype in another module (Innovation \u0026 Enterprise II). Thus it is designed for electrical engineering students to experience an integrated learning of innovation and enterprise pertaining to new product development where technology plays a central role. The major topics include innovation, opportunity management, identification of customers� needs, product specification, design, planning, testing, manufacturing, and commercialization. Intellectual property and its relationship with all facets of new technology product design are also covered. Guest speakers from relevant industries will be invited to present practical aspects of innovation and new product development._\"\t4_\t_"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "EE3031E_\tInnovation \u0026 Enterprise I_\t\"This is an engineering module that focuses on the conceptualization, design and development of technology oriented new products. It integrates innovation, product planning, marketing, design and manufacturing functions of a company. This module gives students an opportunity to conceptualize and design a product which they will eventually be able to prototype. Thus it is designed for electrical engineering students to experience an integrated learning of innovation and enterprise pertaining to new product development where technology plays a central role. The major topics include innovation, opportunity management, identification of customers� needs, product specification, design, planning, testing, manufacturing, and commercialization. Intellectual property and its relationship with all facets of new technology product design are also covered. Guest speakers from relevant industries will be invited to present practical aspects of innovation and new product development._\"\t4_\tLevel 3 standing_"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "EE3032_\tInnovation \u0026 Enterprise II_\t\"In this module, students will work in a team project to design and build an electronic system which includes both digital and analog circuits and therefore requires both hardware and software design. The functionalities of the electronic system are determined by the students themselves. They will go through the steps of conceptual system design, detailed technical design, bread-board prototyping, printed circuit board implementation, system integration, testing \u0026 debugging and demonstration of the final working model. The project work will be continuously documented by each student in an individual project design portfolio._\"\t6_EE2024 Programming for Computer Interfaces_"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "EE3104C_\tIntroduction to RF and Microwave Systems \u0026 Circuits_\t\"Wireless communication and sensing systems play an ever increasing role in society. This module introduces the RF and microwave hardware systems and circuits.The applications include: GSM/CDMA, RFID, UWB, WLAN, Bluetooth, Zigbee, Radar and remote sensing_\"\t4_\tPC2020 (for AY2017 intake \u0026 after) ; EE2011 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "EE3104E_\tIntro to RF and Microwave Sys \u0026 Circuits_\t\"Wireless communication and sensing systems play an ever increasing role in society. This module introduces the RF and microwave hardware systems and circuits.The applications include: GSM/CDMA, RFID, UWB, WLAN, Bluetooth, Zigbee, Radar and remote sensing_\"\t4_\tEE2011E_"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "EE3131C_\tCommunication Systems_\t\"Introductory overview of analog and digital communications. Advantages of digital over analog communications in the presence of noise. Analog and digital modulation techniques. Source coding and waveform quantization techniques. Channel noise and channel coding for error protection. Multiplexing and multiple access. Basics of wireless communications. Applications of wireless systems. Radio wave propagation and multipath fading. Transmitter and receiver antennas. Free-space and fiber optical communication systems. Optical transmitters, optical receivers, and optical channels. Introduction to data communications. Packet switching, line coding, framing, and error detection._\"\t4_\tEE2023 Signals \u0026 Systems_"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "EE3131E_\tCommunication Systems_\t\"Introductory overview of analog and digital communications. Advantages of digital over analog communications in the presence of noise. Analog and digital modulation techniques. Source coding and waveform quantization techniques. Channel noise and channel coding for error protection. Multiplexing and multiple access. Basics of wireless communications. Applications of wireless systems. Radio wave propagation and multipath fading. Transmitter and receiver antennas.Free-space and fiber optical communication systems. Optical transmitters, optical receivers, and optical channels. Introduction to data communications. Packet switching, line coding, framing, and error detection._\"\t4_\t(EE2009E and EE2010E) or EE2023E_"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "EE3207E_\tComputer Architecture_\t\"This course teaches students the basics in the design of the various classes of microprocessors. Contents include design of simple micro-controllers, high performance CPU design using parallel techniques, memory organization and parallel processing systems. Topics also include the development of support tools to enable efficient usage of the developed microprocessor. The course emphasizes practical design and students are expected to be able to synthesize microprocessors at the gate level at the end of this course._\"\t4_\tEE2007E or EE2024E or TEE2028_"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "EE3208_\tEmbedded Computer Systems Design_\t\"This course introduces students to the design of embedded systems covering four key areas, namely, specifications and requirement determination, architectural design, software development and hardware development. The unified system design approach emphasizes hardware software co-design in the final synthesis of the application. Students will be brought through a design cycle in a realistic project. Topics covered include: System specification and requirement analysis; Object relationship and system structure; Quantifying behaviour; Targeting architecture: hardware/software partitioning; Resource estimation; Programmable platforms; Developing application software and targeting RTOS; Hardware design and implementation; System integration and debugging techniques; Design to meet regulatory standards._\"\t4_\tCG2007/EE2024_"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "EE3208E_\tEmbedded Computer Systems Design_\t\"This course introduces students to the design of embedded systems covering four key areas, namely, specifications and requirement determination, architectural design, software development and hardware development. The unified system design approach emphasizes hardware software co-design in the final synthesis of the application. Students will be brought through a design cycle in a realistic project. Topics covered include: System specification and requirement analysis; Object relationship and system structure; Quantifying behaviour; Targeting architecture: hardware/software partitioning; Resource estimation; Programmable platforms; Developing application software and targeting RTOS; Hardware design and implementation; System integration and debugging techniques; Design to meet regulatory standards._\"\t4_\tEE2007E or EE2024E or TEE2028_"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "EE3331C_\tFeedback Control Systems_\t\"Feedback systems are ubiquitous in both the natural and engineered world. They are essential for maintaining our environment, enabling our transportation and communications systems; and are critical elements in our aerospace and industrial systems. For the most part, feedback control systems function accurately and reliably in the background. This course aims at introducing the magic of feedback, and tools for analysing and designing control systems. The  fundamental knowledge of feedback and the related area of control systems are useful to students with diverse interests. Topics covered include feedback principles, time and frequency analysis of control systems, and simple controller design._\"\t4_\tEE2023 Signals and Systems_"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "EE3331E_\tFeedback Control Systems_\t\"Feedback systems are ubiquitous in both the natural and engineered world. They are essential for maintaining our environment, enabling our transportation and communications systems; and are critical elements in our aerospace and industrial systems. For the most part, feedback control systems function accurately and reliably in the background. This course aims at introducing the magic of feedback, and tools for analysing and designing control systems. The  fundamental knowledge of feedback and the related area of control systems are useful to students with diverse interests. Topics covered include feedback principles, time and frequency analysis of control systems, and simple controller design._\"\t4_\tEE2023E_"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "EE3408C_\tIntegrated Analog Design_\t\"This module focuses on integration of analog circuits on silicon using CMOS technology. The topics covered include processing and modeling background, basic circuits, reference circuit design, single stage amplifiers, operational amplifiers, noise issues and advanced design methods._\"\t4_\t\"CG2027/EE2027 (for AY2017 intake \u0026 after);EE2021 (for AY2016 intake \u0026 prior)_\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "EE3408E_\tIntegrated Analog Design_\t\"This module focuses on integration of analog circuits on silicon using CMOS technology. The topics covered include processing and modeling background, basic circuits, reference circuit design, single stage amplifiers, operational amplifiers, noise issues and advanced design methods_\"\t4_\tEE2021E or TEE2027_"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "EE3431C_\tMicroelectronics Materials and Devices_\t\"Electronic devices are the basic building blocks of all electronic gadgets used in our daily life. A solid understanding of the fundamental device concepts is essential for the electrical engineer to keep up with the fast evolution of new device technology. This module emphasizes on the properties of electronic materials and the operation principles of key electronic devices including p-n diode, bipolar junction transistor (BJT), MOS capacitor and (MOSCAP). Additional issues related to dielectricmaterials and non- semiconductor materials will be introduced. Contacts between metal and semiconductor will also be covered._\"\t4_\tCo-req : EE2027 / CG2027 / EE2021_"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "EE3431E_\tMicroelectronics Materials and Devices_\t\"Electronic devices are the basic building blocks of all electronic gadgets used in our daily life. A solid understanding of the fundamental device concepts is essential for the electrical engineer to keep up with the fast evolution of new device technology. This module emphasizes on the properties of electronic materials and the operation principles of key electronic devices including p-n diode, bipolar junction transistor (BJT), MOS capacitor and (MOSCAP). Additional issues related to dielectric materials and non- semiconductor materials will be introduced. Contacts between metal and semiconductor will also be covered._\"\t4_\t_"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "EE3501E_\tPower Electronics_\t\"Power electronics forms an integral part of all electronics equipment from household appliances through information technology to transportation systems. This module develops the working knowledge, the foundation theory for generic power electronic circuits and the principles of their design. At the end of this module the student should be able to analyze and evaluate and carry out basic design of power electronics system for a large spectrum of applications. The topics covered are: Power semiconductor switches and characteristics. AC-to-DC converters and their performance. DC-to-DC converters: analysis and performance. DC-to-AC converters; analysis and performance. Switching circuits design and protection._\"\t4_\tEE2005E or EE2021E or TEE2027_"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "EE3505C_\tElectrical Energy Systems_\t\"The module covers generation, transmission and distribution of electric energy in large-scale modern power system. Upon completion of this course, students will be able to model, analyze, and predict the performance of three-phase systems, transformers, and transmission and distribution networks. The topics covered are: three-phase systems; real, reactive and apparent power. rotating magnetic field; synchronous and asynchronous machines; transformers; single line representation of three-phase systems; per unit notation; electricity transmission networks; high voltage cables; distribution systems; Singapore electricity network; power quality; harmonics; and environmental considerations._\"\t4_\tEE1002 Introduction to Circuits and Systems / EG1108 Electrical Engineering / CG1108 Electrical Engineering_"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "EE3506C_\tIntro to Elect Energy Systems_\t\"This module covers the fundamental principles of modern electrical energy systems; including three-phase analysis, electric generations, electric loads, and power electronic converters. The module is designed specifically to help students develop a broad systems perspective and an understanding of the principal elements of electrical energy systems. The expectation is that students completing the module will be able to handle adequately the electrical aspects of a range of applications. This will serve as the foundation of higher-level topics in power engineering. Furthermore, students will be prepared to work effectively with electrical engineers on the joint solution of complex problems._\"\t4_\t\"EG1112 / CG1111 (for AY2017 intake \u0026 after) ;EE1002 / EG1108 / CG1108 (for AY2016 \u0026 prior)_\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "EE3702_\tElectronic Gaming_\t\"The production of electronic games  whether on a computer, video console, or a handheld device  is a highly interdisciplinary and team-oriented task. This module provides a holistic overview (big picture) of electronic gaming and provides insights about the interplay of the single disciplines, components, and workflows. The course covers the basics of the games industry and game production, ranging from the business environment and development processes, to hardware platforms, game structures, and tool and technology basics. Students will be able to develop their own game product proposal in a group work project._\"\t4_\tLevel 3 standing_"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "EE3731C_\tSignal Processing Methods_\t\"This module provides an introduction to signal processing methods. It is aimed at preparing students for high-level technical electives and graduate modules in signal processing and new media. The topics covered include: digital filtering, multirate digital signal processing, introduction to wavelet transform, probability and random signals, stochastic processes, singular value decomposition, principle component analysis and multimedia applications._\"\t4_\t(EE2012 or ST2334) and EE2023_"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "EE3731E_\tSignal Processing Methods_\t\"This module provides an introduction to signal processing methods. It aimed at preparing students for high-level technical electives and graduate modules in signal processing and new media. The topics covered include: digital filtering, multirate digital signal processing, introduction to wavelet transform, probability and random signals, Wiener filter, AMAR model, linear prediction, singular value decomposition, principle component analysis and multimedia applications._\"\t4_\tTE2003 and EE2023E_"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "EE4001_\tB.Eng. Dissertation_\t\"In this module, students will do a research project over two semesters on a topic of current interest in Electrical and Computer Engineering. Students learn how to apply skills acquired in the classroom and also think of innovative ways of solving problems. Apart from intrinsic rewards such as the pleasure of problem solving, students are able to acquire skills for independent and lifelong learning. The objective of this module is to teach skills, such as questioning, forming hypotheses and gathering evidence. Students learn to work in a research environment._\"\t12_\tLevel 4 Standing_"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "EE4002D_\tDesign Capstone_\t\"In this module, students will do a team project that involves a varied mix of research, design and development components. It is carried out over two semesters on a topic of current interest in Electrical and Computer Engineering. Students learn how to apply knowledge and skills acquired in the classroom and also think of innovative ways of solving complex problems. Apart from problem solving, students are able to acquire skills for independent lifelong learning, teamwork and effective communication._\"\t8_\tLevel 3 Standing_"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "EE4031_\tIntellectual Property: Harnessing Innovation_\tThis module takes a hands-on approach to IP management from early stages of technology and inventions to the later stages of commercialization. The idea is to provide pragmatic knowledge dealing with one of the most exciting avenues for economic growth and wealth creation. Those planning to pursue the path of a practising engineer will find the module most useful._\t2_\t_"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "EE4101_\tRF Communications_\t\"Radio and microwave systems are used for information transmission.  This module therefore introduces the student to a broad range of enabling knowledge and skills commonly employed by RF and microwave engineers to specify, analyse and design radio and microwave transmission systems.  Topics covered:  Time-varying EM fields: guided waves, evanescent modes and plane-wave propagation. Radiation: radiation mechanism, magnetic vector potential, current distribution on a thin wire, Hertzian dipole, Half-wave dipole \u0026 monopole. RF Antennas: parameters, aperture antennas and arrays.  RF Amplification: stability, gain and small-signal narrowband design.  RF Generation:  conditions for oscillation, oscillator design and dielectric resonators.   RF Receivers:  receiver and mixer parameters.  RF Systems: system gain and noise figure, satellite and terrestrial systems._\"\t4_\tEE3104C_"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "EE4101E_\tRadio-Frequency (RF) Communications_\t\"Radio and microwave systems are used for information transmission.  This module therefore introduces the student to a broad range of enabling knowledge and skills commonly employed by RF and microwave engineers to specify, analyse and design radio and microwave transmission systems.  Topics covered:  Time-varying EM fields: guided waves, evanescent modes and plane-wave propagation. Radiation: radiation mechanism, magnetic vector potential, current distribution on a thin wire, Hertzian dipole, Half-wave dipole \u0026 monopole. RF Antennas: parameters, aperture antennas and arrays.  RF Amplification: stability, gain and small-signal narrowband design.  RF Generation:  conditions for oscillation, oscillator design and dielectric resonators.   RF Receivers:  receiver and mixer parameters.  RF Systems: system gain and noise figure, satellite and terrestrial systems._\"\t4_\tEE2011E_"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "EE4102_\tDigital Communications_\t\"This course begins with the review of mathematical preliminaries such as probability, random process and signal space concepts. It covers the design of modulation and optimum demodulation methods for digital communications over an additive white Gaussian noise channel. Emphasis will be placed on error rate performance for the various digital signaling techniques (ASK, BPSK, FSK, MPSK, QAM, OQPSK, CPM, MSK and GMSK) and on the channel bandwidth requirements. Subsequently, the course will focus on channel coding (Block codes and Convolutional codes), channel equalization and carrier, symbol synchronization._\"\t4_\tEE3103_"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "EE4103_\tCoding Theory And Applications_\t\"Coding techniques are used for data compression and reliable communication of digital information over imperfect channels. This module introduces students to a wide range of standard enabling techniques and methods that are deployed in the telecommunications and computing industries. The topics covered are: information measures, source and channel models, various source coding schemes including Huffman coding, run-length coding, linear predictive coding, transform coding, and various channel coding schemes including cyclic codes, BCH codes, Reed-Solomon codes and convolutional codes._\"\t4_\tEE2012_"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "EE4104_\tMicrowave Circuits \u0026 Devices_\t\"Microwave amplifiers, oscillators, mixer and detectors, and electronic switches are basic components of microwave systems. The performance of these components is critical to system performance. This module therefore teaches the design of these components to satisfy performance specifications. Topics covered: Amplifiers: theory, LNA and multistage design; Oscillator theory: nonlinear negative resistance, startup, stability, power generation; Gunn and IMPATT diode oscillators; Design of planar passive components and their application; PIN diode switch and phase shifter analysis and design; Mixers and detectors:  theory, mixer and detector diodes, diode detectors and mixers._\"\t4_\tEE3104C_"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "EE4109_\tSpread Spectrum Communications_\t\"Spread spectrum modulation is the enabling technology for many current mobile wireless communication systems and is a leading candidate for next generation communication systems. This module introduces students to spread spectrum communications, including modulation (direct-sequence and frequency hopping) and detection (single and multiuser). The topics covered also include wireless fading channels, sequence design (binary shift register sequences), sequence acquisition/tracking, cellular communications and the application of spread spectrum to Code Division Multiple Access (CDMA) systems._\"\t4_\tCo-requisite: EE4102_"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "EE4110_\tRFIC and MMIC Design_\t\"Solid-state microwave circuits are usually realised using planar technologies, which integrate some or all components on a substrate.  Moreover, monolithic microwave integrated circuits (MMICs) enable commercial application of microwave technology.  This module therefore teaches design methods for microwave integrated circuits. Topics covered:  review of design concepts. MIC Design: fabrication techniques, modeling of active and passive networks, microstrip and coplanar lines. MMIC Design: lump element design, foundry rules, modeling of active and passive networks, design techniques - Layout and DRC Checks.   Selected Hands-on design work on (a) Passive Network - MIC filter and coupler, and (b) Active Network - MMIC oscillator and mixer._\"\t4_\tEE3104C_"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "EE4112_\tRadio Frequency Design and Systems_\t\"Radio and microwave systems rely on efficient transmission and distribution of electromagnetic (EM) energy. Radio and microwave systems need to be immune from external EM interference and need to ensure that they do not cause interference of their own. To achieve these requirements, this module will equip and foster the students with balanced and particularly more hands-on oriented contents on radio frequency (RF) designs and practical systems, through live experiments, software learning, and real-life RF examples. Topics covered: transmission systems, resonator cavity, impedance matching network, electromagnetic interference (EMI) and shielding, multi-port scattering and corresponding measurement methods, radiation, and antenna characterizations._\"\t4_\tEE3104C_"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "EE4112E_\tRadio Frequency Design and Systems_\t\"Radio and microwave systems rely on efficient transmission and distribution of electromagnetic (EM) energy. Radio and microwave systems need to be immune from external EM interference and need to ensure that they do not cause interference of their own. To achieve these requirements, this module will equip and foster the students with balanced and particularly more hands-on oriented contents on radio frequency (RF) designs and practical systems, through live experiments, software learning, and real-life RF examples. Topics covered: transmission systems, resonator cavity, impedance matching network, electromagnetic interference (EMI) and shielding, multi-port scattering and corresponding measurement methods, radiation, and antenna characterizations._\"\t4_\tEE2011E_"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "EE4113_\tDigital Communications \u0026 Coding_\tThis course begins with a review of mathematical preliminaries such as random processes and signal space concepts. It covers the design of modulation and demodulation schemes for digital communications over an additive white Gaussian noise channel. Emphasis will be placed on error rate performance for various digital signaling techniques and on error control coding techniques for reliable communications._\t4_\tEE2012/ST2334 \u0026 EE3131C_"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "EE4113E_\tDigital Communications \u0026 Coding_\t\"This course begins with a review of mathematical preliminaries such as random processes and signal space concepts. It covers the design of modulation and demodulation schemes for digital communications over an additive white Gaussian noise channel. Emphasis will be placed on error rate performance for various digital signaling techniques and on error control coding techniques for reliable communications. Topics include the optimal receiver principle, modulation/demodulation techniques, signaling over band limited channels and important channel codes such as Reed-Solomon codes, turbo codes and LDPC codes._\"\t4_\tTE2003 \u0026 (EE3103E or EE3131E)_"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "EE4114_\tOptical Communications_\t\"This module offers an introduction to the fundamental principles and components of optical communication systems. The module objective is to provide a basic understanding of present optical communication systems as well as future engineering challenges. To this end, the module covers the basic concepts of fiber optics, data modulation in optical fiber channels, management of fiber degrading effects, and wavelength division multiplexing. It also includes the basic constituent components of optical communication systems, including transmitters, receivers, optical amplifiers, and optical fibers._\"\t4_\tEE3131C_"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "EE4131_\tRandom Signals_\t\"This module is designed to serve as a first course in stochastic signal analysis-and-processing for senior and graduate engineering students. It aims to bridge the gap between the elements of probability theory, as taught in early undergraduate level modules, and the basic concepts needed in contemporary signal processing applications. Topics include: general concepts and classification of random variables and stochastic processes; transformation of random variables; effects of linear time-invariant filtering on the autocorrelation function and power spectrum of a stochastic process; Gaussian, chi and chi-square statistics; random binary signals, random walk process, Wiener-L�vy process; Poisson and related processes; random telegraph signals._\"\t4_\t\"EE2012 Analytical Methods in ECE orST2334 Probability and StatisticsandEE2023 Signals and Systems_\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "EE4204_\tComputer Networks_\t\"This module provides an in-depth treatment of fundamental topics  of network design based on the Internet protocol stack model. It is aimed at making students understand how networks work through understanding of the underlying principles of sound network design.  This course covers topics including  network requirements, architecture, protocol stack models, Ethernet  Token Ring,  Wireless, and FDDI networks, bridges, switching and routing in IP and ATM networks,  and internetworking. Apart from learning the concepts in networks, the students will gain expertise in analyzing and designing networking protocols through mini-projects._\"\t4_\tEE2012 / ST2334._"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "EE4204E_\tComputer Networks_\t\"This module provides an in-depth treatment of fundamental topics  of network design based on the Internet protocol stack model. It is aimed at making students understand how networks work through understanding of the underlying principles of sound network design.  This course covers topics including  network requirements, architecture, protocol stack models, Ethernet  Token Ring,  Wireless, and FDDI networks, bridges, switching and routing in IP and ATM networks,  and internetworking. Apart from learning the concepts in networks, the students will gain expertise in analyzing and designing networking protocols through mini-projects._\"\t4_\tTE2003_"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "EE4210_\tNetwork Protocols and Applications_\t\"This advanced networking module aims to equip students with the basics and theories of Internet-related technologies, which are necessary for computer/network engineers. The topics that will be covered include Internet architecture, Internet applications and their protocols (HTTP, FTP, DNS, Email, P2P, BitTorrent, etc.), wireless and mobile networks, mobility management, multimedia networking, and network security._\"\t4_\tEE2012 or ST2334_"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "EE4210E_\tNetwork Protocols and Applications_\t\"The course will enable students to know the basics and theories of Internet-related tenchologies which offer the background knowledge \u0026 skills required for computer or network engineers.  Contents covered include Internet Architecture \u0026 client/server applications, Client \u0026 Server Computing, Internetworking concepts \u0026 Architectural Model, Transport protocols:  UDP/TCP, TCP/IP socket programming, Routing protocols, Domain Name System, Mobile IP, and Next Generation IP._\"\t4_\tTE2003_"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "EE4211_\tData Science for the Internet of Things_\t\"This module covers data analytics for the Internet of Things. It starts with an introduction to the Internet of Things (IoT) systems, including the enabling technologies, IoT network architectures and protocols. IoT systems have applications such as semiconductor manufacturing, smart power grids, and healthcare. The module then covers data science fundamentals such as Bayesian statistics, classification, supervised learning, unsupervised learning, and deep learning. The module also covers basic machine learning algorithms such as decision trees, logistic regression, support vector machines, and neural networks. Students will visualize and analyze real-world data sets via practical IoT case studies._\"\t4_\t_"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "EE4212_\tComputer Vision_\t\"The goal of this module is to introduce the students to the problems and solutions of modern computer vision, with the main emphasis on recovering properties of the 3D world from image and video sequence. After this module, students are expected to be able to understand and compute the basic geometric and photometric properties of the 3D world (such as point depth and surface orientation), and to apply various methods for video manipulation such as segmentation, matting, and composition. Main topics covered include: Singular value decomposition, projective geometry, Marr\u0027s paradigm, calibration problems, correspondence and flow, epipolar geometry, motion estimation, reflectance models, shape from shading, photometric stereo, color processing, texture analysis and synthesis, advanced segmentation, matting and composition techniques._\"\t4_\t\"MA1508E and EE3731C/EE4704 (for AY2017 intake \u0026 after) ;EE3206 or EE3731C (for AY2016 intake \u0026 prior)_\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "EE4213_\tImage and Video Processing_\t\"Image perception such as color, etc will be covered in EE4212, and hence this topic is deleted. Coverage of some enhancement topics is deleted, as these are covered in EE3206, restoration is streamlined. About four hours would be saved through this which will be utilized towards topics in video processing such as representation, block based motion estimation, motion compensated filtering and coding._\"\t4_\tEE3206_"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "EE4214_\tReal-Time Embedded Systems_\t\"The objectives of this module are to present the theoretical foundations of real-time systems and to discuss the practical aspects of their implementation. It describes the characteristics of a real-time computing system and students are taught how to design a real-time embedded system using structured data flow methodology. Concepts of time-critical I/O and real-time deadlines are emphasized, as are the important aspects of real-time operating systems, scheduling and the practical implementation of embedded systems and firmware. Other topics covered include deadlock management and process communications. Various case studies on industrial real-time systems will be exhibited to give students a real-world feel for such systems. Students will undertake a mini project involving a real-time embedded system. Topics covered: Introduction to real-time and embedded systems; Time critical I/O handling; Real-time embedded software design; Concurrent programming; Real-time operating systems; Scheduling and time-critical processing; Deadlock management; Process communications; Case studies of real-time embedded systems._\"\t4_\tCG2007/EE2024_"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "EE4214E_\tReal-Time Embedded Systems_\t\"The objectives of this module are to present the theoretical foundations of real-time systems and to discuss the practical aspects of their implementation. It describes the characteristics of a real-time computing system and students are taught how to design a real-time embedded system using structured data flow methodology. Concepts of time-critical I/O and real-time deadlines are emphasized, as are the important aspects of real-time operating systems, scheduling and the practical implementation of embedded systems and firmware. Other topics covered include deadlock management and process communications. Various case studies on industrial real-time systems will be exhibited to give students a real-world feel for such systems. Students will undertake a mini project involving a real-time embedded system. Topics covered: Introduction to real-time and embedded systems; Time critical I/O handling; Real-time embedded software design; Concurrent programming; Real-time operating systems; Scheduling and time-critical processing; Deadlock management; Process communications; Case studies of real-time embedded systems._\"\t4_\tTE2101 and (EE2024E or TEE2028)_"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "EE4217_\tTechnology Of Digital Entertainment_\t\"Digital Entertainment is a new and highly promising market, and its products and services have become increasingly popular in recent years. The underlying technologies have been in a continuous state of innovation since their inception. In this module we address the unique practical and theoretical issues of digital entertainment. The major topics covered include: Digital Media Technology, Digital Imaging Devices, Computer-Human Interaction, Game Design and Programming, Gaming Hardware, and Mobile Entertainment._\"\t4_\t_"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "EE4218_\tEmbedded Hardware System Design_\t\"The goal of this module is to enable students to understand and be able to practise the principles of designing complex embedded systems. After completing this module, students must be able to translate system specifications into executable computation models using a high level specification language and map these formal specifications into a register-transfer level hardware description language (HDL) that can be implemented on an FPGA. Main topics covered include: Methodology for designing embedded systems; specification and modelling of systems; architectures of embedded systems; mapping specifications into architectures; rapid prototyping on FPGA platforms. Students are required to implement an embedded system by going though the complete design flow with state-of-the-art Electronic Design Automation (EDA) tools._\"\t4_\tEE2028 or CG2028 (for AY2017 intake \u0026 after) ; EE2024 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "EE4302_\tAdvanced Control Systems_\t\"This module provides the foundation for a more advanced level control systems course. Topics include system description, controllability, observability, selection of pole locations for good design, observer design, full-order and reduced-order observers, combined control law and observer. It is also a first course in nonlinear systems and control. Topics include non-linearities in control systems, use of root-locus in analysis of non-linear systems, describing function and its use in analysis and design of control systems, non-linear ordinary differential equations, singular points, and phase-plane analysis._\"\t4_\tEE3331C_"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "EE4303_\tIndustrial Control Systems_\t\"This module will cover sensors, instrumentation and control systems commonly used in the industry. The sensor and instrumentation part includes topics such as signal processing and conversion, transducers and actuators, instrumentation amplifiers, non-linear amplifiers, issues pertaining to grounds, shields and power supplies. The control portion covers the evolution and types of control systems, centralized control, direct digital control (DDC), distributed control systems (DCS), fieldbuses, PID control: tuning methods and refinements, auto-tuning principles and implementation, available industrial PID controllers and their operation. It will include other common control systems such as feed-forward, cascade, ratio, selective, split range, time-delay compensation, sequence control and PLC._\"\t4_\tEE3331C_"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "EE4303E_\tIndustrial Control Systems_\t\"This module will cover sensors, instrumentation and control systems commonly used in the industry. The sensor and instrumentation part includes topics such as signal processing and conversion, transducers and actuators, instrumentation amplifiers, non-linear amplifiers, issues pertaining to grounds, shields and power supplies. The control portion covers the evolution and types of control systems, centralized control, direct digital control (DDC), distributed control systems (DCS), fieldbuses, PID control: tuning methods and refinements, auto-tuning principles and implementation, available industrial PID controllers and their operation. It will include other common control systems such as feed-forward, cascade, ratio, selective, split range, time-delay compensation, sequence control and PLC._\"\t4_\tEE2010E or EE3331E_"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "EE4304_\tDigital Control Systems_\t\"This module provides students with system theory, analysis tools and design methods in discrete-time domain. It is the first course in control and automation that systematically introduces the basic concepts and principles in sampling, Z-transform, zero-order-hold, discrete equivalence and the relations to discrete-time control design. It further examines the design issues for digital PID, PID auto-tuning, phase compensator, and the model predictive control, including the performance criteria, pole-placement, as well as numerous illustrative application examples._\"\t4_\t\"EE2010EE3331C_\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "EE4305_\tIntroduction To Fuzzy / Neural Systems_\t\"This module introduces students to the fundamental knowledge, theories and applications of fuzzy logic and neural networks. It examines the principles of fuzzy sets and fuzzy logic, which leads to fuzzy inference and control. It also gives students an understanding of the structures and learning process of a neural network. Topics covered include: fuzzy set theory, fuzzy systems and control, basic concepts of neural networks, single-layer and multilayer perceptrons, self-organizing maps and neural network training._\"\t4_\tEE2023_"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "EE4305E_\tIntroduction To Fuzzy/Neural Systems_\t\"This module introduces students to the fundamental knowledge, theories and applications of fuzzy logic and neural networks. It examines the principles of fuzzy sets and fuzzy logic, which leads to fuzzy inference and control. It also gives students an understanding of the structures and learning process of a neural network. Topics covered include: fuzzy set theory, fuzzy systems and control, basic concepts of neural networks, single-layer and multilayer perceptrons, self-organizing maps and neural network training._\"\t4_\tEE2010E or EE2023E_"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "EE4306_\tDistributed Autonomous Robotic Systems_\t\"The module distributed autonomous robotic systems will cover topics such as multi-agent systems, multiple robotic systems and computational intelligence. The tools presented include genetic algorithms, simulated annealing, soft computing and multi-objective optimisation. Some applications to pattern recognition, function mapping, sensor fusion, obstacle avoidance and learning in robotic systems are also presented._\"\t4_\tEE3331C_"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "EE4307_\tControl Systems Design And Simulation_\t\"This 100% CA module introduces students to the various stages in the design cycle of a closed-loop control system, namely modeling, identification, simulation, controller design and implementation. Students will appreciate the concepts of models and model structures, the ways to obtain them and their applications. Two modeling approaches will be covered; physical modeling which includes the principles and phases ofmodeling using basic physical relationships, and identification approaches covering both non-parametric and parametric identification.  Practical issues in modeling, including instrument calibration, model structure selection, data collection configuration, selection of test signals and model validation will also be duly covered. Via  project work, students will consolidate the topics covered in class with hands-on experience in modeling, simulating and controlling real systems. They will be equipped with useful practical skills at the end of this course._\"\t4_\tEE3331C_"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adinata15"
        },
        "content": "EE4308_\tAdvances in Intelligent Systems and Robotics_\t\"The module �Advances in Intelligent Systems and Robotics� will cover topics such as mobile robots, autonomous robotic systems, multiple mobile robotic systems, unmanned aerial vehicles and cyber physical security. Applications to multiple mobile robot path planning, multi-sensor fusion, obstacle avoidance and learning in robotic systems will be presented. An animated virtual-robot learning platform will be used for gaining hands on experience in designing autonomous robots, terrain building, path planning, obstacle avoidance and robot control._\"\t4_\tEE3331C Feedback Control Systems_"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "EE4401_\tOptoelectronics_\t\"Optoelectronics is the study of the interaction of light/radiation with the electronic properties of matter, which are mainly but not exclusively semiconductor-based. This module is designed with a mix of theory and application, emphasizing both the fundamental principles underlying device operation and the relevant technology in the photonics industry. At the end of the module, the student will be equipped with the basic physics of light production, emission and modulation, in semiconductors, electro-optic crystals and liquid crystal substances, and their application in display components and devices, and optical communications. Experiments on optical heterodyning, liquid crystal modulation and characteristics of semiconductor lasers and LEDs are included for practical hands-on experience. Topics covered include basic photometry and radiometry; bandgap engineering in III-V and II-VI compound semiconductors, exciton, isoelectronic traps; LED, semiconductor laser, photodetectors, optical modulators, liquid crystals, display technologies, and recent advances e.g. nanophotonics, organic LEDs and quantum well detectors. Topics covered: Basic photometry and radiometry. Bandgap engineering in III-V and II-VI compound semiconductors. Exciton, isoelectronic traps. LED, semiconductor laser and photodetector device structure and operational characteristics. Optical modulators. Liquid crystal displays. Nanophotonics._\"\t4_\tEE3431C or equivalent_"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "EE4407_\tAnalog Electronics_\t\"This module builds on the basic concepts in electronics which students learnt in EE2021. This will enable students to design complex electronic circuits and systems for processing analog signals. Topics covered: Passive filters, poles and zeros; Transistor amplifiers, Negative feedback amplifiers; Oscillators; Mixers, modulators and demodulators for communication systems; Instrumentation amplifiers, CMRR; DC power supply design: Linear and switching regulators, current limiting; Power amplifiers: Output stage, efficiency and distortion; Active filters; Interconnections: propagation of signal and energy in transmission lines; and introduction of design techniques for integrated circuits (IC)._\"\t4_\t\"EE2021 (for AY2016 intake \u0026 prior) ;CG2027 or EE2027 (for AY2017 intake \u0026 after)_\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "EE4407E_\tAnalog Electronics_\t\"This module provides students with essential concepts in electronics to enable them to understand and design complex electronics circuits and systems for processing analog signals.Topics covered: Techniques for implementing specific amplifier frequency response involving poles and time constants; Negative feedback amplifiers; Oscillators: RC, LC and crystal-controlled oscillators; Power amplifiers: Output stage, efficiency and distortion; DC power supply design: Linear and switching regulators, current limiting; Mixer, modulators and demodulators for communication systems; Active filters; Instrumentation amplifiers, CMRR; Applications of current mirror circuits._\"\t4_\tEE2021E or TEE2027_"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "EE4408_\tSilicon Device Reliability_\t\"This module provides an overview of the general failure mechanisms in integrated circuits and three MOS technology specific reliability mechanisms (i.e., CMOS latchup, gate oxide reliability and hot carrier reliability). A brief introduction on the failure analysis methodology will also be covered. At the end of this module, students will gain a basic understanding of the various failure/reliability issues in silicon devices.  Topics covered: Introduction to IC Failure Analysis. General failure mechanisms in integrated circuits: Bonding, packaging and metallization failures. Electrical stress failures: electromigration and ESD/EOS. Technology specific reliability mechanisms: CMOS latchup, gate oxide reliability and hot-carrier reliability._\"\t4_\tEE2021_"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "EE4409_\tModern Microelectronic Devices \u0026 Sensors_\t\"This module first gives an introduction of microelectronic devices applicable to IoT systems and applications deployed in our day-to-day modern gadgets/equipment, e.g., smartphones, wearable electronics and driverless cars. The devices include sensors for sensing various types of physical parameters (temperature, speed, position, etc.), storage devices, etc. The working principles of these devices will be described pertaining to an application. Specifications, usability and, key features of these devices will also be analysed so that students will learn how to utilize these devices in a wide range of IoT related applications such as health care, transportation, etc._\"\t4_\tCG2027/EE2027 (for AY2017 intake \u0026 after) ; EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "EE4410_\tIntegrated Circuit And System Design_\t\"This module provides an opportunity for students to learn analog and mixed-signal IC design through an integrated circuit prototyping project using commercial design flows. The module spans in two semesters.  The chip design and test are carried out in the first and second semester, respectively. The chip fabrication is done at an external foundry during the semester break. Lectures are given at the beginning of the two semesters, covering the project related topics and other important issues in IC design. This module is targeted at those electrical engineering students who have strong interests in IC design. The module is based on continuous assessment._\"\t8_\tE3408C_"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "EE4410A_\tIntegrated Circuit Design_\t\"This module is offered to electrical engineering students who have strong interests in integrated circuit (IC) design. It teaches students analog and mixed-signal IC design through an integrated circuit chip design project using commercial design flows. Intensive lectures pertaining to the project will be delivered in the first week. The lectures cover topics in noise analysis and reduction layout design, electrostatic discharge (ESD), latch up and testability. Students will then proceed with the design according to the given specifications for their projects. The design is carried out in a team of usually 3 students._\"\t4_\tEE3408C_"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "EE4411_\tSilicon Processing Technology_\t\"This module focuses on the major process technologies used in the fabrication of integrated circuits and other microelectronic devices. Each lecture topic covers important scientific aspects of silicon wafer processing steps. Simulations and laboratory experiments provide hands-on experience on basic operation and fabrication of MOS devices. Topics include: crystal growth and wafer preparation, epitaxy, oxidation, diffusion, ion implantation, lithography, plasma technology, etching, deposition, and metallization._\"\t4_\tEE2021_"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "EE4412_\tTechnology \u0026 Modelling Of Si Transistors_\t\"This module covers the operation, modeling and fabrication of silicon bipolar and MOS transistors, the understanding of which is essential for the integrated circuit engineer.  At the end of this module, students will gain a good understanding of the issues regarding the design and fabrication of modern silicon transistors as their dimensions continue to shrink. They will be exposed to the basic techniques of modeling, simulation and technology of these devices. Topics covered: MOS Capacitor: C-V characteristics, physical models; MOSFETs: long and short channel devices, threshold voltage, subthreshold behaviour, device scaling, short-channel effects, gate, drain and dielectric engineering; Bipolar transistors: structures and operations, high current effects, emitter, base and collector engineering; Polyemitter and Si-Ge heterojunction transistors; CMOS, bipolar and BiCMOS technology._\"\t4_\tEE2021_"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "EE4415_\tIntegrated Digital Design_\t\"This module introduces the students to the design of integrated circuits. It covers basic concepts including integrated circuits fabrication technology, CMOS and nMOS design, inverter design, aspect ratios of pull-up and pull-down transistors, switching characteristics of CMOS and nMOS inverters, latch-up, stick diagram, design rules, mask layout, sub-systems design, ASIC challenges and issues, ASIC design flow, Verilog hardware design language basics, and logic synthesis. Each student will do a design exercise using the EDA tools._\"\t4_\tEE2026 (for AY2017 intake \u0026 after) ; EE2020 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "EE4415E_\tIntegrated Digital Design_\t\"This module introduces the students to the design of integrated circuits. It covers basic concepts including integrated circuits fabrication technology, CMOS and nMOS design, inverter design, aspect ratios of pull-up and pull-down transistors, switching characteristics of CMOS and nMOS inverters, latch-up, stick diagram, design rules, mask layout, sub-systems design, ASIC challenges and issues, ASIC design flow, Verilog hardware design language basics, and logic synthesis. Each student will do a design exercise using the EDA tools._\"\t4_\tEE2006E or EE2020E or TEE2026_"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "EE4431_\tNano-Device Engineering_\t\"As devices scale down, quantum effects become important when their size reaches the nanometer regime (typically 100 nanometers or less). Devices with nanometer features, i.e., nano-devices, exhibit properties different from conventional bulk devices. The making of nanodevices, e.g., single electron transistor, carbon nanotube/ graphene transistor, spintronic devices, quantum well/dot laser, has been made possible by the emergence of the nano-processing and characterization tools. This module aims to provide an introductory coverage on the concepts and principles that form the basis for understanding an interdisciplinary field with an emphasis on electrical engineering. Topics covered include nano-lithography, nano-layering, nano-characterization, and nano-devices._\"\t4_\tEither EE3431C Microelectronics Materials \u0026 Devices or EE3406 Microelectronics Materials_"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "EE4432_\tDevices for Electric Energy Generation_\t\"This module covers the theory, operating principles, and basic function of (i) photovoltaic, thermoelectric, and fuel cell-based electric energy generation devices and (ii) electric energy storage systems. Major topics covered are the photovoltaic (PV) effect, solar cells (silicon wafer cells, thin-film cells, organic cells), PV modules, the thermoelectric effect, thermoelectric devices, fuel cells (proton exchange membrane cells, high-temperature cells), pumped hydroelectric energy, compressed air energy, flywheels, rechargeable batteries (lead-acid, lithium ion, etc), electrolytic hydrogen, and supercapacitors._\"\t4_\tEE2021 Devices and circuits_"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "EE4433_\tNanometer Scale Information Storage_\t\"Information storage is indispensable for every computerized system. Currently there are three major types of information storage technologies, i.e., magnetic data storage, optical disks, and solid-state memories. Although the operation principles are different, the common driving force for all these surface-based information storage technologies in the last few decades was the reduction of bit size so as to make it possible to store more data on a specific surface area. As a result, all these data storage devices are now operating in the nanometer regime. This module adopts a model-based approach to introduce information storage through focusing on the basic principles of various types of data storage systems and the associated roles of nanotechnology in each field. Emphasis will be on materials, devices and technologies that have made it possible to maintain a remarkable growth rate in storage density in the last decades and emerging technologies for tackling challenges ahead. Topics covered include solid state memory, optical disks, magnetic recording, and emerging technologies._\"\t4_\tPC2232 and EE3431C/EE3406_"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "EE4434_\t\"Integrated Circuit Technology, Design and Testing_\"\t\"This module aims to introduce students to the industry practice on the technology, design, layout and testing of digital and memory integrated circuits (IC). Students will be introduced to the different types of devices which are manufactured in a foundry. Students will learn about the ideas of design for testability through lectures, hands on exposure to different testing and debugging tools and industrial visits. Specific topics include wafer technology and devices, digital logic and memory design and layout, fundamentals of digital and static random access memory (SRAM) testing, design for testability, fault isolation and electrical characterization._\"\t4_\tEE2026 and CG2027/EE2027 (for AY2017 intake \u0026 after) ; EE2020 and EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "EE4435_\tModern Transistors and Memory Devices_\t\"This module is designed to equip students with the physical foundation of metal oxide semiconductor (MOS) device physics and the theoretical background for understanding end applications in modern transistors and memory devices (e.g., Flash, phase change random access memory, etc.). Upon the successful completion of this module, the student is expected to gain an understanding on the principles of operation and physics of modern MOS transistors and memory devices. Such knowledge is useful for careers in the wafer fabrication plants, foundries, design houses and the microelectronics industry._\"\t4_\tCG2027/EE2027 and co-req EE3431C (for AY2017 intake \u0026 after) ; Pre-req EE2021 and co-req EE3431C (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "EE4435E_\tModern Transistors and Memory Devices_\t\"This module is designed to equip students with the physical foundation of metal oxide semiconductor (MOS) device physics and the theoretical background for understanding end applications in modern transistors and memory devices (e.g., Flash, phase change random access memory, etc.). Upon the successful completion of this module, the student is expected to gain an understanding on the principles of operation and physics of modern MOS transistors and memory devices. Such knowledge is useful for careers in the wafer fabrication plants, foundries, design houses and the microelectronics industry._\"\t4_\tEE2021E or TEE2027_"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "EE4436_\tFabrication Process Technology_\t\"In the new information age, fabrication process technology continues to be employed in the manufacturing of ultrahigh density integrated circuits such as microprocessor devices in computers. This module focuses on the major process technologies and basic building blocks used in the fabrication of integrated circuits and other microelectronic devices (e.g., solar cells). Understanding of fabrication processes is essential for undergraduate students who wish to develop their professional career in the microelectronics industry such as in wafer fabrication plants, foundries and design houses._\"\t4_\tCG2027/EE2027 (for AY2017 intake \u0026 after) ; EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "EE4436E_\tFabrication Process Technology_\t\"In the new information age, fabrication process technology continues to be employed in the manufacturing of ultra-high density integrated circuits such as microprocessor devices in computers. This module focuses on the major process technologies and basic building blocks used in the fabrication of integrated circuits and other microelectronic devices (e.g., solar cells). Understanding of fabrication processes is essential for undergraduate students who wish to develop their professional career in the microelectronics industry such as in wafer fabrication plants, foundries and design houses._\"\t4_\tEE2021E or TEE2027_"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "EE4437_\tPhotonics - Principles and Applications_\t\"Photonics technology is everywhere around us, and disruptive advances in photonics have impacted our everyday lives, e.g., LED lighting, flexible OLED displays in mobile phones, ultra-thin and curved television displays. This course will introduce the underlying photonic principles underlying these recent photonic applications, i.e., the generation, modulation and detection of light, and their application. Emphasis is placed on the fundamentals of device operation and their use in current photonic devices and applications. The aim is to equip students to meet the demand of the expanding optoelectronic industry and to prepare them for  advanced study and research in photonic technology. Topics include introduction to photometry, and electro-optical properties of semiconductors and lowdimensional semiconductor structures, as well as applications such as light emitting devices, lasers, detectors, modulators and displays. Recent advances e.g. quantum devices, and organic LEDs and photonic crystals will also be introduced._\"\t4_\tCG2027/EE2027 (for AY2017 intake \u0026 after) ; EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "EE4438_\tSolar Cells and Modules_\t\"This module covers the theory, operating principles, and basic function of solar cells and photovoltaic modules. Major topics covered are the status of the PV market, the properties of sunlight, properties of semiconductors, efficiency limits of solar cells, carrier properties in semiconductors, currents in p-n diodes in the dark and under illumination, computer simulation of solar cells, characterisation of solar cells, technology of silicon wafer solar cells, technology of thin-film solar cells, properties of interconnected solar cells, technology of PV modules, and the characterisation and testing of PV modules_\"\t4_\tCG2027/EE2027 (for AY2017 intake \u0026 after) ; EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "EE4501_\tPower System Management And Protection_\t\"Modelling of power systes: bus admittance and bus impedance matrices, network building algorithms. Load flow studies: problem formulation, computer solution techniques; economic load dispatch. Energy market restructuring. Fault analysis: symmetrical components, sequence impedance networks, symmetrical and unsymmetrical faults. Protection: components, differential, and earth fault protection systems._\"\t4_\t\"EE3505C (for AY2016 intake \u0026 prior) ;EE3506C (for AY2017 intake \u0026 after)_\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "EE4502_\tElectric Drives \u0026 Control_\t\"Motion control in industrial, commercial and transportation systems is carried out using electric drives. This module provides students with the working knowledge of various components of an electrical drive system and their control for efficient energy conversion. Students would be taught the basic principle of operation of variable speed DC and AC Drive systems. After completion of this module, students are expected to select and size electrical drives for any given application and should be able to perform design of different drive components. The topics covered are: Characteristics and sizing of power semiconductor controlled electric drives; DC motor drives: speed and torque control; Induction motor drives: voltage control and variable frequency control; Drives application examples._\"\t4_\t\"Pre-req: EE2025.  Co-req: EE3505C - for AY2016 intake ; Co-req: EE3506C - for AY2017 intake_\" EE4503_\tAdvanced Power Electronics_\t\"Power electronics is an enabling technology used widely in electric power processing unit. It is an integral part of all electronic equipment from household appliances through information technology to transportation systems. This module provides working principles and design for power electronic converter circuits. After going through this module, students should be able to analyze, evaluate and carry out design of power electronic circuits for a large variety of applications. The topics covered are: Power semiconductor devices and terminal characteristics. Switching circuits design and protection circuits. AC-DC converters, DC-DC converters and DC-AC converters: analysis and performance evaluation._\"\t4_\tEE3505C Electrical Energy Systems / EE3506C Introduction to Electrical Energy Systems_"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "EE4505_\tPower Semiconductor Devices \u0026 ICs_\t\"The module provides a state-of-the-art overview of devices, development and basic understanding of the physics of power semiconductors. The module covers: Carrier physics in power devices: mobility, resistivity, life-time, high-level injection; Breakdown voltage and junction termination: avalanche breakdown, punch-through breakdown; Power devices: power MOSFET for synchronous rectifiers, power diode and recovery phenomena, power transistor and quasi-saturation effects, gate turn-off thyristor, MOS-controlled bipolar device; Smart power ICs: evolution, high-voltage power MOSFETs in integrated circuits, technological limitations in power ICs, protection techniques in power ICs._\"\t4_\tEE and CEG students of stage 3 and above (for AY2017 intake \u0026 after) ; EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "EE4506_\tMagnetic Recording Systems_\t\"This course introduces the principle of operation and design aspects of magnetic recording systems. It introduces the key issues involved in the design and system level integration of disk drives. Students will be exposed to current practice and new trends through both theory and practice in the laboratory. Topics covered include: Basics of magnetic recording and playback, different types of heads used for recording and playback, modeling and mathematical representation of recording/playback process, design and fabrication process for heads and disks. Integration of different components of hard disk drive, signal processing for recording and playback, servomechanism for access of data, efficiency of recording and encoding of data, reliability of recording and error correction codes, transfer of data between hard disk drive and host computer._\"\t4_\tEE2011_"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "EE4509_\tSilicon Micro Systems_\t\"The module provides an introductory view of the microelectromechanical systems (MEMS) in various application areas, and also the knowledge on micromachining technology for making the physical sensors and actuators. Key topics are: MEMS design and process cycles, bulk and surface micromachining technology, structural deposition and etching, inertial, thermal sensors, actuators, micro-motors and micro-pumps, structural consideration and integration issues._\"\t4_\tStage 3 Engineering students from FoE (for AY2017 intake \u0026 after) ; EE2021 (for AY2016 intake \u0026 prior)_"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "EE4510_\tSolar Photovoltaic Energy Systems_\t\"Energy sustainability is important both due to the limited global petroleum reserves and due to the global warming effects of greenhouse gases released by the use of fossil fuels. This module focuses on the types of electrical components and schemes used in solar photovoltaic (PV) energy systems. Besides the characteristics of solar radiation, stand-alone PV schemes with battery energy storage and grid-connected PV schemes will be covered._\"\t4_\tEE2025_"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "EE4511_\tRenewable Generation and Smart Grid_\t\"This module provides the students with a good overview of renewable energy generation techniques for promoting the advancement and use of economically and environmentally sustainable energy systems. Renewable energy sources including solar, wind, hydro and geothermal are studied in detail. The module will cover the integration of these sources into the smart grid, and strategies for demand side management for efficient resource utilisation. Issues related to environmental impact of renewable energy generation, as well as, their economics will be discussed. Models of smart distribution systems with embedded generation and microgrids will be introduced._\"\t4_\t\"EE3505C (for AY2016 intake \u0026 prior) ;EE3506C (for AY2017 intake \u0026 after)_\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "EE4512_\tRenewable Energy Systems Capstone Design_\t\"With growing importance of renewable energy systems there is a need for future engineers who can conceptualize and design such system. This module will use project based learning methods to help future power engineers to conceptualize and design renewable energy system consisting of sources such as Solar, Wind, Fuel cells etc. Along with design practices for distribution networks and power converters, it will introduce them to standards in practice of electrical connection. Each student will go through a process of design, simulate and test their designs._\"\t4_\tEE2025_"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "EE4601_\tSensors For Biomedical Applications_\t\"The main objective of this module is to introduce physics, principles, and operating mechanisms of various kinds of sensors. This module will provide electrical engineering students with central core knowledge about sensors in designing and developing for bio-medical applications. The major topics in this module cover; Brief Summary of Sensor Technology, Basic Sensor Structures, Sensing Effects, Physical Sensors and Their Applications in Bio-Medical Engineering, Sensors for Measuring Chemical Quantities in Bio-Medical Engineering, Miscellaneous Bio-Sensors and technologies, Biocompatibility of sensors, and Future trends in Bio-Sensor Technology._\"\t4_\tEE3431C_"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "EE4602_\tBioelectronics_\t\"The main objective of this module is to introduce biophysics, electric circuit models and engineering oriented principles of bioelectronics and bioelectricity. This module will provide electrical engineering students with central core knowledge to use semiconductor devices as bio-sensing devices, and to understand the electrical biophysics of human physiology and their biomedical applications. The major topics in this module cover: brief review of MOSFET transistor and SPICE modelling, solid-electrolyte Interface, potentiometric bioelectronics devices: principles of MOSFET-based bioelectronic devices, amperometric bioelectronics devices, microfabrication technologies for bioelectronic devices, introduction to bioelectricity, neurons and neuronal networks, bioelectric measurements._\"\t4_\tEE2004_"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "EE4603_\tBiomedical Imaging Systems_\t\"The purpose of this course is to present an overview of biomedical imaging systems. The course will examine various imaging modalities including X-ray, ultrasound, nuclear, and MRI. How these images are formed and what types of information they provide will be presented. Image analysis techniques will also be discussed. Specific analysis techniques will include the analysis of cardiac ultrasound, mammography, and MRI functional imagery._\"\t4_\tEE2023/BN2401_"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "EE4604_\tBiological Perception in Digital Media_\t\"In this module, we introduce the anatomy and physiology of the visual and auditory systems as well as their psychophysical characterizations. In addition, we study computational models that not only serve to provide insights into the functional organization of biological systems, but also to generate predictions for new experiments. These models are used increasingly in digital media coding and compression. They are also the basis for new generations of machines that are more aware of their environment, better adapted to the user and more intuitive to interact with. Major topics include the perception of objects, color, and motion, 3D vision, visual attention, and hearing._\"\t4_\t\"EE3731C or EE4704 (for AY2017 intake \u0026 after) ;EE3731C or EE3206 (for AY2016 intake \u0026 prior)_\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "EE4605_\tBio-Instrumentation \u0026 Signal Analysis_\t\"This course introduces the fundamentals of medical instrumentation systems, and bio-signal processing. The physiology of bio-signals, including how they are generated, recorded/collected and are used clinically, will be presented. The purpose of the signal processing methods ranges from noise and artifact reduction to extraction of clinically significant features. The course gives each participant the opportunity to study the performance of a method on real bio-signals. The major topics covered in this module are: Basic concepts of biomedical instrumentation, Cardiovascular system and measurements, Respiratory system and measurements, Neuro-physiological measurements, Signal conditioning and various analysis (linear and nonlinear) techniques._\"\t4_\tEE3731C_"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "EE4701_\tVideo Processing_\t\"Digital video technology has become ubiquitous. It allows professionals and amateurs alike to easily capture, record and display moving pictures. Digital video processing algorithms have found their way into camcorders, DVD players, laptops, mobile phones, and many other devices. In this module, we discuss the theoretical foundations and practical applications of video technology. The major topics covered include video representation, motion estimation, video compression, video communication, digital video hardware, as well as video enhancement and understanding._\"\t4_\tEE3206_"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "EE4702_\tGame World Mechanics_\t\"This project module gives students hands-on insights into mechanics/simulation components of a game engine. The primary focus is the underlying game logic, like game physics, artificial intelligence and world simulation (and not presentation components like graphics or sound). Brief overview and introduction lectures will be followed by small group projects. Each student will participate in three different projects of four weeks. Students will need to come up with ideas and designs of interesting subsystems, reason about the integration into a game, and implement a prototype. Example projects are explosion physics, herd animal behaviour, and thunderstorm simulation._\"\t8_\tCS1010FC/CS1101C/CS1010E/CG1101 and EE3702_"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "EE4703_\tDigital Media Technologies_\t\"This module provides a broad view of the state-of-the-art in digital media technologies.  The major topics covered are: business \u0026amp; market environment, film production technologies, TV technology, audio production, mobile media technologies, human-computer interaction and user interface design, virtual reality, mixed reality, and tangible media._\"\t4_\tIT1007 or CS1010 equivalent_"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "EE4704_\tIntroduction to Computer Vision and Image Processing_\t\"The goal of this module is to introduce students to the fundamental concepts underlying digital image processing and techniques for manipulating and analysing image data. This course will provide students with a good foundation in computer vision and image processing, which is important for those intending to proceed to biomedical engineering, intelligent systems and multimedia signal processing. The following topics are taught:  elements of a vision system, image acquisition, 2-D discrete Fourier transform, image enhancement techniques, theoretical basis and techniques for image compression, segmentation methods including edge detection, feature extraction including texture measurement, and object recognition._\"\t4_\t\"CG2023, EE2023_\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "EE4704E_\tIntroduction to Computer Vision and Image Processing_\t\"This module covers the basic concepts and techniques in computer vision and digital image processing. The following topics are taught:  elements of a vision system, image acquisition, 2-D discrete Fourier transform, image enhancement techniques, error-free and lossy compression, segmentation methods, and representation and description methods._\"\t4_\tEE2009E or EE2023E_"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "CG1111_\tEngineering Principles and Practice I_\t\"This module aims to equip first year engineering students to a computer engineer\u0027s way of thinking and will focus on the engineering principles of how computer-aided systems work and fail and the engineering practice of how they are designed, built and valued. Students will be presented a practical computer engineering system, e.g., a sensorassisted autonomous vehicle, a drone, or an engineering event. They are then guided to reconstruct the system via interconnected subsystems through laboratory sessions and group discussions, to explain using engineering principles how the system works and could fail._\"\t6_\t_"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "CG1112_\tEngineering Principles and Practice II_\t\"This module will be for the students who have completed EPP I and the project scope extends to handle challenges in large-scale systems. Similar to EPP I, students will first learn the fundamental principles on certain advanced concepts and then design and programme a real-world system. The module involves designing a complex computer engineering system that facilitates information processing, real-world interfacing, and understanding the effects of certain useful metrics such as, scaling, safety, security, sustainability, societal impact, fault-tolerant design, etc._\"\t6_\t\"CS1010 Programming MethodologyCG1111 Engineering Principles and Practice I_\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "CG2023_\tSignals and Systems_\t\"This is a fundamental course in signals and systems, specially developed for computer engineering students. Signals play an important role in carrying information. In particular the idea of frequency domain analysis of signals and systems are important concepts for all computer engineers. The concepts which will be covered include time and frequency domain representations, Fourier transform, spectrum and bandwidth of a signal, frequency response of systems (Bode diagrams), sampling theorem, aliasing, signal reconstruction, and filtering._\"\t4_\tMA1506 or MA1512_"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "CG2027_\tTransistor-level Digital Circuits_\t\"Building on the basic circuit concepts introduced through CG1111 and CG1112, this module introduces the fundamental concept of carriers, operating principles of PN diodes and MOSFETs. Their IV characteristic in different operating region and their impact on the performance of logic gate will also be discussed. It explains the foundational concepts of inverters and analyses their performance in terms of power and delay trade-off. It also introduces logic synthesis and the fundamental timing analysis of logic gates. Besides the static CMOS logic, it will also cover pass logics or transmission gates logics._\"\t2_\t\"CG1111 Engineering Principles and Practice I ORCG1108 Electrical Engineering OREG1112 Engineering Principles and Practice II_\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "CG2028_\tComputer Organization_\t\"This module teaches students computer organization concepts and how to write efficient microprocessor programs using assembly language. The course covers computer microarchitecture and memory system fundamentals, and the ARM microprocessor instruction set. The course culminates in an assignment in which students design and implement an efficient assembly language solution to an engineering problem._\"\t2_\t\"CS1010 Programming Methodology,EE2026 Digital Design / EE2020 Digital Fundamentals_\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "CG2271_\tReal-Time Operating Systems_\t\"Real-time systems must respond quickly to inputs from the environment in order to work effectively and safely, and realtime operating systems (RTOS) are a critical part of such systems. In this course the student is exposed to basic RTOS concepts like tasks, scheduling algorithms, RTOS customisation and concurrent real-time programming. By the end of this course a student will not only understand how an RTOS is built, but will also gain practical hands-on experience in customising RTOSs and in writing real-time programs._\"\t4_\t\"CS1020/E Data Structures and Algorithms ICS2040/C Data Structures and Algorithms_\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "CG3002_\tEmbedded Systems Design Project_\t\"This module introduces students to the development of a large system from conceptualisation to its final implementation. It is structured to contain substantial design and development of hardware and software components. This module is the culminating point of a series of modules integrating the theories which students have already learnt in CG1101, CG1102/CG1103, CG2007, CG2271 and CS2103. With this capstone project, students would be able to better appreciate the relevance of the various components in the Computer Engineering curriculum to large scale computer engineering projects._\"\t6_\tEE2024 and CG2271 and CS2113/T_"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "CG3207_\tComputer Architecture_\t\"This course teaches students the basics in the design of the various classes of microprocessors. Contents include design of simple micro-controllers, high performance CPU design using parallel techniques, memory organization and parallel processing systems. Topics also include the development of support tools to enable efficient usage of the developed microprocessor. The course emphasizes practical design and includes a group project for students to design and implement a microprocessor with verification on a FPGA._\"\t4_\tEE2024 (for ECE AY2016 intake \u0026 prior) / CG2028 or EE2028 (for ECE AY2017 intake \u0026 after)_"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "CG4001_\tB. Eng. Dissertation_\t\"In this module, students will embark on a project that involves a mix of research, design and development components on a topic of current interest in Computer Engineering. Students learn how to apply knowledge and skills acquired in the classroom to develop innovative ways of solving problems. In the process, students acquire skills for independent and lifelong learning. The module is normally carried out over two semesters, but may also be structured as a further 6-month extension of an existing 6-month industrial attachment, where the student works on real life projects jointly supervised by NUS faculties and industry experts._\"\t12_\tLevel 4 standing_"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "CG4002_\tComputer Engineering Capstone Project_\t\"This module introduces students to the development of a large system from conceptualisation to its final implementation. It is structured to contain substantial design and development of hardware and software components.This module is the culminating point of a series of modules integrating the theories which students have already learnt in CS1010, CS2040C, CG2028, CG2271 and CS2113/T. With this capstone project, students would be able to better appreciate the relevance of the various components in the Computer Engineering curriculum to large scale computer engineering projects._\"\t8_\t\"CG2028 Computer OrganizationCG2271 Real-Time Operating SystemsCS2113/T Software Engineering \u0026 Object-Oriented Programming_\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "CS1010_\tProgramming Methodology_\t\"This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing.  Topics covered include computational thinking and computational problem solving, designing and specifying an algorithm, basic problem formulation and problem solving approaches, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures (arrays, strings, composite data types), basic sorting, and recursion._\"\t4_\t_"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "CS1010E_\tProgramming Methodology_\t\"This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing.  Topics covered include computational thinking and computational problem solving, designing and specifying an algorithm, basic problem formulation and problem solving approaches, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures (arrays, strings, composite data types), basic sorting, and recursion._\"\t4_\t_"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "PC1222_\tFundamentals of Physics II_\t\"The module aims to bridge the gap between O level Physics and first year university physics level. The module covers the fundamentals of three branches of physics: electricity \u0026amp; magnetism, optics and modern physics. Topics included in the part on electricity \u0026amp; magnetism are Coulombs law, electric field and potential, capacitance, current and resistance, DC circuits, magnetic fields, magnetic effects on current, electromagnetic induction, AC circuits and electromagnetic waves. The part on optics encompasses topics such as reflection and refraction, systems of lenses, optical instruments, interference, diffraction, grating and polarization. Topics covered in the part on modern physics are blackbody radiation, photoelectric effect, atomic transitions and spectra, the uncertainty principle, wave-particle duality, radioactivity and decay processes, binding energy and fusion energy and fusion \u0026amp; fission._\"\t4_\t\u0027O\u0027 level pass in Physics or Combined Science (Physics \u0026 Chemistry OR Physics \u0026 Biology)._"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "adinata15"
        },
        "content": "ES1103_\tEnglish for Academic Purposes_\tES1103 serves as a bridging course for students who have taken the university�s Qualifying English Test and are deemed to require additional language support for the academic context. It aims to equip students with the knowledge of the academic genre and the ability to apply such knowledge in academic communication. The module adopts a reading-into-writing approach using themed readings as springboard texts for students� writing and provides opportunities for analysing and internalising ways of organising academic texts. Students will acquire essential academic skills required to cope with the rigour of academic writing at a tertiary level._\t4_\t\"1. Placement through the Qualifying English Test or a pass in ES1000. "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "2. Only students who matriculated in AY2016/17 and onwards can take ES1103_\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "adinata15"
        },
        "content": "MA1508E_\tLinear Algebra with Applications_\t\"The objective of this module is to inculcate a facility in both linear algebra and its numerical methods. The module is targeted at students in the Engineering Science Programme. Topics: systems of linear equations, matrices, determinants, numerical solutions of systems of linear equations, vector spaces, subspaces, linear independence, basis and dimension, rank of a matrix, orthogonality and orthonormal bases, linear transformations, eigenvalues and eigenvectors, diagonalization, numerical methods in approximating eigenvalues._\"\t4_\tGCE �A� Level or H2 Mathematics or equivalent_"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "adinata15"
        },
        "content": "MA1511_\tEngineering Calculus_\tThis is a seven-week module specially designed for students majoring in Engineering. It introduces the basic concepts in one variable and several variable calculus with applications in engineering. Main topics: One variable calculus. Power series. Partial differentiation. Multiple integrals. Vector Calculus._\t2_\tGCE �A� level or H2 Mathematics or H2 Further Mathematics or equivalent_"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "adinata15"
        },
        "content": "MA1512_\tDifferential Equations for Engineering_\tThis is a seven-week module specially designed for students majoring in Engineering. It introduces the basic concepts in differential equations with applications in engineering. Major topics: First order ordinary differential equations and applications. Second order ordinary differential equations and applications. Partial differential equations and applications. Laplace transforms and applications._\t2_\tGCE �A� level or H2 Mathematics or H2 Further Mathematics or equivalent_"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "GEQ1000_\tAsking Questions_\t\"There are many ways to ask questions, and many kinds of questions that different disciplines investigate. For a start, this module introduces six dominant modes of questioning from the perspective of computational thinking, design thinking, engineering, philosophy, science, and social sciences. These six perspectives serve as a starting point to introduce all undergraduate students to different modes of questioning across these disciplines, and provide an initial exposure to how scholars from these disciplines pursue specific lines of questioning of everyday issues. We emphasize that while there is only limited time and space within one module to devote to specific disciplinary lines of investigations, we encourage all students to actively think about other lines of questioning, other questions that need to be asked, particularly in disciplines not represented in this introductory platform as we move through this journey together. We expect that in future subsequent offerings, other disciplinary modes of investigations may also be introduced._\"\t4_\t_"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "GER1000_\tQuantitative Reasoning_\t\"This module aims to equip undergraduates with basic reasoning skills on using data to address real world issues. What are some potential complications to keep in mind as we plan what data to collect and how to use them to address our particular issue? When two things are related (e.g. smoking and cancer), how can we tell whether the relationship is causal (e.g. smoking causes cancer)? How can quantitative reasoning help us deal with uncertainty or elucidate complex relationships? These and other questions will be discussed using real world examples._\"\t4_\t_"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "CS1231_\tDiscrete Structures_\t\"This module introduces mathematical tools required in the study of computer science. Topics include: (1) Logic and proof techniques: propositions, conditionals, quantifications.  (2) Relations and Functions: Equivalence relations and partitions.  Partially ordered sets.  Well-Ordering Principle. Function equality.  Boolean/identity/inverse functions.  Bijection. (3) Mathematical formulation of data models (linear model, trees, graphs). (4) Counting and Combinatoric: Pigeonhole Principle. Inclusion-Exclusion Principle.  Number of relations on a set, number of injections from one finite set to another, Diagonalisation proof: An infinite countable set has an uncountable power set; Algorithmic proof: An infinite set has a countably infinite subset.  Subsets of countable sets are countable._\"\t4_\tA-level Mathematics or H2 Mathematics or MA1301 or MA1301FC or MA1301X_"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "CS2040C_\tData Structures and Algorithms_\t\"This module introduces students to the design and implementation of fundamental data structures and algorithms. The module covers basic data structures (linked lists, stacks, queues, hash tables, binary heaps, trees, and graphs), searching and sorting algorithms, basic analysis of algorithms, and basic object-oriented programming concepts._\"\t4_\tCS1010 or its equivalent_"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "CS2113_\tSoftware Engineering \u0026 Object-Oriented Programming_\t\"This module introduces the necessary skills for systematic and rigorous development of software systems. It covers requirements, design, implementation, quality assurance, and project management aspects of small-to-medium size multi-person software projects. The module uses the Object Oriented Programming paradigm. Students of this module will receive hands-on practice of tools commonly used in the industry, such as test automation tools, build automation tools, and code revisioning tools will be covered._\"\t4_\tCS2040C or (CS2030 and CS2040)_"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "ST2334_\tProbability and Statistics_\t\"Basic concepts of probability, conditional probability, independence, random variables, joint and marginal distributions, mean and variance, some common probability distributions, sampling distributions, estimation and hypothesis testing based on a normal population.  This module is targeted at students who are interested in Statistics and are able to meet the pre-requisites. Preclude ME students taking or have taken ME4273._\"\t4_\tMA1102R or MA1312 or MA1505 or MA1507 or MA1521_"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "EG2401A_\tEngineering Professionalism_\t\"This module aims to alert and sensitise students on the kinds of situations that may arise in his professional career and teaches students to improve his/her skills in appreciating and dealing with the moral challenges posed by such situations. Students will acquire skills in dealing with ethical issues, learn about the \u0027codes of ethics\u0027 set by professional bodies and intellectual property rights and protection._\"\t2_\t\"ES1501A, ES1501B, ES1501C, EG1413/ES1531 and"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "Year 2 status_\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "adinata15"
        },
        "content": "MA1301_\tIntroductory Mathematics_\t\"This module serves as a bridging module for students without \u0027A\u0027 - level mathematics. Its aim is to equip students with appropriate mathematical knowledge and skill so as to prepare them for further study of mathematics-related disciplines. At the end of the course, students are expected to attain a level of proficiency in algebra and calculus equivalent to the GCE Advanced Level. Major topics: Sets, functions and graphs, polynomials and rational functions, inequalities in one variable, logarithmic and exponential functions, trigonometric functions, sequences and series, techniques of differentiation, applications of differentiation, maxima and minima, increasing and decreasing functions, curve sketching, techniques of integration, applications of integration, areas, volumes of solids of revolution, solution of first order ordinary differential equations by separation of variables and by integrating factor, complex numbers, vectors._\"\t4_\tPass in GCE �O� Level Additional Mathematics or GCE �AO� Levels or H1 Mathematics_"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "CS2101_\tEffective Communication for Computing Professionals_\t\"This module aims to equip students with the skills needed to communicate technical information to technical and nontechnical audiences, and to create comprehensible software documentation. A student-centric approach will be adopted to encourage independent and collaborative learning while engaging students in team-based projects. Students will learn interpersonal and intercultural communication skills as well as hone their oral and written communication skills. Assessment modes include a variety of oral and written communication tasks such as reports, software guides, oral presentations, software demonstrations and project blogs._\"\t4_\tStudents have to complete ES1000 and/or ES1103 (if required to take the module/s) before reading this module._"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "CP3880_\tAdvanced Technology Attachment Programme_\t_\t12_\t\"(IS2101 Business and Technical Communication or CS2101 Effective Communication for Computing Professionals or their equivalents)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "and (CS2103/CS2103T Software Engineering or IS2103 Enterprise Systems Development Concepts or IS2150 E-Business Design and Implementation or BT2101 IT and Decision Making)_\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "EG3611A_\tIndustrial Attachment_\tThis internship module is for B.Eng. degree with a compulsory 20-week internship. The type of internship varies according to the programmes. Internships integrate knowledge and theory learned in the classroom with practical application and skill development in a professional setting. It enables students to learn about the latest developments in the industries and to interact with engineers and other professionals as they join projects or tasks that help to develop or enhance their skills whilst contributing to the organization. Students can extend their internship module by another 4 weeks and earn additional 2 MC by registering EG3611b Industrial Attachment._\t10_\t\"Students should be of or are expected to be at least Year 3 in standing. Student should complete CFG career coaching modules (to be finalized) prior to start of internship_\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "CS3230_\tDesign and Analysis of Algorithms_\t\"This module introduces different techniques of designing and analysing algorithms. Students will learn about the framework for algorithm analysis, for example, lower bound arguments, average case analysis, and the theory of NP-completeness. In addition, students are exposed to various algorithm design paradigms. The module serves two purposes: to improve the students\u0027 ability to design algorithms in different areas, and to prepare students for the study of more advanced algorithms. The module covers lower and upper bounds, recurrences, basic algorithm paradigms (such as prune-and-search, dynamic programming, branch-and-bound, graph traversal, and randomised approaches), amortized analysis, NP-completeness, and some selected advanced topics._\"\t4_\t(CS2010 or CS2020 or CS2040 or CS2040C) and (CS1231 or MA1100)_"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "CP4106_\tComputing Project_\t\"The objective of this project module enables students to undertake a substantial computing-related project work over a period of one year. Students work individually on self-proposed projects or projects proposed by staff. They will have good opportunity to apply what they have learnt on practical problems, be it research-oriented or software development-oriented. Students should periodically submit a report make a presentation to the respective supervisors. The project will be letter-graded._\"\t8_\tCompleted at least 112 MCs for the respective degree._"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "CS2113T_\tSoftware Engineering \u0026 Object-Oriented Programming_\t\"This module introduces the necessary skills for systematic and rigorous development of software systems. It covers requirements, design, implementation, quality assurance, and project management aspects of small-to-medium size multi-person software projects. The module uses the Object Oriented Programming paradigm. Students of this module will receive hands-on practice of tools commonly used in the industry, such as test automation tools, build automation tools, and code revisioning tools will be covered._\"\t4_\tCS2040C or (CS2030 and CS2040)_"
      }
    ],
    "authorContributionMap": {
      "-": 160,
      "adinata15": 11
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][X] test3 (at: Jan 01 2021 00:00)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][X] test (at: May 05 2021 00:00)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][X] abs"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][V] test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][X] a"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][X] b"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][V] test4 (at: Mon 2-4 pm)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][V] test (at: MONDAY 18:30)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[D][X] ddl (by: Feb 02 2020 00:00)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "[E][X] test4 (at: Mon 2-4 pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "[E][X] test (at: MONDAY 18:30)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[T][X] def"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[T][X] abc"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[T][X] def"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[D][X] eat (by: Dec 12 2020 18:30)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[T][X] abc"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[T][X] def"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "[D][X] 2113 submission (by: Oct 11 2020 23:59)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": "[E][X] youtube (at: Oct 12 2020 20:20)"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 2,
      "TomLBZ": 9,
      "chuhann": 2,
      "scjx123": 6
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "# About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Johanes Rafael Sudardji | [Github](https://github.com/johanesrafael.git) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kwek Chu Han | [Github](https://github.com/chuhann) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Adi Nata | [Github](https://github.com/) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Bo Zhao | [Github](https://github.com/) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chan Jian Xiang | [Github](https://github.com/) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 7,
      "-": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "# TP Project Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "###### by TomLBZ, ~, ~, ~"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "This is our TP project for *CS2113T*. It is a task management system based on the CLI interface. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "It is written in *Java*. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "## For Developers"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Set up IntelliJ"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Hello, I\u0027m Duke. What can I do for you?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Now you are all set."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "## For Users"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Run the Program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Prerequisites: JRE 11"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Install JRE if you haven\u0027t."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   1. In case you have multiple Java Runtime installed, please modify the PATH variable such that "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   the path for JRE 11 is ***in front of*** the path for other JREs."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Download the jar file from Github, go to `Release` and download the latest version."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Open a shell, such as _bashrc_, _cmd_, _gitbash_, etc."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Move the focus to the directory of the jar file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Run the jar using \u0027java -jar tp.jar\u0027."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Enjoy."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Useful Commands"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "* Type `help` to see the following screen:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: bye        Description: Quit the program"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: clear      Description: Clear the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: deadline   Description: Add a deadline to the task list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: delete     Description: Delete a task from the task list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: done       Description: Mark a task as done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: event      Description: Add an event to the task list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: find       Description: Find an event in the task list with the specified keyword"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: help       Description: Print the list of available commands, or print the details of a specified command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: list       Description: Print a list of all added tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: todo       Description: Add a todo to the task list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: undone     Description: Mark a task as undone"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: unknown    Description: Prints the error message for an unrecognized command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Use \"help [target]\" to see details :) Try \"help help\"!"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "* Type `help list` to see the detailed usages of the `list` command:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Name: list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Description: Print a list of all added tasks"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Syntax:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        list date [asc / desc / spec MMM dd yyyy]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Usages:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1. \"list\" \u003e\u003e list all added tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        2. \"list date asc\" \u003e\u003e list tasks with a \"date\" field in ascending order"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        3. \"list date spec Oct 5 2020\" \u003e\u003e list tasks with specific \"date\" field of October 5 2020"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "* Type `help deadline` to see the detailed usage of the `deadline` command:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Name: deadline"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Description: Add a deadline to the task list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Syntax:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        deadline [description] /by [time]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Usages:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1. \"deadline ddl /by 21/9/15 1:12\" \u003e\u003e adds a deadline with description \"ddl\" and time \"September 15 2021 1:12\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "* Feel free to explore other commands!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "* If you found a bug, please raise an ***issue*** on Github."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 95,
      "-": 8
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Addition and removal of tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program allows user to add or delete tasks from the task list.\u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program also provides shortcuts such as the `clear` command to delete tasks quickly."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Mark tasks as done or undone"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program allows user to mark tasks as done (denoted by `[V]`) or undone (denoted by `[X]`)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### List tasks and reorder them by their ***date*** field"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program allows user to list tasks in ascending order or descending order with respect to their ***date*** values.\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program also allows the user to filter the task list and only display tasks within a specified date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Deadlines, Events and ToDo\u0027s"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program allows user to create 3 different kinds of tasks, *deadlines*, *events* and *todos*.\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "*deadline* and *event* consists of both *description* and *time*, while *todo* does not contain *time*.\u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The *time* field consists of a *date* part (such as `Oct 13 1998`), and a *time* part (such as `00:00`).\u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Fuzzy parsing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program fuzzily parses user\u0027s inputs with respect to date and time.\u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`\"Oct 13 1998\"`, `10/13/98`, `13-10-1998`, `13 Oct 98` and many more common date formats are all supported.\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`1:1:0`, `01:01:00`, `1:01`, `01:1` and many more common time formats are all supported."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Auto-save and auto-load"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program saves the tasks list automatically every time the list changes. \u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "When the program loads up, it looks for the last saved tasks list first and tries to load it."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#### Syntax reminder"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The program can remind the user of the syntax of a command if the command is correct but wrong syntax is present."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "## Usage (alphabetical order)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `bye` - Quit the program"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `bye` results in the program saving the current task list to a local file named "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`./data/duke.txt`, and then quitting the program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `clear` - Clear the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `clear` results in the program deleting all added tasks from the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Nice! I\u0027ve cleared everything in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `deadline` - Add a deadline to the task list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `deadline` allows the program to parse user\u0027s input and create a ***deadline*** object with "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "specified *description* and *time*. It will be appended to the end of the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`deadline [description] /by [time]`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`deadline ddl /by 21/9/15 1:12`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [D][X] ddl (by: Sep 15 2021 01:12)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `delete` - Delete a task from the task list"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `delete` deletes the task with specified *index* from the current task list.\u003cbr\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`delete [index]`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [D][X] ddl (by: Sep 15 2021 01:12)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Now you have 0 tasks in the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `done` allows the user to mark the task at a specified *index* as **done**.\u003cbr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`done [index]`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [D][V] ddl (by: Sep 15 2021 01:12)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `event` - Add an event to the task list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `event` allows the program to parse user\u0027s input and create an ***event*** object with "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "specified *description* and *time*. It will be appended to the end of the task list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`event [description] /at [time]`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`event midterm exam /at May 13 2020 8:00`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [E][X] midterm exam (at: May 13 2020 08:00)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `find` - Find an event in the task list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `find` commands the program to search through the task list and print all tasks with the"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "specified *keyword*. If there is no task with such a *keyword*, `[NOT FOUND]` will be printed instead."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`find exam`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome (found):"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Tasks with the specified keyword are:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        2.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        3.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome (not found):"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Tasks with the specified keyword are:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [NOT FOUND]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `help` - Print help text of the commands"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `help` allows the user to either print a list of available commands, "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "or print the details of a specified command."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`help` \u003cbr\u003e `help [target]`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: bye        Description: Quit the program"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: clear      Description: Clear the task list"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: deadline   Description: Add a deadline to the task list"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: delete     Description: Delete a task from the task list"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: done       Description: Mark a task as done"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: event      Description: Add an event to the task list"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: find       Description: Find an event in the task list with the specified keyword"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: help       Description: Print the list of available commands, or print the details of a specified command"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: list       Description: Print a list of all added tasks"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: todo       Description: Add a todo to the task list"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: undone     Description: Mark a task as undone"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Command: unknown    Description: Prints the error message for an unrecognized command"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Use \"help [target]\" to see details :) Try \"help help\"!"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`help list`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Name: list"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Description: Print a list of all added tasks"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Syntax:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        list"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        list date [asc / desc / spec MMM dd yyyy]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Usages:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1. \"list\" \u003e\u003e list all added tasks"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        2. \"list date asc\" \u003e\u003e list tasks with a \"date\" field in ascending order"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        3. \"list date spec Oct 5 2020\" \u003e\u003e list tasks with specific \"date\" field of October 5 2020"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `list` - Print a list of added tasks"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `list` commands the program to print either all added tasks or tasks at a specified *date*.\u003cbr\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The user can also control how the tasks printed are ordered with respect to *date*:\u003cbr\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The `asc` parameter tells the program to list tasks in ascending order with respect to their *date* field.\u003cbr\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The `desc` parameter tells the program to list tasks in descending order with respect to their *date* field.\u003cbr\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The `spec` parameter tells the program to only list tasks with the specified value of the *date* field.\u003cbr\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Note: with each execution of the `list` command, the indices of all tasks will be "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "dynamically changed to refer to the task in the current list with the current indices.\u003cbr\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "In other words, indices of tasks are not tied to their sequence of creation, allowing the user"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "to use commands much more flexibly, especially with the `find` command or the reordering parameters."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`list` \u003cbr\u003e `list date [asc / desc / spec \"date\"]`, where `\"date\"` can be in any common date format."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Here is the list of tasks:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        2.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        3.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`list date asc`"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Here is the list of tasks:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        2.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        3.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`list date spec 10/15/20`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Here is the list of tasks:"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `todo` - Add a todo to the task list"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `todo` allows the program to parse user\u0027s input and create a ***todo*** object with "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "specified *description*. It will be appended to the end of the task list."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`todo [description]`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`todo class`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [T][X] class"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `undone` - Mark a task as undone"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `undone` allows the user to mark the task at a specified *index* as **undone**.\u003cbr\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`undone [index]`"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`undone 1`"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Nice! I\u0027ve marked this task as undone:"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        [D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### `unknown` - Prints error message"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing `unknown` or any string that is not a command will trigger the `unknown` command.\u003cbr\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "The `unknown` command prints an error message for debug purposes, it is also the default behaviour of the program"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "when it fails to recognize the user\u0027s command. \u003cbr\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Note: If the program recognizes the command successfully, yet fails to find required parameters, "
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "it will not trigger this `unknown` command. It will print a syntax error and remind the user of"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "the correct syntax instead."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`unknown` \u003cbr\u003e `[anything that is not a command]`"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`who is duke?`"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        OOPS, I don\u0027t know what that means :-( Try \"help\"!"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "### Syntax reminder"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Typing a correct command with wrong syntax will trigger the syntax reminder."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "`deadline /at 10-10-10`\u003cbr\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Note that the command `deadline` is a correct command, but:\u003cbr\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Description is missing"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. Parameter name is wrong"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```\t"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Invalid Command! Please check the syntax."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        deadline [description] /by [time]"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "#ORIGINAL_TEMPLATE"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 399,
      "-": 42
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.action.UnknownAction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import command.action.Action;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.HelpText;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Command implements Help {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Args."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParamNode args;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Flattened args."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParamNode[] flattenedArgs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Name."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpText helpText;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Action."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public Action action;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Result."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public String result \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param args the args"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command(ParamNode args) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d args.name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        flattenedArgs \u003d new ParamNode[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (args.thisData !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            flattenedArgs \u003d args.thisData.flatten().toArray(flattenedArgs);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        helpText \u003d Constants.helpMap.getOrDefault(name, HelpText.UNKNOWN); // later change to help."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        initiateAction();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isArgsValid() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] targetArgs \u003d Constants.paramMap.get(name);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (targetArgs \u003d\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return true; // does not need any parameter"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            for (ParamNode node : flattenedArgs) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                for (String arg : targetArgs) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    if (arg.equals(node.name)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initiateAction() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d Constants.actionMap.getOrDefault(name, new UnknownAction());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param data the data"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void execute(Data data) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isArgsValid()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                action.prepare(args);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result \u003d action.act(data);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] syntax \u003d getSyntax();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (int i \u003d 0; i \u003c syntax.length; i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(syntax[i]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (i \u003c syntax.length - 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    builder.append(Constants.SYNTAX_OR);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d builder.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Is exit boolean."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return result.equals(Constants.messageMap.get(Constants.BYE));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Is fancy boolean."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isFancy() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result.equals(Constants.messageMap.get(Constants.FANCY));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Is plain boolean."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isPlain() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result.equals(Constants.messageMap.get(Constants.PLAIN));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        return helpText.description;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] getSyntax() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        return helpText.syntax;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] getUsages() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        return helpText.usages;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getHelp() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return helpText.toString();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        return args.toString();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 67,
      "chuhann": 1,
      "-": 88
    }
  },
  {
    "path": "src/main/java/command/Help.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The interface Help."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Help {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the name"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get syntax string [ ]."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string [ ]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] getSyntax();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get usages string [ ]."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string [ ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] getUsages();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets help."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the help"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getHelp();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 28,
      "-": 15
    }
  },
  {
    "path": "src/main/java/command/ParamNode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import lexical.Token;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import lexical.Types;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Param node."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParamNode {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The This data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParamNode thisData;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Next data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParamNode nextData;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Param node."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param tokens the tokens"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParamNode(ArrayList\u003cToken\u003e tokens) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cToken\u003e tokensClone \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Token token: tokens) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            tokensClone.add(new Token(token.token, token.string));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        Token head \u003d tokensClone.get(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        tokensClone.remove(head);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        int splitIndex \u003d splitIndex(tokensClone, head.token);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cToken\u003e thisTokens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cToken\u003e nextTokens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d head.string;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        if (splitIndex \u003c 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            nextTokens.addAll(tokensClone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c tokensClone.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                if (i \u003c\u003d splitIndex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    thisTokens.add(tokensClone.get(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextTokens.add(tokensClone.get(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (thisTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            thisData \u003d new ParamNode(thisTokens);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            thisData \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        if (nextTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            Token endToken \u003d nextTokens.get(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            while (endToken.token.equals(Types.END)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                nextTokens.remove(endToken);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                if (nextTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    endToken \u003d nextTokens.get(0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (nextTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            nextData \u003d new ParamNode(nextTokens);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            nextData \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Param node."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param name     the name"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param thisData the this data"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param nextData the next data"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParamNode(String name, ParamNode thisData, ParamNode nextData) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        this.thisData \u003d thisData;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        this.nextData \u003d nextData;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private int splitIndex(ArrayList\u003cToken\u003e tokens, Types type) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        for ( ; i \u003c tokens.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            Token token \u003d tokens.get(i);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.equals(Types.STR)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!token.token.equals(Types.STR)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                if (token.token.equals(type) || token.token.equals(Types.END)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return i - 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    private String shiftTab(String input) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] strings \u003d input.split(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String string: strings) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            stringBuilder.append(Constants.TAB).append(string).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * To flat string string."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toFlatString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String myName \u003d name \u003d\u003d null ? Constants.ZERO_LENGTH_STRING : name + Constants.SPACE;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String nextName \u003d thisData \u003d\u003d null ? Constants.ZERO_LENGTH_STRING : thisData.toFlatString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return (myName + nextName).trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String data \u003d Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        if (thisData !\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d \" {\" + Constants.WIN_NEWLINE + shiftTab(thisData.toString()) + \"}\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        String next \u003d nextData \u003d\u003d null ? \"\" : Constants.WIN_NEWLINE + nextData.toString();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        return name + data + next;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Flatten array list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cParamNode\u003e flatten() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cParamNode\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        output.add(new ParamNode(name, thisData, nextData));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        ParamNode nextNode \u003d output.get(index).nextData;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        while (nextNode !\u003d null) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            output.get(index).nextData \u003d null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            output.add(new ParamNode(nextNode.name, nextNode.thisData, nextNode.nextData));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            nextNode \u003d nextNode.nextData;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Extend array list."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cParamNode\u003e extend() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cParamNode\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        output.add(new ParamNode(name, thisData, nextData));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ParamNode nextNode \u003d output.get(index).thisData;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (nextNode !\u003d null) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output.get(index).thisData \u003d null;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output.add(new ParamNode(nextNode.name, nextNode.thisData, nextNode.nextData));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            nextNode \u003d nextNode.thisData;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 56,
      "-": 119
    }
  },
  {
    "path": "src/main/java/command/action/Action.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Action."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Action {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Args."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    protected ParamNode args;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Flattened args."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    protected ParamNode[] flattenedArgs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Action."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Action() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        args \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Action."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param args the args"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Action(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        prepare(args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Act or execute the action."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param data the data"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return Constants.messageMap.getOrDefault(args.name, Constants.INVALID);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Prepare parameters for task to act."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param args the args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        flattenedArgs \u003d new ParamNode[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (args.thisData !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            flattenedArgs \u003d args.thisData.flatten().toArray(flattenedArgs);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Replace strings string."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param source the source"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param text   the text"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param count  the count"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String replaceStrings(String source, String text, int count) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        String output \u003d source.replace(Constants.TEXT_PLACEHOLDER, text);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return output.replace(Constants.NUMBER_PLACEHOLDER, String.valueOf(count));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets index."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the index"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    protected int getIndex(String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (input.length() \u003c 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        char character \u003d input.toCharArray()[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Character.isDigit(character)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            index \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (Character.isLetter(character)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            character \u003d Character.toUpperCase(character);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            index \u003d (int)character - Constants.LETTER_OFFSET - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            index \u003d -1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 46,
      "-": 45,
      "adinata15": 6
    }
  },
  {
    "path": "src/main/java/command/action/AddAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.ModuleNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.TaskNotSpecifiedException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.sql.Array;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * The type Add action (on progress)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddAction extends Action {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private ArrayList\u003cInteger\u003e taskIndices;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private ArrayList\u003cString\u003e modNames;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String flag \u003d data.flag;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String tasksFlag \u003d !flag.equals(Constants.MOD) ? flag : Constants.TASK;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cItem\u003e targetTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cItem\u003e tasksInContext \u003d data.getTarget(tasksFlag);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        taskIndices.forEach(i -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (i \u003c 0 || i \u003e data.tasks.size() - 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            targetTasks.add(tasksInContext.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (targetTasks.size() \u003c 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throw new TaskNotSpecifiedException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cItem\u003e targetMods \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.mods.stream().filter(x -\u003e modNames.contains(x.getName())).forEach(targetMods::add);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (targetMods.size() \u003c 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throw new ModuleNotFoundException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        targetMods.forEach(m -\u003e ((SingleModule) m).taskList.addAll(targetTasks));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.refreshTarget(flag);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (Item item : targetMods) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(item.getName() + \" \u003c\u003c tasks: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item i : targetTasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                sb.append(((Task) i).getDescription()).append(Constants.SPACE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builder.append(sb.append(Constants.WIN_NEWLINE).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String addStatus \u003d builder.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (addStatus.length() \u003c 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throw new ModuleNotFoundException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(data);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result.replace(Constants.TEXT_PLACEHOLDER, addStatus);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        taskIndices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        modNames \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cString\u003e taskNames \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (ParamNode arg : flattenedArgs) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (arg.thisData \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new CommandException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (arg.name.equals(Constants.MOD)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String[] strings \u003d arg.thisData.toFlatString().split(Constants.SPACE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                modNames.addAll(Arrays.asList(strings));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else if (arg.name.equals(Constants.TASK)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String[] strings \u003d arg.thisData.toFlatString().split(Constants.SPACE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                taskNames.addAll(Arrays.asList(strings));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new CommandException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (String name : taskNames) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                taskIndices.add(Integer.parseInt(name) - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                char ch \u003d name.toUpperCase().toCharArray()[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (name.length() \u003d\u003d 1 \u0026\u0026 Character.isLetter(ch)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    taskIndices.add((int) ch - Constants.LETTER_OFFSET - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new TaskNotSpecifiedException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 82,
      "-": 13,
      "adinata15": 1
    }
  },
  {
    "path": "src/main/java/command/action/ByeAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Bye action."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ByeAction extends Action {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Bye action."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public ByeAction() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 6,
      "-": 9
    }
  },
  {
    "path": "src/main/java/command/action/CalculateCapAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import exceptions.GradeNotSpecifiedException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import exceptions.ModuleNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Calculate user\u0027s cap."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class CalculateCapAction extends Action {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private HashMap\u003cString, Double\u003e modulesWithGrades \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private double capValue \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private boolean isCustom \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        double totalScore \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        double totalMC \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (isCustom) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Map.Entry\u003cString, Double\u003e m : modulesWithGrades.entrySet()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Double grade \u003d m.getValue();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String moduleCode \u003d m.getKey();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                SingleModule module \u003d matchModule(moduleCode, data.mods);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (module \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    throw new ModuleNotFoundException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                totalMC +\u003d Double.parseDouble(module.getModuleMC());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                totalScore +\u003d Double.parseDouble(module.getModuleMC()) * grade;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (Item item : data.mods) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                SingleModule module \u003d (SingleModule) item;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                if (module.isTaken) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    if (module.grade \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        throw new GradeNotSpecifiedException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    Double gradeValue \u003d numerateGrade(module.grade.toUpperCase());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    totalMC +\u003d Double.parseDouble(module.getModuleMC());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    totalScore +\u003d Double.parseDouble(module.getModuleMC()) * gradeValue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        capValue \u003d totalScore / totalMC;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return Constants.SHOW_CAP + new DecimalFormat(\"#.##\").format(capValue);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ParamNode currData;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //extract modules name"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        currData \u003d flattenedArgs[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //input custom modules"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (flattenedArgs[0].name.equals(\"m\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            isCustom \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            while (currData.thisData !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                SingleModule module;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                String moduleCode \u003d currData.thisData.name.toUpperCase();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Double grade \u003d numerateGrade(currData.thisData.thisData.name.toUpperCase());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                modulesWithGrades.put(moduleCode, grade);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                currData \u003d currData.thisData.thisData;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            // retrieve module data from user data"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            isCustom \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Match module code to module."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param moduleCode input module code"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param mods module list"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return module selected"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private SingleModule matchModule(String moduleCode, ArrayList\u003cItem\u003e mods) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (Item item : mods) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            SingleModule module \u003d (SingleModule) item;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (moduleCode.equals(module.getName())) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                return module;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Turn grade alphabet to numbers."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param grade grade alphabet"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return grade value in number"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private double numerateGrade(String grade) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        double gradeValue \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        switch (grade) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"A+\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 5;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"A-\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 4.5;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"B+\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 4;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 3.5;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"B-\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 3;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"C+\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 2.5;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 2;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"D+\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 1.5;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            gradeValue \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return gradeValue;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16,
      "adinata15": 126
    }
  },
  {
    "path": "src/main/java/command/action/ClearAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Clear action."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearAction extends Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.getTarget().clear();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return super.act(data);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 7,
      "-": 9
    }
  },
  {
    "path": "src/main/java/command/action/DeadlineAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Deadline action."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeadlineAction extends Action {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(data);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Deadline ddl \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.addTask(ddl);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, ddl.toString(), data.tasks.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        by \u003d flattenedArgs[1].thisData.toFlatString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        description \u003d flattenedArgs[0].toFlatString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10,
      "-": 19
    }
  },
  {
    "path": "src/main/java/command/action/DeleteAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Delete action."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d data.target.size()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Item item \u003d data.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(data);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.removeItem(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, item.toString(), data.tasks.size());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        index \u003d getIndex(args.thisData.name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 13,
      "-": 18
    }
  },
  {
    "path": "src/main/java/command/action/DetailAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class DetailAction extends SelectAction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void modifyObject(Item item) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String getObjectInfo(Item item) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return item.getDetails();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 7,
      "scjx123": 10
    }
  },
  {
    "path": "src/main/java/command/action/DoneAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Done action."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class DoneAction extends Action {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Item item \u003d data.get(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (item \u003d\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (item instanceof Task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ((Task)item).markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.updateItem(index, item);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String result \u003d super.act(data);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return result.replace(Constants.TEXT_PLACEHOLDER, item.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.NOT_TASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        index \u003d getIndex(args.thisData.name);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16,
      "-": 20
    }
  },
  {
    "path": "src/main/java/command/action/EventAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Event action."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class EventAction extends Action {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(data);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.addTask(event);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, event.toString(), data.tasks.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        at \u003d flattenedArgs[1].thisData.toFlatString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        description \u003d flattenedArgs[0].toFlatString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10,
      "-": 19
    }
  },
  {
    "path": "src/main/java/command/action/FancyAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Fancy action."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class FancyAction extends Action {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Fancy action."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public FancyAction() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 18
    }
  },
  {
    "path": "src/main/java/command/action/FindAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Find action."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class FindAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (keyword \u003d\u003d null || keyword.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder(Constants.NO_KEYWORD);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.refreshTarget();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : data.target) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(item.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (builder.toString().equals(Constants.NO_KEYWORD)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                data.indexOption \u003d MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return builder.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String result \u003d super.act(data);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (data.target \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                return result.replace(Constants.TEXT_PLACEHOLDER, Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.target \u003d data.target.stream().filter("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                x -\u003e x.toString().contains(keyword)).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : data.target) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(item.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (builder.toString().equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                data.indexOption \u003d MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return result.replace(Constants.TEXT_PLACEHOLDER, builder.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (args.thisData \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            keyword \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            keyword \u003d args.thisData.toFlatString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 62
    }
  },
  {
    "path": "src/main/java/command/action/FocusAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " * The type Focus action."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class FocusAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private String typeTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.setFlag(typeTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String output \u003d super.act(data);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return output.replace(Constants.TEXT_PLACEHOLDER, typeTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if (args.thisData \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            typeTask \u003d Constants.TASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            typeTask \u003d args.thisData.name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] options \u003d Constants.optionalParamMap.get(args.name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (String opt : options) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (opt.equals(typeTask)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (count \u003d\u003d options.length) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new CommandException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 22,
      "TomLBZ": 20
    }
  },
  {
    "path": "src/main/java/command/action/HelpAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.HelpText;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Help action."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Is detailed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean isDetailed \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Help text."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    HelpText helpText \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDetailed \u0026\u0026 helpText !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isDetailed \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            return helpText.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder(Constants.HELP_HEADING);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            for (HelpText help: HelpText.values()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                builder.append(\"Command: \").append(help.name).append(Constants.SPACE).append(Constants.SPACE).append("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Description: \").append(help.description).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            builder.append(Constants.HELP_PROMPT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return builder.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (flattenedArgs.length \u003e 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            String target \u003d flattenedArgs[0].name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            if (target !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                isDetailed \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                helpText \u003d Constants.helpMap.get(target);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 14,
      "chuhann": 1,
      "-": 34
    }
  },
  {
    "path": "src/main/java/command/action/ListAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type List action."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListAction extends Action {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private boolean isAsc \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private boolean isDesc \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private String stringDate \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(Constants.LIST_HEAD);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cItem\u003e target \u003d new ArrayList\u003c\u003e(data.getTarget());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!stringDate.equals(\"\")) { // this means it\u0027s in specific mode"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            LocalDateTime dateTime \u003d Item.parseDateTime(stringDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (dateTime !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                LocalDate date \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                data.target \u003d target.stream().filter(x -\u003e x instanceof Task \u0026\u0026 x.isDated"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        \u0026\u0026 date.compareTo(x.getDate()) \u003d\u003d 0).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                for (Item item : data.target) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    builder.append(item.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isAsc) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                target.removeIf(x -\u003e !x.isDated);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                target.sort(Comparator.comparing(Item::getDateTime));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isDesc) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                target.removeIf(x -\u003e !x.isDated);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                target.sort((x, y) -\u003e -x.getDateTime().compareTo(y.getDateTime()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.target \u003d target;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : target) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(item.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (builder.toString().equals(Constants.LIST_HEAD)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builder.append(Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.indexOption \u003d MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Picking up optional parameter and check if user entered."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param args the args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws Exception to handle prepare exceptions."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int len \u003d flattenedArgs.length;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (len \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isDesc \u003d false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isAsc \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringDate \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringDate \u003d flattenedArgs[0].toFlatString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] optionalParams \u003d Constants.optionalParamMap.get(args.name);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String optionalParam \u003d optionalParams[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String asc \u003d optionalParams[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String desc \u003d optionalParams[2];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String spec \u003d optionalParams[3];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            boolean isDated \u003d stringDate.contains(optionalParam);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isDated) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                stringDate \u003d stringDate.replace(optionalParam, Constants.ZERO_LENGTH_STRING).trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String[] options \u003d stringDate.split(Constants.SPACE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String option \u003d options[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (option.equals(spec) \u0026\u0026 options.length \u003e 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    for (int i \u003d 1; i \u003c options.length; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        builder.append(options[i]).append(Constants.SPACE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    stringDate \u003d builder.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else if (option.equals(asc)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isAsc \u003d true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isDesc \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    stringDate \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else if (option.equals(desc)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isDesc \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isAsc \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    stringDate \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isAsc \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isDesc \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    stringDate \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new Exception();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else if (stringDate.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                stringDate \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new CommandException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 94,
      "chuhann": 1,
      "-": 13,
      "scjx123": 11
    }
  },
  {
    "path": "src/main/java/command/action/McAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class McAction extends Action {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private boolean isSelect \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private boolean isDetail \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private boolean isBoth \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private String userInput \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(Constants.MC_HEAD);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cItem\u003e moduleList \u003d new ArrayList\u003c\u003e(data.mods);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (isBoth) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : moduleList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                SingleModule m \u003d (SingleModule)item;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                builder.append(m.getModuleMC().trim()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else if (isSelect) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            int selectionSum \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : moduleList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                SingleModule m \u003d (SingleModule)item;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                selectionSum +\u003d Integer.parseInt(m.getModuleMC().trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            builder.append(selectionSum).append(Constants.WIN_NEWLINE); //build a string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else if (isDetail) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : moduleList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                SingleModule m \u003d (SingleModule)item;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                builder.append(m.getModuleMC().trim()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            int sum \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : moduleList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                SingleModule m \u003d (SingleModule)item;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                sum +\u003d Integer.parseInt(m.getModuleMC().trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            builder.append(sum).append(Constants.WIN_NEWLINE); //build a string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int len \u003d flattenedArgs.length;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (len \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            isSelect \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            isDetail \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            isBoth \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            userInput \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            userInput \u003d flattenedArgs[0].toFlatString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            String[] optionalParams \u003d Constants.optionalParamMap.get(args.name);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            String selection \u003d optionalParams[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            String detail \u003d optionalParams[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            isSelect \u003d userInput.equals(selection);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (isSelect) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                if (len \u003e 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    userInput \u003d flattenedArgs[1].toFlatString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    if (userInput.equals(detail)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                        isBoth \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                        userInput \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        throw new CommandException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    isSelect \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    isDetail \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    isBoth \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else if (userInput.equals(detail)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                if (len \u003e 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new CommandException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                isDetail \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                isSelect \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                isBoth \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new CommandException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16,
      "scjx123": 80
    }
  },
  {
    "path": "src/main/java/command/action/NextAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Next action."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class NextAction extends Action {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String arg \u003d \"a\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d PrevAction.getTargetString(Constants.optionalParamMap.get(args.name), arg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        result \u003d result + \"1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return super.act(data).replace(Constants.TEXT_PLACEHOLDER, result);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int len \u003d flattenedArgs.length;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (len \u003e 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            arg \u003d flattenedArgs[0].name.toLowerCase().trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 30
    }
  },
  {
    "path": "src/main/java/command/action/PlainAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Plain action."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class PlainAction extends Action {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Plain action."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public PlainAction() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 18
    }
  },
  {
    "path": "src/main/java/command/action/PrevAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Prev action."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class PrevAction extends Action {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String arg \u003d \"a\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d getTargetString(Constants.optionalParamMap.get(args.name), arg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        result \u003d result + \"-1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return super.act(data).replace(Constants.TEXT_PLACEHOLDER, result);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets target string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param params the params"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param arg    the arg"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the target string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    static String getTargetString(String[] params, String arg) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String i \u003d params[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String s \u003d params[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String a \u003d params[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (arg.equals(i)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d Constants.BMP_LIST_SWITCH;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (arg.equals(s)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d Constants.BMP_SEL_SWITCH;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (arg.equals(a)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d Constants.BMP_LIST_SWITCH + Constants.BMP_SEL_SWITCH;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int len \u003d flattenedArgs.length;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (len \u003e 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            arg \u003d flattenedArgs[0].name.toLowerCase().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 51
    }
  },
  {
    "path": "src/main/java/command/action/ReminderAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " * The type Reminder Tasks Action."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class ReminderAction extends Action {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String act(Data data) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        Data savedData \u003d data;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        final String flag \u003d savedData.flag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(Constants.REMINDER_HEAD);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        data.setFlag(Constants.EVENT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        ArrayList\u003cItem\u003e tasks \u003d new ArrayList\u003c\u003e(data.getTarget());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        data.setFlag(Constants.DEADLINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        ArrayList\u003cItem\u003e deadlines \u003d new ArrayList\u003c\u003e(data.getTarget());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        LocalDateTime lt \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        LocalDateTime upper \u003d lt.plusDays(Constants.REMINDER_RANGE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        tasks.addAll(deadlines);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        tasks.removeIf(x -\u003e x.getDateTime() \u003d\u003d null);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if (!(tasks.get(i).getDateTime().isAfter(lt) \u0026\u0026 tasks.get(i).getDateTime().isBefore(upper))) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                tasks.remove(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                i--;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        tasks.sort(Comparator.comparing(Item::getDateTime));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        for (Item item : tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            builder.append(item.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if (builder.toString().equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            builder.append(Constants.NO_URGENT_TASKS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        data.setFlag(flag);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 6,
      "chuhann": 42
    }
  },
  {
    "path": "src/main/java/command/action/SelectAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.ItemNotSpecifiedException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " * The type Select action."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class SelectAction extends TakeAction {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.refreshTarget();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (codes !\u003d null \u0026\u0026 codes.size() \u003e 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.mods.stream().filter(x -\u003e codes.contains(((SingleModule) x).moduleCode)).forEach(m -\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                modifyObject(m);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(\"Item: \").append(getObjectInfo(m)).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!indices.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (int i : indices) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (i \u003c 0 || i \u003e data.target.size() - 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                modifyObject(data.target.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(\"Item \").append(i + 1).append(\": \")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        .append(getObjectInfo(data.get(i))).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.superAct(data);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String execution \u003d builder.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (execution.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            execution \u003d execution.concat(Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result.replace(Constants.TEXT_PLACEHOLDER, execution);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void modifyObject(Item item) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        item.isSelected \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void safetyCheck() throws Exception {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        throw new ItemNotSpecifiedException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String superAct(Data data) throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return super.superAct(data);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 3,
      "TomLBZ": 53
    }
  },
  {
    "path": "src/main/java/command/action/TakeAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " * The type Take action."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class TakeAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected ArrayList\u003cInteger\u003e indices;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected ArrayList\u003cString\u003e codes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected boolean isBlind \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String flag \u003d data.flag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isBlind) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder testContent \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.getTarget(Constants.SELECTED).forEach(x -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (x instanceof SingleModule) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    modifyObject(x);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    testContent.append(getObjectInfo(x)).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (testContent.toString().length() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(\"Your selected modules:\").append(Constants.WIN_NEWLINE)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        .append(testContent.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(\"No modules in your selection.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (!indices.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                for (int i : indices) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    if (i \u003c 0 || i \u003e data.mods.size() - 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    if (data.mods.get(i) instanceof SingleModule) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        Item module \u003d data.mods.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        modifyObject(module);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        builder.append(\"Module \").append(i + 1).append(\": \")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                                .append(getObjectInfo(module)).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (!codes.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                data.mods.stream().filter(x -\u003e codes.contains(((SingleModule) x).moduleCode)).forEach(x -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    modifyObject(x);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    builder.append(\"Module: \").append(getObjectInfo(x)).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.refreshTarget(flag);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(data);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String execution \u003d builder.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (execution.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            execution \u003d execution.concat(Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result.replace(Constants.TEXT_PLACEHOLDER, execution);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void modifyObject(Item item) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ((SingleModule)item).isTaken \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String getObjectInfo(Item item) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return item.getName();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        indices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        codes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (args.thisData \u003d\u003d null || flattenedArgs.length \u003c 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            safetyCheck();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] identifiers \u003d args.thisData.toFlatString().split(Constants.SPACE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (String id : identifiers) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                indices.add(Integer.parseInt(id) - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                char ch \u003d id.toUpperCase().toCharArray()[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (id.length() \u003d\u003d 1 \u0026\u0026 Character.isLetter(ch)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    indices.add((int) ch - Constants.LETTER_OFFSET - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    codes.add(id);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isCodes \u003d codes !\u003d null \u0026\u0026 codes.size() \u003e 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isIndices \u003d indices !\u003d null \u0026\u0026 indices.size() \u003e 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!isCodes \u0026\u0026 !isIndices) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throw new CommandException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void safetyCheck() throws Exception {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isBlind \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String superAct(Data data) throws Exception {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return super.act(data);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 3,
      "TomLBZ": 109
    }
  },
  {
    "path": "src/main/java/command/action/TodoAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Todo action."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TodoAction extends Action {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(data);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.addTask(todo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, todo.toString(), data.tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        description \u003d args.thisData.toFlatString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10,
      "-": 17
    }
  },
  {
    "path": "src/main/java/command/action/UndoneAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Undone action."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class UndoneAction extends Action {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Item item \u003d data.get(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (item \u003d\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (item instanceof Task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ((Task)item).markAsUndone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.updateItem(index, item);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String result \u003d super.act(data);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return result.replace(Constants.TEXT_PLACEHOLDER, item.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.NOT_TASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        index \u003d getIndex(args.thisData.name);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16,
      "-": 20
    }
  },
  {
    "path": "src/main/java/command/action/UnknownAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Unknown action."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class UnknownAction extends Action {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(Data data) throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        return Constants.messageMap.getOrDefault(Constants.UNKNOWN, Constants.INVALID);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 5,
      "-": 11
    }
  },
  {
    "path": "src/main/java/command/action/UnselectAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UnselectAction extends SelectAction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void modifyObject(Item item) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        item.isSelected \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10
    }
  },
  {
    "path": "src/main/java/command/action/UntakeAction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UntakeAction extends TakeAction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void modifyObject(Item item) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ((SingleModule)item).isTaken \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 11
    }
  },
  {
    "path": "src/main/java/constants/Constants.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.Action;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.AddAction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.ByeAction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.CalculateCapAction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.ClearAction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DeadlineAction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DeleteAction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DetailAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DoneAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.EventAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.FancyAction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.FindAction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.FocusAction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.HelpAction;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.ListAction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.McAction;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.NextAction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.PlainAction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.PrevAction;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import command.action.ReminderAction;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.SelectAction;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.TakeAction;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.TodoAction;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UndoneAction;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UnknownAction;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UnselectAction;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UntakeAction;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Constants."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant LPAREN."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final char LPAREN \u003d \u0027(\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant RPAREN."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final char RPAREN \u003d \u0027)\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PARAM."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final char PARAM \u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PARAM_ALIAS."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final char PARAM_ALIAS \u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CMD_END."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final char CMD_END \u003d \u0027;\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CHAR_SPACE."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final char CHAR_SPACE \u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant LINE_UNIT."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String LINE_UNIT \u003d \"_\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DOT."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DOT \u003d \".\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant SPACE."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ICON_LEFT."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ICON_LEFT \u003d \"[\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ICON_RIGHT."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ICON_RIGHT \u003d \"]\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PARAM_LEFT."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PARAM_LEFT \u003d \"(\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PARAM_RIGHT."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PARAM_RIGHT \u003d \")\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TODO_ICON."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TODO_ICON \u003d ICON_LEFT + \"T\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant EVENT_ICON."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EVENT_ICON \u003d ICON_LEFT + \"E\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DDL_ICON."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DDL_ICON \u003d ICON_LEFT + \"D\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ICON_SIGNATURE."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ICON_SIGNATURE \u003d ICON_RIGHT + ICON_LEFT;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ICON_SEPARATOR."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ICON_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT + ICON_LEFT;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BODY_SIGNATURE."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String BODY_SIGNATURE \u003d ICON_RIGHT + SPACE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BODY_SEPARATOR."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String BODY_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PARAM_SIGNATURE."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PARAM_SIGNATURE \u003d SPACE + PARAM_LEFT;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PARAM_SEPARATOR."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PARAM_SEPARATOR \u003d LINE_UNIT + PARAM_LEFT;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DETAILS_SIGNATURE."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DETAILS_SIGNATURE \u003d \": \";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TICK."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TICK \u003d \"V\"; //\"\\u2713\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CROSS."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String CROSS \u003d \"X\"; //\"\\u2718\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TICK_ICON."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TICK_ICON \u003d ICON_LEFT + TICK + ICON_RIGHT;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CROSS_ICON."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String CROSS_ICON \u003d ICON_LEFT + CROSS + ICON_RIGHT;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TAB."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant NEWLINE."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant RETURN."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String RETURN \u003d \"\\r\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant WIN_NEWLINE."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String WIN_NEWLINE \u003d RETURN + NEWLINE;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ZERO_LENGTH_STRING."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ZERO_LENGTH_STRING \u003d \"\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TEXT_PLACEHOLDER."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TEXT_PLACEHOLDER \u003d \"_t_\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant NUMBER_PLACEHOLDER."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NUMBER_PLACEHOLDER \u003d \"_n_\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant SYNTAX_OR."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String SYNTAX_OR \u003d \"    OR    \";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant NOT_FOUND."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String NOT_FOUND \u003d \"[NOT FOUND]\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PATH."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PATH \u003d \"./data\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant FILENAME."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILENAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BYE."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CLEAR."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DEADLINE."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DELETE."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DONE."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant EVENT."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant FIND."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * The constant FOCUS."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static final String FOCUS \u003d \"focus\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * The constant REMINDER."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static final String REMINDER \u003d \"reminder\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant HELP."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant LIST."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TODO."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * The constant ALL."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static final String ALL \u003d \"all\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant UNDONE."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String UNDONE \u003d \"undone\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant UNKNOWN."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String UNKNOWN \u003d \"unknown\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ATOMIC."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ATOMIC \u003d \"_atom_\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DEFAULT."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT \u003d \"1\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant EMPTY."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMPTY \u003d \"0\";"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant NEXT."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NEXT \u003d \"next\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PREV."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREV \u003d \"prev\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant FANCY."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String FANCY \u003d \"fancy\";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant PLAIN."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PLAIN \u003d \"plain\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant SEL."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SEL \u003d \"sel\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ADD."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADD \u003d \"add\";"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant MC."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MC \u003d \"mc\";"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TAKE \u003d \"take\";"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String UNSEL \u003d \"unsel\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String UNTAKE \u003d \"untake\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The constant DETAIL."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static final String DETAIL \u003d \"detail\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Signals CAP command."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final String CAP \u003d \"cap\";"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String MOD \u003d \"mod\";"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TASK \u003d \"task\";"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String SELECTED \u003d \"selected\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TAKEN \u003d \"taken\";"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant INDEX_OUT."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INDEX_OUT \u003d \"Index out of range.\";"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant ADDED."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDED \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant REMOVED."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String REMOVED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant COUNT_PREFIX."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COUNT_PREFIX \u003d \"Now you have \";"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant COUNT_SUFFIX."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COUNT_SUFFIX \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CHANGED."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String CHANGED \u003d WIN_NEWLINE + TEXT_PLACEHOLDER"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            + WIN_NEWLINE + COUNT_PREFIX + NUMBER_PLACEHOLDER + COUNT_SUFFIX;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant INVALID."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID \u003d \"Invalid Command! Please check the syntax.\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant WELCOME."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String WELCOME \u003d \"Hello, I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant HELP_PROMPT."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_PROMPT \u003d \"Use \\\"help [target]\\\" to see details :) Try \\\"help help\\\"!\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant DATE_PATTERNS."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String[] DATE_PATTERNS \u003d {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"yyyy-MMM-dd\", \"yyyy-MMM-d\", \"yyyy-MM-dd\", \"yyyy-MM-d\", \"yyyy-M-dd\", \"yyyy-M-d\","
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"yy-MMM-dd\", \"yy-MMM-d\", \"yy-MM-dd\", \"yy-MM-d\", \"yy-M-dd\", \"yy-M-d\","
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"MMM-dd-yyyy\", \"MMM-d-yyyy\", \"MM-dd-yyyy\", \"MM-d-yyyy\", \"M-dd-yyyy\", \"M-d-yyyy\","
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"MMM-dd-yy\", \"MMM-d-yy\", \"MM-dd-yy\", \"MM-d-yy\", \"M-dd-yy\", \"M-d-yy\","
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"dd-MMM-yyyy\", \"d-MMM-yyyy\", \"dd-MM-yyyy\", \"d-MM-yyyy\", \"dd-M-yyyy\", \"d-M-yyyy\","
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"dd-MMM-yy\", \"d-MMM-yy\", \"dd-MM-yy\", \"d-MM-yy\", \"dd-M-yy\", \"d-M-yy\"};"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant TIME_PATTERNS."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String[] TIME_PATTERNS \u003d {\"HH:mm:ss\", \"H:mm:ss\", \"HH:m:ss\", \"HH:mm:s\", \"H:m:ss\","
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"HH:m:s\", \"H:mm:s\", \"H:m:s\", \"HH:mm\", \"H:mm\", \"HH:m\", \"H:m\", \"HH\", \"H\", \"\"};"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant NO_KEYWORD."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String NO_KEYWORD \u003d \"No keyword provided, listing all tasks:\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String MOD_NOT_FOUND \u003d"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        \"Module Not Found! Did you put the module code (e.g. CS2113) correctly?\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TASK_NOT_SPEC \u003d \"You forgot to specify tasks by index!\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ITEM_NOT_SPEC \u003d \"No item is specified, skipping this command.\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final String GRADE_NOT_SPEC \u003d \"You have not entered grade for some of your past modules.\""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        + WIN_NEWLINE;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * The constant NO_TASK_TYPE."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static final String NO_TASK_TYPE \u003d \"No task type provided, listing all tasks:\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * The constant NO_URGENT_TASKS."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static final String NO_URGENT_TASKS \u003d \"No task in 3 days from now\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * The constant UNIDENTIFIED_TYPE."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static final String UNIDENTIFIED_TYPE \u003d \"Unidentified task type! Please provide the correct task type.\""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        + WIN_NEWLINE;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The constant DETAIL."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static final String NO_MODULE \u003d \"Sorry, no such module in the list!\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * The constant FOCUS_HELP."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static final String FOCUS_HELP \u003d FOCUS + SYNTAX_OR + FOCUS + CHAR_SPACE + ICON_LEFT + DEADLINE + CHAR_SPACE"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            + PARAM + CHAR_SPACE + TODO + CHAR_SPACE + PARAM + CHAR_SPACE + EVENT + CHAR_SPACE + PARAM + CHAR_SPACE"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            + ALL + ICON_RIGHT + WIN_NEWLINE;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * The constant CONTEXT_MSG."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static final String CONTEXT_MSG \u003d \"Changing context to \";"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant LIST_HEAD."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String LIST_HEAD \u003d \"Here is the list of tasks:\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * The constant REMINDER_HEAD."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static final String REMINDER_HEAD \u003d \"Here are the tasks due within \" + Constants.REMINDER_RANGE + \" days: \""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            + WIN_NEWLINE;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The constant MC_HEAD."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static final String MC_HEAD \u003d \"Here is the total MC:\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The constant DETAIL."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static final String DETAIL_HEAD \u003d \"Here are the details you requested:\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant HELP_HEADING."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String HELP_HEADING \u003d \"Here are all available commands:\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * The constant HELP_HEADING."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final String SHOW_CAP \u003d \"Here is your existing CAP: \";"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String NOT_TASK \u003d \"The specified item is not a Task, \""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            + \"so it cannot be marked as done or undone.\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String INIT_LIST \u003d \"Welcome to DomSun! This is the item list.\";"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String INIT_SEL \u003d \"This is the selection list.\";"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BMP_LIST_SWITCH."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BMP_LIST_SWITCH \u003d \"LIST\";"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BMP_SEL_SWITCH."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BMP_SEL_SWITCH \u003d \"SEL\";"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant LINE_REPETITION."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int LINE_REPETITION \u003d 60;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant NO_INDENT."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int NO_INDENT \u003d 0;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant INDENT_1."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INDENT_1 \u003d 1;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant INDENT_2."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INDENT_2 \u003d 2;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant INDENT_3."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INDENT_3 \u003d 3;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant LETTER_OFFSET."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int LETTER_OFFSET \u003d 64;"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BITMAP_W."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int BITMAP_W \u003d 100;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BITMAP_LIST_H."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int BITMAP_LIST_H \u003d 15;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BITMAP_SEL_H."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int BITMAP_SEL_H \u003d 6;"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CELL_W."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int CELL_W \u003d 20;"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant CELL_H."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int CELL_H \u003d 2;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant BANNER."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int BANNER \u003d 1;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * The constant REMINDER_RANGE."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static final int REMINDER_RANGE \u003d 3;"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant actionMap."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Map\u003cString, Action\u003e actionMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(BYE, new ByeAction()),"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(CLEAR, new ClearAction()),"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DEADLINE, new DeadlineAction()),"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DELETE, new DeleteAction()),"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DONE, new DoneAction()),"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(EVENT, new EventAction()),"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FIND, new FindAction()),"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(HELP, new HelpAction()),"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(LIST, new ListAction()),"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            Map.entry(FOCUS, new FocusAction()),"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Map.entry(REMINDER, new ReminderAction()),"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Map.entry(MC, new McAction()),"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Map.entry(DETAIL, new DetailAction()),"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(TODO, new TodoAction()),"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(UNDONE, new UndoneAction()),"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNKNOWN, new UnknownAction()),"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(PREV, new PrevAction()),"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(NEXT, new NextAction()),"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Map.entry(CAP, new CalculateCapAction()),"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FANCY, new FancyAction()),"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(PLAIN, new PlainAction()),"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TAKE, new TakeAction()),"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(ADD, new AddAction()),"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(SEL, new SelectAction()),"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNSEL, new UnselectAction()),"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNTAKE, new UntakeAction()));"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant helpMap."
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Map\u003cString, HelpText\u003e helpMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(BYE, HelpText.BYE),"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(CLEAR, HelpText.CLEAR),"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DEADLINE, HelpText.DEADLINE),"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DELETE, HelpText.DELETE),"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DONE, HelpText.DONE),"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(EVENT, HelpText.EVENT),"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FIND, HelpText.FIND),"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            Map.entry(FOCUS, HelpText.FOCUS),"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Map.entry(REMINDER, HelpText.REMINDER),"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(HELP, HelpText.HELP),"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(LIST, HelpText.LIST),"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(TODO, HelpText.TODO),"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(UNDONE, HelpText.UNDONE),"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNKNOWN, HelpText.UNKNOWN),"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(PREV, HelpText.PREV),"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(NEXT, HelpText.NEXT),"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Map.entry(CAP, HelpText.CAP),"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FANCY, HelpText.FANCY),"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Map.entry(PLAIN, HelpText.PLAIN),"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Map.entry(MC,HelpText.MC),"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DETAIL,HelpText.DETAIL),"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TAKE, HelpText.TAKE),"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(ADD, HelpText.ADD),"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(SEL, HelpText.SEL),"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNSEL, HelpText.UNSEL),"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNTAKE, HelpText.UNTAKE));"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant paramMap."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final Map\u003cString, String[]\u003e paramMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DEADLINE, new String[]{\"by\"}),"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(EVENT, new String[]{\"at\"}),"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(ADD, new String[]{MOD, TASK}));"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant optionalParamMap."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final Map\u003cString, String[]\u003e optionalParamMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Map.entry(CAP, new String[]{\"u\", \"m\"}),"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Map.entry(MC, new String[]{\"p\", \"d\"}),"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(LIST, new String[]{\"date\", \"asc\", \"desc\", \"spec\"}),"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FOCUS, new String[]{DEADLINE, TODO, EVENT, MOD, TASK, SELECTED, TAKEN}),"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(PREV, new String[]{\"i\", \"s\", \"a\"}),"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(NEXT, new String[]{\"i\", \"s\", \"a\"}));"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant messageMap."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Map\u003cString, String\u003e messageMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(BYE, \"Bye. Hope to see you again soon!\"),"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(CLEAR, \"Nice! I\u0027ve cleared everything in the list.\"),"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DEADLINE, ADDED + CHANGED),"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DELETE, REMOVED + CHANGED),"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.entry(DONE, \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(EVENT, ADDED + CHANGED),"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FIND, \"Tasks with the specified keyword are:\""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FOCUS, \"Now we are focusing on:\""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(HELP, TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(LIST, TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TODO, ADDED + CHANGED),"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNDONE, \"Nice! I\u0027ve marked this task as undone:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNKNOWN, \"OOPS, I don\u0027t know what that means :-( Try \\\"help\\\"!\"),"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(PREV, TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(NEXT, TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(FANCY, FANCY),"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(PLAIN, PLAIN),"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TAKE, \"I have marked these modules as taken:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(ADD, \"I have added the specified tasks to the specified modules.\""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(SEL, \"I have selected the items you specified:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DETAIL, DETAIL_HEAD + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNSEL, \"I have un-selected the items you specified:\" + WIN_NEWLINE + TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNTAKE, \"I have marked these modules as not taken:\" + WIN_NEWLINE + TEXT_PLACEHOLDER));"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 20,
      "TomLBZ": 401,
      "chuhann": 32,
      "-": 114,
      "scjx123": 22,
      "adinata15": 15
    }
  },
  {
    "path": "src/main/java/constants/HelpText.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The enum Help text."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public enum HelpText {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Bye."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    BYE("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"bye\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Quit the program\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                \"bye\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"bye\\\" \u003e\u003e quits the program\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Clear."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEAR("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \"clear\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Clear the task list\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                \"clear\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"clear\\\" \u003e\u003e clears the task list\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    DEADLINE("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deadline\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Add a deadline to the task list\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                \"deadline [description] -by [time]\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"deadline ddl -by 21/9/15 1:12\\\" \u003e\u003e \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        + \"adds a deadline with description \\\"ddl\\\" and time \\\"Sep 15 2021 1:12\\\"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Delete."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    DELETE("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \"delete\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Delete a task from the task list\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                \"delete [index]\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"delete 1\\\" \u003e\u003e deletes the task with index 1 from the current list\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    DONE("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \"done\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Mark a task as done\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \"done [index]\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"done 1\\\" \u003e\u003e marks the task with index 1 as done\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    EVENT("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            \"event\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Add an event to the task list\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                \"event [description] -at [time]\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"event e -at May 13 2020 8:00\\\" \u003e\u003e \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        + \"adds an event with description \\\"e\\\" and time \\\"May 13 2020 8:00\\\"\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Find."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    FIND("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"find\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Find an event in the task list with the specified keyword\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"find [keyword]\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"find exam\\\" \u003e\u003e finds all tasks with the \\\"exam\\\" keyword from the task list\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Help."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \"help\","
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Print the list of available commands, or print the details of a specified command\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                \"help [target]\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                \"target: the name of the target command\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"help\\\" \u003e\u003e prints the list of available commands\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                \"2. \\\"help event\\\" \u003e\u003e prints the details of the \\\"event\\\" command\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Focus."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    FOCUS("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"focus\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Change context. Changes the target of other commands to the specified target\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"focus\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"focus [deadline / todo / event / task / mod / selected / taken]\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"focus\\\" \u003e\u003e focus on \\\"task\\\". e.g. \\\"list\\\" will list all tasks from now on\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"focus mod\\\" \u003e\u003e focus on \\\"mod\\\". e.g. \\\"list\\\" will list all modules from now on\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"3. \\\"focus selected\\\" \u003e\u003e focus on \\\"selected\\\". e.g. \\\"list\\\" will list selected items from now on\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    REMINDER("
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            \"reminder\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            \"List out events and deadlines tasks that are due within \" + Constants.REMINDER_RANGE + \" days\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                \"reminder\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            },"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                \"1. \\\\\\\"list\\\\\\\" \u003e\u003e list all added tasks\\\",\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The List."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LIST("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"list\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Print a list of tasks/modules depending on the current Focus\","
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"list\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"list date [asc / desc / spec \\\"date\\\"(any common date format)]\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            },"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"list\\\" \u003e\u003e list all added tasks\","
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"list date asc\\\" \u003e\u003e list tasks with a \\\"date\\\" field in ascending order\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"3. \\\"list date spec Oct 5 2020\\\" \u003e\u003e list tasks with specific \\\"date\\\" field of Oct 5 2020\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Todo."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    TODO("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            \"todo\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Add a todo to the task list\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                \"todo [description]\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"todo class\\\" \u003e\u003e adds a todo with description \\\"class\\\"\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Undone."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    UNDONE("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \"undone\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Mark a task as undone\","
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                \"undone [index]\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"undone 1\\\" \u003e\u003e marks the task with index 1 as undone\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Unknown."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    UNKNOWN("
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            \"unknown\","
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Prints the error message for an unrecognized command for debugging purposes\","
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                \"unknown\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"unknown\\\" \u003e\u003e prints \\\"OOPS, I don\u0027t know what that means :-( Try \\\"help\\\"!\\\"\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Next."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    NEXT("
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            \"next\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Switch the target region to the next page, keeping other regions unchanged.\","
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"next [region]\","
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"region: i(item list), s(selection), a(all, default)\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"next\\\" \u003e\u003e switch both item list (top) and selection (bottom) region to the next page (default)\","
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"next s\\\" \u003e\u003e switch only the selection (bottom) region to the next page\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Prev."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    PREV("
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            \"prev\","
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Switch the target region to the previous page, keeping other regions unchanged.\","
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"prev [region]\","
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"region: i(items), s(selection), a(all, default)\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"prev\\\" \u003e\u003e switch both item list (top) and selection (bottom) to the previous page (default)\","
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"prev s\\\" \u003e\u003e switch the selection (bottom) to the previous page\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Fancy."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    FANCY("
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"fancy\","
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Switch to a fancy Cli (requires the shell to support ansi codes).\","
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"fancy\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"fancy\\\" \u003e\u003e switch to a fancy Cli with graphics. Use \\\"plain\\\" to switch to plain Cli\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Plain."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    PLAIN("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"plain\","
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Switch to a plain Cli.\","
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"plain\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"plain\\\" \u003e\u003e switch to a plain pure-text Cli. Use \\\"fancy\\\" to switch to fancy Cli\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Sel."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    SEL("
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            \"sel\","
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Make selection: Add specified item(s) to the selection.\","
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"sel [index(es) (for the currently listed items) / module code(s) (for modules only)]\","
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"sel 1 2 3\\\" \u003e\u003e add the item with indices 1, 2and 3 from the item list to the selection\","
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"sel CS1010 CS2113\\\" \u003e\u003e add the modules CS1010 and CS2113 on the item list to the selection\","
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"sel 5 CS2113\\\" \u003e\u003e add the item with index 5 and module CS2113 on the item list to the selection\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Unsel."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    UNSEL("
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"unsel\","
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Cancel selection: Make specified item(s) no longer selected.\","
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"unsel [index(es) (for the currently listed items) / module code(s) (for modules only)]\","
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"unsel 1 2 3\\\" \u003e\u003e make items with indices 1, 2and 3 no longer selected\","
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"unsel CS1010 CS2113\\\" \u003e\u003e make modules CS1010 and CS2113 no longer selected\","
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"unsel 5 CS2113\\\" \u003e\u003e make the item with index 5 and module CS2113 no longer selected\""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Add."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    ADD("
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            \"add\","
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Add task(s) to module(s): Add specified task(s) to specified module(s).\","
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"add -task [index(es)] -mod [module code(s)]\","
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"add -task 1 2 -mod CS2113 CS2113T \\\" \u003e\u003e add task 1 and task 2 in the current list to \""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        + \"the modules CS2113 and CS2113T\","
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Take."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    TAKE("
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"take\","
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Take module(s): Mark specified module(s) as taken.\","
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"take [index(es) / module code(s) (for modules only)]\","
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"take\\\" \u003e\u003e if there is any module selected but not taken, mark it as taken\","
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"take 1 2\\\" \u003e\u003e mark module 1 and module 2 as taken\","
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"3. \\\"take CS2113T\\\" \u003e\u003e mark module CS2113T as taken\","
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"4. \\\"take 1 2 CS2113T\\\" \u003e\u003e mark module 1, module 2 and module CS2113T as taken\","
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Untake."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    UNTAKE("
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"untake\","
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Untake module(s): Mark specified module(s) as not taken.\","
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"untake [index(es) / module code(s) (for modules only)]\","
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"untake\\\" \u003e\u003e if there is any module selected but not taken, mark it as not taken\","
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"untake 1 2\\\" \u003e\u003e mark module 1 and module 2 as not taken\","
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"3. \\\"untake CS2113T\\\" \u003e\u003e mark module CS2113T as not taken\","
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"4. \\\"untake 1 2 CS2113T\\\" \u003e\u003e mark module 1, module 2 and module CS2113T as not taken\""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Mc."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    MC("
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            \"mc\","
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Print MCs: Print the number of MCs based on selected option.\","
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                \"mc [-option] [-detail]\","
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                \"option: {-c(current, default), -p(prospective), -help}\","
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                \"detail: {-t(total, default), -d(detailed)}\""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                \"1. \\\"mc\\\" \u003e\u003e print the total number of MCs currently taking\","
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                \"2. \\\"mc -p\\\" \u003e\u003e print the total number of MCs in the selection region\","
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                \"3. \\\"mc -p -d \\\" \u003e\u003e print the detailed MC composition of the selection region\","
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The Mc."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    DETAIL("
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            \"detail\","
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Print Details: Print the details of a specified module.\","
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"detail [module code / index]\","
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            },"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"detail 1\\\" \u003e\u003e print the detail of module 1 in the list\","
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"2. \\\"detail CS2113T\\\" \u003e\u003e print the detail of module CS2113T\","
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Help commands for CAP."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    CAP("
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            \"cap\","
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            \"Calculate CAP: Calculate CAP for courses based on selected option.\","
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"cap [-option] [module] [grade] {[module] [grade]...}\","
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"option: {-u(user, default), -m(multiple/custom modules), -help}\""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            },"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"cap\\\" \u003e\u003e calculate user CAP from their taken modules\","
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"2. \\\"cap -m M1 G1 M2 G2 \\\" \u003e\u003e calculate cap based on input modules: \""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        + \"modules M1 with grade G1, module M2 with grade G2 correspondingly.\","
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Name."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Description."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Syntax."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] syntax;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Usages."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] usages;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    HelpText(String name, String description, String[] syntax, String[] usages) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        this.syntax \u003d syntax;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        this.usages \u003d usages;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Array to string string."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    public String arrayToString(String[] input) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String string: input) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            stringBuilder.append(string).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"Name:\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        stringBuilder.append(Constants.SPACE).append(name).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        stringBuilder.append(\"Description:\").append(Constants.SPACE).append("
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "                description).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        stringBuilder.append(\"Syntax:\").append(Constants.WIN_NEWLINE).append(arrayToString(syntax));"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        stringBuilder.append(\"Usages:\").append(Constants.WIN_NEWLINE).append(arrayToString(usages));"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 6,
      "TomLBZ": 196,
      "chuhann": 10,
      "-": 166,
      "scjx123": 9,
      "adinata15": 14
    }
  },
  {
    "path": "src/main/java/data/Data.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Data {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String flag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cItem\u003e tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cItem\u003e mods;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Index option."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageOptions indexOption;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cItem\u003e target;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Last input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String lastInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Last index option."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageOptions lastIndexOption;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Data() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        lastInput \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        lastIndexOption \u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        indexOption \u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        target \u003d tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        mods \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        flag \u003d Constants.TASK;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void setFlag(String flag) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.flag \u003d flag;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        target \u003d getTarget();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cItem\u003e getTarget() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return getTarget(flag);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cItem\u003e getTarget(String flag) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget(flag);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return target;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void refreshTarget() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget(flag);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void refreshTarget(String flag) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        switch (flag) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.DEADLINE: // break is unreachable"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d tasks.stream().filter(x -\u003e x instanceof Deadline).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.EVENT: // break is unreachable"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d tasks.stream().filter(x -\u003e x instanceof Event).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.TODO: // break is unreachable"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d tasks.stream().filter(x -\u003e x instanceof ToDo).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.MOD:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d mods;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.SELECTED:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d mods.stream().filter(x -\u003e x.isSelected).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target.addAll(tasks.stream().filter(x -\u003e x.isSelected).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.TAKEN:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d mods.stream().filter("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                x -\u003e ((SingleModule)x).isTaken).collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            target \u003d tasks;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void removeItem(int index) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Item currentItem \u003d target.get(index);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        target.remove(currentItem);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void updateItem(int index, Item newItem) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Item currentItem \u003d target.get(index);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        target.set(target.indexOf(currentItem), newItem);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        refreshTarget();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param index the index"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Item get(int index) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return target.get(index);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 130
    }
  },
  {
    "path": "src/main/java/data/Item.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Item."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Item description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Is dated."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isDated \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Item Date time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isSelected;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Item."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Item(String description) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets name."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the name"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private static ArrayList\u003cString\u003e getPatterns(boolean isDateOnly) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cString\u003e patterns \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isDateOnly) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (String datePattern : Constants.DATE_PATTERNS) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                patterns.add(datePattern);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                patterns.add(datePattern.replace(Constants.PARAM_ALIAS, Constants.PARAM));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                patterns.add(datePattern.replace(Constants.PARAM_ALIAS, Constants.CHAR_SPACE));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (String datePattern : Constants.DATE_PATTERNS) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                for (String timePattern : Constants.TIME_PATTERNS) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    String concat \u003d datePattern + Constants.SPACE + timePattern;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    patterns.add(concat);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    patterns.add(concat.replace(Constants.PARAM_ALIAS, Constants.PARAM));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    patterns.add(concat.replace(Constants.PARAM_ALIAS, Constants.CHAR_SPACE));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return patterns;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Parse date time local date time."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param input date time in string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the local date time"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static LocalDateTime parseDateTime(String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cString\u003e patterns \u003d getPatterns(false);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (String pattern : patterns) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    dateTime \u003d LocalDateTime.parse(input.trim(), DateTimeFormatter.ofPattern(pattern));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    e.addSuppressed(new CommandException()); // do nothing basically."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            patterns \u003d getPatterns(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (String datePattern : patterns) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        dateTime \u003d LocalDate.parse(input.trim(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                                DateTimeFormatter.ofPattern(datePattern)).atStartOfDay();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        e.addSuppressed(new CommandException()); // do nothing basically."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets date."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the date"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return dateTime.toLocalDate();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets date time."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param date the date"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void setDateTime(String date) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        dateTime \u003d parseDateTime(date);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isDated \u003d dateTime !\u003d null;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets time."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the time"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return dateTime.toLocalTime();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets date time."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the date time"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets date time string."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param input date time input"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the date time string"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String getDateTimeString(String input) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        DateTimeFormatter datePattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d input;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String date \u003d getDate().format(datePattern);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String time \u003d getTime().toString();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d date + Constants.SPACE + time;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return toString().concat(isSelected ? \" Selected\" : \"\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 157,
      "-": 15,
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/data/SingleModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Single module."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class SingleModule extends Item {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module code."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public String moduleCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module mc."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public String moduleMC;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module name."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public String moduleName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String moduleDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module prerequisite."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String modulePrerequisite;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cItem\u003e taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isTaken;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String grade;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Single module."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param code        module code"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param name        module name"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param description module description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param mc          number of mc"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param prereq      module prerequisite"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public SingleModule(String code, String name, String description, String mc, String prereq) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        super(code); //moduleDescription is handle here."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.moduleCode \u003d code;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.moduleDescription \u003d description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        this.moduleName \u003d name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.moduleMC \u003d mc;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.modulePrerequisite \u003d prereq;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return moduleCode + Constants.SPACE + moduleName + Constants.SPACE"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                + moduleMC + (isTaken ? \"MC Taken\" : \"MC\") + (isSelected ? \" Selected\" : \"\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d moduleCode + Constants.SPACE + moduleName + Constants.SPACE"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                + moduleMC + (isTaken ? \"MC Taken\" : \"MC\") + (isSelected ? \" Selected\" : \"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(result);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        builder.append(Constants.WIN_NEWLINE).append(wrap(moduleDescription.trim())).append(\"Tasks: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (taskList !\u003d null \u0026\u0026 taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(((Task)item).getDescription()).append(Constants.SPACE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builder.append(Constants.NOT_FOUND);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String wrap(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        input \u003d input.replace(Constants.TAB, Constants.SPACE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        input \u003d input.replace(Constants.NEWLINE, Constants.SPACE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int currentStart \u003d 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (currentStart \u003c input.length()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int end \u003d Math.min(input.length(), currentStart + Constants.BITMAP_W);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builder.append(input, currentStart, end).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            currentStart +\u003d Constants.BITMAP_W;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets module description."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the module description"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getModuleDescription() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return moduleDescription;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets module mc."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the module mc"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getModuleMC() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        return moduleMC;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets module prerequisite."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the module prerequisite"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getModulePrerequisite() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return modulePrerequisite;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void addTasks(ArrayList\u003cItem\u003e tasks) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        taskList.addAll(tasks);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 79,
      "-": 37,
      "scjx123": 9,
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/data/jobs/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package data.jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Deadline due time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param description deadline description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param by          deadline due time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        setDateTime(by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String byTime \u003d getDateTimeString(by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.DDL_ICON + super.toString() + \" (by: \" + byTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 14,
      "-": 16,
      "adinata15": 3
    }
  },
  {
    "path": "src/main/java/data/jobs/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package data.jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The At."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param at          the at"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        setDateTime(at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String atTime \u003d getDateTimeString(at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.EVENT_ICON + super.toString() + \" (at: \" + atTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16,
      "-": 16
    }
  },
  {
    "path": "src/main/java/data/jobs/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package data.jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Task extends Item {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Is done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        dateTime \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isDated \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Gets description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get status icon string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? Constants.TICK : Constants.CROSS);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Mark as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Mark as undone."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 32,
      "-": 27,
      "scjx123": 9
    }
  },
  {
    "path": "src/main/java/data/jobs/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package data.jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type To do."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new To do."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return Constants.TODO_ICON + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 9,
      "-": 14
    }
  },
  {
    "path": "src/main/java/exceptions/CommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Command exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.INVALID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 9,
      "-": 4
    }
  },
  {
    "path": "src/main/java/exceptions/GradeNotSpecifiedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class GradeNotSpecifiedException extends CommandException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return Constants.GRADE_NOT_SPEC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 10
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Invalid command exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class InvalidCommandException extends CommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 3,
      "-": 4
    }
  },
  {
    "path": "src/main/java/exceptions/ItemNotSpecifiedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ItemNotSpecifiedException extends CommandException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.ITEM_NOT_SPEC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10
    }
  },
  {
    "path": "src/main/java/exceptions/ModuleException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * The type Module exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ModuleException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/exceptions/ModuleNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * The type Invalid command exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ModuleNotFoundException extends ModuleException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.MOD_NOT_FOUND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 6,
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/exceptions/TaskNotSpecifiedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class TaskNotSpecifiedException extends CommandException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.TASK_NOT_SPEC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Unknown command exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class UnknownCommandException extends CommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 3,
      "-": 4
    }
  },
  {
    "path": "src/main/java/io/FileLoader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type File loader."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileLoader extends IO {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new File loader."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param path     the path"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param fileName the file name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public FileLoader(String path, String fileName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        super(path, fileName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Load all lines string [ ]."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string [ ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String[] loadAllLines() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isFileInvalid()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] lines \u003d new String[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            lines \u003d Files.readAllLines("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    Paths.get(path + \"/\" + fileName), StandardCharsets.UTF_8).toArray(lines);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            return lines;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 14,
      "-": 28
    }
  },
  {
    "path": "src/main/java/io/FileSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.jobs.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type File saver."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileSaver extends IO {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new File saver."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param path     the path"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param fileName the file name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public FileSaver(String path, String fileName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        super(path, fileName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Save boolean."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param tasks the tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean save(ArrayList\u003cItem\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            StringBuilder strBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item: tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                Task task \u003d (Task)item;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                strBuilder.append(task.toString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isFileInvalid()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.writeString("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    Paths.get(path + \"/\" + fileName),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    strBuilder.toString(), StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Save boolean."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param string the string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean save(String string) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.writeString(Paths.get(path + \"/\" + fileName),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    string, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 26,
      "-": 40
    }
  },
  {
    "path": "src/main/java/io/IO.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Io."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class IO {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Path."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The File name."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Io."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param path     the path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param fileName the file name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public IO(String path, String fileName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Is file invalid boolean."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws IOException the io exception"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isFileInvalid()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isValidated \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        File path \u003d new File(this.path);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!path.exists() || !path.isDirectory()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            isValidated \u003d path.mkdirs();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(this.path + \"/\" + this.fileName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!file.exists() || !file.isFile()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            isValidated \u003d isValidated \u0026\u0026 file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return !isValidated;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 21,
      "-": 30
    }
  },
  {
    "path": "src/main/java/io/ReadFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * This class contains parseFile() which is specifically used to read in contents from courselist text file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * DO NOT ALTER THE parseFILE() list under any circumstance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ReadFile {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    static String moduleName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module code."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    static String moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    static String moduleDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module mc."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    static String moduleMC;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Module prerequisite."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    static String modulePrerequisite;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Temporary stores the file directory and the name of the text file itself given in the filePath."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    static String[] dir \u003d new String[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String filename \u003d \"courselist11.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String filedir \u003d \"data\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Read file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadFile(String filePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        dir \u003d filePath.split(\"/\",2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        filedir \u003d dir[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        filename \u003d dir[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The P 2."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path p2 \u003d Paths.get(filedir,filename);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The St."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static StringTokenizer st;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The Temp string."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String tempString;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * New modules are being created here."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Master list of modules are being created here."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * New modules are being added here to the masterList."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException are being thrown here."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static ArrayList\u003cItem\u003e load() throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(p2)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createFile(p2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cItem\u003e masterList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner s \u003d new Scanner(p2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            tempString \u003d s.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            parseFile(tempString);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            SingleModule m \u003d new SingleModule(moduleCode,moduleName,moduleDescription,moduleMC,modulePrerequisite);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (moduleCode !\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                masterList.add(m);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            moduleCode \u003d null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return masterList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * DO NOT ALTER THIS FUNCTION UNDER ANY CIRCUMSTANCES."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the data of course list into its module code, name, description, mc and prerequisite."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tempString A single line of data read from the content list text file."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void parseFile(String tempString) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tempString.indexOf(\"EE\") \u003d\u003d 0 || tempString.indexOf(\"CG\") \u003d\u003d 0"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                || tempString.indexOf(\"MA\") \u003d\u003d 0 || tempString.indexOf(\"CS\") \u003d\u003d 0 || tempString.indexOf(\"EG\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            st \u003d new StringTokenizer(tempString,\"_\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleCode \u003d st.nextToken();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleName \u003d st.nextToken(); //moduleName;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            if (moduleName.contains(\"\\t\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                moduleName \u003d moduleName.replace(\"\\t\",\"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleDescription \u003d st.nextToken(); //moduleDescription;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleMC \u003d st.nextToken(); //moduleMC;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            if (moduleMC.contains(\"\\\"\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                moduleMC \u003d moduleMC.replace(\"\\\"\",\"\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                moduleMC \u003d moduleMC.trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            modulePrerequisite \u003d st.nextToken().trim(); //modulePrerequisite;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 26,
      "-": 77,
      "scjx123": 23
    }
  },
  {
    "path": "src/main/java/io/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import lexical.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Storage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private FileLoader loader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private FileSaver saver;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private ReadFile moduleloader;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param directory the directory"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param fileName  the file name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param parser    the parser"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public Storage(String directory, String fileName, Parser parser) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        loader \u003d new FileLoader(directory, fileName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        saver \u003d new FileSaver(directory, fileName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.moduleloader \u003d new ReadFile(\"data/courselist11.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Save tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param tasks the tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void saveTasks(ArrayList\u003cItem\u003e tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        saver.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Load task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Data load() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] lines \u003d loader.loadAllLines();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Data list \u003d new Data();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            String output \u003d dataToCommand(line, index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!output.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            ArrayList\u003cCommand\u003e commands \u003d parser.parse(output);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Command c: commands) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                c.execute(list);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            list.mods \u003d moduleloader.load();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            e.addSuppressed(new IOException());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private String dataToCommand(String input, int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        String output \u003d Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        String iconCleared \u003d input.replace(Constants.ICON_SIGNATURE, Constants.ICON_SEPARATOR);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] iconSeparated \u003d iconCleared.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (iconSeparated[0]) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case Constants.TODO_ICON:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            output \u003d Constants.TODO + Constants.SPACE;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        case Constants.EVENT_ICON:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            output \u003d Constants.EVENT + Constants.SPACE;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        case Constants.DDL_ICON:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            output \u003d Constants.DEADLINE + Constants.SPACE;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            return output; //break is unreachable"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        String statusCleared \u003d iconSeparated[1].replace(Constants.BODY_SIGNATURE, Constants.BODY_SEPARATOR);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] statusSeparated \u003d statusCleared.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        if (statusSeparated[0].equals(Constants.TICK_ICON)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        String bodyCleared \u003d statusSeparated[1].replace(Constants.PARAM_SIGNATURE, Constants.PARAM_SEPARATOR);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] bodySeparated \u003d bodyCleared.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        if (bodySeparated.length \u003d\u003d 1) { // no params"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            output +\u003d bodyCleared;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            output +\u003d bodySeparated[0] + Constants.SPACE;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            String params \u003d bodySeparated[1].replace(Constants.PARAM_LEFT, Constants.ZERO_LENGTH_STRING).replace("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    Constants.PARAM_RIGHT,Constants.ZERO_LENGTH_STRING).trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            output +\u003d Constants.PARAM + params.replace(Constants.DETAILS_SIGNATURE, Constants.SPACE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            output +\u003d Constants.CMD_END + Constants.DONE + Constants.SPACE + (index + 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 25,
      "-": 77,
      "scjx123": 9
    }
  },
  {
    "path": "src/main/java/lexical/Lexer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package lexical;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Lexer."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Lexer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getCommand(String s, int i) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        int j \u003d i;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        while (j \u003c s.length()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Character.isLetter(s.charAt(j))) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return s.substring(i, j);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getAtom(String s, int i) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        int j \u003d i;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        while (j \u003c s.length()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            char c \u003d s.charAt(j);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            if (c !\u003d Constants.CHAR_SPACE \u0026\u0026 c !\u003d Constants.CMD_END) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return s.substring(i, j);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Analyze array list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cToken\u003e analyze(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cToken\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        String inString \u003d input.trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isCommand \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c inString.length(); ) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            char c \u003d inString.charAt(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (c) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            case Constants.LPAREN:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                result.add(new Token(Types.LPA, c));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            case Constants.RPAREN:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                result.add(new Token(Types.RPN, c));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            case Constants.CHAR_SPACE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            case Constants.PARAM: //this case is the same as the next case, thus no break"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            case Constants.PARAM_ALIAS:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                String command \u003d getCommand(inString, i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                i +\u003d command.length(); //skip away the rest of the commands"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                result.add(new Token(Types.PAR, command));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            case Constants.CMD_END:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                result.add(new Token(Types.END, c));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                isCommand \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            default:    //atom or cmd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                String atom \u003d getAtom(inString, i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                i +\u003d atom.length();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isCommand) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    result.add(new Token(Types.COM, atom));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    isCommand \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    result.add(new Token(Types.STR, atom));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 9,
      "chuhann": 2,
      "-": 77
    }
  },
  {
    "path": "src/main/java/lexical/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package lexical;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private Lexer lexer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Parser."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        lexer \u003d new Lexer();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Parse tree array list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cCommand\u003e parseTree(ArrayList\u003cToken\u003e input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        ParamNode node \u003d new ParamNode(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cParamNode\u003e flattened \u003d node.flatten();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        for (ParamNode args: flattened) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            commands.add(new Command(args));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Parse array list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cCommand\u003e parse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return parseTree(lexer.analyze(input));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 18,
      "-": 29
    }
  },
  {
    "path": "src/main/java/lexical/Token.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package lexical;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Token."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Token {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Token."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public Types token;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The String."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String string;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Token."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param t the t"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param c the c"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public Token(Types t, char c) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.token \u003d t;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.string \u003d Character.toString(c);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Token."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param t the t"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param s the s"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public Token(Types t, String s) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.token \u003d t;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.string \u003d s;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Change type."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param newType the new type"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void changeType(Types newType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.token \u003d newType;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (token \u003d\u003d Types.STR) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"STR\\t\u003c\" + string + \"\u003e\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (token \u003d\u003d Types.PAR) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"PAR\\t\u003c\" + string + \"\u003e\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (token \u003d\u003d Types.COM) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"COM\\t\u003c\" + string + \"\u003e\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return token.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 26,
      "-": 32
    }
  },
  {
    "path": "src/main/java/lexical/Types.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package lexical;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The enum Types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public enum Types {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Lpa types."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    LPA,    //left parenthesis"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Rpn types."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    RPN,    //right parenthesis"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Str types."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    STR,    //string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Par types."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    PAR,    //parameter indicator"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Com types."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    COM,    //command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * End types."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    END,    //line end"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Atm types."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ATM,    //atomic"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 24,
      "-": 11
    }
  },
  {
    "path": "src/main/java/messages/MessageFormat.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Message format."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class MessageFormat {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ArrayList\u003cMessageOptions\u003e messageOptionsList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Message format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param options the options"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public MessageFormat(MessageOptions[] options) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        messageOptionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(options));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Add message option."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param option the option"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addMessageOption(MessageOptions option) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        messageOptionsList.add(option);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Remove message option."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param option the option"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeMessageOption(MessageOptions option) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        messageOptionsList.remove(option);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get message options message options [ ]."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the message options [ ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public MessageOptions[] getMessageOptions() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        MessageOptions[] output \u003d new MessageOptions[messageOptionsList.size()];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return messageOptionsList.toArray(output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 23,
      "-": 25
    }
  },
  {
    "path": "src/main/java/messages/MessageOptions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The enum Message options."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public enum MessageOptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Line indent 1 message options."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    LINE_INDENT_1,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Line indent 2 message options."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    LINE_INDENT_2,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Line indent 3 message options."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    LINE_INDENT_3,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Line before message options."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    LINE_BEFORE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indented 1 message options."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    INDENTED_1,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indented 2 message options."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    INDENTED_2,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indented 3 message options."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    INDENTED_3,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Not indexed message options."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    NOT_INDEXED,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indexed num message options."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    INDEXED_NUM,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indexed abc message options."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    INDEXED_ABC,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Auto return message options."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    AUTO_RETURN,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Line after message options."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    LINE_AFTER"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 39,
      "-": 16
    }
  },
  {
    "path": "src/main/java/messages/MessageWrapper.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Message wrapper."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class MessageWrapper {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String lineBase;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Message wrapper."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param length   the length"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param baseUnit the base unit"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public MessageWrapper(int length, String baseUnit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        setLineBase(length, baseUnit);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets line base."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param length   the length"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param baseUnit the base unit"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLineBase(int length, String baseUnit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        lineBase \u003d baseUnit.repeat(length);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Wrap string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input   the input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param options the options"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String wrap(String input, MessageOptions[] options) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return wrap(new String[]{input}, options);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Wrap string."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param inputs  the inputs"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param options the options"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public String wrap(String[] inputs, MessageOptions[] options) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isLineBefore \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageOptions.LINE_BEFORE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isLineAfter \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageOptions.LINE_AFTER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isAutoReturn \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageOptions.AUTO_RETURN);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        MessageOptions indexOption \u003d getIndexOption(options);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        int lineIndent \u003d getLineIndent(options);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        int textIndent \u003d getTextIndent(options);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isLineBefore) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            stringBuilder.append(buildLine(lineIndent, lineBase));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c inputs.length; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            stringBuilder.append(buildMessage("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    textIndent, index, inputs[i], isAutoReturn, indexOption));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isLineAfter) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            stringBuilder.append(buildLine(lineIndent, lineBase));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param stream  the stream"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param inputs  the inputs"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param options the options"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void show(PrintStream stream, String[] inputs, MessageOptions[] options) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stream.print(wrap(inputs, options));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param stream  the stream"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input   the input"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param options the options"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void show(PrintStream stream, String input, MessageOptions[] options) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stream.print(wrap(input, options));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private int getLineIndent(MessageOptions[] options) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_1)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDENT_1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_2)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDENT_2;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_3)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDENT_3;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return Constants.NO_INDENT;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    private int getTextIndent(MessageOptions[] options) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.INDENTED_1)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDENT_1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_2)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDENT_2;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_3)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return Constants.INDENT_3;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return Constants.NO_INDENT;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    private MessageOptions getIndexOption(MessageOptions[] options) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.INDEXED_NUM)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            return MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDEXED_ABC)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            return MessageOptions.INDEXED_ABC;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        return MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    private String buildLine(int lineIndent, String lineBase) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        return Constants.TAB.repeat(lineIndent) + lineBase + Constants.WIN_NEWLINE;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private String buildMessage(int indent, int index, String message,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                                boolean isAutoReturn, MessageOptions indexOption) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        String formattedMessage \u003d Constants.TAB.repeat(indent);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003e 0) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            if (indexOption \u003d\u003d MessageOptions.INDEXED_NUM) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                formattedMessage +\u003d index + Constants.DOT;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (indexOption \u003d\u003d MessageOptions.INDEXED_ABC) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                formattedMessage +\u003d (char) (index + Constants.LETTER_OFFSET) + Constants.DOT;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        formattedMessage +\u003d message;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isAutoReturn) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            formattedMessage +\u003d Constants.WIN_NEWLINE;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return formattedMessage;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 48,
      "-": 102
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import io.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import lexical.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import visualize.Cli;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import visualize.FancyCli;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final FancyCli fui; // fancy ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final Cli pui; //plain ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Data data;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Cli ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private boolean isFancy;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param isFancy   the is fancy"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param stream    the stream"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input     the input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param directory the directory"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param fileName  the file name"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Duke(boolean isFancy, PrintStream stream, InputStream input, String directory, String fileName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        fui \u003d new FancyCli(stream, input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        pui \u003d new Cli(stream, input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ui \u003d isFancy ? fui : pui;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.isFancy \u003d isFancy;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new Storage(directory, fileName, parser);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data \u003d storage.load();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showText(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data \u003d new Data();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void reattachUI(boolean isFancy, boolean isPlain) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (this.isFancy \u0026\u0026 isPlain) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ui \u003d pui;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            this.isFancy \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ui.setSwitched();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (!this.isFancy \u0026\u0026 isFancy) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ui \u003d fui;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            this.isFancy \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ui.setSwitched();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Run."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        ui.showReminder(data);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                String fullCommand \u003d ui.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                ArrayList\u003cCommand\u003e commands \u003d parser.parse(fullCommand); //array list of commands"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Command c : commands) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    c.execute(data);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    reattachUI(c.isFancy(), c.isPlain());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    ui.update(c.result, data);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isExit \u003d c.isBye();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    storage.saveTasks(data.tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                String message \u003d e.getMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                if (message \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    message \u003d Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                ui.update(message, data);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Execute JUnit test with output."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * @param command Command of user"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return Duke\u0027s response"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String testOutputSut(String command) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            String fullCommand \u003d command;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            ArrayList\u003cCommand\u003e commands \u003d parser.parse(fullCommand); //array list of commands"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            for (Command c : commands) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                c.execute(data);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                reattachUI(c.isFancy(), c.isPlain());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                ui.update(c.result, data);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                // uncomment when want to test for storage only"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                // storage.saveTasks(data.tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                return c.result;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String message \u003d e.getMessage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (message \u003d\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                message \u003d Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            ui.showText(message);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Execution command for JUnit tests."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param command Command of user"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return Duke\u0027s response"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String testExecuteSut(String command) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String fullCommand \u003d command;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            ArrayList\u003cCommand\u003e commands \u003d parser.parse(fullCommand); //array list of commands"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (Command c : commands) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                c.execute(data);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                return c.result;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            String message \u003d e.getMessage();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (message \u003d\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                message \u003d Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            ui.showText(message);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // Starts up using colored CLI on mac or linux, and pure text on windows (for now)."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // This is because ansi sequences needed to be enabled on programs started by cmd in recent windows versions."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // this is an intended behaviour brought by microsoft developers, so that programs called by cmd"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // do not inherit the appearance of cmd.exe (which by default supports ansi escape sequences)."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // when cmd runs \"java -jar xxx\", the javac.exe is started by cmd.exe"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // which does not enable the ansi mode by default."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // if the jar was started by something else such as gitbash or intelliJ shell, there is no such problem"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // thus, we need to find a way to reliable call the windows api to set such mode"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // However, no matter what mode it starts in, I have created switching commands."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // you can use \"fancy\" command to switch to fancyCli, and use \"plain\" command to switch to plain Cli."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        // [AFTER READING THE ABOVE TEXT, PLEASE UNCOMMENT THE FOLLOWING 2 LINES TO RUN THE PROGRAM]"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        //boolean isWindows \u003d System.getProperty(\"os.name\").toLowerCase().contains(\"win\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        //new Duke(!isWindows, System.out, System.in, Constants.PATH, Constants.FILENAME).run();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 5,
      "TomLBZ": 62,
      "chuhann": 2,
      "-": 50,
      "scjx123": 16,
      "adinata15": 30
    }
  },
  {
    "path": "src/main/java/visualize/Bitmap.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Bitmap."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Bitmap {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ColoredString[] map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Width."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public final int width;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Height."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public final int height;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Bitmap."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param width  the width"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param height the height"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Bitmap(int width, int height) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.width \u003d width;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        map \u003d new ColoredString[width * height];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c map.length; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            map[i] \u003d new ColoredString(Sprite.IGNORE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets pixel color."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x the x"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y the y"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param c the c"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPixelColor(int x, int y, Color c) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (x \u003c 0 || x \u003e\u003d width || y \u003c 0 || y \u003e\u003d height) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d x + y * width;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        map[index].setBackColor(c);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Flush."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param c the c"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void flush(Color c) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        for (ColoredString coloredString : map) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            coloredString.setString(Sprite.SPACE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            coloredString.setBackColor(c);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            coloredString.setForeColor(c);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets pixel text."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x         the x"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y         the y"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param character the character"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPixelText(int x, int y, String character) throws  IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        if (x \u003c 0 || x \u003e\u003d width || y \u003c 0 || y \u003e\u003d height) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d x + y * width;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        map[index].setString(character);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets pixel text color."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x the x"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y the y"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param c the c"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPixelTextColor(int x, int y, Color c) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        if (x \u003c 0 || x \u003e\u003d width || y \u003c 0 || y \u003e\u003d height) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d x + y * width;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        map[index].setForeColor(c);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isInRange(int x, int y, int width, int height) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isXInRange \u003d x \u003e\u003d 0 || x \u003c width;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isYInRange \u003d y \u003e\u003d 0 || y \u003c height;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        return isXInRange \u0026\u0026 isYInRange;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isAllInRange(ArrayList\u003cint[]\u003e points, int width, int height) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean output \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        if (points \u003d\u003d null || points.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int[] point: points) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            if (point.length !\u003d 2) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            output \u003d output \u0026\u0026 isInRange(point[0], point[1], width, height);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private void checkValidInput(int x1, int y1, int x2, int y2, String string)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cint[]\u003e points \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        points.add(new int[]{x1, y1});"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        points.add(new int[]{x2, y2});"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isAllInRange(points, width, height)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        if (string \u003d\u003d null) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Draw line."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x1         the x 1"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y1         the y 1"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x2         the x 2"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y2         the y 2"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param string     the string"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param backColor  the back color"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param foreColor  the fore color"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param isAutoFill the is auto fill"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws NullPointerException      the null pointer exception"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public void drawLine("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            int x1, int y1, int x2, int y2, String string,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            Color backColor, Color foreColor, boolean isAutoFill)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        checkValidInput(x1, y1, x2, y2, string);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        int dx;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        int dy;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dx \u003d x2 - x1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        dy \u003d y2 - y1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        int x;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        int y;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        int p;  //parameter p of Bresenham\u0027s Line Algorithm"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        x \u003d x1; // set x to initial value"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        y \u003d y1; // set y to initial value"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        p \u003d 2 * dy - dx;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        while (x \u003c\u003d x2) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            setAttributes(string, backColor, foreColor, index, x, y);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            if (p \u003e\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                y++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                p \u003d p + 2 * dy - 2 * dx;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                p \u003d p + 2 * dy;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            x++;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003d\u003d string.length() \u0026\u0026 isAutoFill) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                index -\u003d string.length();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAttributes(String string, Color backColor, Color foreColor, int index, int x, int y) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        String target \u003d index \u003c string.length() ? string.substring(index, index + 1) : String.valueOf(Constants.SPACE);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!target.equals(Sprite.IGNORE)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            if (foreColor !\u003d null) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                setPixelTextColor(x, y, foreColor);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            if (backColor !\u003d null) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                setPixelColor(x, y, backColor);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            setPixelText(x, y, target);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Draw sprite."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x1        the x 1"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y1        the y 1"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param scaleX    the scale x"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param scaleY    the scale y"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param sprite    the sprite"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param backColor the back color"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param foreColor the fore color"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @throws NullPointerException      the null pointer exception"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    public void drawSprite("
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            int x1, int y1, int scaleX, int scaleY, Sprite sprite,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            Color backColor, Color foreColor)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        int x2 \u003d x1 + sprite.width * scaleX - 1;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        int y2 \u003d y1 + sprite.height * scaleY - 1;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        checkValidInput(x1, y1, x2, y2, sprite.toString());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        if (scaleX \u003d\u003d 0) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        int spriteX \u003d 0;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        int spriteY \u003d 0;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int y \u003d y1; y \u003c\u003d y2; y++) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            if (y - y1 \u003d\u003d (spriteY + 1) * scaleY) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                spriteY++;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int x \u003d x1; x \u003c\u003d x2; x++) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                if (x - x1 \u003d\u003d (spriteX + 1) * scaleX) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                    spriteX++;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                int spriteIndex \u003d spriteX + sprite.width * spriteY;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                String strSprite \u003d sprite.toString();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                setAttributes(strSprite, backColor, foreColor, spriteIndex, x, y);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            spriteX \u003d 0;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get string."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    public String get() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder strBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c map.length; i++) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            strBuilder.append(map[i].get());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((i + 1) % width \u003d\u003d 0) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                strBuilder.append(\"\\r\\n\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        return strBuilder.toString();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 76,
      "-": 170
    }
  },
  {
    "path": "src/main/java/visualize/Cli.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import messages.MessageFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import messages.MessageWrapper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Cli."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Cli extends UI {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Msg format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    protected MessageFormat msgFormat;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Msg wrapper."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    protected MessageWrapper msgWrapper;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Cli."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param stream the stream"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input  the input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Cli(PrintStream stream, InputStream input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(stream, input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        msgFormat \u003d new MessageFormat(new MessageOptions[]{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageOptions.LINE_INDENT_1,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageOptions.LINE_BEFORE,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageOptions.INDENTED_2,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageOptions.AUTO_RETURN,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageOptions.LINE_AFTER"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        msgWrapper \u003d new MessageWrapper(Constants.LINE_REPETITION, Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(stream, Constants.WELCOME, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showText(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] lines \u003d input.split(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(stream, lines, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show list text."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input       the input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param indexOption the index option"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void showListText(String input, MessageOptions indexOption) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(Arrays.asList(input.split(Constants.WIN_NEWLINE)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String head \u003d lines.get(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        lines.remove(head);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat.removeMessageOption(MessageOptions.LINE_AFTER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(stream, head, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat.addMessageOption(MessageOptions.LINE_AFTER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat.removeMessageOption(MessageOptions.LINE_BEFORE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat.addMessageOption(indexOption);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] strings \u003d new String[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        strings \u003d lines.toArray(strings);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(stream, strings, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat.addMessageOption(MessageOptions.LINE_BEFORE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat.removeMessageOption(indexOption);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void update(String input, Data data) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (freshlySwitched) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String replay \u003d data.lastInput;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            MessageOptions replayOption \u003d data.lastIndexOption;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (replay \u003d\u003d null || replay.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showWelcome();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showListText(replay, replayOption);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            freshlySwitched \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showText(Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (input.contains(Constants.BMP_LIST_SWITCH)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                || input.contains(Constants.BMP_SEL_SWITCH)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (!data.lastInput.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showListText(data.lastInput, data.lastIndexOption);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showListText(input, data.indexOption);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.lastInput \u003d input;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.lastIndexOption \u003d data.indexOption;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.indexOption \u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 69,
      "-": 38
    }
  },
  {
    "path": "src/main/java/visualize/Color.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The enum Color."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public enum Color {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * White color."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    White(\"000000\", 0),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Maroon color."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    Maroon(\"800000\", 1),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Green color."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Green(\"008000\", 2),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Olive color."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    Olive(\"808000\", 3),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Navy color."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Navy(\"000080\", 4),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Purple color."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    Purple(\"800080\", 5),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Teal color."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    Teal(\"008080\", 6),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Silver color."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    Silver(\"c0c0c0\", 7),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey color."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey(\"808080\", 8),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Red color."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    Red(\"ff0000\", 9),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Lime color."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    Lime(\"00ff00\", 10),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow color."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow(\"ffff00\", 11),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Blue color."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    Blue(\"0000ff\", 12),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Fuchsia color."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    Fuchsia(\"ff00ff\", 13),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Aqua color."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    Aqua(\"00ffff\", 14),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Black color."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    Black(\"ffffff\", 15),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 1 color."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey1(\"000000\", 16),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Navy blue color."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    NavyBlue(\"00005f\", 17),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark blue color."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkBlue(\"000087\", 18),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Blue 1 color."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    Blue1(\"0000af\", 19),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Blue 2 color."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    Blue2(\"0000d7\", 20),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Blue 3 color."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    Blue3(\"0000ff\", 21),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark green color."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkGreen(\"005f00\", 22),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue color."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue(\"005f5f\", 23),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue 1 color."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue1(\"005f87\", 24),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue 2 color."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue2(\"005faf\", 25),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dodger blue color."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    DodgerBlue(\"005fd7\", 26),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dodger blue 1 color."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    DodgerBlue1(\"005fff\", 27),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Green 1 color."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    Green1(\"008700\", 28),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Spring green color."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    SpringGreen(\"00875f\", 29),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Turquoise color."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Turquoise(\"008787\", 30),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue 3 color."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue3(\"0087af\", 31),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue 4 color."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue4(\"0087d7\", 32),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dodger blue 2 color."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    DodgerBlue2(\"0087ff\", 33),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Green 2 color."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    Green2(\"00af00\", 34),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Spring green 1 color."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    SpringGreen1(\"00af5f\", 35),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark cyan color."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkCyan(\"00af87\", 36),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light sea green color."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSeaGreen(\"00afaf\", 37),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue 5 color."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue5(\"00afd7\", 38),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep sky blue 6 color."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepSkyBlue6(\"00afff\", 39),"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Green 3 color."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    Green3(\"00d700\", 40),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Spring green 2 color."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    SpringGreen2(\"00d75f\", 41),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Spring green 3 color."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    SpringGreen3(\"00d787\", 42),"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cyan color."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    Cyan(\"00d7af\", 43),"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark turquoise color."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkTurquoise(\"00d7d7\", 44),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Turquoise 2 color."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    Turquoise2(\"00d7ff\", 45),"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Green 4 color."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    Green4(\"00ff00\", 46),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Spring green 4 color."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    SpringGreen4(\"00ff5f\", 47),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Spring green 5 color."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    SpringGreen5(\"00ff87\", 48),"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium spring green color."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumSpringGreen(\"00ffaf\", 49),"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cyan 1 color."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    Cyan1(\"00ffd7\", 50),"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cyan 2 color."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    Cyan2(\"00ffff\", 51),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark red color."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkRed(\"5f0000\", 52),"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink color."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink(\"5f005f\", 53),"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Purple 1 color."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    Purple1(\"5f0087\", 54),"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Purple 2 color."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    Purple2(\"5f00af\", 55),"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Purple 3 color."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    Purple3(\"5f00d7\", 56),"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Blue violet color."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    BlueViolet(\"5f00ff\", 57),"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orange color."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    Orange(\"5f5f00\", 58),"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 2 color."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey2(\"5f5f5f\", 59),"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple color."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple(\"5f5f87\", 60),"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Slate blue color."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    SlateBlue(\"5f5faf\", 61),"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Slate blue 1 color."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    SlateBlue1(\"5f5fd7\", 62),"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Royal blue color."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    RoyalBlue(\"5f5fff\", 63),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Chartreuse color."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    Chartreuse(\"5f8700\", 64),"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green color."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen(\"5f875f\", 65),"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale turquoise color."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleTurquoise(\"5f8787\", 66),"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Steel blue color."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    SteelBlue(\"5f87af\", 67),"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Steel blue 1 color."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    SteelBlue1(\"5f87d7\", 68),"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cornflower blue color."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    CornflowerBlue(\"5f87ff\", 69),"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Chartreuse 1 color."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    Chartreuse1(\"5faf00\", 70),"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 1 color."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen1(\"5faf5f\", 71),"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cadet blue color."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    CadetBlue(\"5faf87\", 72),"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cadet blue 1 color."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    CadetBlue1(\"5fafaf\", 73),"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sky blue color."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    SkyBlue(\"5fafd7\", 74),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Steel blue 2 color."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    SteelBlue2(\"5fafff\", 75),"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Chartreuse 2 color."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    Chartreuse2(\"5fd700\", 76),"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale green color."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleGreen(\"5fd75f\", 77),"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sea green color."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    SeaGreen(\"5fd787\", 78),"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Aquamarine color."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    Aquamarine(\"5fd7af\", 79),"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium turquoise color."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumTurquoise(\"5fd7d7\", 80),"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Steel blue 3 color."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    SteelBlue3(\"5fd7ff\", 81),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Chartreuse 3 color."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    Chartreuse3(\"5fff00\", 82),"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sea green 1 color."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    SeaGreen1(\"5fff5f\", 83),"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sea green 2 color."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    SeaGreen2(\"5fff87\", 84),"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sea green 3 color."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    SeaGreen3(\"5fffaf\", 85),"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Aquamarine 1 color."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    Aquamarine1(\"5fffd7\", 86),"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark slate gray color."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSlateGray(\"5fffff\", 87),"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark red 1 color."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkRed1(\"870000\", 88),"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 1 color."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink1(\"87005f\", 89),"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark magenta color."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkMagenta(\"870087\", 90),"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark magenta 1 color."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkMagenta1(\"8700af\", 91),"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark violet color."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkViolet(\"8700d7\", 92),"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Purple 4 color."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    Purple4(\"8700ff\", 93),"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orange 1 color."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    Orange1(\"875f00\", 94),"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light pink color."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    LightPink(\"875f5f\", 95),"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Plum color."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    Plum(\"875f87\", 96),"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple 1 color."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple1(\"875faf\", 97),"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple 2 color."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple2(\"875fd7\", 98),"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Slate blue 2 color."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    SlateBlue2(\"875fff\", 99),"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow 1 color."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow1(\"878700\", 100),"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Wheat color."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    Wheat(\"87875f\", 101),"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 3 color."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey3(\"878787\", 102),"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light slate grey color."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSlateGrey(\"8787af\", 103),"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple 3 color."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple3(\"8787d7\", 104),"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light slate blue color."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSlateBlue(\"8787ff\", 105),"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow 2 color."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow2(\"87af00\", 106),"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark olive green 3 color."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOliveGreen3(\"87af5f\", 107),"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 2 color."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen2(\"87af87\", 108),"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light sky blue color."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSkyBlue(\"87afaf\", 109),"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light sky blue 1 color."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSkyBlue1(\"87afd7\", 110),"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sky blue 1 color."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    SkyBlue1(\"87afff\", 111),"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Chartreuse 4 color."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "    Chartreuse4(\"87d700\", 112),"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark olive green color."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOliveGreen(\"87d75f\", 113),"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale green 1 color."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleGreen1(\"87d787\", 114),"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 3 color."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen3(\"87d7af\", 115),"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark slate gray 1 color."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSlateGray1(\"87d7d7\", 116),"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sky blue 2 color."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "    SkyBlue2(\"87d7ff\", 117),"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Chartreuse 5 color."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    Chartreuse5(\"87ff00\", 118),"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light green color."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGreen(\"87ff5f\", 119),"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light green 1 color."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGreen1(\"87ff87\", 120),"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale green 2 color."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleGreen2(\"87ffaf\", 121),"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Aquamarine 2 color."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "    Aquamarine2(\"87ffd7\", 122),"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark slate gray 2 color."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSlateGray2(\"87ffff\", 123),"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Red 1 color."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "    Red1(\"af0000\", 124),"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 2 color."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink2(\"af005f\", 125),"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium violet red color."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumVioletRed(\"af0087\", 126),"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Magenta color."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    Magenta(\"af00af\", 127),"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark violet 1 color."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkViolet1(\"af00d7\", 128),"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Purple 5 color."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    Purple5(\"af00ff\", 129),"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark orange color."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOrange(\"af5f00\", 130),"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indian red color."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "    IndianRed(\"af5f5f\", 131),"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Hot pink color."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "    HotPink(\"af5f87\", 132),"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium orchid color."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumOrchid(\"af5faf\", 133),"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium orchid 1 color."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumOrchid1(\"af5fd7\", 134),"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple 4 color."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple4(\"af5fff\", 135),"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark goldenrod color."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkGoldenrod(\"af8700\", 136),"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light salmon color."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSalmon(\"af875f\", 137),"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Rosy brown color."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "    RosyBrown(\"af8787\", 138),"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 4 color."
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey4(\"af87af\", 139),"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple 5 color."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple5(\"af87d7\", 140),"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium purple 6 color."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumPurple6(\"af87ff\", 141),"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gold color."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "    Gold(\"afaf00\", 142),"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark khaki color."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkKhaki(\"afaf5f\", 143),"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Navajo white color."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "    NavajoWhite(\"afaf87\", 144),"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 5 color."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey5(\"afafaf\", 145),"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light steel blue color."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSteelBlue(\"afafd7\", 146),"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light steel blue 1 color."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSteelBlue1(\"afafff\", 147),"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow 3 color."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow3(\"afd700\", 148),"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark olive green 1 color."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOliveGreen1(\"afd75f\", 149),"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 4 color."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen4(\"afd787\", 150),"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 5 color."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen5(\"afd7af\", 151),"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light cyan color."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    LightCyan(\"afd7d7\", 152),"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light sky blue 2 color."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSkyBlue2(\"afd7ff\", 153),"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Green yellow color."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "    GreenYellow(\"afff00\", 154),"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark olive green 2 color."
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOliveGreen2(\"afff5f\", 155),"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale green 3 color."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleGreen3(\"afff87\", 156),"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 6 color."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen6(\"afffaf\", 157),"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 7 color."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen7(\"afffd7\", 158),"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale turquoise 1 color."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleTurquoise1(\"afffff\", 159),"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Red 2 color."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    Red2(\"d70000\", 160),"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 3 color."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink3(\"d7005f\", 161),"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 4 color."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink4(\"d70087\", 162),"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Magenta 1 color."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "    Magenta1(\"d700af\", 163),"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Magenta 2 color."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    Magenta2(\"d700d7\", 164),"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Magenta 3 color."
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "    Magenta3(\"d700ff\", 165),"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark orange 1 color."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOrange1(\"d75f00\", 166),"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indian red 1 color."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    IndianRed1(\"d75f5f\", 167),"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Hot pink 1 color."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    HotPink1(\"d75f87\", 168),"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Hot pink 2 color."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "    HotPink2(\"d75faf\", 169),"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orchid color."
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "    Orchid(\"d75fd7\", 170),"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium orchid 2 color."
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumOrchid2(\"d75fff\", 171),"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orange 2 color."
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "    Orange2(\"d78700\", 172),"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light salmon 1 color."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSalmon1(\"d7875f\", 173),"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light pink 1 color."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "    LightPink1(\"d78787\", 174),"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pink color."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "    Pink(\"d787af\", 175),"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Plum 1 color."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "    Plum1(\"d787d7\", 176),"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Violet color."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "    Violet(\"d787ff\", 177),"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gold 1 color."
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "    Gold1(\"d7af00\", 178),"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light goldenrod color."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGoldenrod(\"d7af5f\", 179),"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Tan color."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "    Tan(\"d7af87\", 180),"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Misty rose color."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "    MistyRose(\"d7afaf\", 181),"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Thistle color."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "    Thistle(\"d7afd7\", 182),"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Plum 2 color."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "    Plum2(\"d7afff\", 183),"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow 4 color."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow4(\"d7d700\", 184),"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Khaki color."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "    Khaki(\"d7d75f\", 185),"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light goldenrod 1 color."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGoldenrod1(\"d7d787\", 186),"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light yellow color."
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "    LightYellow(\"d7d7af\", 187),"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 6 color."
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey6(\"d7d7d7\", 188),"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light steel blue 2 color."
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSteelBlue2(\"d7d7ff\", 189),"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow 5 color."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow5(\"d7ff00\", 190),"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark olive green 4 color."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOliveGreen4(\"d7ff5f\", 191),"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark olive green 5 color."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOliveGreen5(\"d7ff87\", 192),"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark sea green 8 color."
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkSeaGreen8(\"d7ffaf\", 193),"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Honeydew color."
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "    Honeydew(\"d7ffd7\", 194),"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light cyan 1 color."
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "    LightCyan1(\"d7ffff\", 195),"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Red 3 color."
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "    Red3(\"ff0000\", 196),"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 5 color."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink5(\"ff005f\", 197),"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 6 color."
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink6(\"ff0087\", 198),"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Deep pink 7 color."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "    DeepPink7(\"ff00af\", 199),"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Magenta 4 color."
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "    Magenta4(\"ff00d7\", 200),"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Magenta 5 color."
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "    Magenta5(\"ff00ff\", 201),"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orange red color."
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "    OrangeRed(\"ff5f00\", 202),"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indian red 2 color."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "    IndianRed2(\"ff5f5f\", 203),"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Indian red 3 color."
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "    IndianRed3(\"ff5f87\", 204),"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Hot pink 3 color."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "    HotPink3(\"ff5faf\", 205),"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Hot pink 4 color."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "    HotPink4(\"ff5fd7\", 206),"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Medium orchid 3 color."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "    MediumOrchid3(\"ff5fff\", 207),"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Dark orange 2 color."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "    DarkOrange2(\"ff8700\", 208),"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Salmon color."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "    Salmon(\"ff875f\", 209),"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light coral color."
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "    LightCoral(\"ff8787\", 210),"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pale violet red color."
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "    PaleVioletRed(\"ff87af\", 211),"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orchid 1 color."
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "    Orchid1(\"ff87d7\", 212),"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orchid 2 color."
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "    Orchid2(\"ff87ff\", 213),"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Orange 3 color."
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "    Orange3(\"ffaf00\", 214),"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sandy brown color."
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "    SandyBrown(\"ffaf5f\", 215),"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light salmon 2 color."
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "    LightSalmon2(\"ffaf87\", 216),"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light pink 2 color."
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "    LightPink2(\"ffafaf\", 217),"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Pink 1 color."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "    Pink1(\"ffafd7\", 218),"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Plum 3 color."
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "    Plum3(\"ffafff\", 219),"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gold 2 color."
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "    Gold2(\"ffd700\", 220),"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light goldenrod 2 color."
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGoldenrod2(\"ffd75f\", 221),"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light goldenrod 3 color."
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGoldenrod3(\"ffd787\", 222),"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Navajo white 1 color."
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "    NavajoWhite1(\"ffd7af\", 223),"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Misty rose 1 color."
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "    MistyRose1(\"ffd7d7\", 224),"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Thistle 1 color."
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "    Thistle1(\"ffd7ff\", 225),"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Yellow 6 color."
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "    Yellow6(\"ffff00\", 226),"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Light goldenrod 4 color."
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "    LightGoldenrod4(\"ffff5f\", 227),"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Khaki 1 color."
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "    Khaki1(\"ffff87\", 228),"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Wheat 1 color."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "    Wheat1(\"ffffaf\", 229),"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Cornsilk color."
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "    Cornsilk(\"ffffd7\", 230),"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 100 color."
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey100(\"ffffff\", 231),"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 7 color."
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey7(\"080808\", 232),"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 8 color."
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey8(\"121212\", 233),"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 9 color."
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey9(\"1c1c1c\", 234),"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 10 color."
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey10(\"262626\", 235),"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 11 color."
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey11(\"303030\", 236),"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 12 color."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey12(\"3a3a3a\", 237),"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 13 color."
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey13(\"444444\", 238),"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 14 color."
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey14(\"4e4e4e\", 239),"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 15 color."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey15(\"585858\", 240),"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 16 color."
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey16(\"626262\", 241),"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 17 color."
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey17(\"6c6c6c\", 242),"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 18 color."
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey18(\"767676\", 243),"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 19 color."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey19(\"808080\", 244),"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 20 color."
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey20(\"8a8a8a\", 245),"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 21 color."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey21(\"949494\", 246),"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 22 color."
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey22(\"9e9e9e\", 247),"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 23 color."
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey23(\"a8a8a8\", 248),"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 24 color."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey24(\"b2b2b2\", 249),"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 25 color."
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey25(\"bcbcbc\", 250),"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 26 color."
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey26(\"c6c6c6\", 251),"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 27 color."
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey27(\"d0d0d0\", 252),"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 28 color."
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey28(\"dadada\", 253),"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 29 color."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey29(\"e4e4e4\", 254),"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Grey 30 color."
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "    Grey30(\"eeeeee\", 255);"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Red."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "    int red;"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Green."
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "    int green;"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Blue."
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "    int blue;"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Code."
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "    int code;"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Codename."
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "    String codename;"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "    Color(String colorCode, int code) {"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        if (colorCode.length() !\u003d 6) {"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "            red \u003d 0;"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            green \u003d 0;"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "            blue \u003d 0;"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            this.code \u003d 0;"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            codename \u003d \"000000\";"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                red \u003d Integer.parseInt(colorCode.substring(0, 1), 16);"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                green \u003d Integer.parseInt(colorCode.substring(2, 3), 16);"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                blue \u003d Integer.parseInt(colorCode.substring(4, 5), 16);"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                codename \u003d colorCode;"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                this.code \u003d code;"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                red \u003d 0;"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "                green \u003d 0;"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                blue \u003d 0;"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                this.code \u003d 0;"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "                codename \u003d \"000000\";"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets from code."
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param code the code"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the from code"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Color getFromCode(int code) {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Color c: Color.values()) {"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "            if (c.code \u003d\u003d code) {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        return Color.Black;"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 792,
      "-": 300
    }
  },
  {
    "path": "src/main/java/visualize/ColoredString.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Colored string."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ColoredString {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private String string;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private Color foreColor;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private Color backColor;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Colored string."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param string the string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public ColoredString(String string) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        setString(string);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!string.equals(Sprite.IGNORE)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            setForeColor(Color.White);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            setBackColor(Color.Black);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param string the string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setString(String string) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.string \u003d string;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets fore color."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param color the color"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setForeColor(Color color) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        foreColor \u003d color;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets back color."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param color the color"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setBackColor(Color color) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        backColor \u003d color;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Bold."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void bold() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        string \u003d \"\\u001b[1m\" + string;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Underline."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void underline() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        string \u003d \"\\u001b[4m\" + string;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Reversed color."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void reversedColor() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        string \u003d \"\\u001b[7m\" + string;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sub string colored string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param start the start"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param end   the end"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the colored string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public ColoredString subString(int start, int end) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        ColoredString output \u003d new ColoredString(string.substring(start, end));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        output.setForeColor(foreColor);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        output.setBackColor(backColor);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Get string."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public String get() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        String strForeColor \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String strBackColor \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if (foreColor !\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            strForeColor \u003d \"\\u001b[38;5;\" + foreColor.code + \"m\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        if (backColor !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            strBackColor \u003d \"\\u001b[48;5;\" + backColor.code + \"m\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        return strForeColor + strBackColor + string.replace(Sprite.IGNORE, Sprite.SPACE) + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return get();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 49,
      "-": 59
    }
  },
  {
    "path": "src/main/java/visualize/FancyCli.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Fancy cli."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class FancyCli extends Cli {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Bitmap bmpList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Bitmap bmpSel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Color listBackground \u003d Color.DarkBlue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Color selBackground \u003d Color.DarkMagenta;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Color foreground \u003d Color.White;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int maxX \u003d Constants.BITMAP_W - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int maxListY \u003d Constants.BITMAP_LIST_H - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int maxSelY \u003d Constants.BITMAP_SEL_H - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private int currentColor;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String[] listString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String[] selString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int listIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int selIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Fancy cli."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param stream the stream"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input  the input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public FancyCli(PrintStream stream, InputStream input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(stream, input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        currentColor \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.bmpList \u003d new Bitmap(Constants.BITMAP_W, Constants.BITMAP_LIST_H);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.bmpSel \u003d new Bitmap(Constants.BITMAP_W, Constants.BITMAP_SEL_H);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        listString \u003d new String[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        selString \u003d new String[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        listIndex \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        selIndex \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Initialize."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        initializeList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        initializeSel();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Initialize list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initializeList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.flush(listBackground);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        bmpList.drawLine(0, 0, maxX, 0, Constants.INIT_LIST,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                Color.DarkGreen, Color.White, false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Initialize list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param text the text"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void initializeList(String text) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        bmpList.flush(listBackground);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        bmpList.drawLine(0, 0, maxX, 0, text,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                Color.DarkGreen, Color.White, false);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Initialize sel."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initializeSel() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpSel.flush(selBackground);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        bmpSel.drawLine(0, 0, maxX, 0, Constants.INIT_SEL,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                Color.LightCyan, Color.Black, false);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Initialize sel."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param text the text"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void initializeSel(String text) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        bmpSel.flush(selBackground);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        bmpSel.drawLine(0, 0, maxX, 0, text,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                Color.LightCyan, Color.Black, false);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(0, Constants.BANNER, 1, 1, Sprite.W, foreground, foreground);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(6, Constants.BANNER, 1, 1, Sprite.e, foreground, foreground);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(12, Constants.BANNER, 1, 1, Sprite.l, foreground, foreground);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(18, Constants.BANNER, 1, 1, Sprite.c, foreground, foreground);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(24, Constants.BANNER, 1, 1, Sprite.o, foreground, foreground);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(30, Constants.BANNER, 1, 1, Sprite.m, foreground, foreground);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(36, Constants.BANNER, 1, 1, Sprite.e, foreground, foreground);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(45, Constants.BANNER, 1, 1, Sprite.t, foreground, foreground);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(51, Constants.BANNER, 1, 1, Sprite.o, foreground, foreground);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(60, Constants.BANNER, 1, 1, Sprite.D, foreground, foreground);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(66, Constants.BANNER, 1, 1, Sprite.o, foreground, foreground);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(72, Constants.BANNER, 1, 1, Sprite.m, foreground, foreground);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(78, Constants.BANNER, 1, 1, Sprite.S, foreground, foreground);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(84, Constants.BANNER, 1, 1, Sprite.u, foreground, foreground);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        bmpList.drawSprite(90, Constants.BANNER, 1, 1, Sprite.n, foreground, foreground);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        draw();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show block."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param x             the x"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param y             the y"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param width         the width"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param height        the height"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param rawInput      the raw input"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param isDisplayMode the is display mode"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void showBlock(int x, int y, int width, int height, String rawInput, boolean isDisplayMode) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        int startIndex \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        int deltaY \u003d 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        int myWidth \u003d isDisplayMode ? width : maxX - x;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        int myHeight \u003d isDisplayMode ? height : 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        int maxY \u003d isDisplayMode ? maxListY : maxSelY;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int maxLen \u003d Math.min(myWidth * myHeight, rawInput.length());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String input \u003d rawInput.substring(0, maxLen);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isBroken \u003d false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (startIndex + myWidth - 1 \u003c input.length()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            if (y + deltaY \u003e maxY) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isBroken \u003d true;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            String string \u003d input.substring(startIndex, startIndex + myWidth);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            startIndex +\u003d myWidth;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            fillCellLine(x, y + deltaY, myWidth, isDisplayMode, string);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            deltaY++;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            if (deltaY \u003e\u003d myHeight) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isBroken \u003d true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        if (y + deltaY \u003e maxY) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isBroken \u003d true;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!isBroken) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            String string \u003d input.substring(startIndex);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            fillCellLine(x, y + deltaY, myWidth, isDisplayMode, string);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisplayMode) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            currentColor++;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentColor \u003e 255) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                currentColor \u003d 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    private void fillCellLine(int x, int y, int width, boolean isDisplayMode, String string) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        Color backColor \u003d isDisplayMode ? Color.getFromCode(currentColor) : selBackground;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisplayMode) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            bmpList.drawLine(x, y, x + width - 1, y, string, backColor, foreground, false);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            bmpSel.drawLine(x, y, x + width - 1, y, string, backColor, foreground, false);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show text."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input         the input"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param isDisplayMode the is display mode"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param indexState    the index state"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showText(String input, boolean isDisplayMode, MessageOptions indexState) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] lines \u003d input.split(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (lines.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDisplayMode) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            initializeList(lines[0]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            initializeSel(lines[0]);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (indexState) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        case INDEXED_NUM:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (int i \u003d 1; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                lines[i] \u003d i + Constants.DOT + Constants.SPACE + lines[i];"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        case INDEXED_ABC:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (int i \u003d 1; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                lines[i] \u003d (i + Constants.LETTER_OFFSET) + Constants.DOT + Constants.SPACE + lines[i];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        int y \u003d Constants.BANNER;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        int x \u003d 0;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        int maxY \u003d isDisplayMode ? maxListY : maxSelY;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (int i \u003d 1; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String line \u003d lines[i];"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            showBlock(x, y, Constants.CELL_W, Constants.CELL_H, line, isDisplayMode);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isDisplayMode) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                x +\u003d Constants.CELL_W;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                if (x + Constants.CELL_W - 1 \u003e maxX) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                    x \u003d 0;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                    y +\u003d Constants.CELL_H;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                y++;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            if (y \u003e maxY) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showText(String input) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        showText(input, false, MessageOptions.NOT_INDEXED);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Update."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input         the input"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param data         the data"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void update(String input, Data data) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (freshlySwitched) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String replay \u003d data.lastInput;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            MessageOptions replayOption \u003d data.lastIndexOption;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (replay \u003d\u003d null || replay.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showWelcome();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                boolean displayMode \u003d replayOption !\u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                separatePages(replay, displayMode);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                fixIndex();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (displayMode) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    initializeSel();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    refreshList(data);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showText(getShownText(displayMode), displayMode, replayOption);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                draw();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            freshlySwitched \u003d false;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showText(Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (input.contains(Constants.BMP_LIST_SWITCH) || input.contains(Constants.BMP_SEL_SWITCH)) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            flipPage(input);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (!data.lastInput.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showText(getShownText(true), true, MessageOptions.INDEXED_NUM);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                showText(getShownText(false), false, MessageOptions.NOT_INDEXED);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            boolean displayMode \u003d data.indexOption !\u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (!displayMode) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                refreshList(data);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            separatePages(input, displayMode);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            fixIndex();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showText(getShownText(displayMode), displayMode, data.indexOption);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.lastInput \u003d input;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data.lastIndexOption \u003d data.indexOption;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        data.indexOption \u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        draw();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void refreshList(Data data) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (listString !\u003d null \u0026\u0026 listString.length \u003e 0) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder refreshBuilder \u003d new StringBuilder(listString[0].split(Constants.WIN_NEWLINE)[0]);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            refreshBuilder.append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Item item : data.target) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                refreshBuilder.append(item.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            separatePages(refreshBuilder.toString(), true);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            fixIndex();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showText(getShownText(true), true, MessageOptions.INDEXED_NUM);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            initializeList();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void flipPage(String input) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isList \u003d input.contains(Constants.BMP_LIST_SWITCH);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isSel \u003d input.contains(Constants.BMP_SEL_SWITCH);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String number \u003d input;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            number \u003d number.replace(Constants.BMP_LIST_SWITCH, Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isSel) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            number \u003d number.replace(Constants.BMP_SEL_SWITCH, Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int num \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        listIndex \u003d flippedNumber(listIndex, isList, num, listString.length);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        selIndex \u003d flippedNumber(selIndex, isSel, num, selString.length);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int flippedNumber(int currentNumber, boolean condition, int increment, int max) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int result \u003d currentNumber;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (condition \u0026\u0026 max \u003e 1) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result +\u003d increment;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (result \u003e max - 1) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result -\u003d max;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else if (result \u003c 0) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result +\u003d max;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void fixIndex() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (listString \u003d\u003d null || listString.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            listIndex \u003d 0;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (listIndex \u003e\u003d listString.length) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            listIndex \u003d listString.length - 1;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (selString \u003d\u003d null || selString.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            selIndex \u003d 0;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (selIndex \u003e\u003d selString.length) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            selIndex \u003d selString.length - 1;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Gets shown text."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param isDisplayMode the is display mode"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the shown text"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    String getShownText(boolean isDisplayMode) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isDisplayMode) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return listString[listIndex];"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return selString[selIndex];"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    private void draw() {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stream.print(bmpList.get());"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stream.print(bmpSel.get());"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void separatePages(String input, boolean isDisplayMode) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] lines \u003d input.split(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int numLines \u003d lines.length - 1;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isDisplayMode) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int cellNum \u003d (bmpList.width / Constants.CELL_W) * ((bmpList.height - 1) / Constants.CELL_H);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (numLines \u003c\u003d cellNum) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                listString \u003d new String[]{input};"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int pages \u003d (int) Math.ceil((double) numLines / (double) cellNum);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            listString \u003d groupStrings(lines, pages, cellNum);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int lineNum \u003d bmpSel.height - 1;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (numLines \u003c\u003d lineNum) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                selString \u003d new String[]{input};"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int pages \u003d (int) Math.ceil((double) numLines / (double) lineNum);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            selString \u003d groupStrings(lines, pages, lineNum);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String[] groupStrings(String[] strings, int groups, int groupLength) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder[] builders \u003d new StringBuilder[groups];"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String heading \u003d strings[0];"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (int i \u003d 0; i \u003c groups; i++) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String bracket \u003d Constants.SPACE + Constants.PARAM_LEFT + (i + 1) + Constants.PARAM_RIGHT;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builders[i] \u003d new StringBuilder(heading.replace(bracket, Constants.ZERO_LENGTH_STRING)).append("
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    bracket).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int currentGroup \u003d (i - 1) / groupLength;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builders[currentGroup].append(strings[i]).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] groupedStrings \u003d new String[groups];"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (int i \u003d 0; i \u003c groups; i++) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            groupedStrings[i] \u003d builders[i].toString();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return groupedStrings;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 259,
      "-": 141
    }
  },
  {
    "path": "src/main/java/visualize/Sprite.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The enum Sprite."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public enum Sprite {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Square sprite."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    SQUARE(\"+\",1,1),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Hollowsquare sprite."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    HOLLOWSQUARE(\"++++`++++\",3,3),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Zero sprite."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    ZERO(\"++++`++`++`++++\",3,5),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * One sprite."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    ONE(\"``+``+``+``+``+\",3,5),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Two sprite."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    TWO(\"++++`+`+`+``+++\",3,5),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Three sprite."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    THREE(\"+++``++++``++++\",3,5),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Four sprite."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    FOUR(\"+`++`++++``+``+\",3,5),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Five sprite."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    FIVE(\"++++``+++``++++\",3,5),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Six sprite."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    SIX(\"++++``++++`++++\",3,5),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Seven sprite."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    SEVEN(\"+++``+`+``+``+`\",3,5),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Eight sprite."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    EIGHT(\"++++`+++++`++++\",3,5),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Nine sprite."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    NINE(\"++++`++++``++++\",3,5),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * A sprite."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    A(\"``+```+`+`++++++```++```+\",5,5),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * B sprite."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    B(\"++++`+```+++++`+```+++++`\",5,5),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * C sprite."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    C(\"`+++`+```++````+```+`+++`\",5,5),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * D sprite."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    D(\"+++``+``+`+```++``+`+++``\",5,5),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * E sprite."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    E(\"++++++````++++++````+++++\",5,5),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * F sprite."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    F(\"++++++````++++++````+````\",5,5),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * G sprite."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    G(\"`+++`+````+``+++```+`+++`\",5,5),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * H sprite."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    H(\"+```++```+++++++```++```+\",5,5),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * sprite."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    I(\"`+++```+````+````+```+++`\",5,5),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * J sprite."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    J(\"`+++```+````+````+```++``\",5,5),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * K sprite."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    K(\"+```++``+`+++``+``+`+```+\",5,5),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * L sprite."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    L(\"+````+````+````+````+++++\",5,5),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * M sprite."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    M(\"+```+++`+++`+`++`+`++```+\",5,5),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * N sprite."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    N(\"+```+++``++`+`++``+++```+\",5,5),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * O sprite."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    O(\"`+++`+```++```++```+`+++`\",5,5),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * P sprite."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    P(\"++++`+```+++++`+````+````\",5,5),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Q sprite."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    Q(\"`+++`+```++`+`++``+``++`+\",5,5),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * R sprite."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    R(\"`+++`+```+++++`+``+`+```+\",5,5),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * S sprite."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    S(\"`+++++`````+++`````+++++`\",5,5),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * T sprite."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    T(\"+++++``+````+````+````+``\",5,5),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * U sprite."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    U(\"+```++```++```++```+`+++`\",5,5),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * V sprite."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    V(\"+```++```+`+`+``+`+```+``\",5,5),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * W sprite."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    W(\"+```++`+`++`+`+`+`+``+`+`\",5,5),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * X sprite."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    X(\"+```+`+`+```+```+`+`+```+\",5,5),"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Y sprite."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    Y(\"+```+`+`+```+````+````+``\",5,5),"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Z sprite."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    Z(\"++++++``+```+```+``++++++\",5,5),"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * A sprite."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    a(\"`+++`````+`+++++``++`++`+\",5,5),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * B sprite."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    b(\"++````+````+++``+``+`+++`\",5,5),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * C sprite."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    c(\"``````+++`+````+``+``++``\",5,5),"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * D sprite."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    d(\"```++```+``+++`+``+``++`+\",5,5),"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * E sprite."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    e(\"``````+++`+``++`++````+++\",5,5),"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * F sprite."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    f(\"```++``+```+++```+``++```\",5,5),"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * G sprite."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    g(\"`++``+``+``+++````+``++``\",5,5),"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * H sprite."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    h(\"```+```+````++``+``++``+`\",5,5),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * sprite."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    i(\"``+`````````+````+````++`\",5,5),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * J sprite."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    j(\"``+`````````+````+```++``\",5,5),"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * K sprite."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    k(\"``+````+++``+`+`+`+``+``+\",5,5),"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * L sprite."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    l(\"```+```+````+```+````++``\",5,5),"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * M sprite."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    m(\"``````+++`+`+`++`+`++`+`+\",5,5),"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * N sprite."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    n(\"`````+`++``+``++``+`+```+\",5,5),"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * O sprite."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    o(\"```````++``+``++``+``++``\",5,5),"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * P sprite."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    p(\"+`++``+``+`+++``+```+````\",5,5),"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Q sprite."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    q(\"`++``+``+``++```+```+++``\",5,5),"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * R sprite."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    r(\"`````+`++``+``+`+````+```\",5,5),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * S sprite."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    s(\"``+++`+`````+`````+`+++``\",5,5),"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * T sprite."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    t(\"``+``++++``+````+`````++`\",5,5),"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * U sprite."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    u(\"``````+``++``+`+``+``++`+\",5,5),"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * V sprite."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    v(\"`````+```+`+`+``+`+```+``\",5,5),"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * W sprite."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    w(\"`````+`+`++`+`++`+`+`+`+`\",5,5),"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * X sprite."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    x(\"`````++`++``+````+``++`++\",5,5),"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Y sprite."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    y(\"`+``+`+`+```++`+``+``++``\",5,5),"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Z sprite."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    z(\"`+++++``+```+```+``+++++`\",5,5);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant IGNORE."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String IGNORE \u003d \"`\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The constant SPACE."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String sprite;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Width."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    public int width;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Height."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    public int height;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    Sprite(String sprite, int width, int height) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sprite \u003d sprite;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        this.width \u003d width;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        return sprite;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 207,
      "-": 88
    }
  },
  {
    "path": "src/main/java/visualize/UI.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package visualize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import command.action.ReminderAction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import data.SingleModule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import data.Data;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " * The type Ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Stream."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected PrintStream stream;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected InputStream input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Freshly switched."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected boolean freshlySwitched;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * The Input getter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Scanner inputGetter;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Instantiates a new Ui."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param stream the stream"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input  the input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public UI(PrintStream stream, InputStream input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.stream \u003d stream;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        inputGetter \u003d new Scanner(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        freshlySwitched \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show welcome."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stream.print(Constants.WELCOME);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Show text."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showText(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stream.print(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Update."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @param tasks the tasks"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void update(String input, Data tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        showText(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Next line string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return inputGetter.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     * Sets switched."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void setSwitched() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        freshlySwitched \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * Shows Reminder."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     * @param data the data"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void showReminder(Data data) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        update(new ReminderAction().act(data), data);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 8,
      "TomLBZ": 64,
      "-": 27
    }
  },
  {
    "path": "src/test/java/command/action/CalculateCapActionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Test for CAP calculator."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "class CalculateCapActionTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private Duke duke \u003d new Duke(false, System.out, System.in, Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void act_customModuleInputs_calculatedCapValue() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String expectedOutput \u003d \"Here is your existing CAP: 3.67\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String testCustomInputsCommand \u003d \"cap -m cs1231 a MA1511 B+ Cs2040C d ma1508e a- ee1001x b+\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand), \"Calculate CAP custom input fails\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 21
    }
  },
  {
    "path": "src/test/java/command/action/DetailActionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class DetailActionTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private String[] testCommand \u003d {\"detail -mod CS2113\",\"detail -mod ST2334\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Duke duke \u003d new Duke(false, System.out, System.in, Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void containsModuleTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        assertTrue(duke.testOutputSut(testCommand[0]).contains(\"CS2113\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void doesNotContainModuleTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        assertEquals(Constants.DETAIL_HEAD + Constants.NOT_FOUND,duke.testOutputSut(testCommand[1]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 21,
      "adinata15": 2
    }
  },
  {
    "path": "src/test/java/command/action/FocusActionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " * Focus Action Test."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "class FocusActionTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private String[] testCommand \u003d {\"focus\", \"focus deadline\", \"focus todo\", \"focus event\", \"focus task\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                                    \"focus mod\", \"focus selected\", \"focus taken\", \"focus asdsds\"};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    void act_customFocusInput_testOutput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        Duke d \u003d new Duke(false, System.out, System.in, Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        assertAll(\"FocusActionTest\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[0]).equals(\"Now we are focusing on:\\r\\ntask\")),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[1]).equals(\"Now we are focusing on:\\r\\ndeadline\")),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[2]).equals(\"Now we are focusing on:\\r\\ntodo\")),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[3]).equals(\"Now we are focusing on:\\r\\nevent\")),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[4]).equals(\"Now we are focusing on:\\r\\ntask\")),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[5]).equals(\"Now we are focusing on:\\r\\nmod\")),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[6]).equals(\"Now we are focusing on:\\r\\nselected\")),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[7]).equals(\"Now we are focusing on:\\r\\ntaken\")),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[8]).equals(\"Invalid Command! Please check the syntax.\\r\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    + \"focus    OR    focus [deadline / todo / event / task / mod / selected / taken]\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 16,
      "TomLBZ": 2,
      "chuhann": 6,
      "adinata15": 9
    }
  },
  {
    "path": "src/test/java/command/action/McActionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " * Module Credits Test."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class McActionTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private String[] testCommand \u003d {\"mc\", \"mc -p\", \"mc -d\", \"mc -p -d\"};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void act_moduleCommandsInputs_suitableMcDisplayed() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Duke d \u003d new Duke(false, System.out, System.in, Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        assertAll(\"McActionTest\", () -\u003e assertTrue(d.testOutputSut(testCommand[0]).contains(\"619\")),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[1]).contains(\"619\")),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[2]).contains(\"12\")),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[2]).contains(\"12\")),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            () -\u003e assertTrue(d.testOutputSut(testCommand[2]).contains(\"12\"))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 3,
      "scjx123": 16,
      "adinata15": 9
    }
  },
  {
    "path": "src/test/java/command/action/TaskActionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//import constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//import seedu.duke.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "///**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "// * Tests for various task actions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "// */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//class TaskActionTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    private Duke duke \u003d new Duke(false, System.out, System.in, Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actClear_normalCase_clearResponseMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Nice! I\u0027ve cleared everything in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"clear\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"McActionTest\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand), \"Clear fails\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actDeadline_randomByTime_customTimeDeadline() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[D][X] watch powerRangers episode 2 (by: TODAY!!)\\r\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"deadline watch powerRangers episode 2 -by TODAY!!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Deadline random time\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                \"Deadline custom time inputs fails\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actDeadline_dateTimeFormat_formattedTimeDeadline() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[D][X] watch powerRangers episode 3 (by: Feb 23 2022 09:00)\\r\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"deadline watch powerRangers episode 3 /by 2022-02-23 09:00\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Deadline date time\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                \"Deadline format time inputs fails\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actTodo_normalTodo_todoRespondMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[T][X] finish CS2113 Project!\\r\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"todo finish CS2113 Project!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Todo\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                \"Todo normal inputs fails\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actEvent_randomAtTime_customTimeDeadline() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[E][X] watch Dora The Explorer episode 2 (at: your Free Time :))\\r\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"event watch Dora The Explorer episode 2 -at your Free Time :)\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Event random time\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                \"Event custom time inputs fails\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actEvent_dateTimeFormat_formattedTimeDeadline() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\r\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[E][X] watch Dora The Explorer episode 3 (at: Feb 23 2022 00:00)\\r\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"event watch Dora The Explorer episode 3 /at 2022-02-23\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Event custom time\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                \"Event format time inputs fails\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actDone_indexInList_doneResponseMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"deadline watch Spongebob roundpants s3 /by 22-01-2001 12:00\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"todo eat banana while watching Minions s4\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"event Tinder meetingg!! /at THE END OF TIME TT\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Nice! I\u0027ve marked this task as done:\\r\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[D][V] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"done 1\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Mark done\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                \"Mark done normal fails\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actList_filledList_listResponseMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"deadline watch Spongebob roundpants s3 /by 22-01-2001 12:00\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"todo eat banana while watching Minions s4\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"event Tinder meetingg!! /at THE END OF TIME TT\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Here is the list of tasks:\\r\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[D][X] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)\\r\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[T][X] eat banana while watching Minions s4\\r\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[E][X] Tinder meetingg!! (at: THE END OF TIME TT)\\r\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"list\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"List normal tasks\","
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand), \"List normal tasks fails\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    public void actUndone_indexInList_undoneResponseMessage() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"deadline watch Spongebob roundpants s3 /by 22-01-2001 12:00\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"todo eat banana while watching Minions s4\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"event Tinder meetingg!! /at THE END OF TIME TT\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        duke.testExecuteSut(\"done 1\");//mark first item as done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String expectedOutput \u003d \"Nice! I\u0027ve marked this task as undone:\\r\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            + \"[D][X] watch Spongebob roundpants s3 (by: Jan 22 2001 12:00)\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        String testCustomInputsCommand \u003d \"undone 1\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        assertAll(\"Mark undone\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//            () -\u003e assertEquals(expectedOutput, duke.testOutputSut(testCustomInputsCommand),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//                  \"Mark undone normal fails\")"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 130
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "bye"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 2,
      "-": 1
    }
  }
]
