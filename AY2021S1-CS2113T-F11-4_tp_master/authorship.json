[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"# SCRUMptious"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"Welcome to SCRUMptious, this is a command-line project management software, designed for project managers who adopt the SCRUM methodology."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"1. **Import the project _as a Gradle project_**, as described"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":" [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).  "},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/com/scrumptious/Scrumptious.java` file, right-click it, and choose `Run Scrumptious.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"    \u003e Task :compileJava UP-TO-DATE"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"    \u003e Task :processResources UP-TO-DATE"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"    \u003e Task :classes UP-TO-DATE"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    \u003e Task :Scrumptious.main()"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"       _____  _____ _____  _    _ __  __       _   _  "},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"      / ____|/ ____|  __ \\| |  | |  \\/  |     | | (_) "},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"     | (___ | |    | |__) | |  | | \\  / |_ __ | |_ _  ___  _   _ ___"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"      \\___ \\| |    |  _  /| |  | | |\\/| | \u0027_ \\| __| |/ _ \\| | | / __|"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"      ____) | |____| | \\ \\| |__| | |  | | |_) | |_| | (_) | |_| \\__ \\ "},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"     |_____/ \\_____|_|  \\_\\\\____/|_|  |_| .__/ \\__|_|\\___/ \\__,_|___/ "},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"                                        | |"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"                                        |_|"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"    WELCOME TO SCRUMPTIOUS"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"    command\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"   Type any command and press enter to execute the command. You can start by typing `help` first to see what commands are there, or you can refer to our user guide [here](https://ay2021s1-cs2113t-f11-4.github.io/tp/UserGuide.html)."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":36,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Testing"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"### I/O redirection tests"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"* A skeleton JUnit test (`src/test/com/scrumptious/ScrumptiousTest.java`) is provided with this project template. "},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"* Other JUnit tests can be found in the same packages and can be run by **right clicking it**, then select `Run XYZTest` (where XYZ refers to the respective class name, e.g. `Project`)."},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"* You can also run all the tests at once by running the gradle task through **Intellij IDE** or **CLI**  "},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"  * GUI  "},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"    1. Open the gradle window.  "},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"    ![Gradle Window](docs/image/readme/select_gradle.png)  "},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"    1. Expand `tp \u003e Tasks \u003e verification`.  "},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"    ![Gradle Window](docs/image/readme/select_test.png)  "},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"      "},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"    1. Double click `test`.  "},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"  * CLI  "},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"    1. Type `./gradew clean test` and press enter.  "},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"* A default CheckStyle rule configuration is provided in this project."},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"* You can run the CheckStyle by clicking `checkstyleMain` or `checkstyleMain`."},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"  * GUI  "},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"      1. Open the gradle window.  "},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"      ![Gradle Window](docs/image/readme/select_gradle.png)  "},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"      "},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"      1. Expand `tp\u003eTasks\u003everification`.  "},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"      ![Gradle Window](docs/image/readme/select_checkstyle.png)  "},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"      "},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"      1. Double click `test`.  "},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"    * CLI  "},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"      1. Type `./gradew clean test` and press enter.  "},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"      "},{"lineNumber":77,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":88,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab."},{"lineNumber":91,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section."},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`."},{"lineNumber":93,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation."}],"authorContributionMap":{"keke101":49,"-":44}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"    compile \u0027com.github.cliftonlabs:json-simple:3.1.1\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"    mainClassName \u003d \"com.scrumptious.Scrumptious\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":"    archiveBaseName \u003d \"scrumptious\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"    enableAssertions \u003d true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"keke101":3,"chocomango":1,"-":43}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Chan Wei Ling | [Github](https://github.com/chocomango) | [Portfolio](team/chocomango.md)"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"![Ho Ming Jun](image/aboutus/MingJun.png) | Ho Ming Jun | [Github](https://github.com/homingjun) | [Portfolio](team/homingjun.md)"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"![](image/aboutus/keke101.png) | Wong Zhen Wei | [Github](https://github.com/keke101) | [Portfolio](team/keke101.md)"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"![Gunit Mittal](image/aboutus/gmit22.jpg) | Gunit Mittal | [Github](https://github.com/gmit22) | [Portfolio](team/gmit22.md)"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Zhao Haoxiang | [Github](https://github.com/e0426051) |[Portfolio](team/e0426051.md)"}],"authorContributionMap":{"homingjun":1,"gmit22":1,"keke101":3,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"## Table of Contents"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"1. [Introduction](#introduction)\u003cbr\u003e"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;1.1. [Background](#background)\u003cbr\u003e"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;1.2. [Purpose](#purpose)\u003cbr\u003e"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;1.3. [Scope](#scope)\u003cbr\u003e"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"1. [Getting Started](#getting-started)\u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;2.1. [Prerequisites](#prerequisites)\u003cbr\u003e"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;2.2. [Setting Up](#setting-up)\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;2.3. [Running the Program](#running-the-program)\u003cbr\u003e"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"1. [Design](#design)\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;3.1. [Architecture](#architecture)\u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;3.2. [UI Component](#ui-component)\u003cbr\u003e"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;3.3. [Logic Component](#logic-component)\u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;3.4. [Model Component](#model-component)\u003cbr\u003e"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;3.5. [Storage Component](#storage-component)\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"1. [Implementation](#implementation) \u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;4.1. [Project](#project)\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.1.1. [Create Project](#create-project)\u003cbr\u003e"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.1.2. [List Project](#list-project)\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.1.3. [Select Project](#select-project)\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.1.4. [View Project](#view-project)\u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;4.2. [Task](#task)\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2.1. [Add Task](#add-task)\u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2.2. [View Task](#view-task)\u003cbr\u003e"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2.3. [Delete Task](#delete-task)\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2.4. [Change Task Priority](#change-task-priority)\u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2.5. [Mark Task as Complete](#mark-task-as-complete)\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2.6. [View Task by Descending Priority](#view-task-by-descending-priority)\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;4.3. [Sprint](#sprint)\u003cbr\u003e"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3.1. [Create Sprint](#create-sprint)\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3.2. [View Sprint](#view-sprint)\u003cbr\u003e"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3.3. [Add Task to Sprint](#add-task-to-sprint)\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3.4. [Remove Task from Sprint](#remove-task-from-sprint)\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3.5. [Allocate Sprint Tasks to Members](#allocate-sprint-tasks-to-members)        \u003cbr\u003e"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;4.4. [Storage](#storage)\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.1. [Location](#location)\u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.2. [Loading Data](#loading-data)\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.2.1. [Converting and Mapping of JSON to Objects](#converting-and-mapping-of-json-to-objects)\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.3. [Saving Data](#saving-data)\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.3.1. [When the Program Exits](#when-the-program-exits)\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.3.2. [Changes Made to the Data](#changes-made-to-the-data)\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4.3.3. [Serialising Objects to JSON](#serialising-objects-to-json)\u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"homingjun"},"content":"1. [Appendix: Requirements](#appendix-requirements)\u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;5.1. [Target User Profile](#target-user-profile)\u003cbr\u003e"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;5.2. [Value Proposition](#value-proposition)\u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;5.3. [User Stories](#user-stories)\u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;5.4. [Non-Functional Requirements](#non-functional-requirements)\u003cbr\u003e"},{"lineNumber":50,"author":{"gitId":"homingjun"},"content":"\u0026nbsp;\u0026nbsp;5.5. [Glossary](#glossary)\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":"1. [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)\u003cbr\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"homingjun"},"content":"## 1. \u003ca id\u003d\"introduction\"\u003eIntroduction\u003c/a\u003e"},{"lineNumber":54,"author":{"gitId":"homingjun"},"content":"### 1.1. \u003ca id\u003d\"background\"\u003eBackground\u003c/a\u003e"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"SCRUMptious is a Java-based command line interface application for you to efficiently manage the development of a project. Leveraging the robust SCRUM/Agile framework, it allows you to delegate tasks to your team members and organize project requirements with ease. As a bonus, if you are a keyboard warrior, you can reach peak efficiency using SCRUMptious to manage your projects."},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"homingjun"},"content":"### 1.2. \u003ca id\u003d\"purpose\"\u003ePurpose\u003c/a\u003e"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"This guide illustrates the general architecture, and software design of SCRUMptious."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"homingjun"},"content":"### 1.3. \u003ca id\u003d\"scope\"\u003eScope\u003c/a\u003e"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"This guide is geared towards developers who wish to enhance or create their own version of SCRUMptious. As such, it contains important information regarding the software architecture and design considerations of SCRUMptious."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"homingjun"},"content":"## 2. \u003ca id\u003d\"getting-started\"\u003eGetting Started\u003c/a\u003e"},{"lineNumber":64,"author":{"gitId":"homingjun"},"content":"### 2.1. \u003ca id\u003d\"prerequisites\"\u003ePrerequisites\u003c/a\u003e"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"1. JDK 11."},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"1. IntelliJ IDEA."},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"homingjun"},"content":"### 2.2. \u003ca id\u003d\"setting-up\"\u003eSetting Up\u003c/a\u003e"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"1. Use a Git tool to fork this repository, or download the .zip file from GitHub and extract the contents into a new folder."},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"1. Right-Click on the folder and select “Open folder as Intellij IDEA Community Edition Project”."},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"1. Ensure JDK 11 is selected for Gradle, by navigating to Configure \u003e Structure for New Projects \u003e Project Settings \u003e Project \u003e Project SDK."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"homingjun"},"content":"### 2.3. \u003ca id\u003d\"running-the-program\"\u003eRunning the Program\u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"This program can be run once it is compiled. If you have built its artifacts (.jar) file, you may run it using java -jar \u003cfilename.jar\u003e on your command line."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"homingjun"},"content":"## 3. \u003ca id\u003d\"design\"\u003eDesign\u003c/a\u003e"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"This section seeks to explain the high-level design of the application. Given below is a quick overview of each component and the explanation of the design architecture in greater detail."},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":"SCRUMptious is the main class of the application, and handles the initializing and execution of the appropriate classes."},{"lineNumber":79,"author":{"gitId":"homingjun"},"content":"### 3.1. \u003ca id\u003d\"architecture\"\u003eArchitecture\u003c/a\u003e"},{"lineNumber":80,"author":{"gitId":"homingjun"},"content":"![Figure 3.1: Architecture Diagram](./image/developerguide/architecturediagram.png \"Architecture Diagram UML\")  "},{"lineNumber":81,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":82,"author":{"gitId":"homingjun"},"content":"_Figure 3.1: Architecture Diagram_  "},{"lineNumber":83,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":"The **Architecture Diagram** shown above describes the high level association operations of the application. "},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"A quick overview of the components is as follows:"},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"`Main` is single-class component of `SCRUMptious`. It is responsible for:"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"1. At app launch: Initializes the components in the correct sequence(Storage, UI, Parser), and links them together where appropriate."},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"1. At program exit: Invokes Storage component to save all unsaved data."},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"The other packages are described below: "},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":"1. `UI` : The user interface of the app, reads user input and is visible to the user."},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":"1. `Parser Manager` : The module that reads user inputs, and creates a suitable parser based on the command to make "},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":" sense of user input. Respective parser then tells the Command module what to execute."},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"1. `ProjectManager` : Manages and stores all the projects added by the user, keeps track of selected project.    "},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":"1. `SprintManager` : Stores all sprints associated with a project."},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":"1. `TaskManager` : Stores all tasks in backlog associated with a project."},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"1. `ProjectMembers` : Stores all team-members associated to a project. "},{"lineNumber":99,"author":{"gitId":"gmit22"},"content":"1. `Parser` : Creates a suitable parser, based on the command to make sense of the user input. Respective parser then"},{"lineNumber":100,"author":{"gitId":"gmit22"},"content":" make use the information and call respective commands. "},{"lineNumber":101,"author":{"gitId":"gmit22"},"content":" "},{"lineNumber":102,"author":{"gitId":"gmit22"},"content":"Each of the modules listed above are a collection of constituent classes, with each handling specialized tasks in-line with the SLAP principle."},{"lineNumber":103,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":104,"author":{"gitId":"homingjun"},"content":"### 3.2. \u003ca id\u003d\"ui-component\"\u003eUI Component\u003c/a\u003e"},{"lineNumber":105,"author":{"gitId":"homingjun"},"content":"![Figure 3.2: Simplified class diagram for UI Component](./image/developerguide/UI.png \"User Interface\")  "},{"lineNumber":106,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":107,"author":{"gitId":"homingjun"},"content":"_Figure 3.2: Simplified class diagram for UI Component_"},{"lineNumber":108,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":109,"author":{"gitId":"e0426051"},"content":"The `UI` component contains the `Ui` and a few subclasses to print different types of messages."},{"lineNumber":110,"author":{"gitId":"e0426051"},"content":"The `Ui` consist of:  "},{"lineNumber":111,"author":{"gitId":"e0426051"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 1. `printWelcomeScreen()`\u003cbr\u003e"},{"lineNumber":112,"author":{"gitId":"e0426051"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 2. `getUserCommand()`\u003cbr\u003e"},{"lineNumber":113,"author":{"gitId":"e0426051"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 3. `showToUser()`\u003cbr\u003e"},{"lineNumber":114,"author":{"gitId":"e0426051"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 4. `showToUserLn()`\u003cbr\u003e"},{"lineNumber":115,"author":{"gitId":"e0426051"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 5. `showError()`\u003cbr\u003e"},{"lineNumber":116,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":117,"author":{"gitId":"e0426051"},"content":"The subclasses are called directly by other functions. For example, if `TaskCommand` wants to show an"},{"lineNumber":118,"author":{"gitId":"e0426051"},"content":"error message, it will call `Ui.showError(\u003cerror message\u003e)` directly."},{"lineNumber":119,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":120,"author":{"gitId":"homingjun"},"content":"### 3.3. \u003ca id\u003d\"logic-component\"\u003eLogic Component\u003c/a\u003e"},{"lineNumber":121,"author":{"gitId":"homingjun"},"content":"The `Logic` component contains the `ParserManager` and its subclasses, and the `Command` class and its subclasses, which mainly handles the commands input by the user. "},{"lineNumber":122,"author":{"gitId":"homingjun"},"content":"![Figure 3.3.1: Simplified class diagram for Logic Component](./image/developerguide/parserManagerClassDiagram.png)"},{"lineNumber":123,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":124,"author":{"gitId":"homingjun"},"content":"_Figure 3.3.1: Simplified class diagram for Logic Component_"},{"lineNumber":125,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":126,"author":{"gitId":"homingjun"},"content":"When a user types a command, `SCRUMptious` calls the `ParserManager`. The `ParserManager` then parses commands from the user. Subsequently, "},{"lineNumber":127,"author":{"gitId":"homingjun"},"content":"the `ParserManager` passes the commands on to the respective exceptions parsers which inherit from the `ExceptionsParser` interface. "},{"lineNumber":128,"author":{"gitId":"homingjun"},"content":"The exceptions parsers consist of:  "},{"lineNumber":129,"author":{"gitId":"homingjun"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 1. `ProjectParser`\u003cbr\u003e"},{"lineNumber":130,"author":{"gitId":"homingjun"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 2. `MemberParser`\u003cbr\u003e"},{"lineNumber":131,"author":{"gitId":"homingjun"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 3. `TaskParser`\u003cbr\u003e"},{"lineNumber":132,"author":{"gitId":"homingjun"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 4. `SprintParser`\u003cbr\u003e"},{"lineNumber":133,"author":{"gitId":"homingjun"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 5. `HelpParser`\u003cbr\u003e"},{"lineNumber":134,"author":{"gitId":"homingjun"},"content":"\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; 6. `StorageParser`\u003cbr\u003e"},{"lineNumber":135,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":136,"author":{"gitId":"homingjun"},"content":"1. The `ProjectParser` validates the parameters of the command. If the command is valid, it returns the respective `XYZProjectCommand` to the `ParserManager`."},{"lineNumber":137,"author":{"gitId":"homingjun"},"content":"If the command is invalid, the `ProjectParser` returns an appropriate warning message to the user.  "},{"lineNumber":138,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":139,"author":{"gitId":"homingjun"},"content":"1. The `MemberParser` validates the parameters of the command. If the command is valid, it returns the respective `XYZMemberCommand` to the `ParserManager`."},{"lineNumber":140,"author":{"gitId":"homingjun"},"content":"If the command is invalid, the `TaskParser` returns an appropriate warning message to the user.  "},{"lineNumber":141,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":142,"author":{"gitId":"homingjun"},"content":"1. The `TaskParser` validates the parameters of the command. If the command is valid, it returns the respective `XYZTaskCommand` to the `ParserManager`."},{"lineNumber":143,"author":{"gitId":"homingjun"},"content":"If the command is invalid, the `TaskParser` returns an appropriate warning message to the user.  "},{"lineNumber":144,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":145,"author":{"gitId":"homingjun"},"content":"1. The `SprintParser` validates the parameters of the command. If the command is valid, it returns the respective `XYZSprintCommand` to the `ParserManager`."},{"lineNumber":146,"author":{"gitId":"homingjun"},"content":"If the command is invalid, the `SprintParser` returns an appropriate warning message to the user.  "},{"lineNumber":147,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":148,"author":{"gitId":"homingjun"},"content":"1. The `HelpParser` validates the parameters of the command. If the command is valid, it returns the respective `XYZHelpCommand` to the `ParserManager`."},{"lineNumber":149,"author":{"gitId":"homingjun"},"content":"If the command is invalid, the `HelpParser` returns an appropriate warning message to the user."},{"lineNumber":150,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":151,"author":{"gitId":"homingjun"},"content":"1. The `StorageParser` validates the parameters of the command. If the command is valid, it returns the respective `ClearStorageCommand` to the `ParserManager`."},{"lineNumber":152,"author":{"gitId":"homingjun"},"content":"If the command is invalid, the `StorageParser` returns an appropriate warning message to the user."},{"lineNumber":153,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":154,"author":{"gitId":"homingjun"},"content":"![Figure 3.3.2: Simplified class diagram for Logic Component](./image/developerguide/commandClassDiagram.png)"},{"lineNumber":155,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":156,"author":{"gitId":"homingjun"},"content":"_Figure 3.3.2: Simplified class diagram for Logic Component_"},{"lineNumber":157,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":158,"author":{"gitId":"homingjun"},"content":"The subcommand classes `XYZHelpCommand`, `XYZProjectCommand`, `XYZMemberCommand`, `XYZTaskCommand`, `XYZSprintCommand`, `ClearStorageCommand` all inherit from an abstract `Command` class, "},{"lineNumber":159,"author":{"gitId":"homingjun"},"content":"which has an execute function and its respective constructors."},{"lineNumber":160,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":161,"author":{"gitId":"homingjun"},"content":"The `ParserManager` then returns the command back to `SCRUMptious`, which then executes the command."},{"lineNumber":162,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":163,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":164,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":165,"author":{"gitId":"homingjun"},"content":"### 3.4. \u003ca id\u003d\"model-component\"\u003eModel Component\u003c/a\u003e"},{"lineNumber":166,"author":{"gitId":"homingjun"},"content":"![Figure 3.4: Simplified class diagram for Model Component](./image/developerguide/modelcomponent.png \"Storage Component UML\") "},{"lineNumber":167,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":168,"author":{"gitId":"homingjun"},"content":"_Figure 3.4: Simplified class diagram for Model Component_"},{"lineNumber":169,"author":{"gitId":"homingjun"},"content":" "},{"lineNumber":170,"author":{"gitId":"keke101"},"content":"[Model Package](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/model)  "},{"lineNumber":171,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":172,"author":{"gitId":"chocomango"},"content":"The Model package defines all the object classes that are used by SCRUMptious and this section will explain how these objects interact with other components and each other."},{"lineNumber":173,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":174,"author":{"gitId":"homingjun"},"content":"#### Initialisation\u003c/a\u003e"},{"lineNumber":175,"author":{"gitId":"chocomango"},"content":"* Upon starting the program, SCRUMptious will initialise one instance of `ProjectManager` which will be used to facilitate all the operation in the program."},{"lineNumber":176,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":177,"author":{"gitId":"homingjun"},"content":"#### Operation - Command Execution\u003c/a\u003e"},{"lineNumber":178,"author":{"gitId":"chocomango"},"content":"When a `Command` from the [Logic component](#logic-component) is executed, it will work on the same `ProjectManager` initialised previously and will branch down to the necessary packages as required."},{"lineNumber":179,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":180,"author":{"gitId":"homingjun"},"content":"##### Project Operations\u003c/a\u003e"},{"lineNumber":181,"author":{"gitId":"chocomango"},"content":"* `ProjectManager` facilitate the management of multiple `Project` instances."},{"lineNumber":182,"author":{"gitId":"chocomango"},"content":"    * Creation of `Project` adds an entry to `ProjectManager`."},{"lineNumber":183,"author":{"gitId":"chocomango"},"content":"    * Deletion of `Project` removes an entry from `ProjectManager`."},{"lineNumber":184,"author":{"gitId":"chocomango"},"content":"* `Project` contain necessary information about the project such as:"},{"lineNumber":185,"author":{"gitId":"chocomango"},"content":"    * Project ID"},{"lineNumber":186,"author":{"gitId":"chocomango"},"content":"    * Project Title"},{"lineNumber":187,"author":{"gitId":"chocomango"},"content":"    * Project Description"},{"lineNumber":188,"author":{"gitId":"chocomango"},"content":"    * Project Duration"},{"lineNumber":189,"author":{"gitId":"chocomango"},"content":"    * Sprint Length"},{"lineNumber":190,"author":{"gitId":"chocomango"},"content":"    * Project Start Date"},{"lineNumber":191,"author":{"gitId":"chocomango"},"content":"    * Project End Date"},{"lineNumber":192,"author":{"gitId":"chocomango"},"content":"* `Project` hold three additional object that are initialise upon its creation:"},{"lineNumber":193,"author":{"gitId":"chocomango"},"content":"    * `ProjectMembers` to facilitate the management of `Members` that are working on the `Project`."},{"lineNumber":194,"author":{"gitId":"chocomango"},"content":"    * `SprintManager` to facilitate the management of `Sprint` iterations that belongs to the `Project`."},{"lineNumber":195,"author":{"gitId":"chocomango"},"content":"    * `TaskManager` to facilitate the management of `Tasks` that are broken down from the `Project`."},{"lineNumber":196,"author":{"gitId":"homingjun"},"content":"##### Members Operations\u003c/a\u003e"},{"lineNumber":197,"author":{"gitId":"e0426051"},"content":"* `ProjectMembers` facilitate the management of multiple `Members` instances and is dependent on the `Project` that initialises it."},{"lineNumber":198,"author":{"gitId":"chocomango"},"content":"    * Creation of `Member` adds an entry to `ProjectMembers`."},{"lineNumber":199,"author":{"gitId":"chocomango"},"content":"    * Deletion of `Member` removes an entry from `ProjectMembers`."},{"lineNumber":200,"author":{"gitId":"chocomango"},"content":"* `Member` contain the Member\u0027s user ID."},{"lineNumber":201,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":202,"author":{"gitId":"homingjun"},"content":"##### Task Operations\u003c/a\u003e"},{"lineNumber":203,"author":{"gitId":"e0426051"},"content":"* `TaskManager` facilitate the management of multiple `Task` instances and is dependent on the `Project` that initialises it."},{"lineNumber":204,"author":{"gitId":"chocomango"},"content":"    * Creation of `Task` adds an entry to `TaskManager`."},{"lineNumber":205,"author":{"gitId":"chocomango"},"content":"    * Deletion of `Task` removes an entry from `TaskManager`."},{"lineNumber":206,"author":{"gitId":"chocomango"},"content":"* `Task` contain necessary information about the task such as:"},{"lineNumber":207,"author":{"gitId":"chocomango"},"content":"    * Task ID"},{"lineNumber":208,"author":{"gitId":"chocomango"},"content":"    * Task Title"},{"lineNumber":209,"author":{"gitId":"chocomango"},"content":"    * Task Description"},{"lineNumber":210,"author":{"gitId":"chocomango"},"content":"    * Task Priority"},{"lineNumber":211,"author":{"gitId":"chocomango"},"content":"    * Task Completion Status"},{"lineNumber":212,"author":{"gitId":"chocomango"},"content":"* `Task` contain two additional ArrayList that are initialise upon its creation:"},{"lineNumber":213,"author":{"gitId":"chocomango"},"content":"    * ArrayList of Member\u0027s user ID to keep track `Members` who are assigned to work on the task."},{"lineNumber":214,"author":{"gitId":"chocomango"},"content":"    * ArrayList of Sprint ID to keep track `Sprints` that the task are allocated to."},{"lineNumber":215,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":216,"author":{"gitId":"homingjun"},"content":"##### Sprint Operations\u003c/a\u003e"},{"lineNumber":217,"author":{"gitId":"chocomango"},"content":"* `SprintManager` will facilitate the management of multiple `Sprint` instances and is dependant on the `Project` that initialises it."},{"lineNumber":218,"author":{"gitId":"chocomango"},"content":"    * Creation of `Sprint` adds an entry to `SprintManager`."},{"lineNumber":219,"author":{"gitId":"chocomango"},"content":"* `Sprint` contain necessary information about the iteration such as:"},{"lineNumber":220,"author":{"gitId":"chocomango"},"content":"    * Sprint ID"},{"lineNumber":221,"author":{"gitId":"chocomango"},"content":"    * Sprint Goal"},{"lineNumber":222,"author":{"gitId":"chocomango"},"content":"    * Sprint Start Date"},{"lineNumber":223,"author":{"gitId":"chocomango"},"content":"    * Sprint End Date"},{"lineNumber":224,"author":{"gitId":"chocomango"},"content":"* `Sprint` contain one additional ArrayList that are initialise upon its creation:"},{"lineNumber":225,"author":{"gitId":"chocomango"},"content":"    * ArrayList of Task IDs to keep track `Tasks` that are allocated to the `Sprint`."},{"lineNumber":226,"author":{"gitId":"homingjun"},"content":"### 3.5. \u003ca id\u003d\"storage-component\"\u003eStorage Component\u003c/a\u003e"},{"lineNumber":227,"author":{"gitId":"homingjun"},"content":"![Figure 3.5: Simplified class diagram for Storage Component, Model and json.simple](./image/developerguide/storagecomponent.png \"Storage Component UML\")"},{"lineNumber":228,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":229,"author":{"gitId":"homingjun"},"content":"_Figure 3.5: Simplified class diagram for Storage Component, Model and json.simple_"},{"lineNumber":230,"author":{"gitId":"homingjun"},"content":"  "},{"lineNumber":231,"author":{"gitId":"keke101"},"content":"API: [StorageManager.java]( https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/storage/StorageManager.java)  "},{"lineNumber":232,"author":{"gitId":"keke101"},"content":""},{"lineNumber":233,"author":{"gitId":"keke101"},"content":"The Storage component is using the JavaScript Object Notation (JSON) to save the data. The library used for serialising and deserializing the data is _json.simple 3.1.1_ by **Clifton Labs**.  "},{"lineNumber":234,"author":{"gitId":"keke101"},"content":"As shown in the diagram above, `JsonableObject` and `JsonableArray` are interfaces which inherits the `Jsonable` interface. The following model class inherits only one of the two interfaces:  "},{"lineNumber":235,"author":{"gitId":"keke101"},"content":"- ProjectManager  "},{"lineNumber":236,"author":{"gitId":"keke101"},"content":"- Project  "},{"lineNumber":237,"author":{"gitId":"keke101"},"content":"- SprintManager  "},{"lineNumber":238,"author":{"gitId":"keke101"},"content":"- TaskManager  "},{"lineNumber":239,"author":{"gitId":"keke101"},"content":"- ProjectMembers  "},{"lineNumber":240,"author":{"gitId":"keke101"},"content":"- Sprint  "},{"lineNumber":241,"author":{"gitId":"keke101"},"content":"- Task  "},{"lineNumber":242,"author":{"gitId":"keke101"},"content":"- Member  "},{"lineNumber":243,"author":{"gitId":"keke101"},"content":""},{"lineNumber":244,"author":{"gitId":"keke101"},"content":"This requires the model classes to implement two methods required for JSON serialisation and deserialisation:  "},{"lineNumber":245,"author":{"gitId":"keke101"},"content":"- `toJson()`: Contains logic required to convert the model object into JSON string.  "},{"lineNumber":246,"author":{"gitId":"keke101"},"content":"- `fromJson()`: Contains logic required to convert JSON object into its respective model class.    "},{"lineNumber":247,"author":{"gitId":"keke101"},"content":""},{"lineNumber":248,"author":{"gitId":"homingjun"},"content":"## 4. \u003ca id\u003d\"implementation\"\u003eImplementation\u003c/a\u003e"},{"lineNumber":249,"author":{"gitId":"homingjun"},"content":"### 4.1. \u003ca id\u003d\"project\"\u003eProject\u003c/a\u003e"},{"lineNumber":250,"author":{"gitId":"homingjun"},"content":"![Figure 4.1: Project Class Diagram](./image/developerguide/ProjectClassDiagram.png"},{"lineNumber":251,"author":{"gitId":"gmit22"},"content":" \"Project Class Diagram\")"},{"lineNumber":252,"author":{"gitId":"homingjun"},"content":" "},{"lineNumber":253,"author":{"gitId":"homingjun"},"content":" _Figure 4.1: Project Class Diagram_"},{"lineNumber":254,"author":{"gitId":"homingjun"},"content":" "},{"lineNumber":255,"author":{"gitId":"homingjun"},"content":"#### 4.1.1. \u003ca id\u003d\"create-project\"\u003eCreate Project\u003c/a\u003e"},{"lineNumber":256,"author":{"gitId":"homingjun"},"content":"![Figure 4.1.1: Sequence diagram of CreateProjectCommand](./image/developerguide/createProjectSequenceDiagram.png"},{"lineNumber":257,"author":{"gitId":"gmit22"},"content":" \"Add Project Sequence Diagram\") "},{"lineNumber":258,"author":{"gitId":"homingjun"},"content":" "},{"lineNumber":259,"author":{"gitId":"homingjun"},"content":"_Figure 4.1.1: Sequence diagram of CreateProjectCommand_"},{"lineNumber":260,"author":{"gitId":"homingjun"},"content":" "},{"lineNumber":261,"author":{"gitId":"keke101"},"content":" Link: [CreateProjectCommand.java](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/command/project/CreateProjectCommand.java) "},{"lineNumber":262,"author":{"gitId":"gmit22"},"content":"A project is created with a clear title and description of what the team is working on "},{"lineNumber":263,"author":{"gitId":"gmit22"},"content":"for delivery, as well as the project length and the sprint duration specified. `ProjectManager` stores all the projects"},{"lineNumber":264,"author":{"gitId":"gmit22"},"content":"in a hash table with `projectID`, `project` as key,value pair."},{"lineNumber":265,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":266,"author":{"gitId":"gmit22"},"content":"Before execution:"},{"lineNumber":267,"author":{"gitId":"gmit22"},"content":"1. Parse user input `project /create -title \u003ctitle\u003e -desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e` into Command"},{"lineNumber":268,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":269,"author":{"gitId":"gmit22"},"content":"    SCRUMptious will receive user input using the `Ui` class and parse it into `CreateProjectCommand` with `Parser` and"},{"lineNumber":270,"author":{"gitId":"gmit22"},"content":"     `ProjectParser`."},{"lineNumber":271,"author":{"gitId":"gmit22"},"content":"1. Execute CreateProjectCommand"},{"lineNumber":272,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":273,"author":{"gitId":"gmit22"},"content":"    SCRUMptious calls `Command.execute()` which will execute the command as mentioned in the implementation."},{"lineNumber":274,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":275,"author":{"gitId":"gmit22"},"content":"Implementation:"},{"lineNumber":276,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":277,"author":{"gitId":"gmit22"},"content":"1. Prepare parameters"},{"lineNumber":278,"author":{"gitId":"gmit22"},"content":"    1. Extracts required fields, to be passed as parameters for project creation."},{"lineNumber":279,"author":{"gitId":"gmit22"},"content":"        "},{"lineNumber":280,"author":{"gitId":"gmit22"},"content":"1. `projectManager.addProject()` adds a project using the parameters provided."},{"lineNumber":281,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":282,"author":{"gitId":"gmit22"},"content":"1. Output to User"},{"lineNumber":283,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":284,"author":{"gitId":"gmit22"},"content":"    `printCreatedProject()` is then called to output the newly created Project in `addProj.toString` via `Ui"},{"lineNumber":285,"author":{"gitId":"gmit22"},"content":"    .showToUserLn()`"},{"lineNumber":286,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":287,"author":{"gitId":"homingjun"},"content":"#### 4.1.2. \u003ca id\u003d\"list-project\"\u003eList Project\u003c/a\u003e"},{"lineNumber":288,"author":{"gitId":"gmit22"},"content":"All the projects added by the user are shown as an output."},{"lineNumber":289,"author":{"gitId":"gmit22"},"content":"Before execution:"},{"lineNumber":290,"author":{"gitId":"gmit22"},"content":"1. Parse user input `project /list` into Command"},{"lineNumber":291,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":292,"author":{"gitId":"gmit22"},"content":"    SCRUMptious will receive user input using the `Ui` class and parse it into `ListProjectCommand` with `Parser` and"},{"lineNumber":293,"author":{"gitId":"gmit22"},"content":"     `ProjectParser`."},{"lineNumber":294,"author":{"gitId":"gmit22"},"content":"     "},{"lineNumber":295,"author":{"gitId":"gmit22"},"content":"1. Execute ListProjectCommand"},{"lineNumber":296,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":297,"author":{"gitId":"gmit22"},"content":"    SCRUMptious calls `Command.execute()` which will execute the command as mentioned in the implementation."},{"lineNumber":298,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":299,"author":{"gitId":"gmit22"},"content":"Implementation:"},{"lineNumber":300,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":301,"author":{"gitId":"gmit22"},"content":"1. The program iterates through `projectManager.getProjectList()` to get a list of all the projects stored in"},{"lineNumber":302,"author":{"gitId":"gmit22"},"content":" `ProjectManager`."},{"lineNumber":303,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":304,"author":{"gitId":"gmit22"},"content":"1. Output to User"},{"lineNumber":305,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":306,"author":{"gitId":"gmit22"},"content":"    `proj.getTitle()` and `proj.getDescription()` is then called to output all the projects in `ProjectManager` via"},{"lineNumber":307,"author":{"gitId":"gmit22"},"content":"     `Ui.showToUserLn()`."},{"lineNumber":308,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":309,"author":{"gitId":"homingjun"},"content":"#### 4.1.3. \u003ca id\u003d\"select-project\"\u003eSelect Project\u003c/a\u003e"},{"lineNumber":310,"author":{"gitId":"gmit22"},"content":"Select the project on which all the commands are executed."},{"lineNumber":311,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":312,"author":{"gitId":"gmit22"},"content":"Before execution:"},{"lineNumber":313,"author":{"gitId":"gmit22"},"content":"1. Parse user input `project /select \u003cid\u003e` into Command"},{"lineNumber":314,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":315,"author":{"gitId":"gmit22"},"content":"    SCRUMptious will receive user input using the `Ui` class and parse it into `SelectProjectCommand` with `Parser` and"},{"lineNumber":316,"author":{"gitId":"gmit22"},"content":"     `ProjectParser`."},{"lineNumber":317,"author":{"gitId":"gmit22"},"content":"     "},{"lineNumber":318,"author":{"gitId":"gmit22"},"content":"1. Execute SelectProjectCommand"},{"lineNumber":319,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":320,"author":{"gitId":"gmit22"},"content":"    SCRUMptious calls `Command.execute()` which will execute the command as mentioned in the implementation. The"},{"lineNumber":321,"author":{"gitId":"gmit22"},"content":"     required project will then be chosen as reference and stored in `ProjectManager`."},{"lineNumber":322,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":323,"author":{"gitId":"gmit22"},"content":"Implementation:"},{"lineNumber":324,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":325,"author":{"gitId":"gmit22"},"content":"1. The input `id` is used to access the corresponding project stored in a hashtable in the `projectManager`."},{"lineNumber":326,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":327,"author":{"gitId":"gmit22"},"content":"1. Output to User"},{"lineNumber":328,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":329,"author":{"gitId":"gmit22"},"content":"    `parameters.get(\u00270\u0027)` is used to get the selected id and generate output  via"},{"lineNumber":330,"author":{"gitId":"gmit22"},"content":"     `Ui.showToUserLn()`."},{"lineNumber":331,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":332,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":333,"author":{"gitId":"homingjun"},"content":"#### 4.1.4. \u003ca id\u003d\"view-project\"\u003eView Project\u003c/a\u003e"},{"lineNumber":334,"author":{"gitId":"gmit22"},"content":"View the details of the project on which the user is currently working on."},{"lineNumber":335,"author":{"gitId":"gmit22"},"content":"Before execution:"},{"lineNumber":336,"author":{"gitId":"e0426051"},"content":"1. Parse user input `project /view` into Command"},{"lineNumber":337,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":338,"author":{"gitId":"gmit22"},"content":"    SCRUMptious will receive user input using the `Ui` class and parse it into `ViewProjectCommand` with `Parser` and"},{"lineNumber":339,"author":{"gitId":"gmit22"},"content":"     `ProjectParser`."},{"lineNumber":340,"author":{"gitId":"gmit22"},"content":"     "},{"lineNumber":341,"author":{"gitId":"gmit22"},"content":"1. Execute ViewProjectCommand"},{"lineNumber":342,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":343,"author":{"gitId":"gmit22"},"content":"    SCRUMptious calls `Command.execute()` which will execute the command as mentioned in the implementation."},{"lineNumber":344,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":345,"author":{"gitId":"gmit22"},"content":"Implementation:"},{"lineNumber":346,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":347,"author":{"gitId":"gmit22"},"content":"1. The selected project is accessed by using `projectManager.getSelectedProject()`."},{"lineNumber":348,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":349,"author":{"gitId":"gmit22"},"content":"1. Output to User"},{"lineNumber":350,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":351,"author":{"gitId":"gmit22"},"content":"    The project is shown to the user by `proj.toString()` via `Ui.showToUserLn()`"},{"lineNumber":352,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":353,"author":{"gitId":"homingjun"},"content":"### 4.2. \u003ca id\u003d\"task\"\u003eTask\u003c/a\u003e"},{"lineNumber":354,"author":{"gitId":"homingjun"},"content":"#### 4.2.1. \u003ca id\u003d\"add-task\"\u003eAdd Task\u003c/a\u003e"},{"lineNumber":355,"author":{"gitId":"e0426051"},"content":"A task is created following the creation of a project, with a clear title, description "},{"lineNumber":356,"author":{"gitId":"e0426051"},"content":"and priority of the task. `TaskManager` stores all the tasks in an array list."},{"lineNumber":357,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":358,"author":{"gitId":"e0426051"},"content":"Prerequisites:"},{"lineNumber":359,"author":{"gitId":"e0426051"},"content":"1. There must be at least one project."},{"lineNumber":360,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":361,"author":{"gitId":"e0426051"},"content":"Before execution:"},{"lineNumber":362,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":363,"author":{"gitId":"e0426051"},"content":"1. Parse user input `task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003cpriority\u003e` into Command"},{"lineNumber":364,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":365,"author":{"gitId":"e0426051"},"content":"    SCRUMptious will receive user input using the `Ui` class and parse it into CreateTaskCommand using `Parser` and `TaskParser`."},{"lineNumber":366,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":367,"author":{"gitId":"e0426051"},"content":"1. Check whether a project exists. If there are no projects, an error is displayed and no tasks are created.   "},{"lineNumber":368,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":369,"author":{"gitId":"e0426051"},"content":"1. Execute AddTaskCommand"},{"lineNumber":370,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":371,"author":{"gitId":"e0426051"},"content":"    SCRUMptious calls `Command.execute()` which will execute the command.    "},{"lineNumber":372,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":373,"author":{"gitId":"e0426051"},"content":"Implementation:"},{"lineNumber":374,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":375,"author":{"gitId":"e0426051"},"content":"1. Prepare parameters"},{"lineNumber":376,"author":{"gitId":"e0426051"},"content":"    1. Extracts required fields, to be passed as parameters for task creation."},{"lineNumber":377,"author":{"gitId":"e0426051"},"content":"    1. Checks the title for duplicates. If duplicate found, an error is displayed and the task is not created."},{"lineNumber":378,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":379,"author":{"gitId":"e0426051"},"content":"1. `taskManager.addTask()` adds a task using the provided parameters."},{"lineNumber":380,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":381,"author":{"gitId":"e0426051"},"content":"1. User output"},{"lineNumber":382,"author":{"gitId":"e0426051"},"content":"    The overridden function `toString()` is called to output the new Task using Ui.showToUserLn()."},{"lineNumber":383,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":384,"author":{"gitId":"homingjun"},"content":"#### 4.2.2. \u003ca id\u003d\"view-task\"\u003eView Task\u003c/a\u003e"},{"lineNumber":385,"author":{"gitId":"homingjun"},"content":"![Figure 4.2.2: Sequence diagram of ViewTaskCommand](./image/developerguide/viewTask.png"},{"lineNumber":386,"author":{"gitId":"e0426051"},"content":" \"Add Project Sequence Diagram\") "},{"lineNumber":387,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":388,"author":{"gitId":"homingjun"},"content":"_Figure 4.2.2: Sequence diagram of ViewTaskCommand_"},{"lineNumber":389,"author":{"gitId":"homingjun"},"content":" "},{"lineNumber":390,"author":{"gitId":"e0426051"},"content":" The user specifies one or more task IDs to view the corresponding tasks. "},{"lineNumber":391,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":392,"author":{"gitId":"e0426051"},"content":" Prerequisites:"},{"lineNumber":393,"author":{"gitId":"e0426051"},"content":" 1. There must be at least one project."},{"lineNumber":394,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":395,"author":{"gitId":"e0426051"},"content":" Before execution:"},{"lineNumber":396,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":397,"author":{"gitId":"e0426051"},"content":" 1. Parse user input `task /view \u003ctaskid\u003e [\u003ctaskid\u003e...]` into Command"},{"lineNumber":398,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":399,"author":{"gitId":"e0426051"},"content":"     SCRUMptious will receive user input using the `Ui` class and parse it into ViewTaskCommand using `Parser` and `TaskParser`."},{"lineNumber":400,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":401,"author":{"gitId":"e0426051"},"content":" 1. Check whether a project exists. If there are no projects, an error is displayed.   "},{"lineNumber":402,"author":{"gitId":"e0426051"},"content":"     "},{"lineNumber":403,"author":{"gitId":"e0426051"},"content":" 1. Execute ViewTaskCommand"},{"lineNumber":404,"author":{"gitId":"e0426051"},"content":" "},{"lineNumber":405,"author":{"gitId":"e0426051"},"content":"     SCRUMptious calls `Command.execute()` which will execute the command.    "},{"lineNumber":406,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":407,"author":{"gitId":"e0426051"},"content":"Implementation:"},{"lineNumber":408,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":409,"author":{"gitId":"e0426051"},"content":"1. Prepare parameters"},{"lineNumber":410,"author":{"gitId":"e0426051"},"content":"    1. Extracts the task IDs, to be passed as integers for task viewing."},{"lineNumber":411,"author":{"gitId":"e0426051"},"content":"    1. Checks IDs for invalid IDs. Any entry of invalid IDs will show corresponding errors."},{"lineNumber":412,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":413,"author":{"gitId":"e0426051"},"content":"1. Obtain task list"},{"lineNumber":414,"author":{"gitId":"e0426051"},"content":"    1. The task list is obtained from the project."},{"lineNumber":415,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":416,"author":{"gitId":"e0426051"},"content":"1. User output"},{"lineNumber":417,"author":{"gitId":"e0426051"},"content":"    The overridden function `toString()` is called to output the requested Tasks in the task list using Ui.showToUserLn()."},{"lineNumber":418,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":419,"author":{"gitId":"homingjun"},"content":"#### 4.2.3. \u003ca id\u003d\"delete-task\"\u003eDelete Task\u003c/a\u003e"},{"lineNumber":420,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":421,"author":{"gitId":"e0426051"},"content":"Users may choose to delete tasks that are deemed unnecessary or incorrect."},{"lineNumber":422,"author":{"gitId":"e0426051"},"content":"The task IDs are provided."},{"lineNumber":423,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":424,"author":{"gitId":"e0426051"},"content":"Prerequisites:"},{"lineNumber":425,"author":{"gitId":"e0426051"},"content":"1. There must be at least one project."},{"lineNumber":426,"author":{"gitId":"e0426051"},"content":"1. There must be at least one task for the command to delete."},{"lineNumber":427,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":428,"author":{"gitId":"e0426051"},"content":"Implementation:"},{"lineNumber":429,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":430,"author":{"gitId":"e0426051"},"content":"1. UI receives user input"},{"lineNumber":431,"author":{"gitId":"e0426051"},"content":"1. Parser parse user input"},{"lineNumber":432,"author":{"gitId":"e0426051"},"content":"1. Execute DeleteTaskCommand"},{"lineNumber":433,"author":{"gitId":"e0426051"},"content":"    1. Check all IDs are valid. Invalid IDs will display corresponding errors."},{"lineNumber":434,"author":{"gitId":"e0426051"},"content":"    1. On TaskList"},{"lineNumber":435,"author":{"gitId":"e0426051"},"content":"        1. Delete the task from the task list"},{"lineNumber":436,"author":{"gitId":"e0426051"},"content":"    1. On sprints"},{"lineNumber":437,"author":{"gitId":"e0426051"},"content":"        1. De-link the task from all sprints."},{"lineNumber":438,"author":{"gitId":"e0426051"},"content":"    1. UI output to user"},{"lineNumber":439,"author":{"gitId":"e0426051"},"content":"          "},{"lineNumber":440,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":441,"author":{"gitId":"homingjun"},"content":"#### 4.2.4. \u003ca id\u003d\"change-task-priority\"\u003eChange Task Priority\u003c/a\u003e"},{"lineNumber":442,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":443,"author":{"gitId":"e0426051"},"content":"A user can change the priority of an existing task after changes to project requirements."},{"lineNumber":444,"author":{"gitId":"e0426051"},"content":"The task ID and new priority are provided."},{"lineNumber":445,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":446,"author":{"gitId":"e0426051"},"content":"Prerequisites:"},{"lineNumber":447,"author":{"gitId":"e0426051"},"content":"1. There must be at least one project."},{"lineNumber":448,"author":{"gitId":"e0426051"},"content":"1. There must be at least one task for the command to edit its priority."},{"lineNumber":449,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":450,"author":{"gitId":"e0426051"},"content":"Implementation:"},{"lineNumber":451,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":452,"author":{"gitId":"e0426051"},"content":"1. UI receives user input"},{"lineNumber":453,"author":{"gitId":"e0426051"},"content":"1. Parser parse user input"},{"lineNumber":454,"author":{"gitId":"e0426051"},"content":"1. Execute ChangeTaskPriorityCommand"},{"lineNumber":455,"author":{"gitId":"e0426051"},"content":"    1. Check the new priority is valid. If not valid, an error will be displayed."},{"lineNumber":456,"author":{"gitId":"e0426051"},"content":"    1. Check all IDs are valid. Invalid IDs will display corresponding errors."},{"lineNumber":457,"author":{"gitId":"e0426051"},"content":"    1. The corresponding task will be updated its priority"},{"lineNumber":458,"author":{"gitId":"e0426051"},"content":"    1. UI output to user"},{"lineNumber":459,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":460,"author":{"gitId":"homingjun"},"content":"#### 4.2.5. \u003ca id\u003d\"mark-task-as-complete\"\u003eMark Task as Complete\u003c/a\u003e  "},{"lineNumber":461,"author":{"gitId":"e0426051"},"content":"The user can mark tasks as complete when the team completes the task. The task"},{"lineNumber":462,"author":{"gitId":"e0426051"},"content":"IDs are provided."},{"lineNumber":463,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":464,"author":{"gitId":"e0426051"},"content":"Prerequisites:"},{"lineNumber":465,"author":{"gitId":"e0426051"},"content":"1. There must be at least one project."},{"lineNumber":466,"author":{"gitId":"e0426051"},"content":"1. There must be at least one task for the command to be marked complete."},{"lineNumber":467,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":468,"author":{"gitId":"e0426051"},"content":"Implementation:"},{"lineNumber":469,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":470,"author":{"gitId":"e0426051"},"content":"1. UI receives user input"},{"lineNumber":471,"author":{"gitId":"e0426051"},"content":"1. Parser parse user input"},{"lineNumber":472,"author":{"gitId":"e0426051"},"content":"1. Execute DoneTaskCommand"},{"lineNumber":473,"author":{"gitId":"e0426051"},"content":"    1. Check all IDs are valid. Invalid IDs will display corresponding errors."},{"lineNumber":474,"author":{"gitId":"e0426051"},"content":"    1. The corresponding tasks will be marked as complete."},{"lineNumber":475,"author":{"gitId":"e0426051"},"content":"    1. UI output to user"},{"lineNumber":476,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":477,"author":{"gitId":"homingjun"},"content":"#### 4.2.6. \u003ca id\u003d\"view-task-by-descending-priority\"\u003eView Task by Descending Priority\u003c/a\u003e"},{"lineNumber":478,"author":{"gitId":"e0426051"},"content":"A user may choose to view all tasks in order of priority associated with the project. No parameters are supplied."},{"lineNumber":479,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":480,"author":{"gitId":"e0426051"},"content":"Prerequisites:"},{"lineNumber":481,"author":{"gitId":"e0426051"},"content":"1. There must be at least one project."},{"lineNumber":482,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":483,"author":{"gitId":"e0426051"},"content":"Implementation:"},{"lineNumber":484,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":485,"author":{"gitId":"e0426051"},"content":"1. UI receives user input"},{"lineNumber":486,"author":{"gitId":"e0426051"},"content":"1. Parser parse user input"},{"lineNumber":487,"author":{"gitId":"e0426051"},"content":"1. Execute PriorityViewCommand"},{"lineNumber":488,"author":{"gitId":"e0426051"},"content":"    1. UI output to user"},{"lineNumber":489,"author":{"gitId":"e0426051"},"content":"    "},{"lineNumber":490,"author":{"gitId":"homingjun"},"content":"### 4.3. \u003ca id\u003d\"sprint\"\u003eSprint\u003c/a\u003e"},{"lineNumber":491,"author":{"gitId":"chocomango"},"content":"In SCRUMptious, a Project will be broken down into smaller iterations known as Sprints. The Sprint will contain information about the Tasks allocated for that iteration and Members that are assigned to complete the Tasks."},{"lineNumber":492,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":493,"author":{"gitId":"chocomango"},"content":"The following section will explain how the management of Sprints is implemented in the program."},{"lineNumber":494,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":495,"author":{"gitId":"homingjun"},"content":"#### 4.3.1. \u003ca id\u003d\"create-sprint\"\u003eCreate Sprint\u003c/a\u003e"},{"lineNumber":496,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":497,"author":{"gitId":"homingjun"},"content":"![Figure 4.3.1: Sequence diagram of CreateSprintCommand](./image/developerguide/createSprint.png \"Create Sprint Sequence Diagram\")  "},{"lineNumber":498,"author":{"gitId":"chocomango"},"content":"  "},{"lineNumber":499,"author":{"gitId":"homingjun"},"content":"_Figure 4.3.1: Sequence diagram of CreateSprintCommand_ "},{"lineNumber":500,"author":{"gitId":"chocomango"},"content":"  "},{"lineNumber":501,"author":{"gitId":"keke101"},"content":"Link: [CreateSprintCommand.java](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/command/sprint/CreateSprintCommand.java) "},{"lineNumber":502,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":503,"author":{"gitId":"chocomango"},"content":"A Sprint can be created when there is an existing Project."},{"lineNumber":504,"author":{"gitId":"chocomango"},"content":"When the Project is created, the duration of the Project and length of the Sprints are specified, thus, there will be a finite number of Sprints for each Project."},{"lineNumber":505,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":506,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":507,"author":{"gitId":"chocomango"},"content":"Usage scenario:"},{"lineNumber":508,"author":{"gitId":"chocomango"},"content":"1. Parse user input into Command"},{"lineNumber":509,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":510,"author":{"gitId":"chocomango"},"content":"    SCRUMptious will receive user input using the `Ui` class and parse it into `CreateSprintCommand` with `Parser` and `SprintParser`."},{"lineNumber":511,"author":{"gitId":"chocomango"},"content":"1. Execute CreateSprintCommand"},{"lineNumber":512,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":513,"author":{"gitId":"chocomango"},"content":"    SCRUMptious calls `Command.execute()` which will execute the command as mentioned in the implementation."},{"lineNumber":514,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":515,"author":{"gitId":"chocomango"},"content":"1. Choose the Project to add the new Sprint"},{"lineNumber":516,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":517,"author":{"gitId":"chocomango"},"content":"    `chooseProject()` will be called to check for the optional `-project` tag in the user specified parameters."},{"lineNumber":518,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":519,"author":{"gitId":"chocomango"},"content":"    Note: If the tag is not specified, the default Project in the ProjectManager indexed by `selectedProject` will be chosen."},{"lineNumber":520,"author":{"gitId":"chocomango"},"content":"1. Prepare parameters"},{"lineNumber":521,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":522,"author":{"gitId":"chocomango"},"content":"    `prepareParameters()` will be called to check for the mandatory `-goal` tag in the user specified parameters."},{"lineNumber":523,"author":{"gitId":"chocomango"},"content":"    In addition, It will also prepare the optional `-start` tag as required in the following two scenarios:"},{"lineNumber":524,"author":{"gitId":"chocomango"},"content":"    1. New Sprint is first Sprint in Project"},{"lineNumber":525,"author":{"gitId":"chocomango"},"content":"        "},{"lineNumber":526,"author":{"gitId":"chocomango"},"content":"        Being the first Sprint in the Project, the `-start` tag will determine the start date for both the new Sprint and Project."},{"lineNumber":527,"author":{"gitId":"chocomango"},"content":"        Thus, the `String` parameter will be sent to _DateTimeParser_ via `parseDate()` to parse it into a _LocalDate_ object."},{"lineNumber":528,"author":{"gitId":"chocomango"},"content":"        "},{"lineNumber":529,"author":{"gitId":"chocomango"},"content":"        The end date for the Project and Sprint will also be determined by adding `projectDuration` and `sprintLength` to the start date respectively."},{"lineNumber":530,"author":{"gitId":"chocomango"},"content":"        "},{"lineNumber":531,"author":{"gitId":"chocomango"},"content":"    1. New Sprint is not first Sprint in Project"},{"lineNumber":532,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":533,"author":{"gitId":"chocomango"},"content":"        As there is a previous Sprint before the newly created Sprint, the new Sprint will start the day after the previous "},{"lineNumber":534,"author":{"gitId":"chocomango"},"content":"        Sprint ends. Thus, the `-start` tag will be ignored even if specified by user."},{"lineNumber":535,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":536,"author":{"gitId":"chocomango"},"content":"1. Check all sprint created"},{"lineNumber":537,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":538,"author":{"gitId":"chocomango"},"content":"    With all the necessary parameters prepared, the command will check if there is still room to add new Sprint by checking"},{"lineNumber":539,"author":{"gitId":"chocomango"},"content":"    if the prepared `sprintEndDate` is after the `projectEndDate`."},{"lineNumber":540,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":541,"author":{"gitId":"chocomango"},"content":"    Note: This check is done after the `prepareParameters()` as the _LocalDate_ `sprintEndDate` is required."},{"lineNumber":542,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":543,"author":{"gitId":"chocomango"},"content":"1. Update Project Start and End date if new Sprint is first Sprint"},{"lineNumber":544,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":545,"author":{"gitId":"chocomango"},"content":"    As mentioned above, if the new Sprint is the first Sprint in the Project, the `-start` tag will determine the start and end date of the Project."},{"lineNumber":546,"author":{"gitId":"chocomango"},"content":"1. Add Sprint to Sprint Manger"},{"lineNumber":547,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":548,"author":{"gitId":"chocomango"},"content":"    `addSprint()` is finally called to add a new Sprint to the Sprint Manager."},{"lineNumber":549,"author":{"gitId":"chocomango"},"content":"   "},{"lineNumber":550,"author":{"gitId":"chocomango"},"content":"1. Output to User"},{"lineNumber":551,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":552,"author":{"gitId":"gmit22"},"content":"    `printCreatedSprint()` is then called to output the newly created Sprint in `createdSprint.toString()` via `Ui"},{"lineNumber":553,"author":{"gitId":"gmit22"},"content":"    .showToUserLn()`"},{"lineNumber":554,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":555,"author":{"gitId":"homingjun"},"content":"#### 4.3.2. \u003ca id\u003d\"view-sprint\"\u003eView Sprint\u003c/a\u003e"},{"lineNumber":556,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":557,"author":{"gitId":"keke101"},"content":"Link: [ViewSprintCommand.java](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/command/sprint/ViewSprintCommand.java) "},{"lineNumber":558,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":559,"author":{"gitId":"chocomango"},"content":"A Sprint can only be viewed when there is an existing Sprint. When the user request to view the sprint, the Sprint number is specified and the program will output the information about the Sprint corresponding to the Sprint number."},{"lineNumber":560,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":561,"author":{"gitId":"chocomango"},"content":"Prerequisites:    "},{"lineNumber":562,"author":{"gitId":"chocomango"},"content":"1. At least one Sprint in the SprintList"},{"lineNumber":563,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":564,"author":{"gitId":"chocomango"},"content":"Implementation:"},{"lineNumber":565,"author":{"gitId":"chocomango"},"content":"1. UI receive user input"},{"lineNumber":566,"author":{"gitId":"chocomango"},"content":"1. Parser parse user input"},{"lineNumber":567,"author":{"gitId":"chocomango"},"content":"1. Execute ViewSprintCommand"},{"lineNumber":568,"author":{"gitId":"chocomango"},"content":"    1. Get Sprint from SprintList"},{"lineNumber":569,"author":{"gitId":"chocomango"},"content":"    1. UI output to user"},{"lineNumber":570,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":571,"author":{"gitId":"homingjun"},"content":"#### 4.3.3. \u003ca id\u003d\"add-task-to-sprint\"\u003eAdd Task to Sprint\u003c/a\u003e"},{"lineNumber":572,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":573,"author":{"gitId":"keke101"},"content":"Link: [AddSprintTaskCommand.java](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/command/sprint/AddSprintTaskCommand.java) "},{"lineNumber":574,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":575,"author":{"gitId":"chocomango"},"content":"Users can add Tasks existing in the Project Backlog to the Sprint, indicating that the Tasks are to be worked on during the iteration. "},{"lineNumber":576,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":577,"author":{"gitId":"chocomango"},"content":"Prerequisites:    "},{"lineNumber":578,"author":{"gitId":"chocomango"},"content":"1. At least one Sprint in the SprintList"},{"lineNumber":579,"author":{"gitId":"chocomango"},"content":"1. At least one Task in the ProjectBacklog"},{"lineNumber":580,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":581,"author":{"gitId":"chocomango"},"content":"Implementation:"},{"lineNumber":582,"author":{"gitId":"chocomango"},"content":"1. UI receive user input"},{"lineNumber":583,"author":{"gitId":"chocomango"},"content":"1. Parser parse user input"},{"lineNumber":584,"author":{"gitId":"chocomango"},"content":"1. Execute AddSprintTaskCommand"},{"lineNumber":585,"author":{"gitId":"chocomango"},"content":"    1. On Sprint "},{"lineNumber":586,"author":{"gitId":"chocomango"},"content":"        1. Add Task ID into sprintTaskIds"},{"lineNumber":587,"author":{"gitId":"chocomango"},"content":"    1. On Task"},{"lineNumber":588,"author":{"gitId":"chocomango"},"content":"        1. Add Sprint Number into sprintAllocatedTo"},{"lineNumber":589,"author":{"gitId":"chocomango"},"content":"    1. UI output to user"},{"lineNumber":590,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":591,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":592,"author":{"gitId":"homingjun"},"content":"#### 4.3.4. \u003ca id\u003d\"remove-task-from-sprint\"\u003eRemove Task from Sprint\u003c/a\u003e"},{"lineNumber":593,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":594,"author":{"gitId":"keke101"},"content":"Link: [RemoveSprintTaskCommand.java](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/command/sprint/RemoveSprintTaskCommand.java) "},{"lineNumber":595,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":596,"author":{"gitId":"chocomango"},"content":"Users can remove Tasks from Sprint, indicating that the Tasks are deemed to not be worked on during the iteration. "},{"lineNumber":597,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":598,"author":{"gitId":"chocomango"},"content":"Prerequisites:    "},{"lineNumber":599,"author":{"gitId":"chocomango"},"content":"1. At least one Sprint in the SprintList"},{"lineNumber":600,"author":{"gitId":"chocomango"},"content":"1. At least one Task is added to the selected Sprint"},{"lineNumber":601,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":602,"author":{"gitId":"chocomango"},"content":"Implementation:"},{"lineNumber":603,"author":{"gitId":"chocomango"},"content":"1. UI receive user input"},{"lineNumber":604,"author":{"gitId":"chocomango"},"content":"1. Parser parse user input"},{"lineNumber":605,"author":{"gitId":"chocomango"},"content":"1. Execute RemoveSprintTaskCommand"},{"lineNumber":606,"author":{"gitId":"chocomango"},"content":"    1. On Sprint "},{"lineNumber":607,"author":{"gitId":"chocomango"},"content":"        1. Remove Task ID from sprintTaskIds"},{"lineNumber":608,"author":{"gitId":"chocomango"},"content":"    1. On Task"},{"lineNumber":609,"author":{"gitId":"chocomango"},"content":"        1. Remove Sprint Number from sprintAllocatedTo"},{"lineNumber":610,"author":{"gitId":"chocomango"},"content":"    1. UI output to user"},{"lineNumber":611,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":612,"author":{"gitId":"homingjun"},"content":"#### 4.3.5. \u003ca id\u003d\"allocate-sprint-tasks-to-members\"\u003eAllocate Sprint Tasks to Members\u003c/a\u003e  "},{"lineNumber":613,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":614,"author":{"gitId":"keke101"},"content":"Link: [AllocateSprintTaskCommand.java](https://github.com/AY2021S1-CS2113T-F11-4/tp/tree/master/src/main/java/com/scrumptious/command/sprint/AllocateSprintTaskCommand.java) "},{"lineNumber":615,"author":{"gitId":"chocomango"},"content":" "},{"lineNumber":616,"author":{"gitId":"chocomango"},"content":"Users can allocate Sprint Tasks to Members, indicating that the Tasks are assigned to the selected member to work on during the iteration. "},{"lineNumber":617,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":618,"author":{"gitId":"chocomango"},"content":"Prerequisites:    "},{"lineNumber":619,"author":{"gitId":"chocomango"},"content":"1. At least one Task is added to the selected Sprint"},{"lineNumber":620,"author":{"gitId":"chocomango"},"content":"1. At least one Member is added to the Project"},{"lineNumber":621,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":622,"author":{"gitId":"chocomango"},"content":"Implementation:"},{"lineNumber":623,"author":{"gitId":"chocomango"},"content":"1. UI receive user input"},{"lineNumber":624,"author":{"gitId":"chocomango"},"content":"1. Parser parse user input"},{"lineNumber":625,"author":{"gitId":"chocomango"},"content":"1. Execute AllocateSprintTaskCommand"},{"lineNumber":626,"author":{"gitId":"chocomango"},"content":"    1. On Task"},{"lineNumber":627,"author":{"gitId":"chocomango"},"content":"        1. Add Member ID into membersAllocatedTo"},{"lineNumber":628,"author":{"gitId":"chocomango"},"content":"    1. On Member"},{"lineNumber":629,"author":{"gitId":"chocomango"},"content":"        1. Add Task ID into allocatedTaskIds"},{"lineNumber":630,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":631,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":632,"author":{"gitId":"homingjun"},"content":"### 4.4. \u003ca id\u003d\"storage\"\u003eStorage\u003c/a\u003e"},{"lineNumber":633,"author":{"gitId":"gmit22"},"content":"To make the data persistent and portable, JSON has been chosen as the format for data to be saved to a persistent storage such as storage drives, thumb drives and any other storage medium which stores the program. JSON is also **human-readable** which allows users to directly modify the data file easily. "},{"lineNumber":634,"author":{"gitId":"gmit22"},"content":"This can be useful in certain scenarios such as fixing the data file in the event of data corruption."},{"lineNumber":635,"author":{"gitId":"keke101"},"content":""},{"lineNumber":636,"author":{"gitId":"homingjun"},"content":"#### 4.4.1. \u003ca id\u003d\"location\"\u003eLocation\u003c/a\u003e"},{"lineNumber":637,"author":{"gitId":"homingjun"},"content":"![Figure 4.4.1: Running the Jar](image/developerguide/storage_save_directory.png \"Running the Jar\")  "},{"lineNumber":638,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":639,"author":{"gitId":"homingjun"},"content":"_Figure 4.4.1: Running the Jar or in IDE_"},{"lineNumber":640,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":641,"author":{"gitId":"keke101"},"content":"As shown in the above diagram, the program will save the data as _\"data.json\"_. The data file is saved in the _“data/”_ folder that is located in the folder of the program. If you are testing the program using Intellij IDE, the _“data/”_ folder will be in the root of the project folder.  "},{"lineNumber":642,"author":{"gitId":"keke101"},"content":"When you start the program, the program will load the data file from its respective location and deserialise it into its respective objects. Data will be saved when the program exits or whenever the user makes changes to the data.  "},{"lineNumber":643,"author":{"gitId":"keke101"},"content":""},{"lineNumber":644,"author":{"gitId":"homingjun"},"content":"#### 4.4.2. \u003ca id\u003d\"loading-data\"\u003eLoading Data\u003c/a\u003e"},{"lineNumber":645,"author":{"gitId":"homingjun"},"content":"![Figure 4.4.2: Loading Data](image/developerguide/storage_load.png \"Loading Data\")  "},{"lineNumber":646,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":647,"author":{"gitId":"homingjun"},"content":"_Figure 4.4.2: Loading Data_  "},{"lineNumber":648,"author":{"gitId":"keke101"},"content":""},{"lineNumber":649,"author":{"gitId":"keke101"},"content":"The program will only load the data file in the persistent storage during the initialisation process of the program. With reference to the sequence diagram above, the flow of the logic is as follows:  "},{"lineNumber":650,"author":{"gitId":"keke101"},"content":"1. When the user starts the program, it will first call `init()` to initialise the program. "},{"lineNumber":651,"author":{"gitId":"keke101"},"content":"2. A `StorageManager` object will be instantiated with the reference to a `ProjectManager` object that is used during load and save operations."},{"lineNumber":652,"author":{"gitId":"keke101"},"content":"3. `load()` will read the data file from the persistent storage, deserialise it into a `JsonObject` object and attempt to convert the object into its respective types.  "},{"lineNumber":653,"author":{"gitId":"keke101"},"content":"  "},{"lineNumber":654,"author":{"gitId":"keke101"},"content":"**Failure to Load**  "},{"lineNumber":655,"author":{"gitId":"keke101"},"content":"If the program fails to load the data file, it will proceed in an empty state. Any subsequent saves invoked by any command that changes the empty state, or exiting the program using `bye` will cause the erroneous data file (if any) **to be deleted**.  "},{"lineNumber":656,"author":{"gitId":"keke101"},"content":""},{"lineNumber":657,"author":{"gitId":"keke101"},"content":"The program will fail to load the data file if **any of the following conditions are met**:"},{"lineNumber":658,"author":{"gitId":"keke101"},"content":"* I/O error trying to read the file."},{"lineNumber":659,"author":{"gitId":"keke101"},"content":"* Error parsing due to incorrect JSON format."},{"lineNumber":660,"author":{"gitId":"keke101"},"content":"* Conversion error due to missing properties."},{"lineNumber":661,"author":{"gitId":"keke101"},"content":"* Mapping error due to invalid property type (e.g. \"name\" is expecting a `String` but data read is an `Integer`)."},{"lineNumber":662,"author":{"gitId":"keke101"},"content":""},{"lineNumber":663,"author":{"gitId":"homingjun"},"content":"#### 4.4.2.1. \u003ca id\u003d\"converting-and-mapping-of-json-to-objects\"\u003eConverting and Mapping of JSON to Objects\u003c/a\u003e  "},{"lineNumber":664,"author":{"gitId":"homingjun"},"content":"![Figure 4.4.2.1: Parsing Sequence](image/developerguide/storage_load_parse.png \"Parsing Sequence\")"},{"lineNumber":665,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":666,"author":{"gitId":"homingjun"},"content":"_Figure 4.4.2.1: Parsing Sequence_ "},{"lineNumber":667,"author":{"gitId":"keke101"},"content":" "},{"lineNumber":668,"author":{"gitId":"keke101"},"content":"Due to the limitations of the library, parsing of the JSON string only converts it into either JsonObject or JsonArray objects which requires additional operations to map the data back to the respective model classes.  "},{"lineNumber":669,"author":{"gitId":"keke101"},"content":"  "},{"lineNumber":670,"author":{"gitId":"keke101"},"content":"As explained in [Storage Component](#storage-component), each model class except for `Priority` will inherit either `JsonableObject` or `JsonableArray` which are custom interfaces inheriting the `Jsonable` interface of _**json.simple**_. This requires the classes to implement the methods `toJson()` and `fromJson()`. This section will focus on `fromJson()`, which is used to implement the logic for **converting and mapping of JSON to objects of their respective type**.  "},{"lineNumber":671,"author":{"gitId":"keke101"},"content":"  "},{"lineNumber":672,"author":{"gitId":"keke101"},"content":"1. After loading the raw JSON string, `StorageManager` will call `Jsoner.deserialize()` to convert it into an object of `JsonObject`."},{"lineNumber":673,"author":{"gitId":"keke101"},"content":"2. At this point, `JsonObject` contains all the properties of `ProjectManager` and needs to be mapped back to a `ProjectManager` object."},{"lineNumber":674,"author":{"gitId":"keke101"},"content":"3. `StorageManager` will call `ProjectManager.fromJson()`, passing the `JSONObject` object from _Step 2_ as the parameter. "},{"lineNumber":675,"author":{"gitId":"keke101"},"content":"4. In `fromJson()`, there are two type of actions depending on the property it is mapping:  "},{"lineNumber":676,"author":{"gitId":"keke101"},"content":"   1. **Type Casting**: Properties that are primitive or standard can be mapped directly through type casting (e.g. `int`, `boolean`, `String` etc.)"},{"lineNumber":677,"author":{"gitId":"keke101"},"content":"   2. **\\*Calling `fromJson()` of the Actual Type**: Any property that is originally a type of the **Scrumptious model classes** will be mapped with the following steps:"},{"lineNumber":678,"author":{"gitId":"keke101"},"content":"      1. Create an empty object of the respective type (e.g. `Sprint`)."},{"lineNumber":679,"author":{"gitId":"keke101"},"content":"      2. Type cast the property as `JsonObject` or `JsonArray` depending on the actual type of the property (e.g. `(JsonArray) object`)."},{"lineNumber":680,"author":{"gitId":"keke101"},"content":"      3. Call `fromJson()` of the newly created object, passing the property as the parameter (e.g. `Sprint.fromJson()`)."},{"lineNumber":681,"author":{"gitId":"keke101"},"content":"      4. New object\u0027s `fromJson()` will **repeat the same process again under Step 4** for its own properties.  "},{"lineNumber":682,"author":{"gitId":"keke101"},"content":"      "},{"lineNumber":683,"author":{"gitId":"keke101"},"content":"\\*`Priority` is an **enum** and is the only model which does not follow this strictly. It is mapped by type casting"},{"lineNumber":684,"author":{"gitId":"gmit22"},"content":" the property as `String` first, then calling the `Priority.valueOf()` method to convert it into its respective **enum**.  "},{"lineNumber":685,"author":{"gitId":"keke101"},"content":""},{"lineNumber":686,"author":{"gitId":"homingjun"},"content":"#### 4.4.3. \u003ca id\u003d\"saving-data\"\u003eSaving Data\u003c/a\u003e  "},{"lineNumber":687,"author":{"gitId":"keke101"},"content":""},{"lineNumber":688,"author":{"gitId":"gmit22"},"content":"Data will be saved under two scenarios: "},{"lineNumber":689,"author":{"gitId":"gmit22"},"content":"1. When the program exits. "},{"lineNumber":690,"author":{"gitId":"gmit22"},"content":"1. Changes made to the data. "},{"lineNumber":691,"author":{"gitId":"keke101"},"content":""},{"lineNumber":692,"author":{"gitId":"homingjun"},"content":"##### 4.4.3.1. \u003ca id\u003d\"when-the-program-exits\"\u003eWhen the Program Exits\u003c/a\u003e"},{"lineNumber":693,"author":{"gitId":"keke101"},"content":"![Figure 4.4.3.1: Saving Data When Program Exits](image/developerguide/storage_save_1.png \"Saving Data When Program Exits\")  "},{"lineNumber":694,"author":{"gitId":"keke101"},"content":""},{"lineNumber":695,"author":{"gitId":"keke101"},"content":"_Figure 4.4.3.1: Saving Data When Program Exits_  "},{"lineNumber":696,"author":{"gitId":"keke101"},"content":""},{"lineNumber":697,"author":{"gitId":"keke101"},"content":"`Scrumptious` will call `destroy()` which calls `save()` before it returns."},{"lineNumber":698,"author":{"gitId":"keke101"},"content":""},{"lineNumber":699,"author":{"gitId":"homingjun"},"content":"##### 4.4.3.2. \u003ca id\u003d\"changes-made-to-the-data\"\u003eChanges Made to the Data\u003c/a\u003e"},{"lineNumber":700,"author":{"gitId":"keke101"},"content":"Changes made to the data during the runtime of the program can only be made by executing a command.  "},{"lineNumber":701,"author":{"gitId":"keke101"},"content":""},{"lineNumber":702,"author":{"gitId":"keke101"},"content":"![Figure 4.4.3.2: Saving Data When Changes Made](image/developerguide/storage_save_2.png \"Saving Data When Changes Made\")  "},{"lineNumber":703,"author":{"gitId":"keke101"},"content":""},{"lineNumber":704,"author":{"gitId":"keke101"},"content":"_Figure 4.4.3.2: Saving Data When Changes Made_  "},{"lineNumber":705,"author":{"gitId":"keke101"},"content":"   "},{"lineNumber":706,"author":{"gitId":"keke101"},"content":"As shown in the diagram above, each command class inherits the `shouldSave` property from `Command` class. `shouldSave` is a boolean variable and is initialised inside the constructor. `shouldSave` will be set to `true` if the command results in a change of data (e.g. adding a task, creating a sprint etc.), otherwise it is set to `false` (e.g. viewing projects, sprints etc.)."},{"lineNumber":707,"author":{"gitId":"keke101"},"content":""},{"lineNumber":708,"author":{"gitId":"keke101"},"content":"After executing the command by calling `execute()`, the program will call `save()` from `StorageManager` object if the `shouldSave` property is set to `true`."},{"lineNumber":709,"author":{"gitId":"keke101"},"content":""},{"lineNumber":710,"author":{"gitId":"homingjun"},"content":"##### 4.4.3.3. \u003ca id\u003d\"serialising-objects-to-json\"\u003eSerialising Objects to JSON\u003c/a\u003e"},{"lineNumber":711,"author":{"gitId":"homingjun"},"content":"![Figure 4.4.3.3: Serialising Sequence](image/developerguide/storage_save_serialise.png \"Serialising Sequence\")  "},{"lineNumber":712,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":713,"author":{"gitId":"homingjun"},"content":"_Figure 4.4.3.3: Serialising Sequence_  "},{"lineNumber":714,"author":{"gitId":"keke101"},"content":""},{"lineNumber":715,"author":{"gitId":"keke101"},"content":"As explained in [Storage Component](#storage-component), each model class except for `Priority` will inherit either `JsonableObject` or `JsonableArray` which are custom interfaces inheriting the `Jsonable` interface of _**json.simple**_. This requires the classes to implement the methods `toJson()` and `fromJson()`. This section will focus on `toJson()`, which is used to implement the logic for **serialising objects into JSON string**.  "},{"lineNumber":716,"author":{"gitId":"keke101"},"content":"When saving the data as JSON file, `StorageManager` will call `Jsoner.serialize()` of the _**json.simple**_, passing in the `ProjectManager` and `FileWriter` (points to the data file) object as the parameters. The library will automatically serialise the objects and sub-objects into JSON string depending on the type of the objects:"},{"lineNumber":717,"author":{"gitId":"keke101"},"content":" 1. **Primitive and Standard Types (e.g. `int`, `String`, `Collection`)**: The library can directly serialise these types into JSON string."},{"lineNumber":718,"author":{"gitId":"keke101"},"content":" 2. **\\*Scrumptious Model Types (e.g. `Project`, `Task`)**: The library will serialise these types by calling its `toJson()` method which contains the logic for the serialisation.  "},{"lineNumber":719,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":720,"author":{"gitId":"keke101"},"content":"\\*`Priority` is an exception, it is serialised by calling `name()` of the **enum** which will return its `String"},{"lineNumber":721,"author":{"gitId":"gmit22"},"content":"` representation."},{"lineNumber":722,"author":{"gitId":"-"},"content":"    "},{"lineNumber":723,"author":{"gitId":"homingjun"},"content":"## 5. \u003ca id\u003d\"appendix-requirements\"\u003eAppendix: Requirements\u003c/a\u003e"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"homingjun"},"content":"### 5.1. \u003ca id\u003d\"target-user-profile\"\u003eTarget User Profile\u003c/a\u003e"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"gmit22"},"content":"**_SCRUMptious_** is a command-line software targeted to project managers, team leaders and enterprises using the"},{"lineNumber":728,"author":{"gitId":"gmit22"},"content":"SCRUM methodology (agile) for product and project development. It is primarily catered to users who wish to"},{"lineNumber":729,"author":{"gitId":"gmit22"},"content":"develop a product in team using an organized framework. "},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"homingjun"},"content":"### 5.2. \u003ca id\u003d\"value-proposition\"\u003eValue Proposition\u003c/a\u003e"},{"lineNumber":732,"author":{"gitId":"-"},"content":""},{"lineNumber":733,"author":{"gitId":"gmit22"},"content":"**_SCRUMptious_** solves the problem faced by teams during development. "},{"lineNumber":734,"author":{"gitId":"gmit22"},"content":"It helps teams to keep up with rapid change and innovations that come in the course of development,"},{"lineNumber":735,"author":{"gitId":"gmit22"},"content":"mainly due to change in requirements by the customer. It is suitable for teams with clear focus, and limits"},{"lineNumber":736,"author":{"gitId":"gmit22"},"content":"distractions whilst promoting teamwork and collaboration."},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"homingjun"},"content":"## 5.3. \u003ca id\u003d\"user-stories\"\u003eUser Stories\u003c/a\u003e"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":741,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":742,"author":{"gitId":"gmit22"},"content":"|v1.0|Project Manager|Specify the goal for new sprint|Be clear about the main objective to be achieved.|"},{"lineNumber":743,"author":{"gitId":"gmit22"},"content":"|v1.0|Project Manager|Want to pre plan future sprints |Have a clear structure regarding project progress.|"},{"lineNumber":744,"author":{"gitId":"gmit22"},"content":"|v1.0|New user|Have access to a help menu|Learn to use the program easily|"},{"lineNumber":745,"author":{"gitId":"gmit22"},"content":"|v1.0|Project Manager|Want to add and remove tasks from future sprints|Pre-plan the development phase|"},{"lineNumber":746,"author":{"gitId":"gmit22"},"content":"|v1.0|Project Manager|Be able to manage many projects simultaneously|Work on different projects at the same time|"},{"lineNumber":747,"author":{"gitId":"gmit22"},"content":"|v1.0|Student/User|Be able to create a new project and give it a name|Identify the project I am working on|"},{"lineNumber":748,"author":{"gitId":"gmit22"},"content":"|v2.0|User/Manager|Clear data stored from previous sessions.|Start fresh when previous projects have finished|"},{"lineNumber":749,"author":{"gitId":"gmit22"},"content":"|v2.0|User/Team Lead|Be able to add and delete members associated with a project|Effectively keep track of everyone working on a project|"},{"lineNumber":750,"author":{"gitId":"gmit22"},"content":"|v2.0|Team Lead|Be able to assign tasks to team members|Keep track of who is working on which feature|"},{"lineNumber":751,"author":{"gitId":"gmit22"},"content":"|v2.0|Team member|Add tasks with specific priority|Understand what features/tasks are of greater urgency|"},{"lineNumber":752,"author":{"gitId":"gmit22"},"content":"|v2.0|Team member|Change the priority of added task|Update the task urgency depending on the feedback achieved after every sprint|"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"homingjun"},"content":"## 5.4. \u003ca id\u003d\"non-functional-requirements\"\u003eNon-Functional Requirements\u003c/a\u003e"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"gmit22"},"content":"* Should work on any _OS_ as long as it has Java 11 installed."},{"lineNumber":758,"author":{"gitId":"gmit22"},"content":"* The average user is someone who manages teams in development phases, and takes responsibility of "},{"lineNumber":759,"author":{"gitId":"gmit22"},"content":"delivering the product (eg: Team leader in University projects, Project Manager in enterprises etc)."},{"lineNumber":760,"author":{"gitId":"gmit22"},"content":"* The user prefers typing instructions and commands rather than using a GUI for management purposes."},{"lineNumber":761,"author":{"gitId":"-"},"content":""},{"lineNumber":762,"author":{"gitId":"homingjun"},"content":"## 5.5. \u003ca id\u003d\"glossary\"\u003eGlossary\u003c/a\u003e"},{"lineNumber":763,"author":{"gitId":"gmit22"},"content":"The terms listed in this glossary are in alphabetical order."},{"lineNumber":764,"author":{"gitId":"gmit22"},"content":"* _GUI_ - Graphical User Interface"},{"lineNumber":765,"author":{"gitId":"keke101"},"content":"* I/O - Input/Output is the communication between the computer and the user through GUI or terminal."},{"lineNumber":766,"author":{"gitId":"-"},"content":""},{"lineNumber":767,"author":{"gitId":"homingjun"},"content":"## 6. \u003ca id\u003d\"appendix-instructions-for-manual-testing\"\u003eAppendix: Instructions for manual testing\u003c/a\u003e"},{"lineNumber":768,"author":{"gitId":"-"},"content":""},{"lineNumber":769,"author":{"gitId":"gmit22"},"content":"1. Download the jar file and copy it into an empty folder."},{"lineNumber":770,"author":{"gitId":"gmit22"},"content":"1. Open a new terminal window and navigate to the same directory where the SCRUMptious.jar is located."},{"lineNumber":771,"author":{"gitId":"gmit22"},"content":"1. Enter the command `java -jar SCRUMptious.jar` into the terminal window to launch the application. The application"},{"lineNumber":772,"author":{"gitId":"gmit22"},"content":" should now be running."}],"authorContributionMap":{"gmit22":185,"homingjun":153,"e0426051":140,"keke101":87,"chocomango":183,"-":24}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chocomango"},"content":"# SCRUMptious"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"SCRUMptious is a command line software for project management designed for project managers following the scrum methodology to develop it. "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"chocomango":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"## Table of Contents"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"1. [Introduction](#introduction)\u003cbr\u003e"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;1.1. [Purpose](#purpose)\u003cbr\u003e"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;1.2. [Overview](#overview)\u003cbr\u003e"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;1.3. [Features](#features)\u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"1. [Quick Start](#quick-start)\u003cbr\u003e"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"1. [Commands](#commands)\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.1. [Project `project`](#project-codeprojectcode)\u003cbr\u003e "},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.1. [Create a New Project](#create-project)\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.2. [View Project Information](#view-project-information)\u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.3. [List All Projects](#list-all-projects)\u003cbr\u003e"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.4. [Select Project](#select-project)\u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.2. [Project Member `member`](#project-member-codemembercode)\u003cbr\u003e"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.2.1. [Add Team Members](#add-team-members)\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.2.2. [Remove Team Members](#remove-team-members)\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.3. [Project Backlog `task`](#project-backlog-codetaskcode)\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.1. [Add Tasks](#add-tasks)\u003cbr\u003e"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.2. [View Tasks](#view-task)\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.3. [Delete Tasks](#delete-tasks)\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.4. [Change the Priority of Tasks](#change-the-priority-of-a-tasks)\u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.5. [Mark Tasks as Complete](#mark-task-as-complete)\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.6. [View Tasks by descending priority](#view-tasks-in-descending-priority)\u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.4. [Sprint `sprint`](#sprint-codesprintcode)\u003cbr\u003e"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.1. [Create a New Sprint](#create-a-new-sprint)\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.2. [View Sprint Information](#view-sprint-information)\u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.3. [Edit Sprint Goal](#edit-sprint-goal)\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.4. [Add Tasks to the Sprint](#add-tasks-to-the-sprint)\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.5. [Delete Tasks from the Sprint](#delete-tasks-from-sprint)\u003cbr\u003e"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.6. [Allocate Tasks to Team Members](#allocate-tasks-to-team-members)\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.7. [Deallocate Tasks from Team Members](#deallocate-tasks-from-team-members)\u003cbr\u003e"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.5. [Storage `storage`](#storage-codestoragecode)\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.5.1. [Clear Storage](#clear-storage)\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.6. [Help `help`](#help-codehelpcode)\u003cbr\u003e"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.6.1. [Help Menu](#help-menu)\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.6.2. [Project Help](#project-help)\u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.6.3. [Member Help](#member-help)\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.6.4. [Task Help](#task-help)\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.6.5. [Sprint Help](#sprint-help)\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.6.6. [Storage Help](#storage-help)\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"\u0026nbsp;\u0026nbsp;3.7. [Exit application `bye`](#exit-application-codebyecode)\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"1. [Command Summary](#command-summary)"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"## 1. \u003ca id\u003d\"introduction\"\u003eIntroduction\u003c/a\u003e"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"### 1.1. \u003ca id\u003d\"purpose\"\u003ePurpose\u003c/a\u003e"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"This document is the User Manual of the SCRUMptious. It is intended to provide all the necessary information to use this software.  "},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":52,"author":{"gitId":"homingjun"},"content":"### 1.2. \u003ca id\u003d\"overview\"\u003eOverview\u003c/a\u003e"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"SCRUMptious is a command-line project management software, designed for project managers who adopt the [SCRUM](https://www.scrumguides.org/scrum-guide.html) methodology.  "},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":55,"author":{"gitId":"homingjun"},"content":"### 1.3. \u003ca id\u003d\"features\"\u003eFeatures\u003c/a\u003e"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"* Manage multiple projects"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"* Breakdown projects into smaller iterations known as **sprints**"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"* Manage tasks in the form of **backlog** items"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"* Assign tasks to different **sprint** iterations"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"* Assign tasks to team members"},{"lineNumber":61,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":62,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":63,"author":{"gitId":"homingjun"},"content":"## 2. \u003ca id\u003d\"quick-start\"\u003eQuick Start\u003c/a\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"1. Download the latest version of `SCRUMptious.jar` from [here](https://github.com/AY2021S1-CS2113T-F11-4/tp/releases/download/v2.1/SCRUMptious.jar)."},{"lineNumber":67,"author":{"gitId":"homingjun"},"content":"1. Ensure that you have a functional Command Line Interface (CLI)."},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"1. Navigate to the folder where the `SCRUMptious.jar` is located at. (E.g. `cd \"C:\\Users\\John\\Downloads\"`)"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"![Directory Example](./image/userguide/directory.jpeg \"Directory Example\")  "},{"lineNumber":70,"author":{"gitId":"keke101"},"content":""},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"1. Run the command `java -jar SCRUMptious.jar`. Ensure that the `SCRUMptious.jar` file path is specified correctly according to where you copied it to."},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"    ```"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"    User@This-PC:~/$ java -jar SCRUMptious.jar"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"       _____  _____ _____  _    _ __  __       _   _  "},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"      / ____|/ ____|  __ \\| |  | |  \\/  |     | | (_) "},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"     | (___ | |    | |__) | |  | | \\  / |_ __ | |_ _  ___  _   _ ___"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"      \\___ \\| |    |  _  /| |  | | |\\/| | \u0027_ \\| __| |/ _ \\| | | / __|"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"      ____) | |____| | \\ \\| |__| | |  | | |_) | |_| | (_) | |_| \\__ \\ "},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"     |_____/ \\_____|_|  \\_\\\\____/|_|  |_| .__/ \\__|_|\\___/ \\__,_|___/ "},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"                                        | |"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"                                        |_|"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"    WELCOME TO SCRUMPTIOUS"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    command\u003e"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"    ```"},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"1. Type the command `project /create -title Scrumptious -desc A java project -dur 30 -sd 10` "},{"lineNumber":86,"author":{"gitId":"homingjun"},"content":"into the command line and press `Enter` to execute it."},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"1. If the setup is correct, you will be able to view the project by executing `project /view`:"},{"lineNumber":88,"author":{"gitId":"homingjun"},"content":"   ```"},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"   command\u003e project /create -title Scrumptious -desc A java project -dur 30 -sd 10"},{"lineNumber":90,"author":{"gitId":"homingjun"},"content":"   Project successfully created."},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"       Title: Scrumptious"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"   command\u003e project /view"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":"   [ID: 1]"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"   [Title: Scrumptious ]"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":"   [Description: A java project ]"},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"   [No members added]"},{"lineNumber":98,"author":{"gitId":"keke101"},"content":"   [Project will start along with the first sprint]"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":"   [Project backlog is empty]"},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"   [There are no Sprints]"},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":102,"author":{"gitId":"homingjun"},"content":"   ```"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"homingjun"},"content":"## 3. \u003ca id\u003d\"commands\"\u003eCommands\u003c/a\u003e"},{"lineNumber":105,"author":{"gitId":"keke101"},"content":""},{"lineNumber":106,"author":{"gitId":"homingjun"},"content":"### 3.1. \u003ca id\u003d\"project-codeprojectcode\"\u003eProject `project`\u003c/a\u003e"},{"lineNumber":107,"author":{"gitId":"homingjun"},"content":"#### 3.1.1. \u003ca id\u003d\"create-project\"\u003eCreate Project\u003c/a\u003e"},{"lineNumber":108,"author":{"gitId":"keke101"},"content":"Create a new project.  "},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"##### Format: `project /create -title \u003ctitle\u003e -desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e`"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"##### Constraints: "},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"* All tags are to be specified when creating a new project.  "},{"lineNumber":112,"author":{"gitId":"keke101"},"content":"##### Mandatory Tags:  "},{"lineNumber":113,"author":{"gitId":"keke101"},"content":"* `-title` Specify the title of the project."},{"lineNumber":114,"author":{"gitId":"keke101"},"content":"* `-desc` Specify the project description."},{"lineNumber":115,"author":{"gitId":"keke101"},"content":"* `-dur` Specify the duration of the project. (Number of days)"},{"lineNumber":116,"author":{"gitId":"keke101"},"content":"* `-sd` Specify the duration of a sprint. (Number of days)"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"##### Example: `project /create -title MeTube -desc video streaming software -dur 90 -sd 10`"},{"lineNumber":118,"author":{"gitId":"homingjun"},"content":"* Creates a project titled MeTube which is a video streaming software. "},{"lineNumber":119,"author":{"gitId":"homingjun"},"content":"* The project will last for 90 days and the sprints will run on a 10 day interval."},{"lineNumber":120,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":121,"author":{"gitId":"keke101"},"content":"```"},{"lineNumber":122,"author":{"gitId":"keke101"},"content":"Project successfully created."},{"lineNumber":123,"author":{"gitId":"gmit22"},"content":"    Title: MeTube"},{"lineNumber":124,"author":{"gitId":"keke101"},"content":"```"},{"lineNumber":125,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":126,"author":{"gitId":"homingjun"},"content":"#### 3.1.2. \u003ca id\u003d\"view-project-information\"\u003eView Project Information\u003c/a\u003e"},{"lineNumber":127,"author":{"gitId":"keke101"},"content":"View project information which includes title, description, time-period and team members of the project. It displays the project backlog, and the details of the ongoing sprint."},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"##### Format: `project /view`"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"##### Example: `project /view`"},{"lineNumber":130,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":131,"author":{"gitId":"gmit22"},"content":" ```"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":133,"author":{"gitId":"gmit22"},"content":"[Title: MeTube ]"},{"lineNumber":134,"author":{"gitId":"gmit22"},"content":"[ID: 1]"},{"lineNumber":135,"author":{"gitId":"gmit22"},"content":"[Description: video streaming software ]"},{"lineNumber":136,"author":{"gitId":"gmit22"},"content":"[No members added]"},{"lineNumber":137,"author":{"gitId":"gmit22"},"content":"[Project will start along with the first sprint]"},{"lineNumber":138,"author":{"gitId":"gmit22"},"content":"[Project backlog is empty]"},{"lineNumber":139,"author":{"gitId":"gmit22"},"content":"[There are no Sprints]"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":141,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":142,"author":{"gitId":"gmit22"},"content":"  "},{"lineNumber":143,"author":{"gitId":"homingjun"},"content":"#### 3.1.3. \u003ca id\u003d\"list-all-projects\"\u003eList All Projects\u003c/a\u003e"},{"lineNumber":144,"author":{"gitId":"keke101"},"content":"Outputs a list of all projects added by the user. A summary page which shows the project `id`, project `description` and project `title`."},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"##### Format: `project /list`"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"##### Example: `project /list`"},{"lineNumber":147,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":148,"author":{"gitId":"gmit22"},"content":"```"},{"lineNumber":149,"author":{"gitId":"gmit22"},"content":"Following are the added projects: "},{"lineNumber":150,"author":{"gitId":"gmit22"},"content":"  \tID Title \t\tDescription"},{"lineNumber":151,"author":{"gitId":"gmit22"},"content":"  \t2) Scrump \tCLI Software Development Project"},{"lineNumber":152,"author":{"gitId":"gmit22"},"content":"  \t1) MeTube \tvideo streaming software"},{"lineNumber":153,"author":{"gitId":"gmit22"},"content":"```"},{"lineNumber":154,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":155,"author":{"gitId":"homingjun"},"content":"#### 3.1.4. \u003ca id\u003d\"select-project\"\u003eSelect Project\u003c/a\u003e"},{"lineNumber":156,"author":{"gitId":"gmit22"},"content":"Select the project that will be referenced to for any other commands. To get the `id` of all the projects added by"},{"lineNumber":157,"author":{"gitId":"gmit22"},"content":" the user, you can execute `project /list`."},{"lineNumber":158,"author":{"gitId":"chocomango"},"content":"##### Format: `project /select \u003cid\u003e`"},{"lineNumber":159,"author":{"gitId":"chocomango"},"content":"##### Constraints: "},{"lineNumber":160,"author":{"gitId":"gmit22"},"content":"* A project corresponding to `id` exists."},{"lineNumber":161,"author":{"gitId":"keke101"},"content":"##### Example: `project /select 2`"},{"lineNumber":162,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":163,"author":{"gitId":"gmit22"},"content":"```"},{"lineNumber":164,"author":{"gitId":"gmit22"},"content":"Project 2 has been selected."},{"lineNumber":165,"author":{"gitId":"gmit22"},"content":"```"},{"lineNumber":166,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":167,"author":{"gitId":"homingjun"},"content":"### 3.2. \u003ca id\u003d\"project-member-codemembercode\"\u003eProject Member `member`\u003c/a\u003e"},{"lineNumber":168,"author":{"gitId":"homingjun"},"content":"#### 3.2.1. \u003ca id\u003d\"add-team-members\"\u003eAdd Team Members\u003c/a\u003e"},{"lineNumber":169,"author":{"gitId":"homingjun"},"content":"Add team members into the project.  "},{"lineNumber":170,"author":{"gitId":"chocomango"},"content":"##### Format: `member /add \u003cusername\u003e [\u003cusername\u003e ...]`"},{"lineNumber":171,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":172,"author":{"gitId":"homingjun"},"content":"* At least one username must be specified"},{"lineNumber":173,"author":{"gitId":"chocomango"},"content":"* Username must be an alphanumeric String without spaces"},{"lineNumber":174,"author":{"gitId":"chocomango"},"content":"##### Example: `member /add john mary`"},{"lineNumber":175,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":176,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":177,"author":{"gitId":"homingjun"},"content":"john has been added to the project."},{"lineNumber":178,"author":{"gitId":"homingjun"},"content":"mary has been added to the project."},{"lineNumber":179,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":180,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":181,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":182,"author":{"gitId":"homingjun"},"content":"#### 3.2.2. \u003ca id\u003d\"remove-team-members\"\u003eRemove Team Members\u003c/a\u003e"},{"lineNumber":183,"author":{"gitId":"homingjun"},"content":"Remove team members from the project"},{"lineNumber":184,"author":{"gitId":"chocomango"},"content":"##### Format: `member /del \u003cusername\u003e [\u003cusername\u003e ...]`"},{"lineNumber":185,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":186,"author":{"gitId":"homingjun"},"content":"* At least one username must be specified"},{"lineNumber":187,"author":{"gitId":"homingjun"},"content":"* Username must be an alphanumeric String"},{"lineNumber":188,"author":{"gitId":"chocomango"},"content":"##### Example: `member /del john mary`"},{"lineNumber":189,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":190,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":191,"author":{"gitId":"homingjun"},"content":"john has been removed from the project."},{"lineNumber":192,"author":{"gitId":"homingjun"},"content":"mary has been removed from the project."},{"lineNumber":193,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":194,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":195,"author":{"gitId":"homingjun"},"content":"### 3.3. \u003ca id\u003d\"project-backlog-codetaskcode\"\u003eProject Backlog `task`\u003c/a\u003e"},{"lineNumber":196,"author":{"gitId":"homingjun"},"content":"#### 3.3.1. \u003ca id\u003d\"add-tasks\"\u003eAdd Tasks\u003c/a\u003e"},{"lineNumber":197,"author":{"gitId":"chocomango"},"content":"Add a task to the project backlog."},{"lineNumber":198,"author":{"gitId":"chocomango"},"content":"##### Format: `task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003ccategory\u003e`"},{"lineNumber":199,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":200,"author":{"gitId":"e0426051"},"content":"* The title, description and category must be specified, otherwise the task is not added."},{"lineNumber":201,"author":{"gitId":"e0426051"},"content":"* The priority entered must belong to the standard options as prescribed by the enum: [“HIGH”, “MEDIUM”, “LOW”]"},{"lineNumber":202,"author":{"gitId":"e0426051"},"content":"* The task will be added as \"not done\" status. Users need to manually mark a task as done after creation."},{"lineNumber":203,"author":{"gitId":"e0426051"},"content":"* Tasks can only be created if a project has been created."},{"lineNumber":204,"author":{"gitId":"keke101"},"content":"##### Example: `task /add -title Add UI -desc add an interactive UI -priority HIGH`"},{"lineNumber":205,"author":{"gitId":"keke101"},"content":"* Adds a task of title `Add UI`, description `add an interactive UI` and priority `HIGH` into the backlog."},{"lineNumber":206,"author":{"gitId":"keke101"},"content":"##### Expected Outcome"},{"lineNumber":207,"author":{"gitId":"e0426051"},"content":"(Assuming there are no prior tasks created)"},{"lineNumber":208,"author":{"gitId":"e0426051"},"content":"```"},{"lineNumber":209,"author":{"gitId":"e0426051"},"content":"Task successfully created."},{"lineNumber":210,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":211,"author":{"gitId":"e0426051"},"content":"        ID: 1"},{"lineNumber":212,"author":{"gitId":"e0426051"},"content":"        Title: Add UI"},{"lineNumber":213,"author":{"gitId":"e0426051"},"content":"        Description: add an interactive UI"},{"lineNumber":214,"author":{"gitId":"e0426051"},"content":"        Priority: High priority"},{"lineNumber":215,"author":{"gitId":"e0426051"},"content":"        Completion: Incomplete"},{"lineNumber":216,"author":{"gitId":"e0426051"},"content":"        Task have yet to be assigned to anyone"},{"lineNumber":217,"author":{"gitId":"e0426051"},"content":"```"},{"lineNumber":218,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":219,"author":{"gitId":"homingjun"},"content":"#### 3.3.2. \u003ca id\u003d\"view-task\"\u003eView Tasks\u003c/a\u003e"},{"lineNumber":220,"author":{"gitId":"chocomango"},"content":"Display the information of the specified task."},{"lineNumber":221,"author":{"gitId":"e0426051"},"content":"##### Format: `task /view \u003ctaskid\u003e [\u003ctaskid\u003e...]`"},{"lineNumber":222,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":223,"author":{"gitId":"e0426051"},"content":"* The task ID entered must be a positive integer smaller or equal to the total number of tasks added, and must be specified."},{"lineNumber":224,"author":{"gitId":"e0426051"},"content":"##### Example: `task /view 3 6 9`"},{"lineNumber":225,"author":{"gitId":"e0426051"},"content":"* Views the third, sixth and ninth task."},{"lineNumber":226,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":227,"author":{"gitId":"e0426051"},"content":"(Assuming the tasks have the following attributes respectively:"},{"lineNumber":228,"author":{"gitId":"e0426051"},"content":"Title: `Foo`,`Bar`,`FooBar` , Description: `one`,`two`,`three`, Priority: `HIGH`,`MEDIUM`,`LOW`, Done: `false`,`false`,`true`)"},{"lineNumber":229,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":230,"author":{"gitId":"e0426051"},"content":"The details of the tasks are as follows:"},{"lineNumber":231,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":232,"author":{"gitId":"e0426051"},"content":"    ID: 3"},{"lineNumber":233,"author":{"gitId":"e0426051"},"content":"    Foo"},{"lineNumber":234,"author":{"gitId":"e0426051"},"content":"    Description: one"},{"lineNumber":235,"author":{"gitId":"e0426051"},"content":"    Priority: High priority"},{"lineNumber":236,"author":{"gitId":"e0426051"},"content":"    Completion: Incomplete"},{"lineNumber":237,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":238,"author":{"gitId":"e0426051"},"content":"    ID: 6"},{"lineNumber":239,"author":{"gitId":"e0426051"},"content":"    Bar"},{"lineNumber":240,"author":{"gitId":"e0426051"},"content":"    Description: two"},{"lineNumber":241,"author":{"gitId":"e0426051"},"content":"    Priority: Medium priority"},{"lineNumber":242,"author":{"gitId":"e0426051"},"content":"    Completion: Incomplete"},{"lineNumber":243,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":244,"author":{"gitId":"e0426051"},"content":"    ID: 9"},{"lineNumber":245,"author":{"gitId":"e0426051"},"content":"    FooBar"},{"lineNumber":246,"author":{"gitId":"e0426051"},"content":"    Description: three"},{"lineNumber":247,"author":{"gitId":"e0426051"},"content":"    Priority: Low priority"},{"lineNumber":248,"author":{"gitId":"e0426051"},"content":"    Completion: Completed"},{"lineNumber":249,"author":{"gitId":"homingjun"},"content":" ```"},{"lineNumber":250,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":251,"author":{"gitId":"homingjun"},"content":"#### 3.3.3. \u003ca id\u003d\"delete-tasks\"\u003eDelete Tasks\u003c/a\u003e"},{"lineNumber":252,"author":{"gitId":"chocomango"},"content":"Delete the specified task from the project backlog."},{"lineNumber":253,"author":{"gitId":"chocomango"},"content":"##### Format: `task /del \u003ctaskid\u003e [\u003ctaskid\u003e...]`"},{"lineNumber":254,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":255,"author":{"gitId":"e0426051"},"content":"* There must be at least one supplied task ID for deletion."},{"lineNumber":256,"author":{"gitId":"e0426051"},"content":"* Each task ID supplied must be a positive integer smaller or equal to the total number of tasks added."},{"lineNumber":257,"author":{"gitId":"keke101"},"content":"##### Example: `task /del 5 7 9`"},{"lineNumber":258,"author":{"gitId":"keke101"},"content":"* Deletes the fifth, seventh and ninth task."},{"lineNumber":259,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":260,"author":{"gitId":"e0426051"},"content":"(Assuming the tasks have the following titles, respectively: `Add parser`, `Del UI` and `UI`)"},{"lineNumber":261,"author":{"gitId":"chocomango"},"content":"```"},{"lineNumber":262,"author":{"gitId":"chocomango"},"content":"The corresponding task Add parser has been removed from project."},{"lineNumber":263,"author":{"gitId":"chocomango"},"content":"The corresponding task Del UI has been removed from project."},{"lineNumber":264,"author":{"gitId":"chocomango"},"content":"The corresponding task UI has been removed from project."},{"lineNumber":265,"author":{"gitId":"chocomango"},"content":"```"},{"lineNumber":266,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":267,"author":{"gitId":"homingjun"},"content":"#### 3.3.4. \u003ca id\u003d\"change-the-priority-of-a-tasks\"\u003eChange the Priority of a Task\u003c/a\u003e"},{"lineNumber":268,"author":{"gitId":"homingjun"},"content":"Change the priority of the specified task."},{"lineNumber":269,"author":{"gitId":"chocomango"},"content":"##### Format: `task /priority -priority \u003ccategory\u003e -id \u003ctaskid\u003e`"},{"lineNumber":270,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":271,"author":{"gitId":"e0426051"},"content":"* Task ID and priority level must be entered."},{"lineNumber":272,"author":{"gitId":"e0426051"},"content":"* The Task ID entered must be a positive integer smaller or equal to the total number of tasks added."},{"lineNumber":273,"author":{"gitId":"e0426051"},"content":"* The priority entered must belong to the standard options as prescribed by the enum: [“HIGH”, “MEDIUM”, “LOW”]"},{"lineNumber":274,"author":{"gitId":"keke101"},"content":"##### Example: `task /priority -priority HIGH -id 1`"},{"lineNumber":275,"author":{"gitId":"keke101"},"content":"* Sets the first task with a priority of HIGH, regardless of its previous priority level"},{"lineNumber":276,"author":{"gitId":"keke101"},"content":"##### Expected Outcome: (Assuming task 1 has title `Add parser`)"},{"lineNumber":277,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":278,"author":{"gitId":"e0426051"},"content":"The task Add parser has its priority changed to:"},{"lineNumber":279,"author":{"gitId":"e0426051"},"content":"        High priority"},{"lineNumber":280,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":281,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":282,"author":{"gitId":"homingjun"},"content":"#### 3.3.5. \u003ca id\u003d\"mark-task-as-complete\"\u003eMark Tasks as Complete\u003c/a\u003e"},{"lineNumber":283,"author":{"gitId":"chocomango"},"content":"Mark specified task as complete."},{"lineNumber":284,"author":{"gitId":"e0426051"},"content":"##### Format: `task /done \u003ctaskid\u003e [\u003ctaskid\u003e...]`"},{"lineNumber":285,"author":{"gitId":"e0426051"},"content":"##### Example: `task /done 1 2 3`"},{"lineNumber":286,"author":{"gitId":"keke101"},"content":"* Marks the first task as done."},{"lineNumber":287,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":288,"author":{"gitId":"e0426051"},"content":"* There must be at least one supplied task ID for marking of completion."},{"lineNumber":289,"author":{"gitId":"e0426051"},"content":"* Each task ID supplied must be a positive integer smaller or equal to the total number of tasks added."},{"lineNumber":290,"author":{"gitId":"e0426051"},"content":"##### Expected outcome: (Assuming the tasks have titles `Add parser`, `Foo` and `Bar` respectively)"},{"lineNumber":291,"author":{"gitId":"keke101"},"content":"```"},{"lineNumber":292,"author":{"gitId":"keke101"},"content":"Add parser has been marked as done."},{"lineNumber":293,"author":{"gitId":"keke101"},"content":"Foo has been marked as done."},{"lineNumber":294,"author":{"gitId":"keke101"},"content":"Bar has been marked as done."},{"lineNumber":295,"author":{"gitId":"keke101"},"content":"```"},{"lineNumber":296,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":297,"author":{"gitId":"homingjun"},"content":"#### 3.3.6. \u003ca id\u003d\"view-tasks-in-descending-priority\"\u003eView Tasks in descending priority\u003c/a\u003e"},{"lineNumber":298,"author":{"gitId":"e0426051"},"content":"Views all tasks in current project, arranged by their priority. The higher priority tasks are shown first."},{"lineNumber":299,"author":{"gitId":"e0426051"},"content":"##### Format: `task /priorityview`"},{"lineNumber":300,"author":{"gitId":"e0426051"},"content":"##### Constraints: "},{"lineNumber":301,"author":{"gitId":"e0426051"},"content":"* There are no parameters for this command. Any parameters added will be ignored."},{"lineNumber":302,"author":{"gitId":"e0426051"},"content":"##### Expected outcome: (Assuming there are 3 tasks with titles `Foo` of high priority, `Bar` of low priority and `FooBar` of medium priority respectively)"},{"lineNumber":303,"author":{"gitId":"e0426051"},"content":"```"},{"lineNumber":304,"author":{"gitId":"e0426051"},"content":"The details of the tasks, in descending priority, are as follows: "},{"lineNumber":305,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":306,"author":{"gitId":"e0426051"},"content":"\tID: 1"},{"lineNumber":307,"author":{"gitId":"e0426051"},"content":"\tTitle: Foo"},{"lineNumber":308,"author":{"gitId":"e0426051"},"content":"\tDescription: abcdefg"},{"lineNumber":309,"author":{"gitId":"e0426051"},"content":"\tPriority: High priority"},{"lineNumber":310,"author":{"gitId":"e0426051"},"content":"\tCompletion: Incomplete"},{"lineNumber":311,"author":{"gitId":"e0426051"},"content":"\tTask have yet to be assigned to anyone"},{"lineNumber":312,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":313,"author":{"gitId":"e0426051"},"content":"\tID: 3"},{"lineNumber":314,"author":{"gitId":"e0426051"},"content":"\tTitle: FooBar"},{"lineNumber":315,"author":{"gitId":"e0426051"},"content":"\tDescription: abcdefg"},{"lineNumber":316,"author":{"gitId":"e0426051"},"content":"\tPriority: Medium priority"},{"lineNumber":317,"author":{"gitId":"e0426051"},"content":"\tCompletion: Incomplete"},{"lineNumber":318,"author":{"gitId":"e0426051"},"content":"\tTask have yet to be assigned to anyone"},{"lineNumber":319,"author":{"gitId":"e0426051"},"content":"[Task]"},{"lineNumber":320,"author":{"gitId":"e0426051"},"content":"\tID: 2"},{"lineNumber":321,"author":{"gitId":"e0426051"},"content":"\tTitle: Bar"},{"lineNumber":322,"author":{"gitId":"e0426051"},"content":"\tDescription: abcdefgh"},{"lineNumber":323,"author":{"gitId":"e0426051"},"content":"\tPriority: Low priority"},{"lineNumber":324,"author":{"gitId":"e0426051"},"content":"\tCompletion: Incomplete"},{"lineNumber":325,"author":{"gitId":"e0426051"},"content":"\tTask have yet to be assigned to anyone"},{"lineNumber":326,"author":{"gitId":"e0426051"},"content":"```"},{"lineNumber":327,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":328,"author":{"gitId":"homingjun"},"content":"### 3.4. \u003ca id\u003d\"sprint-codesprintcode\"\u003eSprint `sprint`\u003c/a\u003e"},{"lineNumber":329,"author":{"gitId":"keke101"},"content":"In SCRUMptious, a project will be broken down into smaller iterations known as **sprints**. After planning and creating the sprints, you can allocate tasks to these iterations and assign them to members of the project later on."},{"lineNumber":330,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":331,"author":{"gitId":"keke101"},"content":"The following section will explain the commands to manage sprints."},{"lineNumber":332,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":333,"author":{"gitId":"homingjun"},"content":"#### 3.4.1. \u003ca id\u003d\"create-a-new-sprint\"\u003eCreate a New Sprint\u003c/a\u003e"},{"lineNumber":334,"author":{"gitId":"chocomango"},"content":"Create a new sprint for the project."},{"lineNumber":335,"author":{"gitId":"keke101"},"content":"##### Format: `sprint /create -goal \u003cgoal_input\u003e [-start YYYYMMDD] [-project \u003cid\u003e]`"},{"lineNumber":336,"author":{"gitId":"chocomango"},"content":"##### Constraints:   "},{"lineNumber":337,"author":{"gitId":"chocomango"},"content":"* Project must be created."},{"lineNumber":338,"author":{"gitId":"chocomango"},"content":"##### Mandatory Tag:"},{"lineNumber":339,"author":{"gitId":"chocomango"},"content":"* `-goal` Specify the goal for the sprint."},{"lineNumber":340,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:   "},{"lineNumber":341,"author":{"gitId":"chocomango"},"content":"* `-start` Specify the start date of the sprint."},{"lineNumber":342,"author":{"gitId":"chocomango"},"content":"    * Format: Start date must be in `YYYYMMDD` format.  "},{"lineNumber":343,"author":{"gitId":"keke101"},"content":"    * Example: `sprint /create -goal UI -start 20201010` - New sprint to start on 10 October 2020. "},{"lineNumber":344,"author":{"gitId":"keke101"},"content":"    * If not specified: Start date will be the day the command executes."},{"lineNumber":345,"author":{"gitId":"keke101"},"content":"    * Note: "},{"lineNumber":346,"author":{"gitId":"keke101"},"content":"      * If this is the first sprint of the project, the date specified will be the start date for both the project and sprint."},{"lineNumber":347,"author":{"gitId":"keke101"},"content":"      * Otherwise, this tag will be ignored."},{"lineNumber":348,"author":{"gitId":"keke101"},"content":"* `-project` Specify the project using its ID that will hold the new Sprint. "},{"lineNumber":349,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /create -goal UI -start 20201010 -project 3` - New Sprint to be added to Project 3.    "},{"lineNumber":350,"author":{"gitId":"keke101"},"content":"    * If not specified: Last selected project will own the new Sprint. (see [Select Project](#select-project))"},{"lineNumber":351,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /create -goal Shopping Cart -start 20201010`"},{"lineNumber":352,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":353,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":354,"author":{"gitId":"chocomango"},"content":"[Project ID: 1]"},{"lineNumber":355,"author":{"gitId":"chocomango"},"content":"First Sprint: Project will start along with the newly created sprint"},{"lineNumber":356,"author":{"gitId":"chocomango"},"content":"Project period: 2020-10-10 to 2020-11-08"},{"lineNumber":357,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":358,"author":{"gitId":"chocomango"},"content":"[ID: 1]"},{"lineNumber":359,"author":{"gitId":"chocomango"},"content":"[Goal: Shopping Cart]"},{"lineNumber":360,"author":{"gitId":"chocomango"},"content":"[Period: 2020-10-10 - 2020-10-19]"},{"lineNumber":361,"author":{"gitId":"chocomango"},"content":"[No allocated tasks]"},{"lineNumber":362,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":363,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":364,"author":{"gitId":"homingjun"},"content":"  "},{"lineNumber":365,"author":{"gitId":"homingjun"},"content":"#### 3.4.2. \u003ca id\u003d\"view-sprint-information\"\u003eView Sprint Information\u003c/a\u003e"},{"lineNumber":366,"author":{"gitId":"keke101"},"content":"Display the information of the current or specified sprint."},{"lineNumber":367,"author":{"gitId":"chocomango"},"content":"##### Format: `sprint /view [optional tags]`"},{"lineNumber":368,"author":{"gitId":"chocomango"},"content":"##### Constraints:   "},{"lineNumber":369,"author":{"gitId":"chocomango"},"content":"* Project must be created."},{"lineNumber":370,"author":{"gitId":"chocomango"},"content":"* Sprint must be created. "},{"lineNumber":371,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:"},{"lineNumber":372,"author":{"gitId":"chocomango"},"content":"* No optional tag: View the ongoing sprint in the select project."},{"lineNumber":373,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /view`  "},{"lineNumber":374,"author":{"gitId":"chocomango"},"content":"* No optional tag but specify the Sprint using its ID."},{"lineNumber":375,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /view 2` - View the second sprint of the selected Project.                                                                                    "},{"lineNumber":376,"author":{"gitId":"chocomango"},"content":"* `-project` Specify the Project using its ID. "},{"lineNumber":377,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /view -project 2` - View the current sprint of the Project 2."},{"lineNumber":378,"author":{"gitId":"keke101"},"content":"    * If not specified: Selected Project determined by the [Project select command](#select-project) will be chosen."},{"lineNumber":379,"author":{"gitId":"chocomango"},"content":"* `-sprint` Specify the Sprint using its ID."},{"lineNumber":380,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /view -project 2 -sprint 3` - View the third sprint of the Project 2."},{"lineNumber":381,"author":{"gitId":"chocomango"},"content":"    * If not specified: Ongoing Sprint.         "},{"lineNumber":382,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /view`"},{"lineNumber":383,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":384,"author":{"gitId":"chocomango"},"content":"Note: Expected outcome will be affected by the date of command execution (2020-10-15 in the example)  "},{"lineNumber":385,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":386,"author":{"gitId":"chocomango"},"content":"[Project ID: 1] "},{"lineNumber":387,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":388,"author":{"gitId":"chocomango"},"content":"[ID: 1]"},{"lineNumber":389,"author":{"gitId":"chocomango"},"content":"[Goal: Shopping Cart ]"},{"lineNumber":390,"author":{"gitId":"chocomango"},"content":"[Period: 2020-10-10 - 2020-10-19] "},{"lineNumber":391,"author":{"gitId":"chocomango"},"content":"[Remaining: 4 days]"},{"lineNumber":392,"author":{"gitId":"chocomango"},"content":"[No allocated tasks]"},{"lineNumber":393,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":394,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":395,"author":{"gitId":"homingjun"},"content":"#### 3.4.3. \u003ca id\u003d\"edit-sprint-goal\"\u003eEdit Sprint Goal\u003c/a\u003e                                                                                                       "},{"lineNumber":396,"author":{"gitId":"chocomango"},"content":"Edit the Sprint goal of the selected sprint.                                                                                                  "},{"lineNumber":397,"author":{"gitId":"chocomango"},"content":"##### Format: `sprint /edit -goal \u003cgoal_input\u003e [optional tags]`                                                                     "},{"lineNumber":398,"author":{"gitId":"chocomango"},"content":"##### Constraints:                                                                                                                    "},{"lineNumber":399,"author":{"gitId":"chocomango"},"content":"* Project must be created. "},{"lineNumber":400,"author":{"gitId":"chocomango"},"content":"* Sprint must be created.                                                                                                           "},{"lineNumber":401,"author":{"gitId":"chocomango"},"content":"* `goal` must be specified.                                                                                                           "},{"lineNumber":402,"author":{"gitId":"chocomango"},"content":"##### Mandatory Tag:                                                                                                                  "},{"lineNumber":403,"author":{"gitId":"chocomango"},"content":"* `-goal` Specify the new goal for the sprint.                                                                                            "},{"lineNumber":404,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:                                                                                                                  "},{"lineNumber":405,"author":{"gitId":"chocomango"},"content":"* No optional tag: Edit the ongoing sprint in the select project.                                                                          "},{"lineNumber":406,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /edit -goal Add Documentation` - Edit the goal for the ongoing sprint in the select project.                                         "},{"lineNumber":407,"author":{"gitId":"chocomango"},"content":"* `-project` Specify the Project using its ID.                                                                           "},{"lineNumber":408,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /edit -project 2 -goal Add Documentation` - Edit the goal for the ongoing sprint in Project 2.                                     "},{"lineNumber":409,"author":{"gitId":"keke101"},"content":"    * If not specified: Selected Project determined by the [Project select command](#select-project) will be chosen. "},{"lineNumber":410,"author":{"gitId":"chocomango"},"content":"* `-sprint` Specify the Sprint using its ID.                                                                                                               "},{"lineNumber":411,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /edit -project 2 -sprint 3 -goal Add Documentation` - Edit the goal for the third sprint in Project 2.                                                               "},{"lineNumber":412,"author":{"gitId":"chocomango"},"content":"    * If not specified: Ongoing Sprint.                                                                                                                                   "},{"lineNumber":413,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /edit -goal Add Documentation`                                                                   "},{"lineNumber":414,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:  "},{"lineNumber":415,"author":{"gitId":"chocomango"},"content":"Note: Expected outcome will be affected by the date of command execution (2020-10-15 in the example)                                                                                                            "},{"lineNumber":416,"author":{"gitId":"chocomango"},"content":"```                                                                                                                                   "},{"lineNumber":417,"author":{"gitId":"chocomango"},"content":"[Project ID: 1]                                                                                                                                                                                                                                                                                                                                                                                                                       "},{"lineNumber":418,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d                                                                     "},{"lineNumber":419,"author":{"gitId":"chocomango"},"content":"[ID: 1]                                                                                                                               "},{"lineNumber":420,"author":{"gitId":"chocomango"},"content":"[Goal: Add Documentation]                                                                                                                "},{"lineNumber":421,"author":{"gitId":"chocomango"},"content":"[Period: 2020-10-10 - 2020-10-19]                                                                                                     "},{"lineNumber":422,"author":{"gitId":"chocomango"},"content":"[No allocated tasks]                                                                                                                  "},{"lineNumber":423,"author":{"gitId":"chocomango"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d                                                                     "},{"lineNumber":424,"author":{"gitId":"chocomango"},"content":"```                                                                                                                                   "},{"lineNumber":425,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":426,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":427,"author":{"gitId":"homingjun"},"content":"  "},{"lineNumber":428,"author":{"gitId":"homingjun"},"content":"#### 3.4.4. \u003ca id\u003d\"add-tasks-to-the-sprint\"\u003eAdd Tasks to the Sprint\u003c/a\u003e"},{"lineNumber":429,"author":{"gitId":"chocomango"},"content":"Add task(s) from the project backlog to the current sprint."},{"lineNumber":430,"author":{"gitId":"chocomango"},"content":"##### Format: `sprint /addtask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]`"},{"lineNumber":431,"author":{"gitId":"chocomango"},"content":"##### Constraints:"},{"lineNumber":432,"author":{"gitId":"chocomango"},"content":"* Project must be created. "},{"lineNumber":433,"author":{"gitId":"chocomango"},"content":"* Sprint must be created."},{"lineNumber":434,"author":{"gitId":"chocomango"},"content":"* `task_id` must be a positive integer."},{"lineNumber":435,"author":{"gitId":"chocomango"},"content":"* At least one `task_id` must be specified ."},{"lineNumber":436,"author":{"gitId":"chocomango"},"content":"* Specified tasks must exist in project backlog."},{"lineNumber":437,"author":{"gitId":"chocomango"},"content":"##### Mandatory Tag:"},{"lineNumber":438,"author":{"gitId":"chocomango"},"content":"* Without tag: Specify the tasks to add to Sprint."},{"lineNumber":439,"author":{"gitId":"chocomango"},"content":"    * Cannot be used with other optional tags."},{"lineNumber":440,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /addtask 1 2` - Add Task 1 and 2 to Sprint.                       "},{"lineNumber":441,"author":{"gitId":"chocomango"},"content":"* `-task` Specify the tasks to add to Sprint."},{"lineNumber":442,"author":{"gitId":"chocomango"},"content":"    * Must be used if other optional tags are used."},{"lineNumber":443,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /addtask -task 1 2` - Add Task 1 and 2 to Sprint.  "},{"lineNumber":444,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:                                                                                                                                                                                              "},{"lineNumber":445,"author":{"gitId":"chocomango"},"content":"* All the following optional tags must be used with the `-task` tag as specified above."},{"lineNumber":446,"author":{"gitId":"chocomango"},"content":"* `-project` Specify the Project using its ID.                                                                              "},{"lineNumber":447,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /addtask -project 2 -task 1 2` - Add Task 1 and 2 to current Sprint in Project 2.                                        "},{"lineNumber":448,"author":{"gitId":"keke101"},"content":"    * If not specified: Selected Project determined by the [Project select command](#select-project) will be chosen.    "},{"lineNumber":449,"author":{"gitId":"chocomango"},"content":"* `-sprint` Specify the Sprint using its ID.                                                                                "},{"lineNumber":450,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /addtask -project 2 -sprint 3 -task 1 2` - Add Task 1 and 2 to the third sprint of the Project 2.                              "},{"lineNumber":451,"author":{"gitId":"chocomango"},"content":"    * If not specified: Ongoing Sprint.                                                                        "},{"lineNumber":452,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":453,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /addtask 1 3 4`"},{"lineNumber":454,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":455,"author":{"gitId":"chocomango"},"content":"Note: Expected outcome will be affected by the date of command execution (2020-10-15 in the example)  "},{"lineNumber":456,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":457,"author":{"gitId":"chocomango"},"content":"[Project ID: 1]"},{"lineNumber":458,"author":{"gitId":"chocomango"},"content":"    DummyTask1 added to sprint 1."},{"lineNumber":459,"author":{"gitId":"chocomango"},"content":"    DummyTask3 added to sprint 1."},{"lineNumber":460,"author":{"gitId":"chocomango"},"content":"    DummyTask4 added to sprint 1."},{"lineNumber":461,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":462,"author":{"gitId":"homingjun"},"content":"  "},{"lineNumber":463,"author":{"gitId":"homingjun"},"content":"#### 3.4.5. \u003ca id\u003d\"delete-tasks-from-sprint\"\u003eDelete Tasks from Sprint\u003c/a\u003e"},{"lineNumber":464,"author":{"gitId":"chocomango"},"content":"Remove task(s) from the current sprint."},{"lineNumber":465,"author":{"gitId":"chocomango"},"content":"##### Format: `sprint /removetask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]`"},{"lineNumber":466,"author":{"gitId":"chocomango"},"content":"##### Constraints:                              "},{"lineNumber":467,"author":{"gitId":"chocomango"},"content":"* Project must be created.                           "},{"lineNumber":468,"author":{"gitId":"chocomango"},"content":"* Sprint must be created.                            "},{"lineNumber":469,"author":{"gitId":"chocomango"},"content":"* `task_id` must be a positive integer.         "},{"lineNumber":470,"author":{"gitId":"chocomango"},"content":"* At least one `task_id` must be specified .    "},{"lineNumber":471,"author":{"gitId":"chocomango"},"content":"* Specified tasks must exist in Sprint."},{"lineNumber":472,"author":{"gitId":"chocomango"},"content":"##### Mandatory Tag:                                                                                                      "},{"lineNumber":473,"author":{"gitId":"chocomango"},"content":"* Without tag: Specify the tasks to remove from Sprint.                                                                   "},{"lineNumber":474,"author":{"gitId":"chocomango"},"content":"    * Cannot use with other optional tags.                                                                            "},{"lineNumber":475,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /removetask 1 2` - Remove Task 1 and 2 from Sprint.                                                        "},{"lineNumber":476,"author":{"gitId":"chocomango"},"content":"* `-task` Specify the tasks to remove from Sprint.                                                                        "},{"lineNumber":477,"author":{"gitId":"chocomango"},"content":"    * Must be used if other optional tags are used.                                                                       "},{"lineNumber":478,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /removetask -task 1 2` - Remove Task 1 and 2 from Sprint.                                                  "},{"lineNumber":479,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:                                                                                                      "},{"lineNumber":480,"author":{"gitId":"chocomango"},"content":"* All the following optional tags must be used with the `-task` tag as specified above.                                   "},{"lineNumber":481,"author":{"gitId":"chocomango"},"content":"* `-project` Specify the Project using its ID.                                                                            "},{"lineNumber":482,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /removetask -project 2 -task 1 2` - Remove Task 1 and 2 from the ongoing Sprint in Project 2.                  "},{"lineNumber":483,"author":{"gitId":"keke101"},"content":"    * If not specified: Selected Project determined by the [Project select command](#select-project) will be chosen.  "},{"lineNumber":484,"author":{"gitId":"chocomango"},"content":"* `-sprint` Specify the Sprint using its ID.                                                                              "},{"lineNumber":485,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /removetask -project 2 -sprint 3 -task 1 2` - Remove Task 1 and 2 from the third sprint of the Project 2.  "},{"lineNumber":486,"author":{"gitId":"chocomango"},"content":"    * If not specified: Ongoing Sprint.                                                                      "},{"lineNumber":487,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":488,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /removetask 1 3 4`"},{"lineNumber":489,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":490,"author":{"gitId":"chocomango"},"content":"Note: Expected outcome will be affected by the date of command execution (2020-10-15 in the example)  "},{"lineNumber":491,"author":{"gitId":"homingjun"},"content":"```    "},{"lineNumber":492,"author":{"gitId":"chocomango"},"content":"[Project ID: 1]"},{"lineNumber":493,"author":{"gitId":"chocomango"},"content":"    DummyTask1 removed from sprint 1."},{"lineNumber":494,"author":{"gitId":"chocomango"},"content":"    DummyTask3 removed from sprint 1."},{"lineNumber":495,"author":{"gitId":"chocomango"},"content":"    DummyTask4 removed from sprint 1."},{"lineNumber":496,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":497,"author":{"gitId":"homingjun"},"content":"  "},{"lineNumber":498,"author":{"gitId":"homingjun"},"content":"#### 3.4.6. \u003ca id\u003d\"allocate-tasks-to-team-members\"\u003eAllocate Tasks to Team Members\u003c/a\u003e"},{"lineNumber":499,"author":{"gitId":"chocomango"},"content":"Assign task(s) to team member(s)."},{"lineNumber":500,"author":{"gitId":"chocomango"},"content":"##### Format: `sprint /allocate  -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]`"},{"lineNumber":501,"author":{"gitId":"chocomango"},"content":"##### Constraints:                        "},{"lineNumber":502,"author":{"gitId":"chocomango"},"content":"* Project must be created."},{"lineNumber":503,"author":{"gitId":"chocomango"},"content":"* Sprint must be created. "},{"lineNumber":504,"author":{"gitId":"chocomango"},"content":"* `task_id` must be a positive integer    "},{"lineNumber":505,"author":{"gitId":"chocomango"},"content":"* `task_id` must be specified.             "},{"lineNumber":506,"author":{"gitId":"chocomango"},"content":"* At least one `user_id` must be specified"},{"lineNumber":507,"author":{"gitId":"chocomango"},"content":"* Specified tasks must exist in Sprint.  "},{"lineNumber":508,"author":{"gitId":"chocomango"},"content":"* Specified members must exist in Project.  "},{"lineNumber":509,"author":{"gitId":"chocomango"},"content":"##### Mandatory Tag:                                                                                                             "},{"lineNumber":510,"author":{"gitId":"chocomango"},"content":"* `-task` Specify the task to be allocated."},{"lineNumber":511,"author":{"gitId":"chocomango"},"content":"* `-user` Specify the user(s) to be assign with a task.                                                                                                                                                                                                                                                                                                          "},{"lineNumber":512,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:                                                                                                                                                      "},{"lineNumber":513,"author":{"gitId":"chocomango"},"content":"* `-project` Specify the Project using its ID.                                                                                   "},{"lineNumber":514,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /allocate -project 2 -task 1 -user mary` - In the ongoing Sprint in Project 2, allocate Task 1 to mary.            "},{"lineNumber":515,"author":{"gitId":"keke101"},"content":"    * If not specified: Selected Project determined by the [Project select command](#select-project) will be chosen.         "},{"lineNumber":516,"author":{"gitId":"chocomango"},"content":"* `-sprint` Specify the Sprint using its ID.                                                                                     "},{"lineNumber":517,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /allocate -project 2 -sprint 3 -task 1 -user mary` - In the third Sprint in Project 2, allocate Task 1 to mary."},{"lineNumber":518,"author":{"gitId":"chocomango"},"content":"    * If not specified: Ongoing Sprint.                                                                                          "},{"lineNumber":519,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":520,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /allocate -task 1 2 -user johntan mary jane`"},{"lineNumber":521,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":522,"author":{"gitId":"chocomango"},"content":"```"},{"lineNumber":523,"author":{"gitId":"chocomango"},"content":"[Project ID: 1]"},{"lineNumber":524,"author":{"gitId":"chocomango"},"content":"[Sprint ID: 1]"},{"lineNumber":525,"author":{"gitId":"chocomango"},"content":"DummyTask1 is assigned to [johntan, mary, jane]"},{"lineNumber":526,"author":{"gitId":"chocomango"},"content":"DummyTask2 is assigned to [johntan, mary, jane]  "},{"lineNumber":527,"author":{"gitId":"chocomango"},"content":"```       "},{"lineNumber":528,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":529,"author":{"gitId":"homingjun"},"content":"#### 3.4.7. \u003ca id\u003d\"deallocate-tasks-from-team-members\"\u003eDeallocate Tasks from Team Members\u003c/a\u003e                                                                                           "},{"lineNumber":530,"author":{"gitId":"chocomango"},"content":"Deallocate a task from team member(s).                                                                                                     "},{"lineNumber":531,"author":{"gitId":"chocomango"},"content":"##### Format: `sprint /deallocate -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]`                                      "},{"lineNumber":532,"author":{"gitId":"chocomango"},"content":"##### Constraints:                                                                                                                     "},{"lineNumber":533,"author":{"gitId":"chocomango"},"content":"* Project must be created.                                                                                                             "},{"lineNumber":534,"author":{"gitId":"chocomango"},"content":"* Sprint must be created.                                                                                                              "},{"lineNumber":535,"author":{"gitId":"chocomango"},"content":"* `task_id` must be a positive integer.                                                                                                 "},{"lineNumber":536,"author":{"gitId":"chocomango"},"content":"* `task_id` must be specified.                                                                                                          "},{"lineNumber":537,"author":{"gitId":"chocomango"},"content":"* At least one `user_id` must be specified.                                                                                             "},{"lineNumber":538,"author":{"gitId":"chocomango"},"content":"* Specified tasks must exist in Sprint.                                                                                                "},{"lineNumber":539,"author":{"gitId":"chocomango"},"content":"* Specified members must exist in Project."},{"lineNumber":540,"author":{"gitId":"chocomango"},"content":"* All specified task must be allocated to all specified members.                                                                                          "},{"lineNumber":541,"author":{"gitId":"chocomango"},"content":"##### Mandatory Tag:                                                                                                                   "},{"lineNumber":542,"author":{"gitId":"chocomango"},"content":"* `-task` Specify the task to be deallocated.                                                                                             "},{"lineNumber":543,"author":{"gitId":"chocomango"},"content":"* `-user` Specify the user(s) to be deallocated from the task.                                                                                 "},{"lineNumber":544,"author":{"gitId":"chocomango"},"content":"##### Optional Tags:                                                                                                                   "},{"lineNumber":545,"author":{"gitId":"chocomango"},"content":"* `-project` Specify the Project using its ID.                                                                                         "},{"lineNumber":546,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /deallocate -project 2 -task 1 -user mary` - In the ongoing Sprint in Project 2, deallocate Task 1 from mary.         "},{"lineNumber":547,"author":{"gitId":"keke101"},"content":"    * If not specified: Selected Project determined by the [Project select command](#select-project) will be chosen.               "},{"lineNumber":548,"author":{"gitId":"chocomango"},"content":"* `-sprint` Specify the Sprint using its ID.                                                                                           "},{"lineNumber":549,"author":{"gitId":"chocomango"},"content":"    * Example: `sprint /deallocate -project 2 -sprint 3 -task 1 -user mary` - In the third Sprint in Project 2, deallocate Task 1 to mary. "},{"lineNumber":550,"author":{"gitId":"chocomango"},"content":"    * If not specified: Ongoing Sprint.                                                                                                "},{"lineNumber":551,"author":{"gitId":"chocomango"},"content":"                                                                                                                                       "},{"lineNumber":552,"author":{"gitId":"chocomango"},"content":"##### Example: `sprint /deallocate -task 1 2 -user johntan mary jane`                                                                    "},{"lineNumber":553,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:                                                                                                                "},{"lineNumber":554,"author":{"gitId":"homingjun"},"content":"```                                                                                                                                    "},{"lineNumber":555,"author":{"gitId":"chocomango"},"content":"[Project ID: 1]                                                                                                                        "},{"lineNumber":556,"author":{"gitId":"chocomango"},"content":"[Sprint ID: 1]                                                                                                                         "},{"lineNumber":557,"author":{"gitId":"chocomango"},"content":"DummyTask1 is removed to [johntan, mary, jane]                                                                                        "},{"lineNumber":558,"author":{"gitId":"chocomango"},"content":"DummyTask2 is removed to [johntan, mary, jane]                                                                                        "},{"lineNumber":559,"author":{"gitId":"homingjun"},"content":"```  "},{"lineNumber":560,"author":{"gitId":"homingjun"},"content":"  "},{"lineNumber":561,"author":{"gitId":"homingjun"},"content":"### 3.5. \u003ca id\u003d\"storage-codestoragecode\"\u003eStorage `storage`\u003c/a\u003e"},{"lineNumber":562,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":563,"author":{"gitId":"homingjun"},"content":"#### 3.5.1. \u003ca id\u003d\"clear-storage\"\u003eClear Storage\u003c/a\u003e "},{"lineNumber":564,"author":{"gitId":"keke101"},"content":"Clear all the data from the program and the persistent storage.  "},{"lineNumber":565,"author":{"gitId":"keke101"},"content":"You will be prompted to confirm your decision by giving an input. Data will be cleared only when `y` (case-insensitive) is provided.  "},{"lineNumber":566,"author":{"gitId":"keke101"},"content":"**[WARNING]** This action will delete **ALL** the data and is **irreversible**!  "},{"lineNumber":567,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":568,"author":{"gitId":"keke101"},"content":"##### Format: `storage /clear`"},{"lineNumber":569,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":570,"author":{"gitId":"keke101"},"content":"##### Example: `storage /clear`"},{"lineNumber":571,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":572,"author":{"gitId":"keke101"},"content":"_Clear data_  "},{"lineNumber":573,"author":{"gitId":"keke101"},"content":"```"},{"lineNumber":574,"author":{"gitId":"keke101"},"content":"command\u003e storage /clear"},{"lineNumber":575,"author":{"gitId":"keke101"},"content":"[!WARNING!] Are you sure? This command is irreversible! (y/N) y"},{"lineNumber":576,"author":{"gitId":"keke101"},"content":"All data has been cleared!"},{"lineNumber":577,"author":{"gitId":"keke101"},"content":"```    "},{"lineNumber":578,"author":{"gitId":"keke101"},"content":"_Abort clear data_  "},{"lineNumber":579,"author":{"gitId":"keke101"},"content":"```"},{"lineNumber":580,"author":{"gitId":"keke101"},"content":"command\u003e storage /clear"},{"lineNumber":581,"author":{"gitId":"keke101"},"content":"[!WARNING!] Are you sure? This command is irreversible! (y/N) N"},{"lineNumber":582,"author":{"gitId":"keke101"},"content":"Data clear aborted."},{"lineNumber":583,"author":{"gitId":"keke101"},"content":"```    "},{"lineNumber":584,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":585,"author":{"gitId":"homingjun"},"content":"### 3.6. \u003ca id\u003d\"help-codehelpcode\"\u003eHelp `help`\u003c/a\u003e"},{"lineNumber":586,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":587,"author":{"gitId":"homingjun"},"content":"#### 3.6.1 \u003ca id\u003d\"help-menu\"\u003eHelp Menu\u003c/a\u003e"},{"lineNumber":588,"author":{"gitId":"homingjun"},"content":"Shows a list of commands needed to use SCRUMptious. You can then type in the command number"},{"lineNumber":589,"author":{"gitId":"homingjun"},"content":"to receive more information about that specific command."},{"lineNumber":590,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":591,"author":{"gitId":"homingjun"},"content":"##### Format: `help`"},{"lineNumber":592,"author":{"gitId":"homingjun"},"content":"##### Example: `help`"},{"lineNumber":593,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":594,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":595,"author":{"gitId":"homingjun"},"content":"Here is the list of commands used in SCRUMptious. Type \"help /*\", where * is the command number for more information on that specific command."},{"lineNumber":596,"author":{"gitId":"homingjun"},"content":"1. Project"},{"lineNumber":597,"author":{"gitId":"homingjun"},"content":"2. Member"},{"lineNumber":598,"author":{"gitId":"homingjun"},"content":"3. Task"},{"lineNumber":599,"author":{"gitId":"homingjun"},"content":"4. Sprint"},{"lineNumber":600,"author":{"gitId":"homingjun"},"content":"5. Storage"},{"lineNumber":601,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":602,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":603,"author":{"gitId":"homingjun"},"content":"#### 3.6.2 \u003ca id\u003d\"project-help\"\u003eProject Help\u003c/a\u003e"},{"lineNumber":604,"author":{"gitId":"homingjun"},"content":"Shows a list of project commands and examples of how to use them."},{"lineNumber":605,"author":{"gitId":"-"},"content":""},{"lineNumber":606,"author":{"gitId":"homingjun"},"content":"##### Format: `help /1`"},{"lineNumber":607,"author":{"gitId":"homingjun"},"content":"##### Example: `help /1`"},{"lineNumber":608,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":609,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":610,"author":{"gitId":"homingjun"},"content":"1. Create project"},{"lineNumber":611,"author":{"gitId":"homingjun"},"content":"   Format: project /create -title \u003ctitle\u003e -desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e"},{"lineNumber":612,"author":{"gitId":"homingjun"},"content":"   Example: project /create -title MeTube -desc video streaming software -dur 90 -sd 10"},{"lineNumber":613,"author":{"gitId":"homingjun"},"content":"2. View project"},{"lineNumber":614,"author":{"gitId":"homingjun"},"content":"   Format \u0026 example: project /view"},{"lineNumber":615,"author":{"gitId":"homingjun"},"content":"3. Select project"},{"lineNumber":616,"author":{"gitId":"homingjun"},"content":"   Format: project /select \u003cprojectid\u003e"},{"lineNumber":617,"author":{"gitId":"homingjun"},"content":"   Example: project /select 1"},{"lineNumber":618,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"homingjun"},"content":"#### 3.6.3 \u003ca id\u003d\"member-help\"\u003eMember Help\u003c/a\u003e"},{"lineNumber":621,"author":{"gitId":"homingjun"},"content":"Shows a list of member commands and examples of how to use them."},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"homingjun"},"content":"##### Format: `help /2`"},{"lineNumber":624,"author":{"gitId":"homingjun"},"content":"##### Example: `help /2`"},{"lineNumber":625,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":626,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":627,"author":{"gitId":"homingjun"},"content":"1. Add members"},{"lineNumber":628,"author":{"gitId":"homingjun"},"content":"   Format: member /add \u003cusername\u003e [\u003cusername\u003e ...]"},{"lineNumber":629,"author":{"gitId":"homingjun"},"content":"   Example: member /add john mary"},{"lineNumber":630,"author":{"gitId":"homingjun"},"content":"2. Remove members"},{"lineNumber":631,"author":{"gitId":"homingjun"},"content":"   Format: member /del \u003cusername\u003e [\u003cusername\u003e ...]"},{"lineNumber":632,"author":{"gitId":"homingjun"},"content":"   Example: member /del john mary"},{"lineNumber":633,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"homingjun"},"content":"#### 3.6.4 \u003ca id\u003d\"task-help\"\u003eTask Help\u003c/a\u003e"},{"lineNumber":636,"author":{"gitId":"homingjun"},"content":"Shows a list of task commands and examples of how to use them."},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"homingjun"},"content":"##### Format: `help /3`"},{"lineNumber":639,"author":{"gitId":"homingjun"},"content":"##### Example: `help /3`"},{"lineNumber":640,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":641,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":642,"author":{"gitId":"homingjun"},"content":"1. Add tasks "},{"lineNumber":643,"author":{"gitId":"homingjun"},"content":"   Format: task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003ccategory\u003e"},{"lineNumber":644,"author":{"gitId":"homingjun"},"content":"   Example: task /add -title Add UI -desc add an interactive UI -priority HIGH"},{"lineNumber":645,"author":{"gitId":"homingjun"},"content":"2. Delete tasks"},{"lineNumber":646,"author":{"gitId":"homingjun"},"content":"   Format: task /del \u003ctaskid\u003e [\u003ctaskid\u003e...]"},{"lineNumber":647,"author":{"gitId":"homingjun"},"content":"   Example: task /del 5 7 9"},{"lineNumber":648,"author":{"gitId":"homingjun"},"content":"3. View task"},{"lineNumber":649,"author":{"gitId":"e0426051"},"content":"   Format: task /view \u003ctaskid\u003e [\u003ctaskid\u003e...]"},{"lineNumber":650,"author":{"gitId":"e0426051"},"content":"   Example: task /view 3 4 5"},{"lineNumber":651,"author":{"gitId":"homingjun"},"content":"4. Change task priority"},{"lineNumber":652,"author":{"gitId":"homingjun"},"content":"   Format: task /priority -priority \u003ccategory\u003e -id \u003ctaskid\u003e"},{"lineNumber":653,"author":{"gitId":"homingjun"},"content":"   Example: task /priority -priority HIGH -id 1"},{"lineNumber":654,"author":{"gitId":"homingjun"},"content":"5. Mark task as complete"},{"lineNumber":655,"author":{"gitId":"e0426051"},"content":"   Format: task /done \u003ctaskid\u003e [\u003ctaskid\u003e...]"},{"lineNumber":656,"author":{"gitId":"e0426051"},"content":"   Example: task /done 1 2 3"},{"lineNumber":657,"author":{"gitId":"e0426051"},"content":"6. View tasks in descending priority"},{"lineNumber":658,"author":{"gitId":"e0426051"},"content":"   Format: task /priorityview"},{"lineNumber":659,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"homingjun"},"content":"#### 3.6.5 \u003ca id\u003d\"sprint-help\"\u003eSprint Help\u003c/a\u003e"},{"lineNumber":662,"author":{"gitId":"homingjun"},"content":"Shows a list of sprint commands and examples of how to use them."},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"homingjun"},"content":"##### Format: `help /4`"},{"lineNumber":665,"author":{"gitId":"homingjun"},"content":"##### Example: `help /4`"},{"lineNumber":666,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":667,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":668,"author":{"gitId":"homingjun"},"content":"1. Create sprint"},{"lineNumber":669,"author":{"gitId":"homingjun"},"content":"   Format: sprint /create -goal \u003cgoal_input\u003e [optional tags]"},{"lineNumber":670,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /create Shopping Cart -start 20201010"},{"lineNumber":671,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /create -goal UI -start 20201010"},{"lineNumber":672,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /create -goal UI -start 20201010 -project 3"},{"lineNumber":673,"author":{"gitId":"homingjun"},"content":"2. View sprint"},{"lineNumber":674,"author":{"gitId":"homingjun"},"content":"   Format: sprint /view [optional tags]"},{"lineNumber":675,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /view"},{"lineNumber":676,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /view 2"},{"lineNumber":677,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /view -project 2"},{"lineNumber":678,"author":{"gitId":"homingjun"},"content":"   Example 4: sprint /view -project 2 -sprint 3"},{"lineNumber":679,"author":{"gitId":"homingjun"},"content":"3. Edit sprint"},{"lineNumber":680,"author":{"gitId":"homingjun"},"content":"   Format: sprint /edit -goal \u003cgoal_input\u003e [optional tags]"},{"lineNumber":681,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /edit -goal Add Documentation"},{"lineNumber":682,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /edit -project 2 -goal Add Documentation"},{"lineNumber":683,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /edit -project 2 -sprint 3 -goal Add Documentation"},{"lineNumber":684,"author":{"gitId":"homingjun"},"content":"4. Add tasks to sprint"},{"lineNumber":685,"author":{"gitId":"homingjun"},"content":"   Format: sprint /addtask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]"},{"lineNumber":686,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /addtask 1 2"},{"lineNumber":687,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /addtask -task 1 2"},{"lineNumber":688,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /addtask -project 2 -task 1 2"},{"lineNumber":689,"author":{"gitId":"homingjun"},"content":"   Example 4: sprint /addtask -project 2 -sprint 3 -task 1 2"},{"lineNumber":690,"author":{"gitId":"homingjun"},"content":"5. Delete tasks from sprint"},{"lineNumber":691,"author":{"gitId":"homingjun"},"content":"   Format: sprint /removetask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]"},{"lineNumber":692,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /removetask 1 2"},{"lineNumber":693,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /removetask -project 2 -task 1 2"},{"lineNumber":694,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /removetask -project 2 -sprint 3 -task 1 2"},{"lineNumber":695,"author":{"gitId":"homingjun"},"content":"6. Allocate task to team members"},{"lineNumber":696,"author":{"gitId":"homingjun"},"content":"   Format: sprint /allocate -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]"},{"lineNumber":697,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /allocate -task 1 2 -user johntan mary jane"},{"lineNumber":698,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /allocate -project 2 -task 1 -user mary"},{"lineNumber":699,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /allocate -project 2 -sprint 3 -task 1 -user mary"},{"lineNumber":700,"author":{"gitId":"homingjun"},"content":"7. Deallocate tasks from team members"},{"lineNumber":701,"author":{"gitId":"homingjun"},"content":"   Format: sprint /deallocate -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]"},{"lineNumber":702,"author":{"gitId":"homingjun"},"content":"   Example 1: sprint /deallocate -task 1 2 -user johntan mary jane"},{"lineNumber":703,"author":{"gitId":"homingjun"},"content":"   Example 2: sprint /deallocate -project 2 -task 1 -user mary"},{"lineNumber":704,"author":{"gitId":"homingjun"},"content":"   Example 3: sprint /deallocate -project 2 -sprint 3 -task 1 -user mary"},{"lineNumber":705,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"homingjun"},"content":"#### 3.6.6 \u003ca id\u003d\"storage-help\"\u003eStorage Help\u003c/a\u003e"},{"lineNumber":708,"author":{"gitId":"homingjun"},"content":"Shows the storage command, and an example of how to use it."},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"homingjun"},"content":"##### Format: `help /5`"},{"lineNumber":711,"author":{"gitId":"homingjun"},"content":"##### Example: `help /5`"},{"lineNumber":712,"author":{"gitId":"keke101"},"content":"##### Expected Outcome:"},{"lineNumber":713,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":714,"author":{"gitId":"homingjun"},"content":"1. Clear all data. You will be prompted to confirm the decision."},{"lineNumber":715,"author":{"gitId":"homingjun"},"content":"   Data will be cleared if \"y\" (case-insensitive) is provided."},{"lineNumber":716,"author":{"gitId":"homingjun"},"content":"   Format: storage /clear"},{"lineNumber":717,"author":{"gitId":"homingjun"},"content":"   Example: storage /clear"},{"lineNumber":718,"author":{"gitId":"homingjun"},"content":"```"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"homingjun"},"content":"### 3.7. \u003ca id\u003d\"exit-application-codebyecode\"\u003eExit application `bye`\u003c/a\u003e"},{"lineNumber":721,"author":{"gitId":"e0426051"},"content":"Exits the application. Rest assured that your data have been saved by the application."},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"e0426051"},"content":"##### Format: `bye`"},{"lineNumber":724,"author":{"gitId":"e0426051"},"content":"##### Expected Outcome:"},{"lineNumber":725,"author":{"gitId":"e0426051"},"content":"`bye` and program terminates."},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"homingjun"},"content":"## 4. \u003ca id\u003d\"command-summary\"\u003eCommand Summary\u003c/a\u003e"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"homingjun"},"content":"| **Action** | **Format** | **Examples** |"},{"lineNumber":730,"author":{"gitId":"homingjun"},"content":"| --- | --- | --- |"},{"lineNumber":731,"author":{"gitId":"chocomango"},"content":"| Create Project | `project /create -title \u003ctitle\u003e -desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e` | `project /create -title MeTube -desc video streaming software -dur 90 -sd 10` |"},{"lineNumber":732,"author":{"gitId":"keke101"},"content":"| View Project Information | `project /view` | `project /view` |"},{"lineNumber":733,"author":{"gitId":"keke101"},"content":"| List All Projects | `project /list` | `project /list` |"},{"lineNumber":734,"author":{"gitId":"keke101"},"content":"| Select Project | `project /select \u003cid\u003e` | `project /select 2`|"},{"lineNumber":735,"author":{"gitId":"keke101"},"content":"| Add Team Members | `member /add \u003cusername\u003e [\u003cusername\u003e ...]` | `member /add john mary` |"},{"lineNumber":736,"author":{"gitId":"keke101"},"content":"| Remove Team Members | `member /del \u003cusername\u003e [\u003cusername\u003e ...]` | `member /del john mary` |"},{"lineNumber":737,"author":{"gitId":"keke101"},"content":"| Add Tasks | `task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003ccategory\u003e` | `task /add -title Add UI -desc add an interactive UI -priority HIGH` |"},{"lineNumber":738,"author":{"gitId":"keke101"},"content":"| View Task | `task /view \u003ctaskid\u003e [\u003ctaskid\u003e...]` | `task /view 3 6 9` |"},{"lineNumber":739,"author":{"gitId":"keke101"},"content":"| Delete Tasks | `task /del \u003ctaskid\u003e [\u003ctaskid\u003e...]` | `task /del 5 7 9` |"},{"lineNumber":740,"author":{"gitId":"keke101"},"content":"| Change the Priority of a Tasks | `task /priority -priority \u003ccategory\u003e -id \u003ctaskid\u003e` | `task /priority -priority HIGH -id 1` |"},{"lineNumber":741,"author":{"gitId":"keke101"},"content":"| Mark Task as Complete | `task /done \u003ctaskid\u003e [\u003ctaskid\u003e...]` | `task /done 1 2 3` |"},{"lineNumber":742,"author":{"gitId":"keke101"},"content":"| Create Sprint | `sprint /create -goal \u003cgoal_input\u003e [-start YYYYMMDD] [-project \u003cid\u003e]` | `sprint /create -goal UI -start 20201010` |"},{"lineNumber":743,"author":{"gitId":"keke101"},"content":"| View Sprint  | `sprint /view [optional tags]` | `sprint /view` |"},{"lineNumber":744,"author":{"gitId":"keke101"},"content":"| Edit Sprint Goal | `sprint /edit -goal \u003cgoal_input\u003e [optional tags]` | `sprint /edit -goal Add Documentation` |"},{"lineNumber":745,"author":{"gitId":"keke101"},"content":"| Add Tasks to the Sprint | `sprint /addtask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]` | `sprint /addtask 1 3 4` |"},{"lineNumber":746,"author":{"gitId":"keke101"},"content":"| Delete Tasks from Sprint | `sprint /removetask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]` | `sprint /removetask 1 3 4` |"},{"lineNumber":747,"author":{"gitId":"keke101"},"content":"| Allocate Tasks to Team Members | `sprint /allocate  -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]` | `sprint /allocate -project 2 -task 1 -user mary` |"},{"lineNumber":748,"author":{"gitId":"keke101"},"content":"| Deallocate Tasks from Team Members | `sprint /deallocate -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]` | `sprint /deallocate -project 2 -sprint 3 -task 1 -user mary` |"},{"lineNumber":749,"author":{"gitId":"keke101"},"content":"| Clear Storage | `storage /clear` | `storage /clear` |"},{"lineNumber":750,"author":{"gitId":"e0426051"},"content":"| Exit program | `bye` | `bye` |"},{"lineNumber":751,"author":{"gitId":"homingjun"},"content":"| Help Menu | `help` | `help` |"},{"lineNumber":752,"author":{"gitId":"homingjun"},"content":"| Help Commands | `help /\u003ccommand_number\u003e` | `help /1` |"},{"lineNumber":753,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"homingjun":201,"gmit22":30,"keke101":165,"e0426051":104,"chocomango":231,"-":22}},{"path":"docs/team/chocomango.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmit22"},"content":"# Chan Wei Ling - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"## Overview"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"My team of 4 software engineering students and I have created a command line interface project managing "},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":"software for our CS2113T team project. The app, called SCRUMptious, aims to help project managers handle "},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":"their project teams efficiently with the help of the SCRUM methodology and digital technologies."},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"### Summary of Contributions"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"This section summarises my contributions in terms of documentation, coding and other significant matters to the team project."},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"#### Enhancements Implemented"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"##### 1. Sprint Management"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"I have implemented a set of commands to facilitate the management of Sprints (Iterations broken down from a project), which covers "},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"functionalities such as Add/Edit Sprints, Add/Remove tasks to Sprints, Allocate/Deallocate tasks to members. I have also "},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"added support to execute these commands across multiple projects/sprints, in accordance to our teams version 2.0 update for"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"multiple project management."},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"**Pull Request:** "},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    [#33](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33) "},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    [#67](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/67) "},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    [#71](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/71)"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    [#91](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91)"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    [#112](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/112)"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    [#123](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/123) "},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":" "},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"##### 2. Parsers"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"In regard to sprint creations, a date object is required to facilitate the duration for each Sprint. Thus, I have implemented"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"a DateTime parser that will parse a user input (String) to the required format (DateTime/LocalDate). The parser will "},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"pint custom error for invalid dates in correct format. (E.g. 20200231) to better inform user about the incorrect input."},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"In addition, the parser also includes a method that will calculate the difference between two LocalDate object."},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"A SprintParser (extended Parser) is also added to facilitate parsing and validation of user specified parameters for all Sprint related commands."},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"**Pull Request:** "},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"    [#123](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/123) "},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"    [#193](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/193) "},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"    [#221](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/221) "},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"##### 3. Logger"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"I have also updated the test logger which previous I added for v1.0 into ScrumLogger which can be used to facilitate all"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"logging activities for the whole program. "},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"**Pull Request:** "},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    [#87](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/87) "},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"    [#193](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/193) "},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"    [#226](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/226)"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"##### 4. Ui"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"At the initial phase of the project, I was in charged of break down the project into major components (Main, Ui, Parser, Command and Model)."},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"I was therefore assigned to work on the Ui component to add the basic skeleton code to receive input/deliver output to users."},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"In addition, I was in charged of designing the output (toString()) of all the model classes to facilitate the printing of command output. "},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"**Pull Request:** "},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"    [#60](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/60) "},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"    [#71](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/71)"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"    [#123](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/123)"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"    [#224](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/224)"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"##### 1. Other minor enhancements"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"1. Standardise the program workflow to integrate all components (Ui, Parser, Commands, Model) "},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"[#39](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/39) "},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"[#60](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/60) "},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"1. Associate model classes together "},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"[#60](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/60)"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"[#112](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/112)"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"1. JUnit Test scripts for SprintCommands "},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"[#71](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/71) "},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"[#193](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/193) "},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"1. Segregate validation tasks for Parser and Command class."},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"[#123](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/123) "},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"1. Bug fix to prepare for PE dry run."},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"[#135](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/135) "},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"#### Documentation"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"##### User Guide "},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"  * Add detailed guide for all Sprint Commands "},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"  * Add navigability by including hyperlinks for _**Table of Contents**_."},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"  * Add _**Command Summary**_."},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"  * Standardise format for command description."},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"  * Standardise formats for user guide (Bulletin, numbering and _**Table of Contents**_)"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"  * Update guide for all Sprint Commands V2.0"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"  * Update _**4. Command Summary**_."},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"  "},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":" Pull Request: [#80](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/80) [#130](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/130) [#132](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/132))"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"##### Developer Guide "},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"* Model component  "},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"  * Updated model component section under Architecture"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"* Sprint related implementation  "},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"    * Added description for all Sprint Commands"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"(Pull Request: [#129](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/129))"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"#### Other Contributions"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"* Reviewed bugs for other team\u0027s developer guide. [[CS2113T-F14-4] NUSchedule](https://github.com/nus-cs2113-AY2021S1/tp/pull/131)  "},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"* Reported bugs for other team\u0027s program during PE dry run. [[CS2113-T13-3] WhereGotTime\u0027 bugs](https://github.com/chocomango/ped/issues)  "},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"**Code contributed**: [Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dchocomango\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)  "}],"authorContributionMap":{"gmit22":5,"chocomango":94}},{"path":"docs/team/e0426051.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0426051"},"content":"# Zhao Haoxiang - Project Portfolio Page for SCRUMptious"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"e0426051"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"e0426051"},"content":"My team of 4 software engineering students and I have created a command line interface project managing software for our CS2113T team project. The app, called SCRUMptious, aims to help project managers handle their project teams efficiently with the help of the SCRUM methodology and digital technologies."},{"lineNumber":5,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":"### Summary of Contributions"},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":"This section shows a summary of my coding, documentation, and other helpful contributions to the team project."},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"**Code contributed**: [Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003de0426051)"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"**Contributions summary**:"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"* Main features:"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"    * General functions related to tasks(V1.0 to V2.1); merged with Gunit\u0027s now-defunct project backlog classes. (Pull requests [#17](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17), [#27](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/27/files), [#34](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34), [#110](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110/files), [#179](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/179), [#180](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/180/files), [#184](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/184))"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"* Enhancements to existing features:"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"    * Apply SLAP to all task classes to increase OOP-ness, increase cohesion and decrease coupling of classes. (Pull request [#201](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/201))"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"    * Added additional date checking functions to ensure invalid dates that does not cause an exception (e.g. 31st of Nov, 30th of Feb) are caught, with leap year support. (Pull request [#179](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/179))"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    * Added JavaDoc, JUnit, logging and assertions to task classes. (Pull requests [#95(JUnit)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/95), [#110(Assertions)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110/files), [#184(JUnit)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/184), [#201(JavaDoc, Logging)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/201), [#241(Assertions)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/241))"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"* Documentation: "},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"    * Added and refined task and program exit components to the user guide. (Pull requests [#77](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/77), [#137](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/137/files), [#179](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/179), [#180](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/180/files))"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"    * Added and refined UI and task components to the developer guide. (Pull requests [#126(Tasks)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/126/files), [#229(UI)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/229), [#244(Tasks)](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/244))"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"    * Added and refined UI and task diagrams to the developer guide. (Pull requests [#216](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/216), [#250](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/250))"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"* Contributions to team-based tasks:"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"    * Narrated for video and typed command in app while being recorded in Zoom for V1.0 "},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"    * Helped to fix several general bugs in the code. (Pull request [#110](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110/files), [#179](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/179))"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"* Community:"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"    * Reviewed Developer Guide: [[CS2113T-W13-2] Developer Guide](https://github.com/nus-cs2113-AY2021S1/tp/pull/16)"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"    * Reported bugs for other team during PE dry run: [[CS2113T-W13-4] bugs](https://github.com/AY2021S1-CS2113T-W13-4/tp/releases)"}],"authorContributionMap":{"e0426051":27}},{"path":"docs/team/gmit22.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmit22"},"content":"# Gunit Mittal - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"My team and I created a command line interface for project managers to organize and manage work."},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":"Our CS2113T product, SCRUMptious makes collaboration for users much easier than before, and digitalizes the entire"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":" process for product managers."},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"* Documentation "},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"* Worked with `model` and `logic` component of the application"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"* `Project` and `Member` related classes, and all commands relevant to these."},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"## Summary of Contributions"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"### Code Contributed"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"[This is the RepoSense link for all the code I contributed to the project.](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dgmit22\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dgmit22\u0026tabRepo\u003dAY2021S1-CS2113T-F11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"### Features Implemented"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"#### Initial setup"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"* **PR** [#12](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/12),"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"[#28](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28),"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"[#32](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/32),"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"[#107](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/107),"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"[#108](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/108),"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"[#111](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/111),"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"[#119](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/119)."},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"Set up the code for Model Component of the project, including following classes:"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"* `Project`"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"* `Member`"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"* `ProjectBacklog`"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"* `Ui`"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"* `Command` "},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"Following issues addressed in the **PR** mentioned:"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"* Introduced the `ProjectBacklog`, `Project` and `Member` for initial usage and integration."},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"* Refactored the code and built classes `ProjectManager` for the user to manage multiple projects at once. "},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"* Updated classes for better usage, and improved functionality. "},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"* Refactored code to fit in the recommended design architecture. "},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"* Basic project integration."},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":" "},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"#### Assertions, Logging and Unit testing"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"* **PR** [#82](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/82),"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"[#86](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/86),"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"[#111](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/111),"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"[#205](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/205),"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"[#210](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/210)."},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"* Added logging to allow the team to view records of certain information"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":" during a program execution for future reference."},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"* Used assertions to double check and making sure that the program state does not violate the assumptions regarding"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"  behaviour. Helped in finding bugs in code."},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"  "},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"#### PED issues"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"* **PR** [#207](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/207),"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"[#178](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/178)."},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"Solved bugs addressed in PED Dry Run by other students. There were some bugs which needed to be "},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"solved, but most feedback was on user guide section. Some high severity bugs solved by [#158](https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/158)"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"and [#164](https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/164)."},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"#### User Guide"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"* **PR** [#70](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/70),"},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":"[#73](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/73),"},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"[#119](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/119),"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"[#124](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/124)."},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":"Set up the draft of User Guide for initializing the application in `Project`, `Member`"},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"command. Updated the expected output of commands for V2.0 in "},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"[#119](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/119). "},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"Many PED Bugs were also solved in [#178](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/178), with many of them"},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":"being high severity, and affecting the entire functionality of the program. "},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":" "},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":" #### Developer Guide"},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":" * **PR** [#181](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/181)"},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":" [#140](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/140)"},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":" [#131](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/131)"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":"Created Architecture diagram for the Developer guide, added sequence diagrams and class diagrams to improve"},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":"understanding of the project. Create sequence diagram for `CreateProjectCommand` to better understand the workflow"},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"and user interaction when the application is run, and project is created. Added [user stories, value proposition and "},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"target user profile with implementaion and usage scenario for "},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"commands.](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/140)"},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"  "},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":"#### Other Contributions"},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"  * Reported bugs for other team\u0027s program during PE dry run. "},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":"  [[CS2113T-W13-4] LifEasier](https://github.com/gmit22/ped/issues)"},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"  * Reviewed bugs for other team\u0027s developer guide. [[CS2113T-T13-1] NotUS](https://github.com/nus-cs2113-AY2021S1/tp/pull/15)"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"  * PRs were reviewed (with non-trivial comments) [#19](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19), "},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"   [#34](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34),"},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":"   [#118](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/118),"},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"   [#179](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/179),"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":"   [#28](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28),"},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":"   [#30](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/30),"},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":"   [#110](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110)."},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"  "},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":" "},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":99,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":100,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":101,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":102,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":103,"author":{"gitId":"gmit22"},"content":""}],"authorContributionMap":{"gmit22":103}},{"path":"docs/team/homingjun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"homingjun"},"content":"# Ho Ming Jun - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"homingjun"},"content":"My team of 4 software engineering students and I created a command line interface project managing "},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":"software for our CS2113T team project. The app, called SCRUMptious, aims to help project managers handle "},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"their project teams efficiently with the help of the SCRUM methodology and digital technologies."},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"This section shows a summary of my coding, documentation, and other helpful contributions to the team project."},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"**Functionalities added**: `ParserManager`, `Command` and several subparsers and subcommand classes."},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"I created a `ParserManager` and `Command` class with several subclasses for SCRUMptious to handle the user input.  "},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"The `ParserManager` mainly parses the user input and checks to see what kind of `Command` has been "},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"given by the user. Subsequently, once the `Command` has been identified, the `ParserManager` then passes on the parameters to"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"the respective subparsers to validate the parameters. If the validation is unsuccessful, an error message with the corresponding details "},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"will be printed out for the user to see. If validation is successful, the subparser will then call the respective `Command` subclasses "},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"before returning the respective `Command` to the `ParserManager`. After which, the `ParserManager` will return the command to the "},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"main `Scrumptious` class for execution of the command.  "},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"(Pull requests [#19](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19), [#90](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/90), [#94](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/94), [#97](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/97), [#114](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/114))"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"**Code contributed**: [Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dmingjun\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dhomingjun\u0026tabRepo\u003dAY2021S1-CS2113T-F11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other) to my codes."},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"**Other contributions**:"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"* Quality of life features:"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"    * Added a help menu to SCRUMptious so that users can learn how to use the commands at a glance. (Pull requests [#116](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/116), [#182](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/182))"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"* Enhancements to existing features:"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"    * Apply SLAP to the `ParserManager` for more use of OOP and increase overall cohesion and decrease coupling of classes. (Pull requests [#97](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/97), [#114](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/114))"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"    * Added JUnit tests for `ParserManager` and the subparsers. (Pull requests [#65](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/65), [#197](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/197))"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"    * Added logging for `ParserManager` and `HelpCommand` and it\u0027s subclasses. (Pull request [#200](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/200))"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":"* Documentation: "},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"    * Set up the initial skeleton and format for the user guide markdown. (Pull requests [#74](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/74), [#99](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/99))"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    * Added help menu information to the user guide. (Pull requests [#136](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/136), [#246](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/246))"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"    * Added logic component explanations and class diagrams to the developer guide. (Pull requests [#125](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/125), [#182](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/182), [#211](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/211), [#220](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/220), [#245](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/245))"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"    * Added JavaDoc comments to `ParserManager`, `HelpCommand` and `ScrumptiousException` classes and subclasses. (Pull request [#213](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/213))"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"    * Update user guide table of content anchors to ensure that the links to the respective headers work. (Pull request [#214](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/214))"},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"    * Update developer guide table of content anchors to ensure that the links to the respective headers work. (Pull requests [#227](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/227), [#235](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/235), [#239](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/239), [#242](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/242))"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"* Community:"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":"    * Reviewed Developer Guide (with non-trivial comments): [[CS2113T-F12-2] AniChan #54](https://github.com/nus-cs2113-AY2021S1/tp/pull/54)"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"    * Reported bugs for other team during PE dry run: [[CS2113-T16-3] Bugs](https://github.com/homingjun/ped/issues)"}],"authorContributionMap":{"homingjun":40}},{"path":"docs/team/keke101.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"# Wong Zhen Wei - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"My team of 4 software engineering students and I have created a command line interface project managing "},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"software for our CS2113T team project. The app, called SCRUMptious, aims to help project managers handle "},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"their project teams efficiently with the help of the SCRUM methodology and digital technologies."},{"lineNumber":7,"author":{"gitId":"keke101"},"content":""},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"This section summarises my contributions in terms of documentation, coding and other significant matters to the team project."},{"lineNumber":10,"author":{"gitId":"keke101"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"#### Enhancements Implemented"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"The main enhancement I have added is storage manager and automated testing."},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"##### 1. Storage Manager (Pull Request [#31](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/31) [#67](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/67) [#81](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/81) [#117](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/117) [#118](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/118) [#187](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/187) [#196](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/196) [#209](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/209) [#215](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/215))"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"I have implemented a storage manager with the help of a third-party library [**json-simple 3.1.1**](https://cliftonlabs.github.io/json-simple/) by _Clifton Labs_. The storage manager helps to save data to and load data from a local persistent storage. I have added logic to allow the objects to serialise its data to a string in JSON format, and allow the objects to de-serialise JSON objects to map the values to its own properties. These JSON objects comes from parsing JSON formatted string. This allows the user to retain their data even after closing their program, therefore the user do not need to manually reenter their data.  "},{"lineNumber":15,"author":{"gitId":"keke101"},"content":""},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"##### 2. Automated Testing (Pull Request [#208](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/208))"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"SCRUMptious contains components that are dependent on current date, as a result the output of the program may vary. For example, creating the first sprint without specifying the start date will result in the start of the project to be the date of the command being ran. This results in the output of the automated testing to differ when it is run on a different date from the generation of the **expected** outcome. I solve this issue by ensuring that each call for current date will return a fixed date if the automated testing is running. This is achieved by ensuring that each `now()` call through `LocalDate` or `LocalDateTime` includes a parameter `Scrumptious.getClock()` that will return a fixed datetime for automated testing, otherwise it returns the current datetime. "},{"lineNumber":18,"author":{"gitId":"keke101"},"content":""},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"The challenge to this solution is it requires the discipline to ensure that each call to get the current date (`LocalDate.now()`) or datetime (`LocalDateTime.now()`) must include a `clock` parameter. Otherwise, the automated testing results are unexpected and will cause the test to fail.  "},{"lineNumber":20,"author":{"gitId":"keke101"},"content":""},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"#### Contributions to Team-Based Tasks"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"* Added technique to allow teammates to conduct JUnit testing on stdin and stdout. (Pull Request [#189](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/189))  "},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"* Standardize package naming convention (Pull Request [#228](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/228) Issue [#23](https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/23))"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":""},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"#### Contributions to Documentation"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"##### User Guide  "},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"* Add clear storage command. (Pull Request [#133](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/133))"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"* Updated for v2.0. (Pull Request [#138](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/138) [#139](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/139))"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"* Untracked"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"  * Add _**3.4 Sprint**_ section for the first draft (before first commit)"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":" "},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"  "},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"##### Developer Guide  "},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"* Storage component ([#109](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/109) [#117](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/117) [#186](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/186))  "},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"* Storage related implementation (Pull Requests [#109](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/109) [#138](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/138))  "},{"lineNumber":36,"author":{"gitId":"keke101"},"content":""},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"##### README (Pull Request [#236](https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/236))"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":""},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"#### Other Contributions"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"* Reviewed bugs for other team\u0027s developer guide. [[CS2113T-F14-2] Cent Wise Dollar Wise](https://github.com/nus-cs2113-AY2021S1/tp/pull/7)  "},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"* Reported bugs for other team\u0027s program during PE dry run. [[CS2113T-W11-3] CheatLogs\u0027 bugs](https://github.com/keke101/ped/issues)  "},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"**Code contributed**: [Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkeke101\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)  "}],"authorContributionMap":{"keke101":43}},{"path":"src/main/java/com/scrumptious/Scrumptious.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.parser.ParserManager;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.StorageManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import java.time.Clock;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":""},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"public class Scrumptious {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"     * Main entry-point for the com.scrumptious.Scrumptious application."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"    private static Clock clock \u003d null;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"    private static final String DATA_FILENAME \u003d \"data.json\";"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":""},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"    private static ParserManager parser \u003d new ParserManager();"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"    private static StorageManager sm;"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    private static ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"        new Scrumptious().run();"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"     * Runs the program."},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"    private void run() {"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"        init();"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        runInstructions();"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"        destroy();"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"     * Welcome the user and initialise the local storage."},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"    private void init() {"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"            ScrumLogger.setup();"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"            Ui.showError(\"Unable to setup logger!\");"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"            sm \u003d new StorageManager(DATA_FILENAME, projectManager);"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"            Ui.showError(\"Unable to create data/ directory, please \""},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"                    + \"ensure that we are allowed to create the data/ directory!\");"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"            sm.load();"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"            Ui.showError(\"Unable to load the data file properly, \""},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"                    + \"proceeding in empty state.\");"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"        } catch (ClassCastException | NullPointerException | JsonException e) {"},{"lineNumber":62,"author":{"gitId":"keke101"},"content":"            Ui.showError(\"Data file is corrupted, \""},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"                    + \"proceeding in empty state. Old data.json will be cleared when the next save happens.\");"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        Ui.showWelcomeScreen();"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"    private void destroy() {"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"            sm.save();"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"            Ui.showError(\"Unable to save data successfully, your data might be lost.\");"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.destroy();"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":""},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"     * Get the user input and runs the instructions."},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"     * Exits when ExitCommand returns \"true\""},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"    private static void runInstructions() {"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"        String input;"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"        while (!parser.isExit()) {"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"            input \u003d Ui.getUserCommand();"},{"lineNumber":85,"author":{"gitId":"homingjun"},"content":"            Command command \u003d parser.parser(input, projectManager);"},{"lineNumber":86,"author":{"gitId":"homingjun"},"content":"            if (command !\u003d null) {"},{"lineNumber":87,"author":{"gitId":"homingjun"},"content":"                command.execute();"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"                if (command.shouldSave) {"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"                    try {"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"                        sm.save();"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"                    } catch (IOException e) {"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"                        Ui.showError(\"Unable to save data successfully, \""},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"                                + \"please check your data/ directory.\");"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"                    }"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"    public static void setClock(Clock clock) {"},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"        Scrumptious.clock \u003d clock;"},{"lineNumber":102,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":104,"author":{"gitId":"keke101"},"content":"    public static Clock getClock() {"},{"lineNumber":105,"author":{"gitId":"keke101"},"content":"        if (clock \u003d\u003d null) {"},{"lineNumber":106,"author":{"gitId":"keke101"},"content":"            return Clock.systemDefaultZone();"},{"lineNumber":107,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"keke101"},"content":"        return clock;"},{"lineNumber":109,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"gmit22":5,"homingjun":4,"keke101":69,"chocomango":26,"-":6}},{"path":"src/main/java/com/scrumptious/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"    protected Hashtable\u003cString, String\u003e parameters;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"    public final boolean shouldSave; //specifies sm.save() should be called"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"     * Creates a new abstract command."},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"    public Command(Hashtable\u003cString, String\u003e parameters, boolean shouldSave) {"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        this.shouldSave \u003d shouldSave;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"        setParameters(parameters);"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"     * Abstract method that execute the command."},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    public abstract void execute();"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"     * Getters and Setters."},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    public void setParameters(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        this.parameters \u003d parameters;"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"homingjun":1,"keke101":4,"chocomango":25}},{"path":"src/main/java/com/scrumptious/command/CommandSummary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"public class CommandSummary {"},{"lineNumber":4,"author":{"gitId":"homingjun"},"content":"    /*"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":"    Main Commands"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"    public static final String PROJECT \u003d \"project\";"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"    public static final String MEMBER \u003d \"member\";"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"    public static final String TASK \u003d \"task\";"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":"    public static final String SPRINT \u003d \"sprint\";"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"    public static final String STORAGE \u003d \"storage\";"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    Action Commands"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"    public static final String CREATE \u003d \"create\";"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    public static final String ADD \u003d \"add\";"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    public static final String EDIT \u003d \"edit\";"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    public static final String ADDTASK \u003d \"addtask\";"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"    public static final String DELETE \u003d \"del\";"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    public static final String REMOVETASK \u003d \"removetask\";"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    public static final String VIEW \u003d \"view\";"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"    public static final String PRIORITY \u003d \"priority\";"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    public static final String ALLOCATE \u003d \"allocate\";"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    public static final String DEALLOCATE \u003d \"deallocate\";"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    public static final String DURATION \u003d \"dur\";"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    public static final String SELECT \u003d \"select\";"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"    public static final String PRIORITYVIEW \u003d \"priorityview\";"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"    /*"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    Parameters"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"    public static final String TITLE \u003d \"title\";"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"    public static final String DESCRIPTION \u003d \"desc\";"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"    public static final String SPRINT_DURATION \u003d \"sd\";"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"    public static final String TASK_ID \u003d \"id\";"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"    /*"},{"lineNumber":41,"author":{"gitId":"homingjun"},"content":"    Help"},{"lineNumber":42,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"homingjun"},"content":"    public static final String HELP \u003d \"help\";"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"    /*"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"    Storage"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"    public static final String CLEAR \u003d \"clear\";"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":50,"author":{"gitId":"homingjun"},"content":"    /*"},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":"    Bye"},{"lineNumber":52,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"homingjun"},"content":"    public static final String BYE \u003d \"bye\";"},{"lineNumber":54,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":36,"gmit22":4,"keke101":7,"e0426051":2,"chocomango":5}},{"path":"src/main/java/com/scrumptious/command/EmptyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":4,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":"public class EmptyCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"    public EmptyCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":12,"keke101":2}},{"path":"src/main/java/com/scrumptious/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":"    public InvalidCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.warning(\"Invalid action!\");"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"Invalid action!\");"},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":15,"keke101":4}},{"path":"src/main/java/com/scrumptious/command/help/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"public abstract class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":"     * Creates a new Help command with arguments."},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"    public HelpCommand(Hashtable\u003cString, String\u003e parameters, boolean shouldSave) {"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"        super(parameters, shouldSave);"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"    public abstract void execute();"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"    public abstract void logExecution();"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":17,"keke101":2}},{"path":"src/main/java/com/scrumptious/command/help/MainHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class MainHelpCommand extends HelpCommand {"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":"    public MainHelpCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"        super(parameters, false);"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"        logExecution();"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"Here is the list of commands used in SCRUMptious. \""},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"                + \"Type \\\"help /*\\\", where * is the command number for more information on that specific command.\");"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"1. Project\");"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"2. Member\");"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"3. Task\");"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"4. Sprint\");"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"5. Storage\");"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"    public void logExecution() {"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.info(\"Viewed help menu.\");"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":27,"keke101":3}},{"path":"src/main/java/com/scrumptious/command/help/MemberHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class MemberHelpCommand extends HelpCommand {"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"    public MemberHelpCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"        logExecution();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"1. Add members\");"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: member /add \u003cusername\u003e [\u003cusername\u003e ...]\");"},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: member /add john mary\");"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"2. Remove members\");"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: member /del \u003cusername\u003e [\u003cusername\u003e ...]\");"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: member /del john mary\");"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"    public void logExecution() {"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.info(\"Viewed member help.\");"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":24,"keke101":4}},{"path":"src/main/java/com/scrumptious/command/help/ProjectHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class ProjectHelpCommand extends HelpCommand {"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"    public ProjectHelpCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"        logExecution();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"1. Create project\");"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: project /create -title \u003ctitle\u003e \""},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"                + \"-desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e\");"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: project /create -title MeTube \""},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"                + \"-desc video streaming software -dur 90 -sd 10\");"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"2. View project\");"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format \u0026 example: project /view\");"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"3. View project list\");"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format \u0026 example: project /list\");"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"4. Select project\");"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: project /select \u003cprojectid\u003e\");"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: project /select 1\");"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":"    public void logExecution() {"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.info(\"Viewed project help.\");"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":30,"keke101":4}},{"path":"src/main/java/com/scrumptious/command/help/SprintHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class SprintHelpCommand extends HelpCommand {"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"    public SprintHelpCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"        logExecution();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"1. Create sprint\");"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /create -goal \u003cgoal_input\u003e [optional tags]\");"},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /create Shopping Cart -start 20201010\");"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /create -goal UI -start 20201010\");"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /create -goal UI -start 20201010 -project 3\");"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"2. View sprint\");"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /view [optional tags]\");"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /view\");"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /view 2\");"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /view -project 2\");"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 4: sprint /view -project 2 -sprint 3\");"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"3. Edit sprint\");"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /edit -goal \u003cgoal_input\u003e [optional tags]\");"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /edit -goal Add Documentation\");"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /edit -project 2 -goal Add Documentation\");"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /edit -project 2 -sprint 3 -goal Add Documentation\");"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"4. Add tasks to sprint\");"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /addtask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]\");"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /addtask 1 2\");"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /addtask -task 1 2\");"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /addtask -project 2 -task 1 2\");"},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 4: sprint /addtask -project 2 -sprint 3 -task 1 2\");"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"5. Delete tasks from sprint\");"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /removetask \u003ctask_id\u003e [\u003ctask_id\u003e ...] [optional tags]\");"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /removetask 1 2\");"},{"lineNumber":41,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /removetask -project 2 -task 1 2\");"},{"lineNumber":42,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /removetask -project 2 -sprint 3 -task 1 2\");"},{"lineNumber":43,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"6. Allocate task to team members\");"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /allocate -task \u003ctask_id\u003e \""},{"lineNumber":45,"author":{"gitId":"homingjun"},"content":"                + \"-user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]\");"},{"lineNumber":46,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /allocate -task 1 2 -user johntan mary jane\");"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /allocate -project 2 -task 1 -user mary\");"},{"lineNumber":48,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /allocate -project 2 -sprint 3 -task 1 -user mary\");"},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"7. Deallocate tasks from team members\");"},{"lineNumber":50,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: sprint /deallocate -task \u003ctask_id\u003e \""},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":"                + \"-user \u003cuser_id\u003e [\u003cuser_id\u003e ...] [optional tags]\");"},{"lineNumber":52,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 1: sprint /deallocate -task 1 2 -user johntan mary jane\");"},{"lineNumber":53,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 2: sprint /deallocate -project 2 -task 1 -user mary\");"},{"lineNumber":54,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example 3: sprint /deallocate -project 2 -sprint 3 -task 1 -user mary\");"},{"lineNumber":55,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":57,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"homingjun"},"content":"    public void logExecution() {"},{"lineNumber":59,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.info(\"Viewed sprint help.\");"},{"lineNumber":60,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":57,"keke101":4}},{"path":"src/main/java/com/scrumptious/command/help/StorageHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":""},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class StorageHelpCommand extends HelpCommand {"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"    public StorageHelpCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":""},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"    public void execute() {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"        logExecution();"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"        Ui.showToUserLn(\"1. Clear all data. You will be prompted to confirm the decision.\");"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"        Ui.showToUserLn(\"   Data will be cleared if \\\"y\\\" (case-insensitive) is provided.\");"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"        Ui.showToUserLn(\"   Format: storage /clear\");"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"        Ui.showToUserLn(\"   Example: storage /clear\");"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"    public void logExecution() {"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.info(\"Viewed storage help.\");"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"homingjun":7,"keke101":19}},{"path":"src/main/java/com/scrumptious/command/help/TaskHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.help;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"public class TaskHelpCommand extends HelpCommand {"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"    public TaskHelpCommand(Hashtable\u003cString, String\u003e parameters) {"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"        logExecution();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"1. Add tasks \");"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003ccategory\u003e\");"},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: task /add -title Add UI -desc add an interactive UI -priority HIGH\");"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"2. Delete tasks\");"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: task /del \u003ctaskid\u003e [\u003ctaskid\u003e...]\");"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: task /del 5 7 9\");"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"3. View task\");"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: task /view \u003ctaskid\u003e\");"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: task /view 3\");"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"4. Change task priority\");"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: task /priority -priority \u003ccategory\u003e -id \u003ctaskid\u003e\");"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: task /priority -priority HIGH -id 1\");"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"5. Mark task as complete\");"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Format: task /done \u003ctaskid\u003e\");"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"   Example: task /done 1\");"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"6. View tasks in descending priority\");"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"   Format: task /priorityview\");"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"    public void logExecution() {"},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"        ScrumLogger.LOGGER.info(\"Viewed task help.\");"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":34,"keke101":4,"e0426051":2}},{"path":"src/main/java/com/scrumptious/command/member/AddMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.member;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"public class AddMemberCommand extends MemberCommand {"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    public AddMemberCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        super(parameters, projectManager, true);"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"    public void execute() {"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"        Member m;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"        Project proj \u003d projectManager.getSelectedProject();"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"        String projMember;"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"        // adds members provided, can add multiple members at once."},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"        for (int i \u003d 0; i \u003c parameters.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"            projMember \u003d parameters.get(Integer.toString(i));"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"            // check if member is already added to the associated projectr"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"            if (checkMember(proj, projMember)) {"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"                Ui.showToUserLn(projMember"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"                        + \" is already associated to the project.\");"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"                logExecution(\"User added member \" + projMember + \" to project \" + proj.getTitle());"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"            } else {"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"                m \u003d new Member(projMember);"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"                proj.getProjectMember().addMember(m);"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"                Ui.showToUserLn(projMember + \" has been added to the project.\");"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"                logExecution(\"User tried to add a already existing member \" + projMember + \" to project \""},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"                        + proj.getTitle());"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"    public void logExecution(String loggerMessage) {"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.info(loggerMessage);"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":34,"homingjun":1,"keke101":7,"chocomango":2}},{"path":"src/main/java/com/scrumptious/command/member/DeleteMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.member;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"public class DeleteMemberCommand extends MemberCommand {"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"    public DeleteMemberCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"        super(parameters, projectManager, true);"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"    public void execute() {"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"        Project proj;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"        proj \u003d projectManager.getSelectedProject();"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"        String projMember;"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"        for (int i \u003d 0; i \u003c parameters.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"            // Check if the member is associated with the project."},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"            projMember \u003d parameters.get(Integer.toString(i));"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"            if (checkMember(proj, projMember)) {"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"                proj.getProjectMember().removeMember(new Member(projMember));"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"                Ui.showToUserLn(projMember"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"                        + \" has been removed from the project.\");"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"                logExecution(\"User removed \" + projMember + \" from project \" + proj.getTitle());"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"            } else {"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"                Ui.showToUserLn(projMember"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"                        + \" is not associated with the project.\");"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"                logExecution(\"User tried to remove unassociated member \" + projMember"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"                        + \" from project \" + proj.getTitle());"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"    public void logExecution(String loggerMessage) {"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.info(loggerMessage);"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":32,"homingjun":3,"keke101":7,"chocomango":2}},{"path":"src/main/java/com/scrumptious/command/member/MemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.member;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"public abstract class MemberCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"    ProjectManager projectManager;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"    public MemberCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager, boolean shouldSave) {"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        super(parameters, shouldSave);"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"    public abstract void execute();"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"    public abstract void logExecution(String userMessage);"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"     * Checks if a member is already added to a project."},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"     * @param proj Project currently being used."},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"     * @param member Member who has to be checked for association with proj."},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"     * @return true if proj contains member"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    protected boolean checkMember(Project proj, String member) {"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        boolean flag;"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"        flag \u003d proj.getProjectMember().containMember(new Member(member));"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"        return flag;"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"homingjun":5,"gmit22":21,"keke101":7,"chocomango":1}},{"path":"src/main/java/com/scrumptious/command/project/CreateProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.util.Map;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TITLE;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DURATION;"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.SPRINT_DURATION;"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DESCRIPTION;"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"public class CreateProjectCommand extends ProjectCommand {"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private final ProjectManager projectManager;"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    public CreateProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"        super(parameters, true);"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    public void execute() {"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        boolean projectExists;"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"        String title;"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"        title \u003d this.parameters.get(TITLE).trim();"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"        projectExists \u003d checkTitleExist(title);"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"        if (projectExists) {"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"            handleDuplicateProject(\"User tried to add duplicate project.\");"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"            return;"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"        String description;"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        description \u003d parameters.get(DESCRIPTION).trim();"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"        int duration;"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"        duration \u003d Integer.parseInt(parameters.get(DURATION).trim());"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"        int sd;"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"        sd \u003d Integer.parseInt(parameters.get(SPRINT_DURATION).trim());"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"            checkParameter(sd, duration);"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"            return;"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        projectManager.addProject(title, description, duration, sd);"},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"        Ui.showToUserLn(\"Project successfully created.\");"},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"        logExecution();"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"        Project addedProj \u003d projectManager.getSelectedProject();"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":"        printCreatedProject(addedProj);"},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"     * Displays title of added project to user."},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"     * @param addProj Project just added by the user."},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"    private void printCreatedProject(Project addProj) {"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"        Ui.showToUserLn(\"\\tTitle: \" + addProj.getTitle());"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":"     * Checks for adding duplicate projects to the projectManager."},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"     * @param title Title of new project to be added"},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":"     * @return true if project alr exists, else false."},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"    public boolean checkTitleExist(String title) {"},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":"        Project proj;"},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"        if (projectManager.isEmpty()) {"},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"            return false;"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":"        for (Map.Entry\u003cInteger, Project\u003e entry : projectManager.getProjectList().entrySet()) {"},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"            proj \u003d entry.getValue();"},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":"            if (proj.getTitle().equalsIgnoreCase(title)) {"},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"                return true;"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":"        return false;"},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":"     * Checks if sd and duration of project specified agree with the rules."},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"     * @param sd Duration of each sprint of project"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":"     * @param duration Total duration of projects"},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"     * @throws ScrumptiousException When sd\u003d\u003d0, or duration is not in multiples of sd"},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":"    private void checkParameter(int sd, int duration) throws ScrumptiousException {"},{"lineNumber":100,"author":{"gitId":"gmit22"},"content":"        if (sd \u003d\u003d 0) {"},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Sprint duration cannot be zero.\");"},{"lineNumber":102,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"gmit22"},"content":"        if (sd \u003e duration || (duration % sd) !\u003d 0) {"},{"lineNumber":104,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Project duration must be in multiples of Sprint intervals.\");"},{"lineNumber":105,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":108,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"gmit22"},"content":"    public void logExecution() {"},{"lineNumber":110,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.info(\"Project\" + projectManager.getSelectedProject().getTitle() + \"successfully added to \""},{"lineNumber":111,"author":{"gitId":"gmit22"},"content":"                + \"ProjectManager.\");"},{"lineNumber":112,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":113,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":91,"keke101":16,"chocomango":7}},{"path":"src/main/java/com/scrumptious/command/project/ListProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.util.TreeMap;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"public class ListProjectCommand extends ProjectCommand {"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"    private final ProjectManager projectManager;"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"    public ListProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    public void execute() {"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"        Ui.showToUserLn(\"Following are the added projects: \");"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"        Ui.showToUserLn(\"\\tID Title \\t\\tDescription\");"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"        TreeMap\u003cInteger, Project\u003e sortedProject \u003d new TreeMap\u003c\u003e(projectManager.getProjectList());"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"        for (Map.Entry\u003cInteger, Project\u003e entry: sortedProject.entrySet()) {"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"            displayToUser(entry.getValue(), entry.getKey());"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        logExecution();"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"    public void logExecution() {"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.info(\"Projects added shown in ascending order.\");"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"     * Displays all added project to the users in an order."},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"     * @param proj Project to be displayed to the user"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"     * @param id Identifying id of the corresponding project"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"    private void displayToUser(Project proj, Integer id) {"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"        String output \u003d String.format(\"%d) %s \\t\\t%s\", id, proj.getTitle(), proj.getDescription());"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"        Ui.showToUserLn(\"\\t\" + output);"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":41,"keke101":6}},{"path":"src/main/java/com/scrumptious/command/project/ProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"public abstract class ProjectCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"     * Creates a new Project command with arguments."},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"    public ProjectCommand(Hashtable\u003cString, String\u003e parameters, boolean shouldSave) {"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"        super(parameters, shouldSave);"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"    public abstract void execute();"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"     * Handles the situation where the users tries to create a duplicate project."},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"    public static void handleDuplicateProject(String message) {"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"        Ui.showError(\"\\tThe project already exists! \""},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"                + \"View projects added using \\\u0027project/list\\\u0027.\");"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"    public abstract void logExecution();"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"homingjun":6,"gmit22":18,"keke101":6,"chocomango":2}},{"path":"src/main/java/com/scrumptious/command/project/SelectProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"public class SelectProjectCommand extends ProjectCommand {"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"    private final ProjectManager projectManager;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"    public SelectProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"        super(parameters, true);"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"    public void execute() {"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"        int id \u003d Integer.parseInt(parameters.get(\"0\"));"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"        assert projectManager.getProject(id) !\u003d null : \"Project exists in list but null\";"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"        projectManager.selectProject(id);"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        Ui.showToUserLn(\"Project \" + parameters.get(\"0\") + \" has been selected.\");"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"        logExecution();"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    public void logExecution() {"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.info(\"Project\" + projectManager.getSelectedProject().getTitle() + \"selected by user.\");"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":24,"homingjun":1,"keke101":5,"chocomango":2}},{"path":"src/main/java/com/scrumptious/command/project/ViewProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"public class ViewProjectCommand extends ProjectCommand {"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"    private final ProjectManager projectManager;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    public ViewProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"    public void execute() {"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        if (projectManager.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"            Ui.showError(\"No projects are created.\");"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"            ScrumLogger.LOGGER.warning(\"No project added to the project manager\");"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"            assert projectManager.getSelectedProject() !\u003d null : \"Selected project is null \\n.\";"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"            Project project \u003d projectManager.getSelectedProject();"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"            assert project !\u003d null : \"The project is null\";"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"            Ui.showToUserLn(project.toString());"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"            logExecution();"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"    public void logExecution() {"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"        ScrumLogger.LOGGER.info(\"Current working project details shown to user.\");"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":29,"homingjun":1,"keke101":6,"chocomango":3}},{"path":"src/main/java/com/scrumptious/command/sprint/AddSprintTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"public class AddSprintTaskCommand extends SprintCommand {"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"     * Parameters for the command."},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    private final ArrayList\u003cInteger\u003e taskIds;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"     * Creates a new AddSprintTask command with arguments."},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    public AddSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, true);"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        this.taskIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"            checkSprintExist();"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            prepareParameters();"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"            checkTasksExist(true);"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            addTasks();"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"     * Add tasks to Sprint."},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"    private void addTasks() {"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        for (int taskId : taskIds) {"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"            if (this.sprintOwner.checkTaskExist(taskId)) {"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"                Ui.showToUserLn(String.format(\"\\t%s is already added in sprint %s.\","},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"                        projOwner.getBacklog().getTask(taskId).getTitle(),"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"                        this.sprintOwner.getId()));"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                continue;"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"            this.sprintOwner.addSprintTask(taskId);"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"            //Update Task"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"            Task addedTask \u003d this.projOwner.getBacklog().getTask(taskId);"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"            addedTask.allocateToSprint(this.sprintOwner.getId());"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"            //Output to user"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(String.format(\"\\t%s added to sprint %s.\","},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"                    projOwner.getBacklog().getTask(taskId).getTitle(),"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                    this.sprintOwner.getId()));"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"    private void prepareParameters() throws ScrumptiousException {"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        if (checkTagSpecified(\"task\")) {"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"            chooseSprint();"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"            parseParamsToInt(parameters.get(\"task\").split(\" \"));"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"            selectCurrentSprint();"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"            parseParamsToInt(parameters.values().toArray(new String[0]));"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"     * Parse parameters into Integers."},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"    private void parseParamsToInt(String[] taskIds) {"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"        for (String id : taskIds) {"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"            this.taskIds.add(Integer.parseInt(id));"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"     * Add entry to logger that execution is successful."},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Added task to Sprint from backlog - %s\","},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"                Arrays.toString(this.taskIds.toArray())));"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":9,"e0426051":2,"chocomango":93}},{"path":"src/main/java/com/scrumptious/command/sprint/AllocateSprintTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"public class AllocateSprintTaskCommand extends SprintCommand {"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"     * Parameters for the command."},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    private final ArrayList\u003cInteger\u003e taskIds;"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    private String[] userIds;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"     * Creates a new AllocateSprintTask command with arguments."},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    public AllocateSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, true);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        this.taskIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        this.userIds \u003d new String[0];"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"            checkSprintExist();"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"            chooseSprint();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"            checkUserExist();"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            checkTasksExist(false);"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"            prepareParameters();"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"            checkAllocation();"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.sprintOwner.toIdString());"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"            allocateTask();"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"     * Allocate all tasks to all users."},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"    private void allocateTask() {"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        for (int taskId : taskIds) {"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"            for (String userId : userIds) {"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"                Member mem \u003d this.projOwner.getProjectMember().getMember(userId.trim());"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"                mem.allocateTask(taskId);"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"                this.projOwner.getBacklog().getTask(taskId).allocateToMember(mem.getUserId());"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"            Ui.showToUserLn(this.projOwner.getBacklog().getTask(taskId).getTitle()"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"                    + \" is assigned to \""},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"                    + Arrays.toString(userIds));"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"    private void prepareParameters() {"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        this.userIds \u003d this.parameters.get(\"user\").split(\" \");"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        parseParamsToInt(this.parameters.get(\"task\").split(\" \"));"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"     * Parse parameters into Integers."},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"     * @taskIds task Ids in String"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"    private void parseParamsToInt(String[] taskIds) {"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"        for (String id : taskIds) {"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"            this.taskIds.add(Integer.parseInt(id));"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"     * Check if all tasks are allocated to all users."},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"     * @throws ScrumptiousException when task specified is already allocated to user."},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"    private void checkAllocation() throws ScrumptiousException {"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"        for (int taskId : this.taskIds) {"},{"lineNumber":97,"author":{"gitId":"e0426051"},"content":"            Task task \u003d this.projOwner.getBacklog().getTask(taskId);"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"            for (String member : this.userIds) {"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"                if (task.getMemberList().contains(member)) {"},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"                    throw new ScrumptiousException(member + \" is already allocated with Task \" + taskId);"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"     * Add entry to logger that execution is successful."},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Allocate task to user - Users: %s | Tasks: %s\","},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"                Arrays.toString(this.userIds), Arrays.toString(this.taskIds.toArray())));"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":11,"e0426051":3,"chocomango":100}},{"path":"src/main/java/com/scrumptious/command/sprint/CreateSprintCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.parser.DateTimeParser;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.Scrumptious;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"public class CreateSprintCommand extends SprintCommand {"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"     * Parameters for the command."},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    private String sprintGoal;"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    private LocalDate sprintStart;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private LocalDate sprintEnd;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     * Creates a new CreateSprint command with arguments."},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    public CreateSprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, true);"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"        this.sprintStart \u003d LocalDate.now(Scrumptious.getClock());"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"            prepareParameters();"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"            checkAllSprintCreated();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"            updateProjectDates();"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"            sprintList.addSprint(this.projOwner, sprintGoal, sprintStart, sprintEnd);"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            printCreatedSprint();"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"            e.printExceptionMessage();"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"     * @First_Sprint - start parameter is used for project and sprint start date"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"     * @Subsequent_Sprints - New sprint will start right after previous sprint ends"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"    private void prepareParameters() throws ScrumptiousException {"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        this.sprintGoal \u003d this.parameters.get(\"goal\");"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"        if (this.sprintGoal.trim().equals(\"\")) {"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Goal cannot be empty.\");"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        if (checkIsFirstSprint()) {"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"            if (this.parameters.containsKey(\"start\")) {"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"                String date \u003d this.parameters.get(\"start\");"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"                try {"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"                    String correctDate \u003d DateTimeParser.catchDateFormat(date);"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"                    this.sprintStart \u003d DateTimeParser.parseDate(correctDate);"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"                } catch (ScrumptiousException e) {"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"                    Ui.showError(e.getMessage());"},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"            Sprint prevSprint \u003d sprintList.getSprint(sprintList.size());"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"            this.sprintStart \u003d prevSprint.getEndDate().plusDays(1);"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        this.sprintEnd \u003d this.sprintStart.plusDays(this.projOwner.getSprintLength() - 1);"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"     * Update the Project start/end dates and output results."},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"     * Only when the newly created sprint is the first Sprint"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"    private void updateProjectDates() {"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        if (checkIsFirstSprint()) {"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"            LocalDate projEndDate \u003d this.sprintStart.plusDays(this.projOwner.getProjectDuration() - 1);"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"            this.projOwner.setStartDate(this.sprintStart);"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"            this.projOwner.setEndDate(projEndDate);"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"First Sprint: Project will start along with the newly created sprint\");"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"Project period: \" + this.sprintStart + \" to \" + projEndDate);"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"            printRedundantStart();"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"     * Prints newly created sprint."},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"    private void printCreatedSprint() {"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        Sprint createdSprint \u003d sprintList.getSprint(sprintList.size());"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"        Ui.showToUser(createdSprint.toString());"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"     * Print message if -start tag is specified for subsequent sprint."},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    private void printRedundantStart() {"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        if (this.parameters.containsKey(\"start\")) {"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"Not first sprint: Start tag will be ignored and \""},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"                    + \"new sprint will start right after previous sprint ends.\");"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"Not first sprint: New sprint will start right after previous sprint ends.\");"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"     * Check if there is room for new sprints."},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"     * Not executed for first sprint"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"keke101"},"content":"     * @throws ScrumptiousException if all sprints are created"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"keke101"},"content":"    private void checkAllSprintCreated() throws ScrumptiousException {"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        if (!checkIsFirstSprint()) {"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"            if (DateTimeParser.diff(this.projOwner.getEndDate(), this.sprintStart) \u003e\u003d 0) {"},{"lineNumber":127,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"All sprints are already created.\");"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"     * Check if the new sprint will be the first sprint for the project."},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"     * @return true if sprintList size is 0"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"    private boolean checkIsFirstSprint() {"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"        return sprintList.size() \u003d\u003d 0;"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"     * Add entry to logger that execution is successful."},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(\"Created New Sprint - \""},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"                + this.sprintList.getSprint(this.sprintList.size()).getGoal()"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"                + \" for Project \" + this.projOwner.toIdString());"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"homingjun":2,"keke101":18,"e0426051":5,"chocomango":125}},{"path":"src/main/java/com/scrumptious/command/sprint/DeallocateSprintTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"public class DeallocateSprintTaskCommand extends SprintCommand {"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"     * Parameters for the command."},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private final ArrayList\u003cInteger\u003e taskIds;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    private String[] userIds;"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"     * Creates a new DeallocateSprintTask command with arguments."},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"    public DeallocateSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, true);"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"        this.taskIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        this.userIds \u003d new String[0];"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"            checkSprintExist();"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            chooseSprint();"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"            checkUserExist();"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"            checkTasksExist(false);"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"            prepareParameters();"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            checkAllocation();"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.sprintOwner.toIdString());"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"            deallocateTask();"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"     * Deallocate all tasks to all users."},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"    private void deallocateTask() {"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        for (int taskId : this.taskIds) {"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"            for (String userId : this.userIds) {"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"                Member mem \u003d this.projOwner.getProjectMember().getMember(userId.trim());"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"                mem.deallocateTask(taskId);"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"                this.projOwner.getBacklog().getTask(taskId).removeFromMember(mem.getUserId());"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"            Ui.showToUserLn(this.projOwner.getBacklog().getTask(taskId).getTitle()"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                    + \" is removed from \""},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"                    + Arrays.toString(this.userIds));"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"    private void prepareParameters() {"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        this.userIds \u003d this.parameters.get(\"user\").split(\" \");"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        parseParamsToInt(this.parameters.get(\"task\").split(\" \"));"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"     * Parse parameters into Integers."},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"    private void parseParamsToInt(String[] taskIds) {"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        for (String id : taskIds) {"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"            this.taskIds.add(Integer.parseInt(id));"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"     * Check if all tasks are allocated to all users."},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"    private void checkAllocation() throws ScrumptiousException {"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"        for (int taskId : this.taskIds) {"},{"lineNumber":97,"author":{"gitId":"e0426051"},"content":"            Task task \u003d this.projOwner.getBacklog().getTask(taskId);"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"            List\u003cString\u003e chosenMember \u003d Arrays.asList(this.userIds);"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"            if (!task.getMemberList().containsAll(chosenMember)) {"},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Not all tasks are allocated to member: \" "},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"                        + Arrays.toString(this.userIds));"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"     * Add entry to logger that execution is successful."},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Deallocate task from user - Users: %s | Tasks: %s\","},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"                Arrays.toString(this.userIds), Arrays.toString(this.taskIds.toArray())));"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":12,"e0426051":3,"chocomango":99}},{"path":"src/main/java/com/scrumptious/command/sprint/EditSprintCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"public class EditSprintCommand extends SprintCommand {"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"     * Parameters for the command."},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    private String sprintGoal;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"     * Creates a new EditSprint command with arguments."},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    public EditSprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, true);"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"            checkSprintExist();"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"            chooseSprint();"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            prepareParameters();"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"            editSprint();"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"    private void prepareParameters() {"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        this.sprintGoal \u003d this.parameters.get(\"goal\");"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"     * Update goal of selected Sprint."},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"    private void editSprint() {"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        printEditMessage();"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"        this.sprintOwner.setGoal(sprintGoal);"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"        Ui.showToUser(this.sprintOwner.toString());"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"     * Print message if provided goal is the same as current goal."},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"    private void printEditMessage() {"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        if (this.sprintOwner.getGoal().equals(sprintGoal)) {"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"Provided goal is the same as current goal.\");"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"Goal updated.\");"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"     * Add entry to logger that execution is successful."},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Edited goal for Sprint %d - New Goal: %s\","},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"                this.sprintOwner.getId(), this.parameters.get(\"goal\")));"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":7,"chocomango":75}},{"path":"src/main/java/com/scrumptious/command/sprint/RemoveSprintTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"public class RemoveSprintTaskCommand extends SprintCommand {"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"     * Parameters for the command."},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    private final ArrayList\u003cInteger\u003e taskIds;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"     * Creates a new RemoveSprintTask command with arguments."},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    public RemoveSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, true);"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        this.taskIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"            checkSprintExist();"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            prepareParameters();"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"            checkTasksExist(false);"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            removeTasks();"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"    private void removeTasks() {"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        for (int taskId : taskIds) {"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"            if (!this.sprintOwner.checkTaskExist(taskId)) {"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"                Ui.showToUserLn(String.format(\"\\t%s is already removed from sprint %s.\","},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"                        projOwner.getBacklog().getTask(taskId).getTitle(),"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"                        this.sprintOwner.getId()));"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                continue;"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"            this.sprintOwner.removeSprintTask(taskId);"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"            //Update Task"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"            Task removedTask \u003d this.projOwner.getBacklog().getTask(taskId);"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"            removedTask.removeFromSprint(this.sprintOwner.getId());"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"            //Output to user"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(String.format(\"\\t%s removed from sprint %s.\","},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"                    projOwner.getBacklog().getTask(taskId).getTitle(),"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"                    this.sprintOwner.getId()));"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"     * Prepare the parameters."},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"    private void prepareParameters() throws ScrumptiousException {"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        if (checkTagSpecified(\"task\")) {"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"            chooseSprint();"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"            parseParamsToInt(parameters.get(\"task\").split(\" \"));"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"            selectCurrentSprint();"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"            parseParamsToInt(parameters.values().toArray(new String[0]));"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"     * Parse parameters into Integers."},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"    private void parseParamsToInt(String[] taskIds) {"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"        for (String id : taskIds) {"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"            this.taskIds.add(Integer.parseInt(id));"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"     * Add entry to logger that execution is successful."},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Removed task from Sprint - %s\","},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"                Arrays.toString(this.taskIds.toArray())));"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":9,"e0426051":2,"chocomango":94}},{"path":"src/main/java/com/scrumptious/command/sprint/SprintCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.Scrumptious;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.SprintManager;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDateTime;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"public abstract class SprintCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"    protected SprintManager sprintList;"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    protected ProjectManager projectList;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    protected Project projOwner;"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    protected Sprint sprintOwner;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"     * Creates a new Sprint command with arguments."},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"    public SprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList, boolean shouldSave) {"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"        super(parameters, shouldSave);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        this.projectList \u003d projectList;"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"    public abstract void execute();"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"     * Log the status of execution."},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"    public abstract void logExecution();"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"     * Choose the project to execute command."},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"     * Validation completed at SprintParser"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"    protected void chooseProject() throws ScrumptiousException {"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"        int selectedProg;"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"        if (parameters.containsKey(\"project\")) {"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"            //select specified project"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"            selectedProg \u003d Integer.parseInt(parameters.get(\"project\"));"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(selectedProg);"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"            //select default project"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"            selectedProg \u003d projectList.getSelectedProjectIndex();"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        this.projOwner \u003d projectList.getProject(selectedProg);"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        this.sprintList \u003d projOwner.getSprintList();"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"     * Choose the sprint to execute command."},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"     * Validate the sprint parameter if specified:"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"     * - If Exist in Sprint Manager"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"     * - If there is ongoing spring if \"sprint\" params is not specified"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"    protected void chooseSprint() throws ScrumptiousException {"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"        int selectedSprint;"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        if (this.parameters.containsKey(\"sprint\")) {"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"            selectedSprint \u003d Integer.parseInt(this.parameters.get(\"sprint\"));"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"            if (selectedSprint \u003c 1 || selectedSprint \u003e this.projOwner.getSprintList().size()) {"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Sprint not found: \" + selectedSprint);"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        } else if (this.parameters.containsKey(\"0\")) {"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"            selectedSprint \u003d Integer.parseInt(this.parameters.get(\"0\"));"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"            if (selectedSprint \u003c 1 || selectedSprint \u003e this.projOwner.getSprintList().size()) {"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Sprint not found: \" + selectedSprint);"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"            if (this.projOwner.getSprintList().updateCurrentSprint()) {"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"                selectedSprint \u003d this.projOwner.getSprintList().getCurrentSprintIndex();"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"No ongoing sprint today (\"  "},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"                        + LocalDateTime.now(Scrumptious.getClock()).toLocalDate()"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"                        + \"). Maybe you can specify using -sprint tag\");"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"        this.sprintOwner \u003d this.projOwner.getSprintList().getSprint(selectedSprint);"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"     * Choose the sprint to execute command."},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"     * Validation completed at SprintParser"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"    protected void selectCurrentSprint() throws ScrumptiousException {"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"        if (this.sprintList.updateCurrentSprint()) {"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"            int selectedSprint \u003d this.sprintList.getCurrentSprintIndex();"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"            this.sprintOwner \u003d this.projOwner.getSprintList().getSprint(selectedSprint);"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"No ongoing sprint. Maybe you can specify using -sprint tag\");"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"     * Check if Project Manager contain any project."},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"keke101"},"content":"    protected void checkProjectExist(int projId) throws ScrumptiousException {"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        if (projId !\u003d -1) {"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"            if (!this.projectList.checkExist(projId)) {"},{"lineNumber":109,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Project not found: \" + projId);"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"            if (this.projectList.size() \u003d\u003d 0) {"},{"lineNumber":113,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please create a project first.\");"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"     * Check if Sprint Manager contain any sprints."},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"keke101"},"content":"    protected void checkSprintExist() throws ScrumptiousException {"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        if (this.projOwner.getSprintList().size() \u003d\u003d 0) {"},{"lineNumber":123,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Please create a sprint for Project \" "},{"lineNumber":124,"author":{"gitId":"keke101"},"content":"                    + this.projOwner.getProjectID() + \" first.\");"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"     * Check if the \"task\" params is specified and validate the params."},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"     * Checks:"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"     * - parsable into an Integer"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"     * - Exist in backlog (Task Manager)"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"    protected void checkTasksExist(boolean isAdd)"},{"lineNumber":136,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"        if (this.parameters.containsKey(\"task\")) {"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"            checkTasks(\"task\", isAdd);"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"        } else if (this.parameters.containsKey(\"0\")) {"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"            checkTasks(\"0\", isAdd);"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Missing parameter(s): Task ID\");"},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"    protected void checkTasks(String tag, boolean isAdd)"},{"lineNumber":148,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"        String[] taskIds;"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"        if (tag.equals(\"task\")) {"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":"            taskIds \u003d this.parameters.get(tag).split(\" \");"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":153,"author":{"gitId":"chocomango"},"content":"            taskIds \u003d this.parameters.values().toArray(new String[0]);"},{"lineNumber":154,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"chocomango"},"content":"        for (String id : taskIds) {"},{"lineNumber":156,"author":{"gitId":"chocomango"},"content":"            int taskId \u003d Integer.parseInt(id);"},{"lineNumber":157,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":158,"author":{"gitId":"chocomango"},"content":"            if (!this.projOwner.getBacklog().checkTaskExist(taskId)) {"},{"lineNumber":159,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Task not found in backlog: \" + taskId);"},{"lineNumber":160,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":162,"author":{"gitId":"chocomango"},"content":"            if (isAdd \u003d\u003d this.sprintOwner.checkTaskExist(taskId)) {"},{"lineNumber":163,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(isAdd"},{"lineNumber":164,"author":{"gitId":"chocomango"},"content":"                        ? \"Task(s) already exist: \" + taskId"},{"lineNumber":165,"author":{"gitId":"chocomango"},"content":"                        : \"Task not found in sprint: \" + taskId);"},{"lineNumber":166,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":168,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":171,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"chocomango"},"content":"     * Check if the tag is specified."},{"lineNumber":173,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"chocomango"},"content":"    protected boolean checkTagSpecified(String tag) {"},{"lineNumber":175,"author":{"gitId":"chocomango"},"content":"        return parameters.containsKey(tag);"},{"lineNumber":176,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":178,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"chocomango"},"content":"     * Check if the \"user\" params is specified and validate the params."},{"lineNumber":180,"author":{"gitId":"chocomango"},"content":"     * Checks:"},{"lineNumber":181,"author":{"gitId":"chocomango"},"content":"     * - Exist in MemberManager"},{"lineNumber":182,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"keke101"},"content":"    protected void checkUserExist() throws ScrumptiousException {"},{"lineNumber":184,"author":{"gitId":"chocomango"},"content":"        String[] userIds \u003d this.parameters.get(\"user\").split(\" \");"},{"lineNumber":185,"author":{"gitId":"chocomango"},"content":"        for (String id : userIds) {"},{"lineNumber":186,"author":{"gitId":"chocomango"},"content":"            Member mem \u003d this.projOwner.getProjectMember().getMember(id.trim());"},{"lineNumber":187,"author":{"gitId":"chocomango"},"content":"            if (mem \u003d\u003d null) {"},{"lineNumber":188,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"User not found: \" + id.trim());"},{"lineNumber":189,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"homingjun":1,"gmit22":1,"keke101":32,"chocomango":158}},{"path":"src/main/java/com/scrumptious/command/sprint/ViewSprintCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"public class ViewSprintCommand extends SprintCommand {"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"     * Creates a new ViewSprint command with arguments."},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"     * @param parameters - all parameters specified by user (Not used)"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"     * @param projectList - the entire project manager that the program is working on"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    public ViewSprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"        super(parameters, projectList, false);"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"     * Executes the command."},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    public void execute() {"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"            checkProjectExist(-1);"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"            chooseProject();"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"            checkSprintExist();"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"            chooseSprint();"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"            //Valid Command"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.projOwner.toIdString());"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"            Ui.showToUser(this.sprintOwner.toString());"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            logExecution();"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"        } catch (ScrumptiousException e) {"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"            e.printExceptionMessage();"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"    public void logExecution() {"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"        ScrumLogger.LOGGER.info(\"Viewed Sprint\");"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":7,"chocomango":40}},{"path":"src/main/java/com/scrumptious/command/storage/ClearStorageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":""},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":""},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"public class ClearStorageCommand extends StorageCommand {"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"     * Creates a command for clearing all the projects from the Project Manager."},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"     * @param parameters Parameters provided by the user."},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"     * @param projectManager Project manager object of the program."},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"    public ClearStorageCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"        super(parameters, projectManager, true);"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":""},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"    public void execute() {"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"        Ui.showToUser(\"[!WARNING!] Are you sure? This command is irreversible! (y/N) \");"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"        String input \u003d Ui.getUserInput();"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"        if (!input.trim().toLowerCase().equals(\"y\")) {"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"            Ui.showToUserLn(\"Data clear aborted.\");"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.info(\"Data clear requested and aborted.\");"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"            return;"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"        projectManager.clearProjects();"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"        Ui.showToUserLn(\"All data has been cleared!\");"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"        assert projectManager.isEmpty() \u0026\u0026 projectManager.getSelectedProjectIndex() \u003d\u003d -1 "},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"                : \"Projects was not cleared or selected project !\u003d -1\";"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"        ScrumLogger.LOGGER.info(\"Data clear requested and proceeded, all data has been cleared.\");"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":35}},{"path":"src/main/java/com/scrumptious/command/storage/StorageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":""},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":""},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"public abstract class StorageCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":""},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"    protected ProjectManager projectManager;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"     * Creates a new abstract command."},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"     * @param parameters Parameters provided by the user."},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"     * @param shouldSave Specifies whether a save() should be invoked after the execution of the command."},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"    public StorageCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager, boolean shouldSave) {"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"        super(parameters, shouldSave);"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":23}},{"path":"src/main/java/com/scrumptious/command/task/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DESCRIPTION;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.PRIORITY;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TITLE;"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"public class AddTaskCommand extends TaskCommand {"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"    private final ProjectManager projectManager;"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"    public AddTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"        super(parameters, true);"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        if (projectManager.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : add task.\");"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"        String title;"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        boolean titleExists;"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        title \u003d parameters.get(TITLE);"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"        titleExists \u003d checkTitleExist(title);"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"        if (titleExists) {"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"            handleDuplicateTitle(\"Duplicate task : adding task.\");"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"        String description;"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"        String priority;"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"        description \u003d parameters.get(DESCRIPTION);"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        priority \u003d parameters.get(PRIORITY).toUpperCase();"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"        Project proj \u003d projectManager.getSelectedProject();"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"        if (!proj.getBacklog().checkValidPriority(priority)) {"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"            handleInvalidPriority(\"Syntax error : add task.\");"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"            return;"},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"        proj.getBacklog().addTask(title, description, priority);"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"        displayToUser(proj);"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"     * Displays the added task to the user."},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"     * @param proj the project the task belongs to."},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"    private void displayToUser(Project proj) {"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        Task addedTask \u003d proj.getBacklog().getTask(proj.getBacklog().getNextId() - 1);"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"        assert !(addedTask \u003d\u003d null) : \"Task is NULL\\n\";"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"Task successfully created.\");"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(addedTask.toString());"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Added backlog task, ID : %d\","},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"                addedTask.getId()));"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"     * Checks whether the title already exists."},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"     * @param title the title of the task the user wishes to add."},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"     * @return whether the title already exists."},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"    public boolean checkTitleExist(String title) {"},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"        boolean titleAlreadyExist \u003d false;"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"        if (projectManager.isEmpty()) {"},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"            return false;"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"        for (int i \u003d 1; i \u003c\u003d projectManager.getSelectedProject().getBacklog().size(); i++) {"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":"            Task existingTask \u003d projectManager.getSelectedProject().getBacklog().getTask(i);"},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"            if (existingTask !\u003d null) {"},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"                String existingTitle \u003d existingTask.getTitle();"},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"                titleAlreadyExist |\u003d existingTitle.equals(title);"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":"        return titleAlreadyExist;"},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"}"},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":""}],"authorContributionMap":{"homingjun":2,"keke101":10,"e0426051":72,"chocomango":1}},{"path":"src/main/java/com/scrumptious/command/task/ChangeTaskPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.PRIORITY;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TASK_ID;"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"public class ChangeTaskPriorityCommand extends TaskCommand {"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"    private final ProjectManager projectListManager;"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    public ChangeTaskPriorityCommand(Hashtable\u003cString,String\u003e parameters, ProjectManager projectListManager) {"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"        super(parameters, true);"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"        this.projectListManager \u003d projectListManager;"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    public void execute() {"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"        if (projectListManager.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : edit task priority.\");"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        int id;"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"        String priority;"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        id \u003d Integer.parseInt(parameters.get(TASK_ID));"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        priority \u003d parameters.get(PRIORITY).trim().toUpperCase();"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"        changePriority(id, priority);"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"     * Checks prerequisites and changes the priority of the task."},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"     * @param id the ID of the task."},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"     * @param priority the new priority of the task."},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"    private void changePriority(int id, String priority) {"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"        Project proj \u003d projectListManager.getSelectedProject();"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"            Task task \u003d proj.getBacklog().getTask(id);"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"            if (!proj.getBacklog().checkValidPriority(priority)) {"},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"                handleInvalidPriority(\"Syntax error : edit task priority.\");"},{"lineNumber":45,"author":{"gitId":"homingjun"},"content":"                return;"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"            task.setPriority(priority);"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"            displayToUser(task);"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"            handleInvalidId(id, \"Invalid task ID : edit task priority.\");"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"            handleInvalidPriority(\"Syntax error : edit task priority.\");"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"            handleIncorrectId(\"Invalid task ID : edit task priority.\");"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"     * Displays the modified task and its new priority to the user."},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"     * @param task the modified task."},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"    private void displayToUser(Task task) {"},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"The task \" + task.getTitle() + \" has its priority changed to:\");"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"\\t\" + task.getPriority());"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Changed task priority, ID : %d, new priority : %s\","},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"                task.getId(), task.getPriority()));"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"homingjun":2,"keke101":9,"e0426051":57}},{"path":"src/main/java/com/scrumptious/command/task/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"public class DeleteTaskCommand extends TaskCommand {"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"    private final ProjectManager projectListManager;"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"    public DeleteTaskCommand(Hashtable\u003cString,String\u003e parameters, ProjectManager projectListManager) {"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"        super(parameters, true);"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"        this.projectListManager \u003d projectListManager;"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"    public void execute() {"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"        if (projectListManager.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : task deletion.\");"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        Project proj \u003d projectListManager.getSelectedProject();"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        if (parameters.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"            handleMissingParams(\"Syntax error : task deletion.\");"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        for (int i \u003d 0; i \u003c parameters.size(); i++) {"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"                deleteTask(proj, i);"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"                handleNonIntegerId(\"Syntax error : task deletion.\");"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"     * Handles the deletion of the specified task."},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"     * @param proj the project the task belongs to."},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"     * @param input the user\u0027s input."},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"    private void deleteTask(Project proj, int input) {"},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"        int taskId \u003d Integer.parseInt(parameters.get(Integer.toString(input)));"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"        if (taskId \u003c\u003d 0) {"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"            handleNegativeId(taskId, \"Syntax error : task deletion.\");"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"        } else if (proj.getBacklog().checkTaskExist(taskId)) {"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"            Task task \u003d proj.getBacklog().getTask(taskId);"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"            assert !(task \u003d\u003d null) : \"Task is NULL\\n\";"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"            displayToUser(taskId, task);"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"            proj.getBacklog().removeTask(taskId);"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"            ArrayList\u003cSprint\u003e allSprints \u003d proj.getSprintList().getSprintList();"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"            cleanupSprint(taskId, allSprints);"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"            handleInvalidId(taskId, \"Invalid task ID : task deletion.\");"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"     * Remove traces of deleted task from all sprints."},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"     * @param taskId the ID of the to-be-deleted task."},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"     * @param allSprints all sprints."},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"    private void cleanupSprint(int taskId, ArrayList\u003cSprint\u003e allSprints) {"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"        for (Sprint sprint : allSprints) {"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"            if (sprint.checkTaskExist(taskId)) {"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"                sprint.removeSprintTask(taskId);"},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":"     * Displays the removed task title to the user."},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"     * @param taskId the ID of the to-be-deleted task."},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"     * @param task the to-be-deleted task."},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":"    private void displayToUser(int taskId, Task task) {"},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"The corresponding task \""},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":"                + task.getTitle()"},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"                + \" has been removed from project.\");"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Deleted task, ID : %d\","},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"                taskId));"},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":8,"e0426051":77}},{"path":"src/main/java/com/scrumptious/command/task/DoneTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"public class DoneTaskCommand extends TaskCommand {"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"    private final ProjectManager projectListManager;"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"    public DoneTaskCommand(Hashtable\u003cString,String\u003e parameters, ProjectManager projectListManager) {"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        super(parameters, true);"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"        this.projectListManager \u003d projectListManager;"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"    public void execute() {"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"        if (projectListManager.isEmpty()) {"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : task completion.\");"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        Project proj \u003d projectListManager.getSelectedProject();"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"        assert !(proj \u003d\u003d null) : \"Project is NULL\";"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        if (parameters.size() \u003d\u003d 0) {"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"            handleMissingParams(\"Syntax error : task completion.\");"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        for (int i \u003d 0; i \u003c parameters.size(); i++) {"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"                markTaskDone(proj, i);"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"                handleNonIntegerId(\"Syntax error : task completion.\");"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"                handleDeletedId(\"Invalid task ID : task completion.\");"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"     * Checks the user input and set task as done."},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"     * @param proj the project the task belongs to."},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"     * @param input the user input."},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"    private void markTaskDone(Project proj, int input) {"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"        Task task;"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"        int taskId \u003d Integer.parseInt(parameters.get(Integer.toString(input)));"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"        if (taskId \u003c\u003d 0) {"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"            handleNegativeId(taskId, \"Syntax error : task completion.\");"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"        } else if (taskId \u003c\u003d proj.getBacklog().getNextId()) {"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"            task \u003d proj.getBacklog().getTask(taskId);"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"            task.setAsDone();"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"            displayToUser(task, taskId);"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"            handleInvalidId(taskId, \"Invalid task ID : task completion.\");"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"     * Displays the completed task ID and title to the user."},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"     * @param task the completed task."},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"     * @param taskId the ID of the completed task."},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"    private void displayToUser(Task task, int taskId) {"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"The task ID: \" + task.getId()"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"                + \" and title: \" + task.getTitle() + \" has been marked as done.\");"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Set task as done, ID : %d\","},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"                taskId));"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"}"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":""}],"authorContributionMap":{"keke101":7,"e0426051":65}},{"path":"src/main/java/com/scrumptious/command/task/PriorityViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"public class PriorityViewCommand extends TaskCommand {"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"    private final ProjectManager projectListManager;"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"    public PriorityViewCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectListManager) {"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"        super(parameters, false);"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"        this.projectListManager \u003d projectListManager;"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"    public void execute() {"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"        if (projectListManager.isEmpty()) {"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : priority view.\");"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"            Project proj \u003d projectListManager.getSelectedProject();"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"            assert !(proj \u003d\u003d null) : \"Project is NULL\";"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"            ArrayList\u003cTask\u003e tasks \u003d proj.getBacklog().getTaskList();"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"            ArrayList\u003cTask\u003e highPriorityTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"            ArrayList\u003cTask\u003e mediumPriorityTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"            ArrayList\u003cTask\u003e lowPriorityTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"            arrangeTasks(tasks, highPriorityTasks, mediumPriorityTasks, lowPriorityTasks);"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"            Ui.showToUserLn(\"The details of the tasks, in descending priority, are as follows: \");"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"            printTasksByPriority(highPriorityTasks, mediumPriorityTasks, lowPriorityTasks);"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"            ScrumLogger.LOGGER.info(\"Viewed tasks by priority.\");"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : priority view.\");"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"     * Arrange the the tasks in order of priority."},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"     * @param tasks the list of tasks to be arranged."},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"     * @param highPriorityTasks the list of high priority tasks after arrangement."},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"     * @param mediumPriorityTasks the list of medium priority tasks after arrangement."},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"     * @param lowPriorityTasks the list of low priority tasks after arrangement."},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"    private void arrangeTasks(ArrayList\u003cTask\u003e tasks, ArrayList\u003cTask\u003e highPriorityTasks,"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"                              ArrayList\u003cTask\u003e mediumPriorityTasks, ArrayList\u003cTask\u003e lowPriorityTasks) {"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"        for (Task task: tasks) {"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"            if (task !\u003d null) {"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"                String priority \u003d task.getPriority().substring(0, 1);"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"                if (priority.equals(\"H\")) {"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"                    highPriorityTasks.add(task);"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"                if (priority.equals(\"M\")) {"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"                    mediumPriorityTasks.add(task);"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"                if (priority.equals(\"L\")) {"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"                    lowPriorityTasks.add(task);"},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"     * Prints out the tasks in order of descending priority."},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"     * @param highPriorityTasks high priority tasks are printed first."},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"     * @param mediumPriorityTasks medium priority tasks are printed after high priority tasks."},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"     * @param lowPriorityTasks low priority tasks are printed last."},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"    private void printTasksByPriority(ArrayList\u003cTask\u003e highPriorityTasks, ArrayList\u003cTask\u003e mediumPriorityTasks,"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":"                                      ArrayList\u003cTask\u003e lowPriorityTasks) {"},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"        for (Task task : highPriorityTasks) {"},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"            Ui.showToUser(task.toString());"},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":"        for (Task task : mediumPriorityTasks) {"},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"            Ui.showToUser(task.toString());"},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"        for (Task task : lowPriorityTasks) {"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"            Ui.showToUser(task.toString());"},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":6,"e0426051":79}},{"path":"src/main/java/com/scrumptious/command/task/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Messages;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"public abstract class TaskCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"    public TaskCommand(Hashtable\u003cString, String\u003e parameters, boolean shouldSave) {"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"        super(parameters, shouldSave);"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    public abstract void execute();"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the user enters an ID belonging to a deleted task for the view command."},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"    public static void handleViewTaskDeletedId(String message) {"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"You have entered a task ID that has been deleted.\");"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"Please do not enter deleted task IDs.\");"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"To view subsequent tasks, please run this command \""},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"                + \"again with the subsequent IDs.\");"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the user accesses the command without creating a project."},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"    public static void handleMissingProject(String message) {"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"Please create a project first.\");"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the user did not enter the command correctly."},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"    public static void handleMissingParams(String message) {"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"Missing parameters.\");"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the user enters an invalid ID."},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"     * @param taskId the invalid ID."},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"    public static void handleBadId(int taskId, String message) {"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"The following task ID: \" + taskId"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"                + \" doesn\u0027t exist in backlog.\\nPlease enter a\""},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"                + \" valid ID.\");"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the user enters an ID belonging to a deleted task."},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"    public static void handleDeletedId(String message) {"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"You have entered a task ID that has been deleted.\");"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the users enters non-integers into the ID field."},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"    public static void handleNonIntegerId(String message) {"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"        Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the users enters an ID that is out of bounds."},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":"    public static void handleInvalidId(int taskId, String message) {"},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"The following task ID: \" + taskId"},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"                + \" doesn\u0027t exist in backlog.\\nPlease enter a\""},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"                + \" valid ID.\");"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the users enters a negative number in the ID field."},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"    public static void handleNegativeId(int taskId, String message) {"},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"The ID: \" + taskId + \" is invalid. \""},{"lineNumber":86,"author":{"gitId":"e0426051"},"content":"                + \"Please enter a positive integer.\");"},{"lineNumber":87,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":88,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":90,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":91,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the users enters an invalid priority."},{"lineNumber":93,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"e0426051"},"content":"    public static void handleInvalidPriority(String message) {"},{"lineNumber":95,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"Priority entered is invalid!\");"},{"lineNumber":96,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":97,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":99,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the user enters an ID belonging to a deleted or invalid task."},{"lineNumber":101,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"e0426051"},"content":"    public static void handleIncorrectId(String message) {"},{"lineNumber":103,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"You have entered a task ID that does not exist, has been deleted.\");"},{"lineNumber":104,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":105,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":107,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"e0426051"},"content":"     * Handles the situation where the users enters a duplicate title."},{"lineNumber":109,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"e0426051"},"content":"    public static void handleDuplicateTitle(String message) {"},{"lineNumber":111,"author":{"gitId":"e0426051"},"content":"        Ui.showError(\"The task title already exists! \""},{"lineNumber":112,"author":{"gitId":"e0426051"},"content":"                + \"Please enter an alternative name.\");"},{"lineNumber":113,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.warning(message);"},{"lineNumber":114,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"homingjun":7,"gmit22":1,"keke101":7,"e0426051":100}},{"path":"src/main/java/com/scrumptious/command/task/ViewTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"public class ViewTaskCommand extends TaskCommand {"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"    private final ProjectManager projectListManager;"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"    public ViewTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectListManager) {"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        super(parameters, false);"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"        this.projectListManager \u003d projectListManager;"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"    public void execute() {"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"        if (projectListManager.isEmpty()) {"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : task view.\");"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"            return;"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        handleViewTasks();"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"     * Handler for viewing of tasks. Checks the prerequisites before calling the"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"     * print functions."},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"    public void handleViewTasks() {"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"            Project proj \u003d projectListManager.getSelectedProject();"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"            assert !(proj \u003d\u003d null) : \"Project is NULL\";"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"            if (parameters.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"                handleMissingParams(\"Syntax error : task view.\");"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"                return;"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"            printTasks(proj);"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"            handleMissingProject(\"No project : task view.\");"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"            handleViewTaskDeletedId(\"Invalid task ID : task view.\");"},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"            handleMissingParams(\"Syntax error : task view.\");"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"     * Prints all tasks requested by the user."},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"     * @param proj the project the tasks belong to."},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"    private void printTasks(Project proj) {"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"        boolean firstTask \u003d true;"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        for (int i \u003d 0; i \u003c parameters.size(); i++) {"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"            int taskId \u003d Integer.parseInt(parameters.get(Integer.toString(i)));"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"            if (taskId \u003c\u003d proj.getBacklog().getNextId() \u0026\u0026 taskId \u003e 0) {"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"                firstTask \u003d checkFirstTask(firstTask);"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"                printTask(proj, taskId);"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"            } else {"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"                handleBadId(taskId, \"Invalid task ID : task view.\");"},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"     * Checks whether the task to be printed is first on the list."},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"     * If the task is the first, the initial message is printed."},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"     * @param firstTask whether the task is first on the list."},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"     * @return false to denote that the next tasks are not the first."},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"    private boolean checkFirstTask(boolean firstTask) {"},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"        if (firstTask) {"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":"            showInitialMessage();"},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"        return false;"},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":"     * Prints individual tasks."},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"     * @param proj the project the task belongs to"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"     * @param taskId the ID of the task"},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"    private void printTask(Project proj, int taskId) {"},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":"        Task task \u003d proj.getBacklog().getTask(taskId);"},{"lineNumber":86,"author":{"gitId":"e0426051"},"content":"        ScrumLogger.LOGGER.info(String.format(\"Viewed task ID : %d\", taskId));"},{"lineNumber":87,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(task.toString());"},{"lineNumber":88,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":90,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"e0426051"},"content":"     * Displays the top message for viewing of tasks."},{"lineNumber":92,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"e0426051"},"content":"    public static void showInitialMessage() {"},{"lineNumber":94,"author":{"gitId":"e0426051"},"content":"        Ui.showToUserLn(\"The details of the tasks are as follows: \");"},{"lineNumber":95,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"gmit22":2,"keke101":7,"e0426051":87}},{"path":"src/main/java/com/scrumptious/exception/ScrumptiousException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.exception;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"public class ScrumptiousException extends Exception {"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"    public ScrumptiousException(String message) {"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"     * Prints out the exception message."},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    public void printExceptionMessage() {"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"        Ui.showToUserLn(this.getMessage());"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":10,"keke101":4,"chocomango":2}},{"path":"src/main/java/com/scrumptious/logger/ScrumLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.logger;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.util.logging.FileHandler;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.util.logging.Level;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.util.logging.SimpleFormatter;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.util.logging.Handler;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.util.logging.ConsoleHandler;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"public class ScrumLogger {"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    public static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    private static FileHandler fileHandler;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    public static void setup() throws IOException {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"        Logger rootLogger \u003d Logger.getLogger(\"\");"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        Handler[] handlers \u003d rootLogger.getHandlers();"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        if (handlers[0] instanceof ConsoleHandler) {"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"            rootLogger.removeHandler(handlers[0]);"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        logger.setLevel(Level.INFO);"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        String currentPath \u003d System.getProperty(\"user.dir\");"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"        Path path \u003d Paths.get(currentPath + File.separator + \"logs\" + File.separator + \"scrum.log\");"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        if (!Files.exists(path.getParent())) {"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            Files.createDirectory(path.getParent());"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        fileHandler \u003d new FileHandler(path.toString(), false);"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        SimpleFormatter formatter \u003d new SimpleFormatter();"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"        fileHandler.setFormatter(formatter);"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        logger.addHandler(fileHandler);"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"    public static void destroy() {"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"        if (!fileHandler.equals(null)) {"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"                logger.removeHandler(fileHandler);"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"                fileHandler.close();"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"                Ui.showToUserLn(\"Destroyed before init.\");"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":2,"chocomango":52}},{"path":"src/main/java/com/scrumptious/model/member/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.member;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":""},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"public class Member implements JsonableObject {"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"    private String userId;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    private ArrayList\u003cInteger\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"    public Member() {"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"    public Member(String userId) {"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"        this.userId \u003d userId;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    public String getUserId() {"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"        return userId;"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"    public void setUserId(String userId) {"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"        this.userId \u003d userId;"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":""},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"    public ArrayList\u003cInteger\u003e getTaskList() {"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        return taskList;"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":""},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"    public void allocateTask(int taskid) {"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        taskList.add(taskid);"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"    public void deallocateTask(int taskid) {"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"        taskList.remove((Object) taskid);"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"     * Check if o is an instance of Member or not"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"     * \"null instanceof [type]\" also returns false."},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"     * @param o Object to be compared with user id"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":"     * @return true if it equal, false if it is not an instance of Member class/ not equal."},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"    public boolean equals(Object o) {"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"        /* Check if o is an instance of Member or not"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"          \"null instanceof [type]\" also returns false */"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"        if (!(o instanceof Member)) {"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":"            return false;"},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"        Member v \u003d (Member) o;"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"        // Compare the userId of members and return accordingly"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":"        return userId.equals(v.userId);"},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":""},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"        final JsonObject jMember \u003d new JsonObject();"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"        jMember.put(\"userId\", userId);"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"        jMember.put(\"taskList\", taskList);"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"        jMember.toJson(writer);"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":""},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"        userId \u003d JsonableObject.parseString(jsonObj, \"userId\");"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"        taskList \u003d JsonableObject.parseIntegerList(jsonObj, \"taskList\");"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":32,"keke101":42,"chocomango":14}},{"path":"src/main/java/com/scrumptious/model/member/ProjectMembers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.member;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableArray;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"public class ProjectMembers implements JsonableArray {"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    private ArrayList\u003cMember\u003e memberList;"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":""},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"    public ProjectMembers() {"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"        memberList \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":""},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"    public int size() {"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"        return memberList.size();"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    public ArrayList\u003cMember\u003e getAllMembers() {"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        return this.memberList;"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    /**Return required member if present in the projectMember."},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"     * @param userid Id of the member added"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"     * @return Member object if found, else null"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    public Member getMember(String userid) {"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        for (Member mem : memberList) {"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            if (mem.getUserId().equals(userid)) {"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"                return mem;"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        return null;"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"    public void addMember(Member m) {"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"        memberList.add(m);"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"    //To check if a project contains a member"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"    public boolean containMember(Member member) {"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"        return memberList.contains(member);"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"    public void removeMember(Member member) {"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"        memberList.remove(member);"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        StringBuilder membersString \u003d new StringBuilder();"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        membersString.append(\"[Members:\");"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        for (Member mem : memberList) {"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"            membersString.append(String.format(\" %s\", mem.getUserId()));"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"        membersString.append(\"]\\n\");"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        return membersString.toString();"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":""},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"        final JsonArray jMemberList \u003d new JsonArray(memberList);"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"        jMemberList.toJson(writer);"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":""},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonArray jsonArr) {"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"        for (Object o : jsonArr) {"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"            Member member \u003d new Member();"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"            member.fromJson((JsonObject) o);"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"            memberList.add(member);"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":29,"keke101":37,"chocomango":24}},{"path":"src/main/java/com/scrumptious/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.Scrumptious;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.ProjectMembers;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.SprintManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.TaskManager;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"public class Project implements JsonableObject {"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    private SprintManager sprintList;"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"    private TaskManager backlog;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private ProjectMembers memberList;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    private int projectID;"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    private String title;"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    private String description;"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":""},{"lineNumber":25,"author":{"gitId":"keke101"},"content":""},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    private int projectDuration;"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    private int sprintLength;"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    private LocalDate startDate \u003d null;"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"    private LocalDate endDate \u003d null;"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"    public Project() {"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":""},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"    public Project(int projectID, String title, String description, int projectDuration, int sprintLength) {"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"        this.projectID \u003d projectID;"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        this.title \u003d title;"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"        this.description \u003d description;"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"        this.projectDuration \u003d projectDuration;"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        this.sprintLength \u003d sprintLength;"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"        backlog \u003d new TaskManager(this);"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"        memberList \u003d new ProjectMembers();"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"        sprintList \u003d new SprintManager();"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    public String toIdString() {"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        return String.format(\"[Project ID: %s]%n\", this.projectID);"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        StringBuilder projectInString \u003d new StringBuilder();"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        projectInString.append(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d%n\"));"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        projectInString.append(String.format(\"[ID: %s]%n\", this.projectID));"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        projectInString.append(String.format(\"[Title: %s]%n\", this.title));"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        projectInString.append(String.format(\"[Description: %s]%n\", this.description));"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        if (!memberList.getAllMembers().isEmpty()) {"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"            projectInString.append(memberList.toString());"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"            projectInString.append(String.format(\"[No members added]%n\"));"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        if (this.startDate !\u003d null) {"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"            projectInString.append(String.format(\"[Period: %s - %s]%n\", this.startDate, this.endDate));"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"            projectInString.append(String.format(\"[Project will start along with the first sprint]%n\"));"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"        if (!this.backlog.taskList.isEmpty()) {"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"            projectInString.append(this.backlog.toString());"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"            projectInString.append(String.format(\"[Project backlog is empty]%n\"));"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"        if (this.sprintList.size() !\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"            projectInString.append(sprintList.toString());"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"            projectInString.append(String.format(\"[There are no Sprints]%n\"));"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        projectInString.append(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d%n\"));"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        return projectInString.toString();"},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    //Getters"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"    public int getProjectID() {"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"        return projectID;"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"    public SprintManager getSprintList() {"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"        return sprintList;"},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":"    public ProjectMembers getProjectMember() {"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        return memberList;"},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":"    public int getProjectDuration() {"},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"        return projectDuration;"},{"lineNumber":99,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":101,"author":{"gitId":"gmit22"},"content":"    public int getSprintLength() {"},{"lineNumber":102,"author":{"gitId":"gmit22"},"content":"        return sprintLength;"},{"lineNumber":103,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":105,"author":{"gitId":"gmit22"},"content":"    public String getTitle() {"},{"lineNumber":106,"author":{"gitId":"gmit22"},"content":"        return title;"},{"lineNumber":107,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":109,"author":{"gitId":"gmit22"},"content":"    public LocalDate getStartDate() {"},{"lineNumber":110,"author":{"gitId":"gmit22"},"content":"        return startDate;"},{"lineNumber":111,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":113,"author":{"gitId":"e0426051"},"content":"    public TaskManager getBacklog() {"},{"lineNumber":114,"author":{"gitId":"e0426051"},"content":"        return backlog;"},{"lineNumber":115,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"keke101"},"content":""},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"    public ProjectMembers getMemberList() {"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"        return memberList;"},{"lineNumber":119,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"keke101"},"content":""},{"lineNumber":121,"author":{"gitId":"keke101"},"content":"    public LocalDate getEndDate() {"},{"lineNumber":122,"author":{"gitId":"keke101"},"content":"        return endDate;"},{"lineNumber":123,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"keke101"},"content":""},{"lineNumber":125,"author":{"gitId":"keke101"},"content":"    public String getDescription() {"},{"lineNumber":126,"author":{"gitId":"keke101"},"content":"        return description;"},{"lineNumber":127,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"gmit22"},"content":"    // Call this function every time a new sprint object is instantiated."},{"lineNumber":129,"author":{"gitId":"gmit22"},"content":"    // sets the start date the first time."},{"lineNumber":130,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":131,"author":{"gitId":"keke101"},"content":"    //Setters"},{"lineNumber":132,"author":{"gitId":"gmit22"},"content":"    public void setStartDate() {"},{"lineNumber":133,"author":{"gitId":"keke101"},"content":"        setStartDate(LocalDate.now(Scrumptious.getClock()));"},{"lineNumber":134,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":136,"author":{"gitId":"gmit22"},"content":"    public void setStartDate(LocalDate startDate) {"},{"lineNumber":137,"author":{"gitId":"gmit22"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":138,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":140,"author":{"gitId":"gmit22"},"content":"    public void setEndDate(LocalDate endDate) {"},{"lineNumber":141,"author":{"gitId":"gmit22"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":142,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":144,"author":{"gitId":"keke101"},"content":"    public void setTitle(String title) {"},{"lineNumber":145,"author":{"gitId":"keke101"},"content":"        this.title \u003d title;"},{"lineNumber":146,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"keke101"},"content":""},{"lineNumber":148,"author":{"gitId":"keke101"},"content":"    public void setDescription(String description) {"},{"lineNumber":149,"author":{"gitId":"keke101"},"content":"        this.description \u003d description;"},{"lineNumber":150,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"keke101"},"content":""},{"lineNumber":152,"author":{"gitId":"keke101"},"content":"    public void setProjectDuration(int projectDuration) {"},{"lineNumber":153,"author":{"gitId":"keke101"},"content":"        this.projectDuration \u003d projectDuration;"},{"lineNumber":154,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"keke101"},"content":""},{"lineNumber":156,"author":{"gitId":"keke101"},"content":"    public void setSprintLength(int sprintLength) {"},{"lineNumber":157,"author":{"gitId":"keke101"},"content":"        this.sprintLength \u003d sprintLength;"},{"lineNumber":158,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":160,"author":{"gitId":"e0426051"},"content":"    public void displayTaskList() {"},{"lineNumber":161,"author":{"gitId":"e0426051"},"content":"        if (backlog.getNextId() \u003d\u003d 0) {"},{"lineNumber":162,"author":{"gitId":"gmit22"},"content":"            System.out.println(\"No tasks currently added to project backlog.\");"},{"lineNumber":163,"author":{"gitId":"gmit22"},"content":"        } else {"},{"lineNumber":164,"author":{"gitId":"gmit22"},"content":"            System.out.println(\"Current tasks in your project backlog\");"},{"lineNumber":165,"author":{"gitId":"e0426051"},"content":"            for (int i \u003d 0; i \u003c backlog.getNextId(); i++) {"},{"lineNumber":166,"author":{"gitId":"e0426051"},"content":"                System.out.println(\"\\t\" + (i + 1) + \". \" + backlog.getTask(i).getTitle());"},{"lineNumber":167,"author":{"gitId":"gmit22"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"gmit22"},"content":"    "},{"lineNumber":171,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":172,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":173,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":174,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":175,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":176,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":177,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":178,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":179,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":181,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"keke101"},"content":""},{"lineNumber":183,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":184,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":185,"author":{"gitId":"keke101"},"content":"        final JsonObject jObj \u003d new JsonObject();"},{"lineNumber":186,"author":{"gitId":"keke101"},"content":"        jObj.put(\"projectID\", this.projectID);"},{"lineNumber":187,"author":{"gitId":"keke101"},"content":"        jObj.put(\"title\", this.title);"},{"lineNumber":188,"author":{"gitId":"keke101"},"content":"        jObj.put(\"description\", this.description);"},{"lineNumber":189,"author":{"gitId":"keke101"},"content":"        jObj.put(\"projectDuration\", this.projectDuration);"},{"lineNumber":190,"author":{"gitId":"keke101"},"content":"        jObj.put(\"sprintLength\", this.sprintLength);"},{"lineNumber":191,"author":{"gitId":"keke101"},"content":"        jObj.put(\"startDate\", this.startDate \u003d\u003d null ? null : this.startDate.toString());"},{"lineNumber":192,"author":{"gitId":"keke101"},"content":"        jObj.put(\"endDate\", this.endDate \u003d\u003d null ? null : this.endDate.toString());"},{"lineNumber":193,"author":{"gitId":"e0426051"},"content":"        jObj.put(\"backlog\", backlog);"},{"lineNumber":194,"author":{"gitId":"chocomango"},"content":"        jObj.put(\"members\", memberList);"},{"lineNumber":195,"author":{"gitId":"chocomango"},"content":"        jObj.put(\"allSprints\", sprintList);"},{"lineNumber":196,"author":{"gitId":"keke101"},"content":"        jObj.toJson(writer);"},{"lineNumber":197,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"keke101"},"content":""},{"lineNumber":199,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":200,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":201,"author":{"gitId":"keke101"},"content":"        "},{"lineNumber":202,"author":{"gitId":"keke101"},"content":"        this.projectID \u003d JsonableObject.parseInt(jsonObj, \"projectID\");"},{"lineNumber":203,"author":{"gitId":"keke101"},"content":"        this.title \u003d JsonableObject.parseString(jsonObj, \"title\");"},{"lineNumber":204,"author":{"gitId":"keke101"},"content":"        this.description \u003d JsonableObject.parseString(jsonObj, \"description\");"},{"lineNumber":205,"author":{"gitId":"keke101"},"content":"        this.projectDuration \u003d JsonableObject.parseInt(jsonObj, \"projectDuration\");"},{"lineNumber":206,"author":{"gitId":"keke101"},"content":"        this.sprintLength \u003d JsonableObject.parseInt(jsonObj, \"sprintLength\");"},{"lineNumber":207,"author":{"gitId":"keke101"},"content":"        this.startDate \u003d JsonableObject.parseDate(jsonObj, \"startDate\");"},{"lineNumber":208,"author":{"gitId":"keke101"},"content":"        this.endDate \u003d JsonableObject.parseDate(jsonObj, \"endDate\");"},{"lineNumber":209,"author":{"gitId":"chocomango"},"content":"        this.sprintList \u003d new SprintManager();"},{"lineNumber":210,"author":{"gitId":"e0426051"},"content":"        this.backlog \u003d new TaskManager();"},{"lineNumber":211,"author":{"gitId":"chocomango"},"content":"        this.memberList \u003d new ProjectMembers();"},{"lineNumber":212,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":213,"author":{"gitId":"chocomango"},"content":"        sprintList.fromJson((JsonObject) jsonObj.get(\"allSprints\"), this);"},{"lineNumber":214,"author":{"gitId":"e0426051"},"content":"        backlog.fromJson((JsonObject) jsonObj.get(\"backlog\"), this);"},{"lineNumber":215,"author":{"gitId":"chocomango"},"content":"        memberList.fromJson((JsonArray) jsonObj.get(\"members\"));"},{"lineNumber":216,"author":{"gitId":"keke101"},"content":"        "},{"lineNumber":217,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":58,"keke101":86,"e0426051":13,"chocomango":61}},{"path":"src/main/java/com/scrumptious/model/project/ProjectManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":""},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"public class ProjectManager implements JsonableObject {"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"    private Hashtable\u003cInteger, Project\u003e projectList;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"    private int selectedProject;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"    public ProjectManager() {"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"        this.projectList \u003d new Hashtable\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"        this.selectedProject \u003d -1;"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    public void addProject(String title, String description, int projectDuration, int sprintLength) {"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"        int newProjectID \u003d this.size() + 1;"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"        Project proj \u003d new Project(newProjectID, title, description, projectDuration, sprintLength);"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"        this.projectList.put(newProjectID, proj);"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        this.selectedProject \u003d newProjectID;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    public Hashtable\u003cInteger, Project\u003e getProjectList() {"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        return this.projectList;"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    public int getSelectedProjectIndex() {"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"        return selectedProject;"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"    public void selectProject(int index) {"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        selectedProject \u003d index;"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"    public int size() {"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        return projectList.size();"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"    public boolean isEmpty() {"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"        return projectList.isEmpty();"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    public Project getSelectedProject() {"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        return projectList.get(selectedProject);"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"    public Project getProject(int index) {"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        return projectList.get(index);"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":""},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"    public void clearProjects() {"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"        projectList.clear();"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"        selectedProject \u003d -1;"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"keke101"},"content":""},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"    public boolean checkExist(int projID) {"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"        return projectList.containsKey(projID);"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":""},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"        final JsonObject jsonProjMgr \u003d new JsonObject();"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"        jsonProjMgr.put(\"selectedProject\", this.selectedProject);"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"        jsonProjMgr.put(\"projectList\", new JsonArray(this.projectList.values()));"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"        jsonProjMgr.toJson(writer);"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":""},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"        if (jsonObj.isEmpty()) {"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"            return; //empty data"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"        selectedProject \u003d JsonableObject.parseInt(jsonObj, \"selectedProject\");"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"        "},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"        for (Object o : (JsonArray) jsonObj.get(\"projectList\")) {"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"            Project project \u003d new Project();"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"            project.fromJson((JsonObject) o);"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"            projectList.put(project.getProjectID(), project);"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":33,"keke101":48,"chocomango":17}},{"path":"src/main/java/com/scrumptious/model/sprint/Sprint.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.Scrumptious;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":""},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"public class Sprint implements JsonableObject {"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    private int id;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    private String goal;"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    private LocalDate startDate;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private LocalDate endDate;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    private ArrayList\u003cInteger\u003e taskList;"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    private Project owner;"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"    public Sprint() {"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    public Sprint(int sprintID, Project proj, String goal) {"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        this(sprintID, proj, goal, null, null);"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"    public Sprint(int sprintID, Project proj, String goal, LocalDate startDate) {"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"        this(sprintID, proj, goal, startDate, null);"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"    public Sprint(int sprintID, Project proj, String goal, LocalDate startDate, LocalDate endDate) {"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        setId(sprintID);"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"        setGoal(goal);"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        setStartDate(startDate);"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"        setEndDate(endDate);"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"        this.owner \u003d proj;"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"    public Project getOwner() {"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"        return owner;"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":""},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    public void setOwner(Project owner) {"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        this.owner \u003d owner;"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"    public int getId() {"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        return id;"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"    public void setId(int id) {"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        this.id \u003d id;"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"    public String getGoal() {"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        return goal;"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"    public void setGoal(String goal) {"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        this.goal \u003d goal;"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"    public LocalDate getStartDate() {"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        return startDate;"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"    public void setStartDate(LocalDate startDate) {"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"    public LocalDate getEndDate() {"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        return endDate;"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"    public void setEndDate(LocalDate endDate) {"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"    public boolean checkTaskExist(int taskId) {"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"        for (Integer id : taskList) {"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"            if (id \u003d\u003d taskId) {"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"                return true;"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"        return false;"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"    public void addSprintTask(int taskId) {"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        this.taskList.add(taskId);"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"    public void removeSprintTask(int taskId) {"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"        this.taskList.remove((Object) taskId);"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"    public ArrayList\u003cInteger\u003e getAllSprintTaskIds() {"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        return this.taskList;"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"keke101"},"content":""},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"    public String toIdString() {"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"        StringBuilder sprintInString \u003d new StringBuilder();"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"[Sprint ID: %s]%n\", this.id));"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"        return sprintInString.toString();"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"    public String toSimplifiedString() {"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"        StringBuilder sprintInString \u003d new StringBuilder();"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"[Sprint ID: %d]\", this.id));"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"\\t[Goal: %s]\", this.goal));"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"\\t[Period: %s - %s]%n\", this.startDate, this.endDate));"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"        return sprintInString.toString();"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"    public String toString() {"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"        boolean isCurrentSprint;"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        isCurrentSprint \u003d ((this.id) \u003d\u003d this.owner.getSprintList().getCurrentSprintIndex());"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":"        StringBuilder sprintInString \u003d new StringBuilder();"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        if (isCurrentSprint) {"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"            sprintInString.append(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d%n\"));"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"            sprintInString.append(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d%n\"));"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"[ID: %d]%n\", this.id));"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"[Goal: %s]%n\", this.goal));"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"[Period: %s - %s]%n\", this.startDate, this.endDate));"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"        if (isCurrentSprint) {"},{"lineNumber":135,"author":{"gitId":"keke101"},"content":"            switch (this.endDate.compareTo(LocalDate.now(Scrumptious.getClock()))) {"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"            case 0:"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"                sprintInString.append(String.format(\"[Remaining: Last day]%n\"));"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"                break;"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"            case 1:"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"                sprintInString.append(String.format(\"[Remaining: 1 day]%n\"));"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"                break;"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"            default:"},{"lineNumber":143,"author":{"gitId":"keke101"},"content":"                sprintInString.append(String.format(\"[Remaining: %s days]%n\", "},{"lineNumber":144,"author":{"gitId":"keke101"},"content":"                        this.endDate.compareTo(LocalDate.now(Scrumptious.getClock()))));"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"            sprintInString.append(String.format(\"[No allocated tasks]%n\"));"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"            for (int taskIds : taskList) {"},{"lineNumber":151,"author":{"gitId":"e0426051"},"content":"                Task task \u003d owner.getBacklog().getTask(taskIds);"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"                sprintInString.append(task.toString());"},{"lineNumber":153,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"chocomango"},"content":"        sprintInString.append(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d%n\"));"},{"lineNumber":156,"author":{"gitId":"chocomango"},"content":"        return sprintInString.toString();"},{"lineNumber":157,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":159,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":160,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":161,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":162,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":163,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":164,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":165,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":166,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":167,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":169,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"keke101"},"content":""},{"lineNumber":171,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":172,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":173,"author":{"gitId":"keke101"},"content":"        final JsonObject jObj \u003d new JsonObject();"},{"lineNumber":174,"author":{"gitId":"keke101"},"content":"        jObj.put(\"id\", id);"},{"lineNumber":175,"author":{"gitId":"keke101"},"content":"        jObj.put(\"goal\", goal);"},{"lineNumber":176,"author":{"gitId":"keke101"},"content":"        jObj.put(\"startDate\", startDate \u003d\u003d null ? null : startDate.toString());"},{"lineNumber":177,"author":{"gitId":"keke101"},"content":"        jObj.put(\"endDate\", endDate \u003d\u003d null ? null : endDate.toString());"},{"lineNumber":178,"author":{"gitId":"keke101"},"content":"        jObj.put(\"sprintTaskIds\", taskList);"},{"lineNumber":179,"author":{"gitId":"keke101"},"content":"        jObj.put(\"owner\", owner.getProjectID());"},{"lineNumber":180,"author":{"gitId":"keke101"},"content":"        jObj.toJson(writer);"},{"lineNumber":181,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"keke101"},"content":""},{"lineNumber":183,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj, Project project) {"},{"lineNumber":184,"author":{"gitId":"keke101"},"content":"        owner \u003d project;"},{"lineNumber":185,"author":{"gitId":"keke101"},"content":"        id \u003d JsonableObject.parseInt(jsonObj, \"id\");"},{"lineNumber":186,"author":{"gitId":"keke101"},"content":"        goal \u003d JsonableObject.parseString(jsonObj, \"goal\");"},{"lineNumber":187,"author":{"gitId":"keke101"},"content":"        startDate \u003d JsonableObject.parseDate(jsonObj, \"startDate\");"},{"lineNumber":188,"author":{"gitId":"keke101"},"content":"        endDate \u003d JsonableObject.parseDate(jsonObj, \"endDate\");"},{"lineNumber":189,"author":{"gitId":"keke101"},"content":"        taskList \u003d JsonableObject.parseIntegerList(jsonObj, \"sprintTaskIds\");"},{"lineNumber":190,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":192,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":193,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":194,"author":{"gitId":"keke101"},"content":"        fromJson(jsonObj, null);"},{"lineNumber":195,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":59,"e0426051":1,"chocomango":136}},{"path":"src/main/java/com/scrumptious/model/sprint/SprintManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.parser.DateTimeParser;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.Scrumptious;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import java.math.BigDecimal;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"public class SprintManager implements JsonableObject {"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    private ArrayList\u003cSprint\u003e sprintList;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    private int currentSprintIndex;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    public SprintManager() {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"        this.sprintList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        setCurrentSprintIndex(-1);"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"    public ArrayList\u003cSprint\u003e getSprintList() {"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"        return sprintList;"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":""},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"    public int getCurrentSprintIndex() {"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"        return currentSprintIndex;"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":""},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"    public void setCurrentSprintIndex(int sprintId) {"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        this.currentSprintIndex \u003d sprintId;"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":""},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"    public int size() {"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        return sprintList.size();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"    public Sprint getSprint(int sprintId) {"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"        return sprintList.get(sprintId - 1);"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    public Sprint getCurrentSprint() {"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        return sprintList.get(this.currentSprintIndex - 1);"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"    public void addSprint(Project proj, String goal, LocalDate start, LocalDate end) {"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"        int newSprintID \u003d this.size() + 1;"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        sprintList.add(new Sprint(newSprintID, proj, goal, start, end));"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"    public boolean updateCurrentSprint() {"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        for (int id \u003d 1; id \u003c\u003d this.size(); id++) {"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"            Sprint current \u003d this.getSprint(id);"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"            if (DateTimeParser.diff(LocalDate.now(Scrumptious.getClock()), current.getEndDate()) \u003e\u003d 0"},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"                    \u0026\u0026 DateTimeParser.diff(current.getStartDate(), LocalDate.now(Scrumptious.getClock())) \u003e\u003d 0) {"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"                this.setCurrentSprintIndex(id);"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"                return true;"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"        return false;"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":""},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"    public String toString() {"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        StringBuilder allSprintsInString \u003d new StringBuilder();"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        allSprintsInString.append(String.format(\"-------------------------- ALL SPRINTS --------------------------%n\"));"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        for (Sprint sprint : sprintList) {"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"            allSprintsInString.append(sprint.toSimplifiedString());"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"        allSprintsInString.append(String.format(\"-----------------------------------------------------------------%n\"));"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        return allSprintsInString.toString();"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":""},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":""},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"        final JsonObject jSprintObj \u003d new JsonObject();"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"        jSprintObj.put(\"sprintList\", sprintList);"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":"        jSprintObj.put(\"currentSprintIndex\", currentSprintIndex);"},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"        jSprintObj.toJson(writer);"},{"lineNumber":98,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":""},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObject, Project project) {"},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"        this.currentSprintIndex \u003d ((BigDecimal) jsonObject.get(\"currentSprintIndex\")).intValue();"},{"lineNumber":102,"author":{"gitId":"keke101"},"content":"        JsonArray jsonSprints \u003d new JsonArray((JsonArray) jsonObject.get(\"sprintList\"));"},{"lineNumber":103,"author":{"gitId":"keke101"},"content":""},{"lineNumber":104,"author":{"gitId":"keke101"},"content":"        for (Object o : jsonSprints) {"},{"lineNumber":105,"author":{"gitId":"keke101"},"content":"            Sprint sprint \u003d new Sprint();"},{"lineNumber":106,"author":{"gitId":"keke101"},"content":"            sprint.fromJson((JsonObject) o, project);"},{"lineNumber":107,"author":{"gitId":"keke101"},"content":"            sprintList.add(sprint);"},{"lineNumber":108,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":111,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":113,"author":{"gitId":"keke101"},"content":"        fromJson(jsonObj, null);"},{"lineNumber":114,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":61,"chocomango":54}},{"path":"src/main/java/com/scrumptious/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.task;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"public enum Priority {"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"    HIGH {"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"        public String toString() {"},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":"            return \"High priority\";"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"    },"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"    MEDIUM {"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"        public String toString() {"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"            return \"Medium priority\";"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"    },"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"    LOW {"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"        public String toString() {"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"            return \"Low priority\";"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"    };"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":15,"keke101":2,"e0426051":4}},{"path":"src/main/java/com/scrumptious/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.task;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":""},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"public class Task implements JsonableObject {"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"    private int id;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"    private String title;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    private String description;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"    private Priority priority;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"    private boolean isDone;"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    private ArrayList\u003cString\u003e memberList;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"    private ArrayList\u003cInteger\u003e sprintList;"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"    public Task() {"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    public Task(int id, String title, String description, String priority) {"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        this(id, title, description, priority, false);"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":""},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    public Task(int id, String title, String description, String priority, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"        this.id \u003d id;"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        this.title \u003d title;"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        this.description \u003d description;"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        this.priority \u003d Priority.valueOf(priority);"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        this.memberList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        this.sprintList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"    public void setTitle(String title) {"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":"        this.title \u003d title;"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":""},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"    public void setDescription(String description) {"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"        this.description \u003d description;"},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":""},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"    public void setPriority(Priority priority) {"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"        this.priority \u003d priority;"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"    public void setPriority(String input) {"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"        priority \u003d Priority.valueOf(input);"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":""},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"    public void setDone(boolean done) {"},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"        isDone \u003d done;"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"keke101"},"content":""},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"    public ArrayList\u003cString\u003e getMemberList() {"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        return memberList;"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"keke101"},"content":""},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"    public ArrayList\u003cInteger\u003e getSprintList() {"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"        return sprintList;"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":""},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"    public void allocateToMember(String memberId) {"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"        memberList.add(memberId);"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"    public void removeFromMember(String memberId) {"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"        memberList.remove((Object) memberId);"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"    public void allocateToSprint(int sprintId) {"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"        sprintList.add(sprintId);"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"    public void removeFromSprint(int sprintId) {"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        sprintList.remove((Object) sprintId);"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"    public void setId(int id) {"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"        this.id \u003d id;"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":""},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"    public void setAsDone() {"},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":"        this.isDone \u003d true;"},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"    public int getId() {"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"        return id;"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":""},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":"    public String getDescription() {"},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":"        return description;"},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":"    public String getPriority() {"},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"        return priority.toString();"},{"lineNumber":99,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":101,"author":{"gitId":"gmit22"},"content":"    public String getTitle() {"},{"lineNumber":102,"author":{"gitId":"gmit22"},"content":"        return title;"},{"lineNumber":103,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":105,"author":{"gitId":"gmit22"},"content":"    public boolean getDone() {"},{"lineNumber":106,"author":{"gitId":"gmit22"},"content":"        return isDone;"},{"lineNumber":107,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    public String toSimplifiedString() {"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        StringBuilder taskString \u003d new StringBuilder();"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"[Task ID: %d]\", this.id));"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\t[Title: %s]\", this.title));"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\t[Completion: %s]%n\", this.isDone ? \"Completed\" : \"Incomplete\"));"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"        return taskString.toString();"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":117,"author":{"gitId":"gmit22"},"content":"    @Override"},{"lineNumber":118,"author":{"gitId":"gmit22"},"content":"    public String toString() {"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"        StringBuilder taskString \u003d new StringBuilder();"},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"[Task]%n\"));"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\tID: %d%n\", this.id));"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\tTitle: %s%n\", this.title));"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\tDescription: %s%n\", this.description));"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\tPriority: %s%n\", this.priority));"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        taskString.append(String.format(\"\\tCompletion: %s%n\", this.isDone ? \"Completed\" : \"Incomplete\"));"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"        if (!memberList.isEmpty()) {"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":"            taskString.append(\"\\tAssigned to: \");"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"            for (String member : memberList) {"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"                taskString.append(String.format(\"%s \", member));"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"            taskString.append(System.lineSeparator());"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"            taskString.append(String.format(\"\\tTask have yet to be assigned to anyone%n\"));"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"        return taskString.toString();"},{"lineNumber":136,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":138,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":139,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":140,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":141,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":143,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":144,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":145,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":146,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":148,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"keke101"},"content":""},{"lineNumber":150,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":151,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":152,"author":{"gitId":"keke101"},"content":"        final JsonObject jTask \u003d new JsonObject();"},{"lineNumber":153,"author":{"gitId":"keke101"},"content":"        jTask.put(\"id\", id);"},{"lineNumber":154,"author":{"gitId":"keke101"},"content":"        jTask.put(\"title\", title);"},{"lineNumber":155,"author":{"gitId":"keke101"},"content":"        jTask.put(\"description\", description);"},{"lineNumber":156,"author":{"gitId":"keke101"},"content":"        jTask.put(\"priority\", priority.name());"},{"lineNumber":157,"author":{"gitId":"keke101"},"content":"        jTask.put(\"isDone\", isDone);"},{"lineNumber":158,"author":{"gitId":"keke101"},"content":"        jTask.put(\"memberList\", memberList);"},{"lineNumber":159,"author":{"gitId":"keke101"},"content":"        jTask.put(\"sprintList\", sprintList);"},{"lineNumber":160,"author":{"gitId":"keke101"},"content":"        jTask.toJson(writer);"},{"lineNumber":161,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"keke101"},"content":""},{"lineNumber":163,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":164,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":165,"author":{"gitId":"keke101"},"content":"        id \u003d JsonableObject.parseInt(jsonObj, \"id\");"},{"lineNumber":166,"author":{"gitId":"keke101"},"content":"        title \u003d JsonableObject.parseString(jsonObj,\"title\");"},{"lineNumber":167,"author":{"gitId":"keke101"},"content":"        description \u003d JsonableObject.parseString(jsonObj, \"description\");"},{"lineNumber":168,"author":{"gitId":"keke101"},"content":"        priority \u003d Priority.valueOf(JsonableObject.parseString(jsonObj, \"priority\"));"},{"lineNumber":169,"author":{"gitId":"keke101"},"content":"        isDone \u003d JsonableObject.parseBoolean(jsonObj, \"isDone\");"},{"lineNumber":170,"author":{"gitId":"keke101"},"content":"        memberList \u003d JsonableObject.parseStringList(jsonObj, \"memberList\");"},{"lineNumber":171,"author":{"gitId":"keke101"},"content":"        sprintList \u003d JsonableObject.parseIntegerList(jsonObj, \"sprintList\");"},{"lineNumber":172,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":30,"keke101":81,"chocomango":62}},{"path":"src/main/java/com/scrumptious/model/task/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.task;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.storage.JsonableObject;"},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.StringWriter;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import java.io.Writer;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"public class TaskManager implements JsonableObject {"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"    private Project proj;"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"    public ArrayList\u003cTask\u003e taskList;"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    int nextId;"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    public TaskManager() {"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    public TaskManager(Project proj) {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"        this.proj \u003d proj;"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        taskList \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        nextId \u003d 1;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"     * Checks whether the task list is empty. Returns true if it is empty."},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"     * @return whether task list empty."},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"    public boolean isEmpty() {"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"        return taskList.isEmpty();"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"    public int size() {"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"        return taskList.size();"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"     * Returns the ID after the ID of the latest task."},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"     * @return next ID."},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"    public int getNextId() {"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"        return nextId;"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":""},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"     * Sets the project where task operations will handle."},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"     * @param proj the project to be subject to task operations"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"    public void setProj(Project proj) {"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"        this.proj \u003d proj;"},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":""},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"     * Adds a task to the task list."},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"     * @param title the title of the task."},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"     * @param description the description of the task."},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"     * @param priority the priority of the task."},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"    public void addTask(String title, String description, String priority) {"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        int newTaskId \u003d nextId++;"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"        taskList.add(new Task(newTaskId, title, description, priority));"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"     * Checks whether the priority entered is valid."},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"     * @param input the user\u0027s input."},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"     * @return true if the priority is valid, and false otherwise."},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"    public boolean checkValidPriority(String input) {"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        for (Priority priority : Priority.values()) {"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"            if (priority.name().equals(input)) {"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"                return true;"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        return false;"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"     * Compares the user input with the prescribed priorities."},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"     * @param name the prescribed priorities."},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"     * @param input the user input."},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":"     * @return true if the user input matches, and false otherwise."},{"lineNumber":86,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"e0426051"},"content":"    public boolean compareString(String name, String input) {"},{"lineNumber":88,"author":{"gitId":"e0426051"},"content":"        if (name.equals(input)) {"},{"lineNumber":89,"author":{"gitId":"e0426051"},"content":"            return true;"},{"lineNumber":90,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"e0426051"},"content":"        return false;"},{"lineNumber":92,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"    public Task getTask(int id) {"},{"lineNumber":95,"author":{"gitId":"e0426051"},"content":"        for (Task task : taskList) {"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"            if (task.getId() \u003d\u003d id) {"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"                return task;"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"        return null;"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"    public void removeTask(int taskId) {"},{"lineNumber":104,"author":{"gitId":"e0426051"},"content":"        for (Task task : taskList) {"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"            if (task.getId() \u003d\u003d taskId) {"},{"lineNumber":106,"author":{"gitId":"e0426051"},"content":"                cleanupSprint(task);"},{"lineNumber":107,"author":{"gitId":"e0426051"},"content":"                taskList.remove(task);"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"                return;"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":113,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"e0426051"},"content":"     * Cleans up the sprint list when a task is removed."},{"lineNumber":115,"author":{"gitId":"e0426051"},"content":"     * @param task the removed task."},{"lineNumber":116,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"e0426051"},"content":"    public void cleanupSprint(Task task) {"},{"lineNumber":118,"author":{"gitId":"e0426051"},"content":"        ArrayList\u003cInteger\u003e allocatedSprint \u003d task.getSprintList();"},{"lineNumber":119,"author":{"gitId":"e0426051"},"content":"        for (Integer sprintId : allocatedSprint) {"},{"lineNumber":120,"author":{"gitId":"e0426051"},"content":"            proj.getSprintList().getSprint(sprintId).removeSprintTask(task.getId());"},{"lineNumber":121,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"keke101"},"content":""},{"lineNumber":124,"author":{"gitId":"e0426051"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":125,"author":{"gitId":"e0426051"},"content":"        return taskList;"},{"lineNumber":126,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":128,"author":{"gitId":"e0426051"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"e0426051"},"content":"     * Checks whether the task of ID exist."},{"lineNumber":130,"author":{"gitId":"e0426051"},"content":"     * @param id the ID of the task to be checked."},{"lineNumber":131,"author":{"gitId":"e0426051"},"content":"     * @return true if the task exists, and false otherwise."},{"lineNumber":132,"author":{"gitId":"e0426051"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"    public boolean checkTaskExist(int id) {"},{"lineNumber":134,"author":{"gitId":"e0426051"},"content":"        for (Task task : taskList) {"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"            if (task.getId() \u003d\u003d id) {"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"                return true;"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"        return false;"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"    "},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"    @Override"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"    public String toString() {"},{"lineNumber":144,"author":{"gitId":"e0426051"},"content":"        StringBuilder taskString \u003d new StringBuilder();"},{"lineNumber":145,"author":{"gitId":"e0426051"},"content":"        taskString.append(String.format(\"---------------------------- BACKLOG ----------------------------%n\"));"},{"lineNumber":146,"author":{"gitId":"e0426051"},"content":"        for (Task task : taskList) {"},{"lineNumber":147,"author":{"gitId":"e0426051"},"content":"            taskString.append(task.toSimplifiedString());"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"e0426051"},"content":"        taskString.append(String.format(\"-----------------------------------------------------------------%n\"));"},{"lineNumber":150,"author":{"gitId":"e0426051"},"content":"        return taskString.toString();"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":153,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":154,"author":{"gitId":"keke101"},"content":"    public String toJson() {"},{"lineNumber":155,"author":{"gitId":"keke101"},"content":"        final StringWriter writeable \u003d new StringWriter();"},{"lineNumber":156,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":157,"author":{"gitId":"keke101"},"content":"            this.toJson(writeable);"},{"lineNumber":158,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":159,"author":{"gitId":"keke101"},"content":"            System.out.println(\"[Error] Cannot convert this project to JSON\");"},{"lineNumber":160,"author":{"gitId":"keke101"},"content":"            e.printStackTrace();"},{"lineNumber":161,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"keke101"},"content":"        return writeable.toString();"},{"lineNumber":163,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"keke101"},"content":""},{"lineNumber":165,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":166,"author":{"gitId":"keke101"},"content":"    public void toJson(Writer writer) throws IOException {"},{"lineNumber":167,"author":{"gitId":"e0426051"},"content":"        final JsonObject jsonTaskManager \u003d new JsonObject();"},{"lineNumber":168,"author":{"gitId":"e0426051"},"content":"        final JsonArray jsonTasks \u003d new JsonArray(taskList);"},{"lineNumber":169,"author":{"gitId":"e0426051"},"content":"        jsonTaskManager.put(\"owner\", proj.getProjectID());"},{"lineNumber":170,"author":{"gitId":"e0426051"},"content":"        jsonTaskManager.put(\"backlogTasks\", jsonTasks);"},{"lineNumber":171,"author":{"gitId":"e0426051"},"content":"        jsonTaskManager.put(\"nextId\", nextId);"},{"lineNumber":172,"author":{"gitId":"e0426051"},"content":"        jsonTaskManager.toJson(writer);"},{"lineNumber":173,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"keke101"},"content":""},{"lineNumber":175,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObject, Project project) {"},{"lineNumber":176,"author":{"gitId":"keke101"},"content":"        proj \u003d project;"},{"lineNumber":177,"author":{"gitId":"keke101"},"content":"        assert project !\u003d null \u0026\u0026 proj.getProjectID() \u003d\u003d JsonableObject.parseInt(jsonObject, \"owner\")"},{"lineNumber":178,"author":{"gitId":"keke101"},"content":"                : \"Project Id does not corresponds to the project object which this backlog is stored under.\";"},{"lineNumber":179,"author":{"gitId":"keke101"},"content":"        nextId \u003d JsonableObject.parseInt(jsonObject, \"nextId\");"},{"lineNumber":180,"author":{"gitId":"keke101"},"content":"        proj \u003d project;"},{"lineNumber":181,"author":{"gitId":"e0426051"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":182,"author":{"gitId":"keke101"},"content":"        JsonArray jsonTaskList \u003d (JsonArray) jsonObject.get(\"backlogTasks\");"},{"lineNumber":183,"author":{"gitId":"keke101"},"content":""},{"lineNumber":184,"author":{"gitId":"keke101"},"content":"        for (Object o : jsonTaskList) {"},{"lineNumber":185,"author":{"gitId":"keke101"},"content":"            Task task \u003d new Task();"},{"lineNumber":186,"author":{"gitId":"keke101"},"content":"            task.fromJson((JsonObject) o);"},{"lineNumber":187,"author":{"gitId":"e0426051"},"content":"            taskList.add(task);"},{"lineNumber":188,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"keke101"},"content":""},{"lineNumber":191,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":192,"author":{"gitId":"keke101"},"content":"    public void fromJson(JsonObject jsonObj) {"},{"lineNumber":193,"author":{"gitId":"keke101"},"content":"        fromJson(jsonObj, null);"},{"lineNumber":194,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":15,"keke101":55,"e0426051":83,"chocomango":42}},{"path":"src/main/java/com/scrumptious/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":"import java.time.DateTimeException;"},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"import java.time.Period;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"public class DateTimeParser {"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    private static final String DATETIME_FORMAT \u003d \"yyyy-MM-dd HHmm\";"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"    private static final String DATE_FORMAT \u003d \"yyyyMMdd\";"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"     * Parses String into LocalDateTime object."},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"     * @param dateTime String in the DATETIME_FORMAT"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"     * @return LocalDateTime object based on the String"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ScrumptiousException {"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"            return LocalDateTime.parse(dateTime, dateTimeFormatter);"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"    public static String catchDateFormat(String date) throws ScrumptiousException {"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"            LocalDate.parse(date, formatter);"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        } catch (Exception e) {"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Please indicate a valid date in this following format: YYYYMMDD.\");"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"            String monthInString \u003d date.substring(4, 6);"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"            int month \u003d Integer.parseInt(monthInString.trim());"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":"            boolean isThirtyDays \u003d (month \u003d\u003d 4 || month \u003d\u003d 6 || month \u003d\u003d 9 || month \u003d\u003d 11);"},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"            boolean isFebruary \u003d (month \u003d\u003d 2);"},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"            String dayInString \u003d date.substring(6, 8);"},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"            int day \u003d Integer.parseInt(dayInString.trim());"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"            if (isFebruary) {"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"                String yearInString \u003d date.substring(0, 4);"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"                int year \u003d Integer.parseInt(yearInString.trim());"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"                boolean isLeapYear \u003d checkLeapYear(year);"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"                if (isLeapYear \u0026\u0026 (day \u003e 29 \u0026\u0026 day \u003c 32)) {"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"                    throw new ScrumptiousException(\"There are only 29 days on the February in the specified year.\");"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"                if (!isLeapYear \u0026\u0026 (day \u003e 28 \u0026\u0026 day \u003c 32)) {"},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"                    throw new ScrumptiousException(\"There are only 28 days on the February in the specified year.\");"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"            } else if (isThirtyDays) {"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"                if (day \u003e 30) {"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"                    throw new ScrumptiousException(\"There are only 30 days on the specified month.\");"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"                if (day \u003e 31) {"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"                    throw new ScrumptiousException(\"There are only 31 days on the specified month.\");"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":"        } catch (Exception e) {"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(e.getMessage());"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"        return date;"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"    public static boolean checkLeapYear(int year) {"},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"        if (year % 4 \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":"            if (year % 100 !\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"                return true;"},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"            } else if (year % 400 \u003d\u003d 0) {"},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"                return true;"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":"        return false;"},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    public static LocalDate parseDate(String date) throws ScrumptiousException {"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"            return LocalDate.parse(date, formatter);"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        } catch (Exception e) {"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Please indicate a valid date in this following format: YYYYMMDD.\");"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"    public static long diff(LocalDate from, LocalDate to) {"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"        Period period \u003d Period.between(from, to);"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        return ChronoUnit.DAYS.between(from, to);"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":13,"e0426051":32,"chocomango":51}},{"path":"src/main/java/com/scrumptious/parser/ExceptionsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"public interface ExceptionsParser {"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"     * Parses the different parts of the user input commands."},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"     * @param parameters parameters of the command action."},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"     * @param action command action word."},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"     * @param projectListManager manager of projects"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"     * @return a command to be executed by SCRUMptious."},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"     * @throws ScrumptiousException when invalid commands or parameters are input."},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"    Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"                                            ProjectManager projectListManager)"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException;"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":15,"keke101":6,"chocomango":1}},{"path":"src/main/java/com/scrumptious/parser/HelpParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.help.MemberHelpCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.help.ProjectHelpCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.help.SprintHelpCommand;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.help.StorageHelpCommand;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.help.TaskHelpCommand;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"public class HelpParser implements ExceptionsParser {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"    public Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"                                                   ProjectManager projectListManager)"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"        if (!ParserManager.isStringIntParsable(action)) {"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Please give me a number!\");"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"        if (Integer.parseInt(action) \u003c 1 || Integer.parseInt(action) \u003e 5) {"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"The command number is not in the list!\");"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"        switch (action) {"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        case \"1\":"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"            return new ProjectHelpCommand(parameters);"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"        case \"2\":"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"            return new MemberHelpCommand(parameters);"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"        case \"3\":"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":"            return new TaskHelpCommand(parameters);"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        case \"4\":"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"            return new SprintHelpCommand(parameters);"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"        case \"5\":"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"            return new StorageHelpCommand(parameters);"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"        default:"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":23,"keke101":16,"chocomango":1}},{"path":"src/main/java/com/scrumptious/parser/MemberParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.member.AddMemberCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.member.DeleteMemberCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.ADD;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DELETE;"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"public class MemberParser implements ExceptionsParser {"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    public Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"                                                   ProjectManager projectListManager)"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        if (!parameters.containsKey(\"0\")) {"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Missing name.\");"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        } else if (projectListManager.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"You currently have no projects created.\");"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"        switch (action.toLowerCase()) {"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        case ADD:"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"            return new AddMemberCommand(parameters, projectListManager);"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"        case DELETE:"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"            return new DeleteMemberCommand(parameters, projectListManager);"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"        default:"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":21,"keke101":12,"chocomango":1}},{"path":"src/main/java/com/scrumptious/parser/ParserManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.EmptyCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.help.MainHelpCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.InvalidCommand;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"import java.util.regex.Matcher;"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"import java.util.regex.Pattern;"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.BYE;"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.HELP;"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.MEMBER;"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.PROJECT;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.SPRINT;"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.STORAGE;"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TASK;"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"public class ParserManager {"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"    //Groups of 3: (command) (action) (options)"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    private static final Pattern CMD_PATTERN \u003d Pattern.compile(\"(\\\\w+)\\\\s\\\\/(\\\\w+)\\\\s*(.*)\");"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    //Groups of 2: (option name) (option value)"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    private static final Pattern ARGS_PATTERN \u003d Pattern.compile(\"-(\\\\w+)\\\\s([^-]+)\");"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"    private final Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"    private boolean exit \u003d false;"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":""},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"     * Checks the user input and splits the it into command, action and arguments before"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"     * calling the respective subparsers required to return the respective commands."},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"     * @param userInput commands input by the user."},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"     * @param projectListManager manager of projects."},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"     * @return a command to be executed by SCRUMptious."},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"    public Command parser(String userInput, ProjectManager projectListManager) {"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        if (userInput.equals(BYE)) {"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"            Ui.showToUserLn(\"See you again...\");"},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"            exit \u003d true;"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"            ScrumLogger.LOGGER.info(\"Exit SCRUMptious\");"},{"lineNumber":45,"author":{"gitId":"homingjun"},"content":"            return new EmptyCommand(parameters);"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"        if (userInput.equals(HELP)) {"},{"lineNumber":48,"author":{"gitId":"homingjun"},"content":"            return new MainHelpCommand(parameters);"},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":"        Matcher cmdMatcher \u003d CMD_PATTERN.matcher(userInput);"},{"lineNumber":52,"author":{"gitId":"homingjun"},"content":"        if (cmdMatcher.matches()) { //Need to check if it matches, groupCount will always show 3"},{"lineNumber":53,"author":{"gitId":"homingjun"},"content":"            String command \u003d cmdMatcher.group(1); //capture first group (command)"},{"lineNumber":54,"author":{"gitId":"homingjun"},"content":"            String action \u003d cmdMatcher.group(2); //capture 2nd group (action)"},{"lineNumber":55,"author":{"gitId":"homingjun"},"content":"            String rawArgs \u003d cmdMatcher.group(3); //capture 3rd group (options)"},{"lineNumber":56,"author":{"gitId":"homingjun"},"content":"            Matcher parameterMatcher \u003d ARGS_PATTERN.matcher(rawArgs); //match the option"},{"lineNumber":57,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":58,"author":{"gitId":"homingjun"},"content":"            if (!rawArgs.contains(\"-\")) {"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                parameters.clear();"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                if (!rawArgs.isBlank()) {"},{"lineNumber":61,"author":{"gitId":"homingjun"},"content":"                    String[] arguments \u003d rawArgs.split(\" \");"},{"lineNumber":62,"author":{"gitId":"homingjun"},"content":"                    for (int i \u003d 0; i \u003c arguments.length; i++) {"},{"lineNumber":63,"author":{"gitId":"homingjun"},"content":"                        parameters.put(\"\" + i, arguments[i]);"},{"lineNumber":64,"author":{"gitId":"homingjun"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"                parameters.clear();"},{"lineNumber":68,"author":{"gitId":"homingjun"},"content":"                while (parameterMatcher.find()) { //go through each occurrence of options"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"                    //put the options into the hashtable (similar to dictionary)"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                    parameters.put(parameterMatcher.group(1), parameterMatcher.group(2).trim());"},{"lineNumber":71,"author":{"gitId":"homingjun"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":74,"author":{"gitId":"homingjun"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"homingjun"},"content":"                switch (command.toLowerCase()) {"},{"lineNumber":76,"author":{"gitId":"homingjun"},"content":"                case HELP:"},{"lineNumber":77,"author":{"gitId":"homingjun"},"content":"                    return new HelpParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"},{"lineNumber":78,"author":{"gitId":"homingjun"},"content":"                case PROJECT:"},{"lineNumber":79,"author":{"gitId":"homingjun"},"content":"                    return new ProjectParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"},{"lineNumber":80,"author":{"gitId":"homingjun"},"content":"                case MEMBER:"},{"lineNumber":81,"author":{"gitId":"homingjun"},"content":"                    return new MemberParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"},{"lineNumber":82,"author":{"gitId":"homingjun"},"content":"                case TASK:"},{"lineNumber":83,"author":{"gitId":"homingjun"},"content":"                    return new TaskParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"},{"lineNumber":84,"author":{"gitId":"homingjun"},"content":"                case SPRINT:"},{"lineNumber":85,"author":{"gitId":"homingjun"},"content":"                    return new SprintParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"                case STORAGE:"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"                    return new StorageParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"},{"lineNumber":88,"author":{"gitId":"homingjun"},"content":"                default:"},{"lineNumber":89,"author":{"gitId":"homingjun"},"content":"                    return new InvalidCommand(parameters);"},{"lineNumber":90,"author":{"gitId":"homingjun"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"            } catch (ScrumptiousException e) {"},{"lineNumber":92,"author":{"gitId":"homingjun"},"content":"                e.printExceptionMessage();"},{"lineNumber":93,"author":{"gitId":"homingjun"},"content":"                ScrumLogger.LOGGER.warning(e.getMessage());"},{"lineNumber":94,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"homingjun"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"homingjun"},"content":"            return new InvalidCommand(parameters);"},{"lineNumber":97,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"homingjun"},"content":"        return new EmptyCommand(parameters);"},{"lineNumber":99,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"keke101"},"content":""},{"lineNumber":101,"author":{"gitId":"homingjun"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"homingjun"},"content":"     * Checks if the string is an integer."},{"lineNumber":103,"author":{"gitId":"homingjun"},"content":"     * @param s string"},{"lineNumber":104,"author":{"gitId":"homingjun"},"content":"     * @return boolean value"},{"lineNumber":105,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"    public static boolean isStringIntParsable(String s) {"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"keke101"},"content":"            assert Integer.parseInt(s) \u003e\u003d 0;"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"            Integer.parseInt(s);"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"            return true;"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"            return false;"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":116,"author":{"gitId":"homingjun"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"homingjun"},"content":"     * Returns the boolean value of exit."},{"lineNumber":118,"author":{"gitId":"homingjun"},"content":"     * @return boolean value"},{"lineNumber":119,"author":{"gitId":"homingjun"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"keke101"},"content":"    public boolean isExit() {"},{"lineNumber":121,"author":{"gitId":"keke101"},"content":"        return exit;"},{"lineNumber":122,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":72,"gmit22":9,"keke101":27,"chocomango":15}},{"path":"src/main/java/com/scrumptious/parser/ProjectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.project.CreateProjectCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.project.ListProjectCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.project.SelectProjectCommand;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.project.ViewProjectCommand;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TITLE;"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DESCRIPTION;"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DURATION;"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.SPRINT_DURATION;"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.VIEW;"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.CREATE;"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.SELECT;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.LIST;"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"public class ProjectParser implements ExceptionsParser {"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"    public Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"                                                   ProjectManager projectListManager)"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"        switch (action.toLowerCase()) {"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        //Creates a new project and adds it to the ProjectManager"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        case CREATE:"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":"            if (!parameters.containsKey(TITLE) || !parameters.containsKey(DESCRIPTION)"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"                    || !parameters.containsKey(DURATION) || !parameters.containsKey(SPRINT_DURATION)) {"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Missing parameters.\");"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(TITLE).isBlank()) {"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"No title.\");"},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(DESCRIPTION).isBlank()) {"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"No description.\");"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"            if (parameters.get(DURATION).isBlank() || !ParserManager.isStringIntParsable(parameters.get(DURATION))) {"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please give a number for duration.\");"},{"lineNumber":43,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(SPRINT_DURATION).isBlank()"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"                    || !ParserManager.isStringIntParsable(parameters.get(SPRINT_DURATION))) {"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please give a number for sprint duration.\");"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"homingjun"},"content":"                return new CreateProjectCommand(parameters, projectListManager);"},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"            // View the current selected project, and the details of the same."},{"lineNumber":51,"author":{"gitId":"homingjun"},"content":"        case VIEW:"},{"lineNumber":52,"author":{"gitId":"homingjun"},"content":"            if (!parameters.isEmpty()) {"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":54,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":55,"author":{"gitId":"homingjun"},"content":"                return new ViewProjectCommand(parameters, projectListManager);"},{"lineNumber":56,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"            // Select the project on which all commands are executed."},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"        case SELECT:"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"            if (parameters.get(\"0\") \u003d\u003d null) {"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a project id and do not include any dashes.\");"},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"            if (!ParserManager.isStringIntParsable(parameters.get(\"0\"))) {"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please give a project number.\");"},{"lineNumber":65,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"            // Get index of the project to select"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"                int index \u003d Integer.parseInt(parameters.get(\"0\"));"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"                // check if required project index present"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"                if (index \u003c\u003d projectListManager.size() \u0026\u0026 index \u003e 0) {"},{"lineNumber":71,"author":{"gitId":"homingjun"},"content":"                    return new SelectProjectCommand(parameters, projectListManager);"},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":"                } else {"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"                    throw new ScrumptiousException(\"Invalid index, no corresponding project exists.\");"},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Invalid input.\");"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":"            // Show a list of all projects added, with id to select it."},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":"        case LIST:"},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"            if (projectListManager.isEmpty()) {"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"There are no projects added.\");"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"            } else {"},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"                assert projectListManager.getSelectedProject() !\u003d null : \"Project exists, but is null type\\n.\";"},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":"                return new ListProjectCommand(parameters, projectListManager);"},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"homingjun"},"content":"        default:"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":88,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":30,"gmit22":18,"keke101":29,"e0426051":6,"chocomango":7}},{"path":"src/main/java/com/scrumptious/parser/SprintParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.CreateSprintCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.AddSprintTaskCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.RemoveSprintTaskCommand;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.ViewSprintCommand;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.AllocateSprintTaskCommand;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.EditSprintCommand;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.sprint.DeallocateSprintTaskCommand;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.CREATE;"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.EDIT;"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.ADDTASK;"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.REMOVETASK;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.VIEW;"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.ALLOCATE;"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DEALLOCATE;"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"public class SprintParser implements ExceptionsParser {"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"    public Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"                                                   ProjectManager projectListManager)"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        switch (action.toLowerCase()) {"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"        case CREATE:"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            checkCreateSprintParams(parameters);"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"            return new CreateSprintCommand(parameters, projectListManager);"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        case EDIT:"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"            checkEditSprintParams(parameters);"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"            return new EditSprintCommand(parameters, projectListManager);"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":"        case ADDTASK:"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"            checkAddRemoveTaskParams(parameters);"},{"lineNumber":41,"author":{"gitId":"homingjun"},"content":"            return new AddSprintTaskCommand(parameters, projectListManager);"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"        case REMOVETASK:"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"            checkAddRemoveTaskParams(parameters);"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"            return new RemoveSprintTaskCommand(parameters, projectListManager);"},{"lineNumber":45,"author":{"gitId":"homingjun"},"content":"        case VIEW:"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"            checkViewSprintParams(parameters);"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"            return new ViewSprintCommand(parameters, projectListManager);"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        case ALLOCATE:"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"            checkAllocateDeallocateTaskParams(parameters);"},{"lineNumber":50,"author":{"gitId":"homingjun"},"content":"            return new AllocateSprintTaskCommand(parameters, projectListManager);"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        case DEALLOCATE:"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"            checkAllocateDeallocateTaskParams(parameters);"},{"lineNumber":53,"author":{"gitId":"homingjun"},"content":"            return new DeallocateSprintTaskCommand(parameters, projectListManager);"},{"lineNumber":54,"author":{"gitId":"homingjun"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":56,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"     * Validate parameters for CreateSprintCommand."},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"    private void checkCreateSprintParams(Hashtable\u003cString, String\u003e parameters) throws ScrumptiousException {"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"        //Mandatory fields"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        checkParamExist(parameters, \"goal\");"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"        //Optional fields."},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"project\", \"Project ID\");"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        checkStartParam(parameters);"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"     * Validate parameters for EditSprintCommand."},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"    private void checkEditSprintParams(Hashtable\u003cString, String\u003e parameters) throws ScrumptiousException {"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"        //Mandatory fields"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"        checkParamExist(parameters, \"goal\");"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        //Optional fields"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"project\", \"Project ID\");"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"sprint\", \"Sprint ID\");"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"     * Validate parameters for AddSprintTaskCommand and RemoveSprintTaskCommand."},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"    private void checkAddRemoveTaskParams(Hashtable\u003cString, String\u003e parameters) throws ScrumptiousException {"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"        //Mandatory fields"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        checkTaskParam(parameters);"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"        //Optional fields"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"project\", \"Project ID\");"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"sprint\", \"Sprint ID\");"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"     * Validate parameters for ViewSprintCommand."},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":"    private void checkViewSprintParams(Hashtable\u003cString, String\u003e parameters) throws ScrumptiousException {"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        //Optional fields"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"project\", \"Project ID\");"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"sprint\", \"Sprint ID\");"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"     * Validate parameters for AllocateSprintTaskCommand and DeallocateSprintTaskCommand."},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"keke101"},"content":"    private void checkAllocateDeallocateTaskParams(Hashtable\u003cString, String\u003e parameters) throws ScrumptiousException {"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"        //Mandatory fields"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        checkParamExist(parameters, \"user\");"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"        checkParamExist(parameters, \"task\");"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"        checkTaskParam(parameters);"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        //Optional fields"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"project\", \"Project ID\");"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"        checkParamIntegerParsable(parameters, \"sprint\", \"Sprint ID\");"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"     * Validate if parameter is Integer parsable and throws custom exception accordingly."},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"    private void checkParamIntegerParsable(Hashtable\u003cString, String\u003e parameters, String paramName, String paramDesc)"},{"lineNumber":120,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"        if (parameters.containsKey(paramName)) {"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"            checkIntegerParsable(paramDesc, parameters.get(paramName));"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"        } else if (parameters.containsKey(\"0\")) {"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":"            checkIntegerParsable(paramDesc, parameters.get(\"0\"));"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"     * Validate if String is Integer parsable and throws custom exception accordingly."},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"    private void checkIntegerParsable(String paramDesc, String... inputs)"},{"lineNumber":132,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"        for (String input : inputs) {"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"            try {"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"                Integer.parseInt(input);"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"            } catch (NumberFormatException error) {"},{"lineNumber":137,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(String.format(\"Please include a positive integer for %s.\", paramDesc));"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"     * Check if the \"task\" params is specified and if parsable into an Integer."},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"    private void checkTaskParam(Hashtable\u003cString, String\u003e parameters)"},{"lineNumber":146,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":147,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"        if (parameters.containsKey(\"task\")) {"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"            checkTaskParamTag(parameters, \"task\");"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"        } else if (parameters.containsKey(\"0\")) {"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":"            checkTaskParamTag(parameters, \"0\");"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":153,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Please indicate the task(s) to be allocated/deallocated.\");"},{"lineNumber":154,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":157,"author":{"gitId":"chocomango"},"content":"    private void checkTaskParamTag(Hashtable\u003cString, String\u003e parameters, String tag)"},{"lineNumber":158,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":159,"author":{"gitId":"chocomango"},"content":"        String[] taskIds;"},{"lineNumber":160,"author":{"gitId":"chocomango"},"content":"        if (tag.equals(\"task\")) {"},{"lineNumber":161,"author":{"gitId":"chocomango"},"content":"            taskIds \u003d parameters.get(tag).split(\" \");"},{"lineNumber":162,"author":{"gitId":"chocomango"},"content":"        } else {"},{"lineNumber":163,"author":{"gitId":"chocomango"},"content":"            taskIds \u003d parameters.values().toArray(new String[0]);"},{"lineNumber":164,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"chocomango"},"content":"        checkIntegerParsable(\"Task IDs\", taskIds);"},{"lineNumber":166,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":168,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"chocomango"},"content":"     * Check if a parameter exist."},{"lineNumber":170,"author":{"gitId":"keke101"},"content":"     * @param parameters - All parameters supplied by user"},{"lineNumber":171,"author":{"gitId":"keke101"},"content":"     * @param paramName - Parameter to be check if exist in @parameters"},{"lineNumber":172,"author":{"gitId":"keke101"},"content":"     * @throws ScrumptiousException if do not exist"},{"lineNumber":173,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"chocomango"},"content":"    private void checkParamExist(Hashtable\u003cString, String\u003e parameters, String paramName)"},{"lineNumber":175,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":176,"author":{"gitId":"chocomango"},"content":"        if (!parameters.containsKey(paramName)) {"},{"lineNumber":177,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Missing parameter(s): \" + paramName);"},{"lineNumber":178,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":181,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"chocomango"},"content":"     * Check if a start parameter exist and DateTime parsable."},{"lineNumber":183,"author":{"gitId":"keke101"},"content":"     * @param parameters - All parameters supplied by user"},{"lineNumber":184,"author":{"gitId":"keke101"},"content":"     * @throws ScrumptiousException if not DateTime parsable"},{"lineNumber":185,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"keke101"},"content":"    private void checkStartParam(Hashtable\u003cString, String\u003e parameters) throws ScrumptiousException {"},{"lineNumber":187,"author":{"gitId":"chocomango"},"content":"        if (parameters.containsKey(\"start\")) {"},{"lineNumber":188,"author":{"gitId":"chocomango"},"content":"            try {"},{"lineNumber":189,"author":{"gitId":"e0426051"},"content":"                String date \u003d parameters.get(\"start\");"},{"lineNumber":190,"author":{"gitId":"keke101"},"content":"                String correctDate \u003d DateTimeParser.catchDateFormat(date);"},{"lineNumber":191,"author":{"gitId":"e0426051"},"content":"                DateTimeParser.parseDate(correctDate);"},{"lineNumber":192,"author":{"gitId":"keke101"},"content":"            } catch (ScrumptiousException e) {"},{"lineNumber":193,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(e.getMessage());"},{"lineNumber":194,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":22,"keke101":43,"e0426051":3,"chocomango":129}},{"path":"src/main/java/com/scrumptious/parser/StorageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.InvalidCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.storage.ClearStorageCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":""},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":""},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.CLEAR;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":""},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"public class StorageParser implements ExceptionsParser {"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"    public Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"                                                   ProjectManager projectListManager) {"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"        switch (action.toLowerCase()) {"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"        case CLEAR:"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"            return new ClearStorageCommand(parameters, projectListManager);"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"        default:"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"            return new InvalidCommand(parameters);"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":23}},{"path":"src/main/java/com/scrumptious/parser/TaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.task.AddTaskCommand;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.task.ChangeTaskPriorityCommand;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.task.DeleteTaskCommand;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.task.DoneTaskCommand;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.task.PriorityViewCommand;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.task.ViewTaskCommand;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.ADD;"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DELETE;"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DESCRIPTION;"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DONE;"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.PRIORITY;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.PRIORITYVIEW;"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TASK_ID;"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TITLE;"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.VIEW;"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"public class TaskParser implements ExceptionsParser {"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"    public Command parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"                                                   ProjectManager projectListManager)"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"            throws ScrumptiousException {"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        switch (action.toLowerCase()) {"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"        case ADD:"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":"            if (!parameters.containsKey(TITLE) || !parameters.containsKey(DESCRIPTION)"},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"                    || !parameters.containsKey(PRIORITY)) {"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Missing parameters.\");"},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(TITLE).isBlank()) {"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a title!\");"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(DESCRIPTION).isBlank()) {"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a description!\");"},{"lineNumber":43,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(PRIORITY).isBlank()) {"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a priority!\");"},{"lineNumber":46,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"                return new AddTaskCommand(parameters, projectListManager);"},{"lineNumber":48,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"homingjun"},"content":"        case DELETE:"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"            if (parameters.get(\"0\") \u003d\u003d null) {"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Missing parameters or dashes were input. \""},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"                        + \"Please do not enter dashes for this command.\");"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"            if (parameters.get(\"0\").isBlank() || !ParserManager.isStringIntParsable(parameters.get(\"0\"))) {"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a task number!\");"},{"lineNumber":56,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"homingjun"},"content":"                return new DeleteTaskCommand(parameters, projectListManager);"},{"lineNumber":58,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"homingjun"},"content":"        case DONE:"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"            if (parameters.get(\"0\") \u003d\u003d null) {"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Missing parameters or dashes were input. \""},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"                        + \"Please do not enter dashes for this command.\");"},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"            if (parameters.get(\"0\").isBlank() || !ParserManager.isStringIntParsable(parameters.get(\"0\"))) {"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a task number!\");"},{"lineNumber":66,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":67,"author":{"gitId":"homingjun"},"content":"                return new DoneTaskCommand(parameters, projectListManager);"},{"lineNumber":68,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"homingjun"},"content":"        case VIEW:"},{"lineNumber":70,"author":{"gitId":"homingjun"},"content":"            return new ViewTaskCommand(parameters, projectListManager);"},{"lineNumber":71,"author":{"gitId":"homingjun"},"content":"        case PRIORITY:"},{"lineNumber":72,"author":{"gitId":"homingjun"},"content":"            if (!parameters.containsKey(TASK_ID) || !parameters.containsKey(PRIORITY)) {"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Missing parameters.\");"},{"lineNumber":74,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"            if (parameters.get(TASK_ID).isBlank() || !ParserManager.isStringIntParsable(parameters.get(TASK_ID))) {"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Task ID entered is invalid!\");"},{"lineNumber":77,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"homingjun"},"content":"            if (parameters.get(PRIORITY).isBlank()) {"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Please enter a priority!\");"},{"lineNumber":80,"author":{"gitId":"homingjun"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"homingjun"},"content":"                return new ChangeTaskPriorityCommand(parameters, projectListManager);"},{"lineNumber":82,"author":{"gitId":"homingjun"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"        case PRIORITYVIEW:"},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"            if (!parameters.isEmpty()) {"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"                throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":86,"author":{"gitId":"e0426051"},"content":"            } else {"},{"lineNumber":87,"author":{"gitId":"e0426051"},"content":"                return new PriorityViewCommand(parameters, projectListManager);"},{"lineNumber":88,"author":{"gitId":"e0426051"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"homingjun"},"content":"        default:"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"            throw new ScrumptiousException(\"Invalid action!\");"},{"lineNumber":91,"author":{"gitId":"homingjun"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":45,"keke101":33,"e0426051":11,"chocomango":4}},{"path":"src/main/java/com/scrumptious/storage/JsonableArray.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.Jsonable;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":""},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"public interface JsonableArray extends Jsonable {"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"     * Parse the given JsonArray and map the values to the current class."},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"     * @param jsonArr JsonArray that contains all values."},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"    void fromJson(JsonArray jsonArr);"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":12}},{"path":"src/main/java/com/scrumptious/storage/JsonableObject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonArray;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.Jsonable;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":""},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.math.BigDecimal;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"public interface JsonableObject extends Jsonable {"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":""},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"     * Parse the given JsonObject and map the values to the current class."},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"     * @param jsonObj JsonObject that contains all the key-value pairs."},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"    void fromJson(JsonObject jsonObj);"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":""},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"     * Retrieves the value with the given key and parse it as an integer."},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"     * @param jsonObject Json object that contains the key."},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"     * @param key Key of the key-value pair."},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"     * @return Integer value of the key-value pair."},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"    static int parseInt(JsonObject jsonObject, String key) {"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"        return ((BigDecimal) jsonObject.get(key)).intValue();"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":""},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"     * Retrieves the value with the given key and parse it as an boolean."},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"     * @param jsonObject Json object that contains the key."},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"     * @param key Key of the key-value pair."},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"     * @return Boolean value of the key-value pair."},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"    static boolean parseBoolean(JsonObject jsonObject, String key) {"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":"        return (Boolean) jsonObject.get(key);"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":""},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"     * Retrieves the value with the given key and parse it as an string."},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"     * @param jsonObject Json object that contains the key."},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"     * @param key Key of the key-value pair."},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"     * @return String value of the key-value pair."},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"    static String parseString(JsonObject jsonObject, String key) {"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"        return (String) jsonObject.get(key);"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":""},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"     * Retrieves the value with the given key and parse it as an LocalDate."},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"     * @param jsonObject Json object that contains the key."},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"     * @param key Key of the key-value pair."},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"     * @return LocalDate value of the key-value pair."},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"    static LocalDate parseDate(JsonObject jsonObject, String key) {"},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"        Object rawDate \u003d jsonObject.get(key);"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"        if (rawDate !\u003d null) {"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"            return LocalDate.parse((String) rawDate);"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"        return null;"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"     * Retrieves the value with the given key and parse it as an list of integers."},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"     * @param jsonObject Json object that contains the key."},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"     * @param key Key of the key-value pair."},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"     * @return ArrayList Integer values of the key-value pair."},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"    static ArrayList\u003cInteger\u003e parseIntegerList(JsonObject jsonObject, String key) {"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"        ArrayList\u003cInteger\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"        JsonArray jsonArr \u003d (JsonArray) jsonObject.get(key);"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":""},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"        for (Object o : jsonArr) {"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"            int num \u003d ((BigDecimal) o).intValue();"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"            list.add(num);"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"        return list;"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":""},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"     * Retrieves the value with the given key and parse it as an list of strings."},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"     * @param jsonObject Json object that contains the key."},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"     * @param key Key of the key-value pair."},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"     * @return ArrayList of String values of the key-value pair."},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"    static ArrayList\u003cString\u003e parseStringList(JsonObject jsonObject, String key) {"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"        JsonArray jsonArr \u003d (JsonArray) jsonObject.get(key);"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":""},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"        for (Object o : jsonArr) {"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"            list.add((String) o);"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"        return list;"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":95}},{"path":"src/main/java/com/scrumptious/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonException;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.Jsoner;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.logger.ScrumLogger;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":""},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.nio.file.Files;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import java.nio.file.Path;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import java.nio.file.Paths;"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":""},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"public class StorageManager {"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"./data/data.json\";"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":""},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    private final Path filepath;"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"    private final ProjectManager projectManager;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":""},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"    public StorageManager(String filename, ProjectManager projectManager) throws IOException {"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"        if (filename \u003d\u003d null || filename.isBlank()) {"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"            filepath \u003d Paths.get(DEFAULT_FILEPATH);"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"            filepath \u003d Paths.get(\"./data\", filename);"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"        this.projectManager \u003d projectManager;"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"            init();"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.warning(String.format(\"Unable to create data directory: %s%n\","},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"                    e.toString()));"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"            throw e;"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":""},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"    //Public functions to be invoked"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":""},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"     * Save all projects into JSON data file."},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"     * File name of the data file is specified when the StorageManager object is instantiated"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"    public void save() throws IOException {"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"        assert filepath !\u003d null : \"File path is null.\";"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"            if (!Files.exists(filepath.getParent())) {"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"                initDataDir();"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"            assert Files.exists(filepath.getParent()) : \"Data directory is still not created\";"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"            FileWriter fw \u003d new FileWriter((filepath.toFile()));"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"            Jsoner.serialize(projectManager, fw);"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"            fw.close();"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.info(\"Data has been successfully saved to the data file\");"},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.warning(String.format(\"Data failed to be saved: %s%n\", e.toString()));"},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"            throw e;"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":""},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"     * Load the data file and deserialize it as ProjectManager."},{"lineNumber":62,"author":{"gitId":"keke101"},"content":"     * File name of the data file is specified when the StorageManager object is instantiated."},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"     * If JSON is empty or invalid, no operations will be done to ProjectManager."},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"     * @throws IOException Thrown when there is error opening the file or reading to the file."},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"    public void load() throws IOException, JsonException {"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"        assert filepath !\u003d null : \"File path is null.\";"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"        if (!Files.exists(filepath)) {"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"            return; //file does not exist, start from a new"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"            String rawData \u003d loadRawData();"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"            JsonObject rawJson \u003d (JsonObject) Jsoner.deserialize(rawData);"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"            projectManager.fromJson(rawJson);"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.info(\"Data has been successfully loaded from the data file\");"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"        } catch (IOException e) {"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.warning(String.format(\"Parsing of JSON failed, proceeding in empty state: %s%n\", "},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"                    e.toString()));"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"            throw e;"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"        } catch (ClassCastException | NullPointerException | JsonException e) {"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"            projectManager.clearProjects();"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.warning(String.format(\"Parsing of JSON failed, proceeding in empty state: %s%n\", "},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"                    e.toString()));"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"            throw e;"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":""},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"    //Private functions    "},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"    private void init() throws IOException {"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"        initDataDir();"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":""},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"    private void initDataDir() throws IOException {"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"        assert filepath !\u003d null : \"File path is null.\";"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":"        Path path \u003d filepath.getParent();"},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"        if (!Files.exists(path)) {"},{"lineNumber":98,"author":{"gitId":"keke101"},"content":"            ScrumLogger.LOGGER.info(\"Data directory does not exist, creating a data directory\");"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":"            Files.createDirectory(path);"},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"keke101"},"content":""},{"lineNumber":103,"author":{"gitId":"keke101"},"content":"    private String loadRawData() throws IOException {"},{"lineNumber":104,"author":{"gitId":"keke101"},"content":"        assert filepath !\u003d null \u0026\u0026 Files.exists(filepath) : \"File path is null or the file does not exist.\";"},{"lineNumber":105,"author":{"gitId":"keke101"},"content":"        return Files.readString(filepath);"},{"lineNumber":106,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":107}},{"path":"src/main/java/com/scrumptious/test/TextUiTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.test;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.Scrumptious;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":""},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import java.time.Clock;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import java.time.Instant;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import java.time.ZoneOffset;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":""},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":" * This class is for testing text-ui. It will "},{"lineNumber":11,"author":{"gitId":"keke101"},"content":" */"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"public class TextUiTest {"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"        Instant fakeDateTime \u003d Instant.parse(\"2020-10-10T00:00:00.000Z\");"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"        Scrumptious.setClock(Clock.fixed(fakeDateTime, ZoneOffset.systemDefault()));"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"        Scrumptious.main(new String[0]);"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":18}},{"path":"src/main/java/com/scrumptious/ui/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.ui;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":" * Container for user visible messages."},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"     * General messages."},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"    //public static final String NEWLINE \u003d  System.lineSeparator();"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"    public static final String MESSAGE_LOGO \u003d \"   _____  _____ _____  _    _ __  __       _   _  \\n\""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"            + \"  / ____|/ ____|  __ \\\\| |  | |  \\\\/  |     | | (_) \\n\""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"            + \" | (___ | |    | |__) | |  | | \\\\  / |_ __ | |_ _  ___  _   _ ___\\n\""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"            + \"  \\\\___ \\\\| |    |  _  /| |  | | |\\\\/| | \u0027_ \\\\| __| |/ _ \\\\| | | / __|\\n\""},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"            + \"  ____) | |____| | \\\\ \\\\| |__| | |  | | |_) | |_| | (_) | |_| \\\\__ \\\\ \\n\""},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"            + \" |_____/ \\\\_____|_|  \\\\_\\\\\\\\____/|_|  |_| .__/ \\\\__|_|\\\\___/ \\\\__,_|___/ \\n\""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"            + \"                                    | |\\n\""},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"            + \"                                    |_|\\n\";"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    public static final String MESSAGE_WELCOME \u003d \"WELCOME TO SCRUMPTIOUS\";"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    public static final String MESSAGE_PROMPT_INPUT \u003d \"command\u003e \";"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"    public static final String MESSAGE_INVALID_IDTYPE \u003d \"Task ID entered is not an integer!\";"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    public static final String MESSAGE_INVALID_DURATION \u003d \"Duration must be a multiple of sprint duration. \""},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"           + \"Duration must be longer than the project sprint\";"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"gmit22":3,"keke101":1,"chocomango":20}},{"path":"src/main/java/com/scrumptious/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.ui;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":" * TextUi that handles user interaction."},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"    private static Scanner in \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"    private static PrintStream out \u003d System.out;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"     * Prints welcome message."},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"    public static void showWelcomeScreen() {"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"        showToUserLn(Messages.MESSAGE_LOGO);"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"        showToUserLn(Messages.MESSAGE_WELCOME);"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"     * Accepts input from user via input stream."},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"     * @return Input from user"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"    public static String getUserCommand() {"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"        showToUser(Messages.MESSAGE_PROMPT_INPUT.trim());"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        if (in.hasNextLine()) {"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"            String input \u003d in.nextLine().trim();"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"            while (input.isEmpty()) {"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"                input \u003d in.nextLine().trim();"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"            return input.strip();"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        return \"bye\";"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"     * Gets raw user input from user via input stream."},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"     * This method is different from getUserCommand():"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"     * It does not print \"command\u003e\" and does not perform loop until it gets a non-empty trimmed string."},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"     * "},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"     * @return Raw input from user"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"    public static String getUserInput() {"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"        return in.nextLine().trim();"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":""},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"     * Print messages to user."},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"     * @param messages Specify messages to print"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"    public static void showToUser(String... messages) {"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":"        for (String message : messages) {"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"            out.print(message);"},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"     * Print messages to user in new line."},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"     * @param messages Specify messages to print"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"    public static void showToUserLn(String... messages) {"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        for (String message : messages) {"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"            out.println(message);"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"     * Print error messages to the user."},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":"     * @param messages Specify error to be printed"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":"    public static void showError(String... messages) {"},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"        for (String message : messages) {"},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"            out.println(message);"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"    public static void setInStream(InputStream inStream) {"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"        in \u003d new Scanner(inStream);"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"    public static void setOutStream(PrintStream outStream) {"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"        out \u003d outStream;"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":32,"keke101":22,"chocomango":38}},{"path":"src/test/java/com/scrumptious/ScrumptiousTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":""},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"class ScrumptiousTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"keke101":4,"-":8}},{"path":"src/test/java/com/scrumptious/command/member/AddMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.member;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.io.InputStream;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.io.PrintStream;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"public class AddMemberCommandTest {"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    @BeforeEach"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    public void setUpOutput() {"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"    private ProjectManager generateProject() {"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project3\", \"project3\", 50, 10);"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project1\", \"project1\", 50, 10);"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        assert projectManager.getProjectList().size() \u003d\u003d 2 : \"Dummy projects not added!\";"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        return projectManager;"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"    private Hashtable\u003cString, String\u003e generateMembers() {"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"0\", \"member1\");"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"1\", \"member2\");"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"        return parameters;"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":"    void addMember_validCommand() {"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d generateMembers();"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"        AddMemberCommand command \u003d new AddMemberCommand(parameters, projectManager);"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"member1 has been added to the project.\""},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"member2 has been added to the project.\""},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator();"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"        assertTrue(projectManager.getSelectedProject().getMemberList().size() \u003d\u003d 2);"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"    void addMember_memberAlreadyAdded() {"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d generateMembers();"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"2\", \"member1\");"},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"        AddMemberCommand command \u003d new AddMemberCommand(parameters, projectManager);"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"member1 has been added to the project.\""},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"member2 has been added to the project.\""},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"member1 is already associated to the project.\""},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator();"},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":"        assertTrue(projectManager.getSelectedProject().getMemberList().size() \u003d\u003d 2);"},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":"    @AfterEach"},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"    public void restoreSystemOutput() throws IOException {"},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"        testOut.close();"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"    private String getOutput() {"},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":"        return testOut.toString();"},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":85,"keke101":3}},{"path":"src/test/java/com/scrumptious/command/member/DeleteMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.member;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.io.InputStream;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.io.PrintStream;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"public class DeleteMemberCommandTest {"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    @BeforeEach"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    public void setUpOutput() {"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"    private ProjectManager generateProjectWithMembers() {"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project3\", \"project3\", 50, 10);"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project1\", \"project1\", 50, 10);"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"        assert projectManager.getProjectList().size() \u003d\u003d 2 : \"Dummy projects not added!\";"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"        projectManager.getSelectedProject().getMemberList().addMember(new Member(\"member1\"));"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        projectManager.getSelectedProject().getMemberList().addMember(new Member(\"member2\"));"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"        projectManager.getSelectedProject().getMemberList().addMember(new Member(\"member3\"));"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"        return projectManager;"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"    private Hashtable\u003cString, String\u003e generateMembers() {"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"0\", \"member1\");"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"1\", \"member2\");"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"        return parameters;"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"    void deleteMember_memberPresent() {"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d generateMembers();"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d generateProjectWithMembers();"},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"        assertEquals(projectManager.getSelectedProject().getMemberList().size(), 3);"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":"        DeleteMemberCommand command \u003d new DeleteMemberCommand(parameters, projectManager);"},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"member1 has been removed from the project.\""},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"member2 has been removed from the project.\""},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator();"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"        assertEquals(projectManager.getSelectedProject().getMemberList().size(), 1);"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"    void deleteMember_memberNotPresent() {"},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d generateMembers();"},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d generateProjectWithMembers();"},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"        assertEquals(projectManager.getSelectedProject().getMemberList().size(), 3);"},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"2\", \"member5\");"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"        DeleteMemberCommand command \u003d new DeleteMemberCommand(parameters, projectManager);"},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"member1 has been removed from the project.\""},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"member2 has been removed from the project.\""},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"member5 is not associated with the project.\""},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator();"},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":"        assertEquals(projectManager.getSelectedProject().getMemberList().size(), 1);"},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"    @AfterEach"},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"    public void restoreSystemOutput() throws IOException {"},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":"        testOut.close();"},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":"    private String getOutput() {"},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"        return testOut.toString();"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":93,"keke101":4}},{"path":"src/test/java/com/scrumptious/command/project/CreateProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.io.InputStream;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.io.PrintStream;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DESCRIPTION;"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.SPRINT_DURATION;"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.DURATION;"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"import static com.scrumptious.command.CommandSummary.TITLE;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"class CreateProjectCommandTest {"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"    @BeforeEach"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"    public void setUpOutput() {"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"    void addProject_validInput_noError() {"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"        parameters.put(TITLE, \"Test Project\");"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"        parameters.put(DESCRIPTION, \"testing project commands\");"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"        parameters.put(SPRINT_DURATION, \"20\");"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"        parameters.put(DURATION, \"60\");"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"        CreateProjectCommand command \u003d new CreateProjectCommand(parameters, projectManager);"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"        String expected \u003d \"Project successfully created.\" + System.lineSeparator()"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"                + \"\\tTitle: Test Project\" + System.lineSeparator();"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":"        assertFalse(projectManager.isEmpty());"},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":"    void addProject_validInput_returnTrue() {"},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"        parameters.put(TITLE, \"Test Project\");"},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":"        parameters.put(DESCRIPTION, \"To ensure testing of classes\");"},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"        parameters.put(SPRINT_DURATION, \"20\");"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"        parameters.put(DURATION, \"60\");"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"        CreateProjectCommand command \u003d new CreateProjectCommand(parameters, projectManager);"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"        assertEquals(projectManager.size(), 1);"},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"    void addProject_missingParameters_throwsNullPointer() {"},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":"        parameters.put(TITLE, \"Test Project\");"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"        parameters.put(DESCRIPTION, \"To ensure testing of classes\");"},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":"        parameters.put(DURATION, \"60\");"},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"        CreateProjectCommand command \u003d new CreateProjectCommand(parameters, projectManager);"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"        assertThrows(NullPointerException.class, command::execute);"},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":"    void addProject_invalidParameters_throwsNullPointer() {"},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"        parameters.put(TITLE, \"Test Project\");"},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":"        parameters.put(DESCRIPTION, \"To ensure testing of classes\");"},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"        parameters.put(DURATION, \"60\");"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":"        parameters.put(SPRINT_DURATION, \"aa\");"},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"        CreateProjectCommand command \u003d new CreateProjectCommand(parameters, projectManager);"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":"        assertThrows(NumberFormatException.class, command::execute);"},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":100,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"    void addProject_zeroSprintDuration_throwsScrumptiousException() {"},{"lineNumber":102,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":103,"author":{"gitId":"gmit22"},"content":"        parameters.put(TITLE, \"Test Project\");"},{"lineNumber":104,"author":{"gitId":"gmit22"},"content":"        parameters.put(DESCRIPTION, \"To ensure testing of classes\");"},{"lineNumber":105,"author":{"gitId":"gmit22"},"content":"        parameters.put(DURATION, \"60\");"},{"lineNumber":106,"author":{"gitId":"gmit22"},"content":"        parameters.put(SPRINT_DURATION, \"0\");"},{"lineNumber":107,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":108,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":109,"author":{"gitId":"gmit22"},"content":"        CreateProjectCommand command \u003d new CreateProjectCommand(parameters, projectManager);"},{"lineNumber":110,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":111,"author":{"gitId":"gmit22"},"content":"        String expected \u003d \"Sprint duration cannot be zero.\" + System.lineSeparator();"},{"lineNumber":112,"author":{"gitId":"gmit22"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":113,"author":{"gitId":"gmit22"},"content":"        assertTrue(projectManager.isEmpty());"},{"lineNumber":114,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":116,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"keke101"},"content":"    void addProject_durationNotMultipleOfSd_throwsScrumptiousException() {"},{"lineNumber":118,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":119,"author":{"gitId":"gmit22"},"content":"        parameters.put(TITLE, \"Test Project\");"},{"lineNumber":120,"author":{"gitId":"gmit22"},"content":"        parameters.put(DESCRIPTION, \"To ensure testing of classes\");"},{"lineNumber":121,"author":{"gitId":"gmit22"},"content":"        parameters.put(DURATION, \"60\");"},{"lineNumber":122,"author":{"gitId":"gmit22"},"content":"        parameters.put(SPRINT_DURATION, \"100\");"},{"lineNumber":123,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":124,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":125,"author":{"gitId":"gmit22"},"content":"        CreateProjectCommand command \u003d new CreateProjectCommand(parameters, projectManager);"},{"lineNumber":126,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":127,"author":{"gitId":"gmit22"},"content":"        String expected \u003d \"Project duration must be in multiples of Sprint intervals.\" + System.lineSeparator();"},{"lineNumber":128,"author":{"gitId":"gmit22"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":129,"author":{"gitId":"gmit22"},"content":"        assertTrue(projectManager.isEmpty());"},{"lineNumber":130,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":132,"author":{"gitId":"gmit22"},"content":"    @AfterEach"},{"lineNumber":133,"author":{"gitId":"gmit22"},"content":"    public void restoreSystemOutput() throws IOException {"},{"lineNumber":134,"author":{"gitId":"gmit22"},"content":"        testOut.close();"},{"lineNumber":135,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":136,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":138,"author":{"gitId":"gmit22"},"content":"    private String getOutput() {"},{"lineNumber":139,"author":{"gitId":"gmit22"},"content":"        return testOut.toString();"},{"lineNumber":140,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":142,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":143,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":144,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":135,"keke101":9}},{"path":"src/test/java/com/scrumptious/command/project/ListProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":"import java.io.InputStream;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.io.PrintStream;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"public class ListProjectCommandTest {"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    @BeforeEach"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    public void setUpOutput() {"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"    private ProjectManager generateProject() {"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project3\", \"project3\", 50, 10);"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project1\", \"project1\", 50, 10);"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        assert projectManager.getProjectList().size() \u003d\u003d 2 : \"Dummy projects not added!\";"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"        return projectManager;"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"    void listProject_noError() {"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":"        ListProjectCommand command \u003d new ListProjectCommand(parameters, projectManager);"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"        assertTrue(projectManager.size() \u003d\u003d 2);"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"Following are the added projects: \" + System.lineSeparator()"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"                + \"\\tID Title \\t\\tDescription\" + System.lineSeparator()"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"                + \"\\t1) project3 \\t\\tproject3\" + System.lineSeparator()"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"                + \"\\t2) project1 \\t\\tproject1\" + System.lineSeparator();"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"    @AfterEach"},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":"    public void restoreSystemOutput() throws IOException {"},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"        testOut.close();"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"    private String getOutput() {"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"        return testOut.toString();"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":69,"keke101":3}},{"path":"src/test/java/com/scrumptious/command/project/SelectProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":""},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":"import java.io.InputStream;"},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.io.PrintStream;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"class SelectProjectCommandTest {"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":"    @BeforeEach"},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    public void setUpOutput() {"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"    private ProjectManager generateProject() {"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project1\", \"project1\", 50, 10);"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project2\", \"project2\", 50, 10);"},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project3\", \"project3\", 50, 10);"},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"        assert projectManager.getProjectList().size() \u003d\u003d 3 : \"Dummy projects not added!\";"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"        return projectManager;"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"    void selectProject_validParameters_noError() {"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager;"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":"        projectManager \u003d generateProject();"},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"        SelectProjectCommand command \u003d new SelectProjectCommand(parameters, projectManager);"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"Project 1 has been selected.\" + System.lineSeparator();"},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"    @AfterEach"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"    public void restoreSystemOutput() throws IOException {"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":"        testOut.close();"},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"    private String getOutput() {"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"        return testOut.toString();"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":64,"keke101":4}},{"path":"src/test/java/com/scrumptious/command/project/ViewProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":""},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"import java.io.InputStream;"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"import java.io.PrintStream;"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":"import java.util.Hashtable;"},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"class ViewProjectCommandTest {"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":26,"author":{"gitId":"gmit22"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":27,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":28,"author":{"gitId":"gmit22"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":29,"author":{"gitId":"gmit22"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":30,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":31,"author":{"gitId":"gmit22"},"content":"    @BeforeEach"},{"lineNumber":32,"author":{"gitId":"gmit22"},"content":"    public void setUpOutput() {"},{"lineNumber":33,"author":{"gitId":"gmit22"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":34,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":35,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":37,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":38,"author":{"gitId":"gmit22"},"content":"    private ProjectManager generateProject() {"},{"lineNumber":39,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":40,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project1\", \"project1\", 50, 10);"},{"lineNumber":41,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project2\", \"project2\", 50, 10);"},{"lineNumber":42,"author":{"gitId":"gmit22"},"content":"        projectManager.addProject(\"project3\", \"project3\", 50, 10);"},{"lineNumber":43,"author":{"gitId":"gmit22"},"content":"        assert projectManager.getProjectList().size() \u003d\u003d 3 : \"Dummy projects not added!\";"},{"lineNumber":44,"author":{"gitId":"gmit22"},"content":"        return projectManager;"},{"lineNumber":45,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":47,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"gmit22"},"content":"    void viewProject_invalidCommand_noProjectAdded() {"},{"lineNumber":49,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":50,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":51,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":53,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":54,"author":{"gitId":"gmit22"},"content":"        ViewProjectCommand command \u003d new ViewProjectCommand(parameters, projectManager);"},{"lineNumber":55,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":56,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"No projects are created.\" + System.lineSeparator();"},{"lineNumber":57,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":58,"author":{"gitId":"gmit22"},"content":"        assertTrue(projectManager.isEmpty());"},{"lineNumber":59,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":61,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"gmit22"},"content":"    void viewProject_validCommand() {"},{"lineNumber":63,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":64,"author":{"gitId":"gmit22"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":65,"author":{"gitId":"gmit22"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"gmit22"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":67,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":68,"author":{"gitId":"gmit22"},"content":"        ViewProjectCommand command \u003d new ViewProjectCommand(parameters, projectManager);"},{"lineNumber":69,"author":{"gitId":"gmit22"},"content":"        command.execute();"},{"lineNumber":70,"author":{"gitId":"gmit22"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":71,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":72,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator() + \"[ID: 3]\" +  System.lineSeparator()"},{"lineNumber":73,"author":{"gitId":"gmit22"},"content":"                + \"[Title: project3]\" + System.lineSeparator()"},{"lineNumber":74,"author":{"gitId":"gmit22"},"content":"                + \"[Description: project3]\" + System.lineSeparator()"},{"lineNumber":75,"author":{"gitId":"gmit22"},"content":"                + \"[No members added]\" + System.lineSeparator()"},{"lineNumber":76,"author":{"gitId":"gmit22"},"content":"                + \"[Project will start along with the first sprint]\" + System.lineSeparator()"},{"lineNumber":77,"author":{"gitId":"gmit22"},"content":"                + \"[Project backlog is empty]\" + System.lineSeparator()"},{"lineNumber":78,"author":{"gitId":"gmit22"},"content":"                + \"[There are no Sprints]\" + System.lineSeparator()"},{"lineNumber":79,"author":{"gitId":"gmit22"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":80,"author":{"gitId":"gmit22"},"content":"                + System.lineSeparator();"},{"lineNumber":81,"author":{"gitId":"gmit22"},"content":"        assertEquals(expectedOutput, getOutput());"},{"lineNumber":82,"author":{"gitId":"gmit22"},"content":"        assertFalse(projectManager.isEmpty());"},{"lineNumber":83,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":85,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":86,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":87,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":88,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":89,"author":{"gitId":"gmit22"},"content":"    @AfterEach"},{"lineNumber":90,"author":{"gitId":"gmit22"},"content":"    public void restoreSystemOutput() throws IOException {"},{"lineNumber":91,"author":{"gitId":"gmit22"},"content":"        testOut.close();"},{"lineNumber":92,"author":{"gitId":"gmit22"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":93,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":95,"author":{"gitId":"gmit22"},"content":"    private String getOutput() {"},{"lineNumber":96,"author":{"gitId":"gmit22"},"content":"        return testOut.toString();"},{"lineNumber":97,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":94,"keke101":4}},{"path":"src/test/java/com/scrumptious/command/sprint/AddSprintTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"class AddSprintTaskCommandTest  extends SprintCommandTest {"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_validCommand() {"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"1\", \"2\");"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"2\", \"3\");"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"        AddSprintTaskCommand command \u003d new AddSprintTaskCommand(parameters, projectManager);"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task3 added to sprint 1.\" + System.lineSeparator()"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task2 added to sprint 1.\" + System.lineSeparator()"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 added to sprint 1.\" + System.lineSeparator();"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"        assertEquals(3,"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_validCommand_withTaskTag() {"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        AddSprintTaskCommand command \u003d new AddSprintTaskCommand(parameters, projectManager);"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 added to sprint 1.\" + System.lineSeparator()"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task2 added to sprint 1.\" + System.lineSeparator()"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task3 added to sprint 1.\" + System.lineSeparator();"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"        assertEquals(3,"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_validCommand_duplicateTask() {"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"1\", \"1\");"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"2\", \"1\");"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"3\", \"2\");"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        AddSprintTaskCommand command \u003d new AddSprintTaskCommand(parameters, projectManager);"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task2 added to sprint 1.\" + System.lineSeparator()"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 added to sprint 1.\" + System.lineSeparator()"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 is already added in sprint 1.\" + System.lineSeparator()"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 is already added in sprint 1.\" + System.lineSeparator();"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        assertEquals(2,"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_invalidCommand_nonExistentTask() {"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"99\");"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        AddSprintTaskCommand command \u003d new AddSprintTaskCommand(parameters, projectManager);"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Task not found in backlog: 99\" + System.lineSeparator();"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"        assertEquals(0,"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_invalidCommand_nonExistentProject() {"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"99\");"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"        AddSprintTaskCommand command \u003d new AddSprintTaskCommand(parameters, projectManager);"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Project not found: 99\" + System.lineSeparator();"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":"        assertEquals(0,"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_invalidCommand_nonExistentSprint() {"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"99\");"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"        AddSprintTaskCommand command \u003d new AddSprintTaskCommand(parameters, projectManager);"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Sprint not found: 99\" + System.lineSeparator();"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"        assertEquals(0,"},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":5,"chocomango":141}},{"path":"src/test/java/com/scrumptious/command/sprint/AllocateSprintTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.command.task.CommandTest;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"public class AllocateSprintTaskCommandTest extends SprintCommandTest {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_validCommand() {"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project2member1 project2member2 project2member3\");"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"        AllocateSprintTaskCommand command \u003d new AllocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"                + \"[Sprint ID: 1]\" + System.lineSeparator()"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"                + \"project2task1 is assigned to [project2member1, project2member2, project2member3]\""},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"                + \"project2task2 is assigned to [project2member1, project2member2, project2member3]\""},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"                + \"project2task3 is assigned to [project2member1, project2member2, project2member3]\""},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        for (Member mem : projectManager.getProject(2).getMemberList().getAllMembers()) {"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"            assertEquals(3, mem.getTaskList().size());"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_validCommand_specifySprint() {"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project2member1 project2member2 project2member3\");"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        AllocateSprintTaskCommand command \u003d new AllocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                + \"[Sprint ID: 3]\" + System.lineSeparator()"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"                + \"project2task1 is assigned to [project2member1, project2member2, project2member3]\""},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"                + \"project2task2 is assigned to [project2member1, project2member2, project2member3]\""},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"                + \"project2task3 is assigned to [project2member1, project2member2, project2member3]\""},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        for (Member mem : projectManager.getProject(2).getMemberList().getAllMembers()) {"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"            assertEquals(3, mem.getTaskList().size());"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_validCommand_specifyProject() {"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project1member1 project1member2 project1member3\");"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"        AllocateSprintTaskCommand command \u003d new AllocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: 1]\" + System.lineSeparator()"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"                + \"[Sprint ID: 3]\" + System.lineSeparator()"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"                + \"project1task1 is assigned to [project1member1, project1member2, project1member3]\""},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"                + \"project1task2 is assigned to [project1member1, project1member2, project1member3]\""},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"                + \"project1task3 is assigned to [project1member1, project1member2, project1member3]\""},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"        for (Member mem : projectManager.getProject(1).getMemberList().getAllMembers()) {"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"            assertEquals(3, mem.getTaskList().size());"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_invalidCommand_nonExistentUser() {"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"fakeuser1 fakeuser3\");"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"        AllocateSprintTaskCommand command \u003d new AllocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"User not found: fakeuser1\" + System.lineSeparator();"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"        for (Task task : projectManager.getProject(1).getBacklog().getTaskList()) {"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"            assertEquals(0, task.getMemberList().size());"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_invalidCommand_nonExistentTask() {"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project1member1 project1member2\");"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"0\");"},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"        AllocateSprintTaskCommand command \u003d new AllocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Task not found in backlog: 0\" + System.lineSeparator();"},{"lineNumber":153,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":154,"author":{"gitId":"chocomango"},"content":"        for (Task task : projectManager.getProject(1).getBacklog().getTaskList()) {"},{"lineNumber":155,"author":{"gitId":"chocomango"},"content":"            assertEquals(0, task.getMemberList().size());"},{"lineNumber":156,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":7,"chocomango":151}},{"path":"src/test/java/com/scrumptious/command/sprint/CreateSprintCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"public class CreateSprintCommandTest extends SprintCommandTest {"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    void createSprintCommand_validCommand_firstSprint() {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"Fly\");"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        CreateSprintCommand command \u003d new CreateSprintCommand(parameters, projectManager);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"                + \"First Sprint: Project will start along with the newly created sprint\" + System.lineSeparator()"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"                + \"Project period: \" + LocalDate.now() + \" to \" + LocalDate.now().plusDays(49) + System.lineSeparator()"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: Fly]\" + System.lineSeparator()"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now() + \" - \" + LocalDate.now().plusDays(9) + \"]\" + System.lineSeparator()"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"        assertEquals(1, projectManager.getProject(2).getSprintList().size());"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"        assertEquals(LocalDate.now(),"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getStartDate());"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    void createSprintCommand_validCommand_firstSprint_withStartTag() {"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"Fly\");"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"start\", \"20001010\");"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        CreateSprintCommand command \u003d new CreateSprintCommand(parameters, projectManager);"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.size() + \"]\" + System.lineSeparator()"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                + \"First Sprint: Project will start along with the newly created sprint\" + System.lineSeparator()"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                + \"Project period: 2000-10-10 to 2000-11-28\" + System.lineSeparator()"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: Fly]\" + System.lineSeparator()"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"                + \"[Period: 2000-10-10 - 2000-10-19]\" + System.lineSeparator()"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        assertEquals(1, projectManager.getProject(2).getSprintList().size());"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        assertEquals(LocalDate.of(2000, 10, 10),"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getStartDate());"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"    void createSprintCommand_validCommand_SubsequentSprint() {"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"Fly\");"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        CreateSprintCommand command \u003d new CreateSprintCommand(parameters, projectManager);"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.size() + \"]\" + System.lineSeparator()"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"                + \"First Sprint: Project will start along with the newly created sprint\" + System.lineSeparator()"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"                + \"Project period: \" + LocalDate.now() + \" to \" + LocalDate.now().plusDays(49) + System.lineSeparator()"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: Fly]\" + System.lineSeparator()"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now() + \" - \" + LocalDate.now().plusDays(9) + \"]\" + System.lineSeparator()"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"                + \"[Project ID: \" + projectManager.size() + \"]\" + System.lineSeparator()"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"                + \"Not first sprint: New sprint will start right after previous sprint ends.\" + System.lineSeparator()"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 2]\" + System.lineSeparator()"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: Fly]\" + System.lineSeparator()"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now().plusDays(10) + \" - \" + LocalDate.now().plusDays(19) + \"]\""},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"        assertEquals(2, projectManager.getProject(2).getSprintList().size());"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"        assertEquals(LocalDate.now().plusDays(10),"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(2).getStartDate());"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"    void createSprintCommand_validCommand_SubsequentSprint_withStartTag() {"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"Fly\");"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"        CreateSprintCommand command \u003d new CreateSprintCommand(parameters, projectManager);"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"start\", \"20001010\");"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"        command \u003d new CreateSprintCommand(parameters, projectManager);"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.size() + \"]\" + System.lineSeparator()"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"                + \"First Sprint: Project will start along with the newly created sprint\" + System.lineSeparator()"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"                + \"Project period: \" + LocalDate.now() + \" to \" + LocalDate.now().plusDays(49) + System.lineSeparator()"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: Fly]\" + System.lineSeparator()"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now() + \" - \" + LocalDate.now().plusDays(9) + \"]\" + System.lineSeparator()"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"                + \"[Project ID: \" + projectManager.size() + \"]\" + System.lineSeparator()"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"                + \"Not first sprint: Start tag will be ignored and new sprint will start right after \""},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":"                + \"previous sprint ends.\" + System.lineSeparator()"},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 2]\" + System.lineSeparator()"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: Fly]\" + System.lineSeparator()"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now().plusDays(10) + \" - \" + LocalDate.now().plusDays(19) + \"]\""},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();"},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"        assertEquals(2, projectManager.getProject(2).getSprintList().size());"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"        assertEquals(LocalDate.now().plusDays(10),"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(2).getStartDate());"},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"    void createSprintCommand_invalidCommand_nonExistentProject() {"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"Fly\");"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"99\");"},{"lineNumber":153,"author":{"gitId":"chocomango"},"content":"        CreateSprintCommand command \u003d new CreateSprintCommand(parameters, projectManager);"},{"lineNumber":154,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":155,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":156,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Project not found: 99\" + System.lineSeparator();"},{"lineNumber":157,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":158,"author":{"gitId":"chocomango"},"content":"        assertEquals(0, projectManager.getProject(2).getSprintList().size());"},{"lineNumber":159,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":5,"chocomango":155}},{"path":"src/test/java/com/scrumptious/command/sprint/DeallocateSprintTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"public class DeallocateSprintTaskCommandTest extends SprintCommandTest {"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_validCommand() {"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"        generateDummyAllocatedTask(projectManager);"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project2member1 project2member2 project2member3\");"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"        DeallocateSprintTaskCommand command \u003d new DeallocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"                + \"[Sprint ID: 1]\" + System.lineSeparator()"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"                + \"project2task1 is removed from [project2member1, project2member2, project2member3]\""},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"                + \"project2task2 is removed from [project2member1, project2member2, project2member3]\""},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"                + \"project2task3 is removed from [project2member1, project2member2, project2member3]\""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        for (Member mem : projectManager.getProject(2).getMemberList().getAllMembers()) {"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"            assertEquals(0, mem.getTaskList().size());"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_validCommand_specifySprint() {"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"        generateDummyAllocatedTask(projectManager);"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project2member1 project2member2 project2member3\");"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"        DeallocateSprintTaskCommand command \u003d new DeallocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"                + \"[Sprint ID: 3]\" + System.lineSeparator()"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"                + \"project2task1 is removed from [project2member1, project2member2, project2member3]\""},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"                + \"project2task2 is removed from [project2member1, project2member2, project2member3]\""},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"                + \"project2task3 is removed from [project2member1, project2member2, project2member3]\""},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        for (Member mem : projectManager.getProject(2).getMemberList().getAllMembers()) {"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"            assertEquals(0, mem.getTaskList().size());"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_validCommand_specifyProject() {"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"        generateDummyAllocatedTask(projectManager);"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project1member1 project1member2 project1member3\");"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        DeallocateSprintTaskCommand command \u003d new DeallocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: 1]\" + System.lineSeparator()"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"                + \"[Sprint ID: 3]\" + System.lineSeparator()"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"                + \"project1task1 is removed from [project1member1, project1member2, project1member3]\""},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"                + \"project1task2 is removed from [project1member1, project1member2, project1member3]\""},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"                + \"project1task3 is removed from [project1member1, project1member2, project1member3]\""},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        for (Member mem : projectManager.getProject(1).getMemberList().getAllMembers()) {"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"            assertEquals(0, mem.getTaskList().size());"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_invalidCommand_nonExistentUser() {"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"        generateDummyAllocatedTask(projectManager);"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"fakeuser1 fakeuser3\");"},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"        DeallocateSprintTaskCommand command \u003d new DeallocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"User not found: fakeuser1\" + System.lineSeparator();"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"        for (Task task : projectManager.getProject(1).getBacklog().getTaskList()) {"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"            assertEquals(3, task.getMemberList().size());"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"    void allocateSprintTaskCommand_invalidCommand_nonExistentTask() {"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"        generateDummyMember(projectManager);"},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"        generateDummyAllocatedTask(projectManager);"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"user\", \"project1member1 project1member2\");"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"0\");"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"3\");"},{"lineNumber":153,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":154,"author":{"gitId":"chocomango"},"content":"        DeallocateSprintTaskCommand command \u003d new DeallocateSprintTaskCommand(parameters, projectManager);"},{"lineNumber":155,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":156,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":157,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Task not found in backlog: 0\" + System.lineSeparator();"},{"lineNumber":158,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":159,"author":{"gitId":"chocomango"},"content":"        for (Task task : projectManager.getProject(1).getBacklog().getTaskList()) {"},{"lineNumber":160,"author":{"gitId":"chocomango"},"content":"            assertEquals(3, task.getMemberList().size());"},{"lineNumber":161,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":7,"chocomango":156}},{"path":"src/test/java/com/scrumptious/command/sprint/EditSprintCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"public class EditSprintCommandTest extends SprintCommandTest {"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    void editSprintCommand_validCommand() {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"New goal\");"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        EditSprintCommand command \u003d new EditSprintCommand(parameters, projectManager);"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"                + \"Goal updated.\" + System.lineSeparator()"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: New goal]\" + System.lineSeparator()"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now() + \" - \" + LocalDate.now().plusDays(9) + \"]\" + System.lineSeparator()"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"                + \"[Remaining: 9 days]\" + System.lineSeparator()"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"        assertEquals(\"New goal\","},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getGoal());"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"    void editSprintCommand_validCommand_sameGoal() {"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"goal\", \"project2Sprint1\");"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        EditSprintCommand command \u003d new EditSprintCommand(parameters, projectManager);"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                + \"Provided goal is the same as current goal.\" + System.lineSeparator()"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: project2Sprint1]\" + System.lineSeparator()"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now() + \" - \" + LocalDate.now().plusDays(9) + \"]\" + System.lineSeparator()"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"                + \"[Remaining: 9 days]\" + System.lineSeparator()"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        assertEquals(\"project2Sprint1\","},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getGoal());"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":5,"chocomango":67}},{"path":"src/test/java/com/scrumptious/command/sprint/RemoveSprintTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"public class RemoveSprintTaskCommandTest extends SprintCommandTest {"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    void removeSprintTaskCommand_validCommand() {"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"1\", \"2\");"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"2\", \"3\");"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        RemoveSprintTaskCommand command \u003d new RemoveSprintTaskCommand(parameters, projectManager);"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task3 removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task2 removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 removed from sprint 1.\" + System.lineSeparator();"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"        assertEquals(0,"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    void removeSprintTaskCommand_validCommand_withTaskTag() {"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        RemoveSprintTaskCommand command \u003d new RemoveSprintTaskCommand(parameters, projectManager);"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task2 removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task3 removed from sprint 1.\" + System.lineSeparator();"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"        assertEquals(0,"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_validCommand_duplicateTask() {"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"1\", \"1\");"},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"2\", \"1\");"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"3\", \"2\");"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        RemoveSprintTaskCommand command \u003d new RemoveSprintTaskCommand(parameters, projectManager);"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task2 removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 is already removed from sprint 1.\" + System.lineSeparator()"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"                + \"\\tproject2task1 is already removed from sprint 1.\" + System.lineSeparator();"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"        assertEquals(1,"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_invalidCommand_nonExistentTask() {"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"99\");"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"        RemoveSprintTaskCommand command \u003d new RemoveSprintTaskCommand(parameters, projectManager);"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Task not found in backlog: 99\" + System.lineSeparator();"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"        assertEquals(3,"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_invalidCommand_nonExistentProject() {"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":120,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":121,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"99\");"},{"lineNumber":122,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":123,"author":{"gitId":"chocomango"},"content":"        RemoveSprintTaskCommand command \u003d new RemoveSprintTaskCommand(parameters, projectManager);"},{"lineNumber":124,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":125,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":126,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":127,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Project not found: 99\" + System.lineSeparator();"},{"lineNumber":128,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":129,"author":{"gitId":"chocomango"},"content":"        assertEquals(3,"},{"lineNumber":130,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":131,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":133,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":134,"author":{"gitId":"chocomango"},"content":"    void addSprintTaskCommand_invalidCommand_nonExistentSprint() {"},{"lineNumber":135,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":136,"author":{"gitId":"chocomango"},"content":"        generateDummyTask(projectManager);"},{"lineNumber":137,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":138,"author":{"gitId":"chocomango"},"content":"        generateDummySprintTask(projectManager);"},{"lineNumber":139,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":140,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"99\");"},{"lineNumber":142,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"task\", \"1 2 3\");"},{"lineNumber":143,"author":{"gitId":"chocomango"},"content":"        RemoveSprintTaskCommand command \u003d new RemoveSprintTaskCommand(parameters, projectManager);"},{"lineNumber":144,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":145,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":146,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":147,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Sprint not found: 99\" + System.lineSeparator();"},{"lineNumber":148,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":149,"author":{"gitId":"chocomango"},"content":"        assertEquals(3,"},{"lineNumber":150,"author":{"gitId":"chocomango"},"content":"                projectManager.getProject(2).getSprintList().getSprint(1).getAllSprintTaskIds().size());"},{"lineNumber":151,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":6,"chocomango":146}},{"path":"src/test/java/com/scrumptious/command/sprint/SprintCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chocomango"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.model.sprint.Sprint;"},{"lineNumber":7,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":8,"author":{"gitId":"chocomango"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"public abstract class SprintCommandTest {"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"    public SprintCommandTest() {"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    protected final PrintStream systemOut \u003d System.out;"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"    protected ByteArrayOutputStream testOut;"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":"    @BeforeEach"},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"    protected void setUpOutput() {"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"    @AfterEach"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"    protected void restoreSystemOutput() throws IOException {"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"        testOut.close();"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"    protected String getOutput() {"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"        return testOut.toString();"},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"    protected ProjectManager generateProject() {"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"        projectManager.addProject(\"project1\", \"project1\", 50, 10);"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"        projectManager.addProject(\"project2\", \"project2\", 50, 10);"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"        assert projectManager.getProjectList().size() \u003d\u003d 2 : \"Dummy projects not added!\";"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"        return projectManager;"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"    protected void generateDummyTask(ProjectManager projectManager) {"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"        for (Project project : projectManager.getProjectList().values()) {"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":"            project.getBacklog().addTask(project.getTitle() + \"task1\", \"task1\", \"HIGH\");"},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"            project.getBacklog().addTask(project.getTitle() + \"task2\", \"task2\", \"MEDIUM\");"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":"            project.getBacklog().addTask(project.getTitle() + \"task3\", \"task3\", \"LOW\");"},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"            assert project.getBacklog().size() \u003d\u003d 3 : \"Dummy tasks for \" + project.getTitle() + \" not added!\";"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"    protected void generateDummyMember(ProjectManager projectManager) {"},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"        for (Project project : projectManager.getProjectList().values()) {"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"            project.getMemberList().addMember(new Member(project.getTitle() + \"member1\"));"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"            project.getMemberList().addMember(new Member(project.getTitle() + \"member2\"));"},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"            project.getMemberList().addMember(new Member(project.getTitle() + \"member3\"));"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"            assert project.getMemberList().size() \u003d\u003d 3 : \"Dummy members for \" + project.getTitle() + \" not added!\";"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"    protected void generateDummySprint(ProjectManager projectManager) {"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        for (Project project : projectManager.getProjectList().values()) {"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"            project.getSprintList().addSprint(project, project.getTitle() + \"Sprint1\","},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":"                    LocalDate.now(), LocalDate.now().plusDays(9));"},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"            project.getSprintList().addSprint(project, project.getTitle() + \"Sprint2\","},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"                    LocalDate.now().plusDays(10), LocalDate.now().plusDays(19));"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"            project.getSprintList().addSprint(project, project.getTitle() + \"Sprint3\","},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"                    LocalDate.now().plusDays(20), LocalDate.now().plusDays(49));"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":"            project.getSprintList().addSprint(project, project.getTitle() + \"Sprint4\","},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"                    LocalDate.now().plusDays(30), LocalDate.now().plusDays(49));"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":"            project.getSprintList().addSprint(project, project.getTitle() + \"Sprint5\","},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"                    LocalDate.now().plusDays(40), LocalDate.now().plusDays(49));"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"            assert project.getSprintList().size() \u003d\u003d 5 : \"Dummy sprints for \" + project.getTitle() + \" not added!\";"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"    protected void generateDummySprintTask(ProjectManager projectManager) {"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"        for (Project project : projectManager.getProjectList().values()) {"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"            for (Sprint sprint : project.getSprintList().getSprintList()) {"},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"                sprint.addSprintTask(1);"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"                sprint.addSprintTask(2);"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"                sprint.addSprintTask(3);"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":"                assert sprint.getAllSprintTaskIds().size() \u003d\u003d 3 : \"Dummy sprint tasks for \""},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"                        + sprint.getGoal() + \" not added!\";"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"    protected void generateDummyAllocatedTask(ProjectManager projectManager) {"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        for (Project project : projectManager.getProjectList().values()) {"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"            for (Member mem : project.getMemberList().getAllMembers()) {"},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"                mem.allocateTask(1);"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":"                project.getBacklog().getTask(1).allocateToMember(mem.getUserId());"},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"                mem.allocateTask(2);"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"                project.getBacklog().getTask(2).allocateToMember(mem.getUserId());"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"                mem.allocateTask(3);"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":"                project.getBacklog().getTask(3).allocateToMember(mem.getUserId());"},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"                assert mem.getTaskList().size() \u003d\u003d 3 : \"Dummy allocated tasks for \" + mem.getUserId() + \" not added!\";"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"            for (Task task : project.getBacklog().getTaskList()) {"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":"                assert task.getMemberList().size() \u003d\u003d 3 : \"Dummy allocated tasks not added!\";"},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"chocomango":113}},{"path":"src/test/java/com/scrumptious/command/sprint/ViewSprintCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.sprint;"},{"lineNumber":2,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":3,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"chocomango"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.member.Member;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":11,"author":{"gitId":"chocomango"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"chocomango"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"chocomango"},"content":"import java.io.PrintStream;"},{"lineNumber":14,"author":{"gitId":"chocomango"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"chocomango"},"content":"import java.util.Hashtable;"},{"lineNumber":16,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":17,"author":{"gitId":"chocomango"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":19,"author":{"gitId":"chocomango"},"content":"public class ViewSprintCommandTest extends SprintCommandTest {"},{"lineNumber":20,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":21,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"chocomango"},"content":"    void viewSprintTaskCommand_validCommand() {"},{"lineNumber":23,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":24,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":25,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":26,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"chocomango"},"content":"        ViewSprintCommand command \u003d new ViewSprintCommand(parameters, projectManager);"},{"lineNumber":28,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":29,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":30,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":31,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":32,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":33,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 1]\" + System.lineSeparator()"},{"lineNumber":34,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: project2Sprint1]\" + System.lineSeparator()"},{"lineNumber":35,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now() + \" - \" + LocalDate.now().plusDays(9) + \"]\" + System.lineSeparator()"},{"lineNumber":36,"author":{"gitId":"chocomango"},"content":"                + \"[Remaining: 9 days]\" + System.lineSeparator()"},{"lineNumber":37,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":38,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":39,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":40,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":41,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":43,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"chocomango"},"content":"    void viewSprintTaskCommand_validCommand_specifySprint() {"},{"lineNumber":45,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":46,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":47,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":48,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"2\");"},{"lineNumber":50,"author":{"gitId":"chocomango"},"content":"        ViewSprintCommand command \u003d new ViewSprintCommand(parameters, projectManager);"},{"lineNumber":51,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":52,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":53,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":54,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: \" + projectManager.getSelectedProjectIndex() + \"]\" + System.lineSeparator()"},{"lineNumber":55,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":56,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 2]\" + System.lineSeparator()"},{"lineNumber":57,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: project2Sprint2]\" + System.lineSeparator()"},{"lineNumber":58,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now().plusDays(10) + \" - \" + LocalDate.now().plusDays(19) + \"]\""},{"lineNumber":59,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":60,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":61,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":62,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":63,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":64,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":66,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"chocomango"},"content":"    void viewSprintTaskCommand_validCommand_specifyProject() {"},{"lineNumber":68,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":69,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":70,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":71,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":72,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"project\", \"1\");"},{"lineNumber":73,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"sprint\", \"2\");"},{"lineNumber":74,"author":{"gitId":"chocomango"},"content":"        ViewSprintCommand command \u003d new ViewSprintCommand(parameters, projectManager);"},{"lineNumber":75,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":76,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":77,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":78,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"[Project ID: 1]\" + System.lineSeparator()"},{"lineNumber":79,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()"},{"lineNumber":80,"author":{"gitId":"chocomango"},"content":"                + \"[ID: 2]\" + System.lineSeparator()"},{"lineNumber":81,"author":{"gitId":"chocomango"},"content":"                + \"[Goal: project1Sprint2]\" + System.lineSeparator()"},{"lineNumber":82,"author":{"gitId":"chocomango"},"content":"                + \"[Period: \" + LocalDate.now().plusDays(10) + \" - \" + LocalDate.now().plusDays(19) + \"]\""},{"lineNumber":83,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator()"},{"lineNumber":84,"author":{"gitId":"chocomango"},"content":"                + \"[No allocated tasks]\" + System.lineSeparator()"},{"lineNumber":85,"author":{"gitId":"chocomango"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":86,"author":{"gitId":"chocomango"},"content":"                + System.lineSeparator();"},{"lineNumber":87,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":88,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":90,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"chocomango"},"content":"    void viewSprintTaskCommand_invalidCommand_lowerBoundSprint() {"},{"lineNumber":92,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":93,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":94,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":95,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":96,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"0\");"},{"lineNumber":97,"author":{"gitId":"chocomango"},"content":"        ViewSprintCommand command \u003d new ViewSprintCommand(parameters, projectManager);"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":99,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":100,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":101,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Sprint not found: 0\" + System.lineSeparator();"},{"lineNumber":102,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":103,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":105,"author":{"gitId":"chocomango"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"chocomango"},"content":"    void viewSprintTaskCommand_invalidCommand_upperBoundSprint() {"},{"lineNumber":107,"author":{"gitId":"chocomango"},"content":"        ProjectManager projectManager \u003d generateProject();"},{"lineNumber":108,"author":{"gitId":"chocomango"},"content":"        generateDummySprint(projectManager);"},{"lineNumber":109,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":110,"author":{"gitId":"chocomango"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":111,"author":{"gitId":"chocomango"},"content":"        parameters.put(\"0\", \"6\");"},{"lineNumber":112,"author":{"gitId":"chocomango"},"content":"        ViewSprintCommand command \u003d new ViewSprintCommand(parameters, projectManager);"},{"lineNumber":113,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":114,"author":{"gitId":"chocomango"},"content":"        command.execute();"},{"lineNumber":115,"author":{"gitId":"chocomango"},"content":""},{"lineNumber":116,"author":{"gitId":"chocomango"},"content":"        String expected \u003d \"Sprint not found: 6\" + System.lineSeparator();"},{"lineNumber":117,"author":{"gitId":"chocomango"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":118,"author":{"gitId":"chocomango"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"chocomango"},"content":"}"}],"authorContributionMap":{"keke101":5,"chocomango":114}},{"path":"src/test/java/com/scrumptious/command/storage/ClearStorageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"import com.scrumptious.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":""},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import java.io.InputStream;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import java.io.PrintStream;"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":""},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":""},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"class ClearStorageCommandTest {"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    private final InputStream systemIn \u003d System.in;"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"    private final PrintStream systemOut \u003d System.out;"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":""},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"    private ByteArrayInputStream testIn;"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"    private ByteArrayOutputStream testOut;"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":""},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"    @BeforeEach"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"    public void setUpOutput() {"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"        testOut \u003d new ByteArrayOutputStream();"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"        Ui.setOutStream(new PrintStream(testOut));"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":""},{"lineNumber":30,"author":{"gitId":"keke101"},"content":""},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"    void execute() {"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"        ProjectManager projectManager \u003d generateProjectManager();"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"        assert projectManager.size() \u003e 0 : \"Project Manager is empty!\";"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"        ClearStorageCommand csc \u003d new ClearStorageCommand(null, projectManager);"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":""},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"        String input \u003d \"y\" + System.lineSeparator();"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":"        provideInput(input);"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"        csc.execute();"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"        "},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"        String expected \u003d \"[!WARNING!] Are you sure? This command is irreversible! (y/N) All data has been cleared!\""},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"                + System.lineSeparator();"},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"        assertEquals(0, projectManager.size());"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"        assertEquals(-1, projectManager.getSelectedProjectIndex());"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"    void execute_emptyInput() {"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"        String input \u003d System.lineSeparator();"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"        ProjectManager projectManager \u003d generateProjectManager();"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"        final int oldSelectedProjectIndex \u003d projectManager.getSelectedProjectIndex();"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"        assert projectManager.size() \u003e 0 : \"Project Manager is empty!\";"},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"        ClearStorageCommand csc \u003d new ClearStorageCommand(null, projectManager);"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":""},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"        provideInput(input);"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"        csc.execute();"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"        "},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"        String expected \u003d \"[!WARNING!] Are you sure? This command is irreversible! (y/N) Data clear aborted.\""},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"                + System.lineSeparator();"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":62,"author":{"gitId":"keke101"},"content":"        assertEquals(2, projectManager.size());"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"        assertEquals(oldSelectedProjectIndex, projectManager.getSelectedProjectIndex());"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"    void execute_noInput() {"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"        String input \u003d \"N\" + System.lineSeparator();"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"        ProjectManager projectManager \u003d generateProjectManager();"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"        final int oldSelectedProjectIndex \u003d projectManager.getSelectedProjectIndex();"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"        assert projectManager.size() \u003e 0 : \"Project Manager is empty!\";"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"        ClearStorageCommand csc \u003d new ClearStorageCommand(null, projectManager);"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":""},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"        provideInput(input);"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"        csc.execute();"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"        "},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"        String expected \u003d \"[!WARNING!] Are you sure? This command is irreversible! (y/N) Data clear aborted.\""},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"                + System.lineSeparator();"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"        assertEquals(expected, getOutput());"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"        assertEquals(2, projectManager.size());"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"        assertEquals(oldSelectedProjectIndex, projectManager.getSelectedProjectIndex());"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"    @AfterEach"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"    public void restoreSystemInputOutput() throws IOException {"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"        testIn.close();"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"        testOut.close();"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"        Ui.setInStream(systemIn);"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"        Ui.setOutStream(systemOut);"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"    private void provideInput(String data) {"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"        testIn \u003d new ByteArrayInputStream(data.getBytes());"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"        Ui.setInStream(testIn);"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":""},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"    private String getOutput() {"},{"lineNumber":98,"author":{"gitId":"keke101"},"content":"        return testOut.toString();"},{"lineNumber":99,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":101,"author":{"gitId":"keke101"},"content":"    private ProjectManager generateProjectManager() {"},{"lineNumber":102,"author":{"gitId":"keke101"},"content":"        ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":103,"author":{"gitId":"keke101"},"content":"        projectManager.addProject(\"Test\", \"test\", 50, 10);"},{"lineNumber":104,"author":{"gitId":"keke101"},"content":"        projectManager.addProject(\"Test2\", \"test2\", 50, 10);"},{"lineNumber":105,"author":{"gitId":"keke101"},"content":"        return projectManager;"},{"lineNumber":106,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":107}},{"path":"src/test/java/com/scrumptious/command/task/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"e0426051"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"public class AddTaskCommandTest extends CommandTest {"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    void addTaskCommand_validCommand_returnsNormalBehavior() {"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d addDefaultUserInput();"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(parameters, projectList).execute();"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        String outputDescription \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getDescription();"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        String outputTitle \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getTitle();"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        String outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"a\", outputTitle);"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"b\", outputDescription);"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"High priority\", outputPriority);"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"        boolean outputDone \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getDone();"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"        assertFalse(outputDone);"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"    void addTaskCommand_invalidPriority_noTaskCreated() {"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d addInvalidPriorityInput();"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(parameters, projectList).execute();"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":"        Task task \u003d projectList.getSelectedProject().getBacklog().getTask(1);"},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        assertNull(task);"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"    void addTaskCommand_duplicateTask_noTaskCreated() {"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d addDefaultUserInput();"},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(parameters, projectList).execute();"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(parameters, projectList).execute();"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"        Task task \u003d projectList.getSelectedProject().getBacklog().getTask(2);"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":"        assertNull(task);"},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":3,"e0426051":67}},{"path":"src/test/java/com/scrumptious/command/task/ChangeTaskPriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"e0426051"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"public class ChangeTaskPriorityCommandTest extends CommandTest {"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"    void changeTaskPriorityCommand_validCommand_returnsNormalBehavior() {"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"        //Setup"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e setupParameters \u003d addDefaultUserInput();"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(setupParameters, projectList).execute();"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"        String setupPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"High priority\", setupPriority);"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        //Test"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        //Tests multiple random uppercase and lowercase combinations"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"id\",\"1\");"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"medIum\");"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"        new ChangeTaskPriorityCommand(parameters, projectList).execute();"},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"        String outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"Medium priority\", outputPriority);"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"lOW\");"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"        new ChangeTaskPriorityCommand(parameters, projectList).execute();"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"        outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"Low priority\", outputPriority);"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"MEDIUM\");"},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":"        new ChangeTaskPriorityCommand(parameters, projectList).execute();"},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"        outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"Medium priority\", outputPriority);"},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"higH\");"},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"        new ChangeTaskPriorityCommand(parameters, projectList).execute();"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"        outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"High priority\", outputPriority);"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"Medium\");"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"        new ChangeTaskPriorityCommand(parameters, projectList).execute();"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":"        outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"Medium priority\", outputPriority);"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":62,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"e0426051"},"content":"    void changeTaskPriorityCommand_invalidPriority_taskPriorityNotChanged() {"},{"lineNumber":64,"author":{"gitId":"e0426051"},"content":"        //Setup"},{"lineNumber":65,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":66,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":67,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e setupParameters \u003d addDefaultUserInput();"},{"lineNumber":68,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":69,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(setupParameters, projectList).execute();"},{"lineNumber":70,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":71,"author":{"gitId":"e0426051"},"content":"        String setupPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":72,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":73,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"High priority\", setupPriority);"},{"lineNumber":74,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":75,"author":{"gitId":"e0426051"},"content":"        //Test"},{"lineNumber":76,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":77,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"id\",\"1\");"},{"lineNumber":78,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"very high\");"},{"lineNumber":79,"author":{"gitId":"e0426051"},"content":"        new ChangeTaskPriorityCommand(parameters, projectList).execute();"},{"lineNumber":80,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":81,"author":{"gitId":"e0426051"},"content":"        String outputPriority \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":82,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getPriority();"},{"lineNumber":83,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"High priority\", outputPriority);"},{"lineNumber":84,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":2,"e0426051":83}},{"path":"src/test/java/com/scrumptious/command/task/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":4,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":5,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":"public abstract class CommandTest {"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":"    public CommandTest() {"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"    public ProjectManager addTestProject() {"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d new ProjectManager();"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"        projectList.addProject(\"title\", \"description\", 3, 3);"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"        return projectList;"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    public Hashtable\u003cString, String\u003e addDefaultUserInput() {"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"title\", \"a\");"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"desc\", \"b\");"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"high\");"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"        return parameters;"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":"    public Hashtable\u003cString, String\u003e addInvalidPriorityInput() {"},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"title\", \"a\");"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"desc\", \"b\");"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"priority\", \"CRITICAL\");"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        return parameters;"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":2,"e0426051":30}},{"path":"src/test/java/com/scrumptious/command/task/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"e0426051"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.task.Task;"},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"public class DeleteTaskCommandTest extends CommandTest {"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"    void deleteTaskCommand_validCommand_returnsNormalBehavior() {"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"        //Setup"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e setupParameters \u003d addDefaultUserInput();"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(setupParameters, projectList).execute();"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"        String outputTitle \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getTitle();"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"a\", outputTitle);"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"        //Test"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"        new DeleteTaskCommand(parameters, projectList).execute();"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"        Task task \u003d projectList.getSelectedProject().getBacklog().getTask(1);"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"        assertNull(task);"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":3,"e0426051":33}},{"path":"src/test/java/com/scrumptious/command/task/DoneTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.command.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"e0426051"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":5,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":"import java.util.Hashtable;"},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"public class DoneTaskCommandTest extends CommandTest {"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"    void doneTaskCommand_validCommand_returnsNormalBehavior() {"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"        //Setup"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e setupParameters \u003d addDefaultUserInput();"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(setupParameters, projectList).execute();"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"        boolean isSetupDone \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getDone();"},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":24,"author":{"gitId":"e0426051"},"content":"        assertFalse(isSetupDone);"},{"lineNumber":25,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":26,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"0\", \"1\");"},{"lineNumber":28,"author":{"gitId":"e0426051"},"content":"        new DoneTaskCommand(parameters, projectList).execute();"},{"lineNumber":29,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":30,"author":{"gitId":"e0426051"},"content":"        boolean isDone \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":31,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getDone();"},{"lineNumber":32,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":33,"author":{"gitId":"e0426051"},"content":"        assertTrue(isDone);"},{"lineNumber":34,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":36,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"e0426051"},"content":"    void doneTaskCommand_invalidCommand_taskNotMarkedDone() {"},{"lineNumber":38,"author":{"gitId":"e0426051"},"content":"        //Setup"},{"lineNumber":39,"author":{"gitId":"e0426051"},"content":"        ProjectManager projectList \u003d addTestProject();"},{"lineNumber":40,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":41,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e setupParameters \u003d addDefaultUserInput();"},{"lineNumber":42,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":43,"author":{"gitId":"e0426051"},"content":"        new AddTaskCommand(setupParameters, projectList).execute();"},{"lineNumber":44,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":45,"author":{"gitId":"e0426051"},"content":"        boolean isSetupDone \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":46,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getDone();"},{"lineNumber":47,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":48,"author":{"gitId":"e0426051"},"content":"        assertFalse(isSetupDone);"},{"lineNumber":49,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":50,"author":{"gitId":"e0426051"},"content":"        Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"e0426051"},"content":"        //Simulates where user enters /done 0"},{"lineNumber":52,"author":{"gitId":"e0426051"},"content":"        parameters.put(\"0\", \"0\");"},{"lineNumber":53,"author":{"gitId":"e0426051"},"content":"        new DoneTaskCommand(parameters, projectList).execute();"},{"lineNumber":54,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":55,"author":{"gitId":"e0426051"},"content":"        boolean isDone \u003d projectList.getSelectedProject().getBacklog()"},{"lineNumber":56,"author":{"gitId":"e0426051"},"content":"                .getTask(1).getDone();"},{"lineNumber":57,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":58,"author":{"gitId":"e0426051"},"content":"        assertFalse(isDone);"},{"lineNumber":59,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":2,"e0426051":58}},{"path":"src/test/java/com/scrumptious/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.project;"},{"lineNumber":2,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":3,"author":{"gitId":"gmit22"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":5,"author":{"gitId":"gmit22"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":6,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":7,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":8,"author":{"gitId":"gmit22"},"content":"public class ProjectTest {"},{"lineNumber":9,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":10,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":11,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"gmit22"},"content":"    void getProjectSprint_emptyArrayList_returnsIndexOutOfBoundsException() {"},{"lineNumber":13,"author":{"gitId":"gmit22"},"content":"        Project project \u003d new Project(1, \"SCRUM\", \"Deliver a cli for agile developers\","},{"lineNumber":14,"author":{"gitId":"gmit22"},"content":"                60, 30);"},{"lineNumber":15,"author":{"gitId":"gmit22"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e project.getSprintList().getSprint(2));"},{"lineNumber":16,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":18,"author":{"gitId":"gmit22"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"gmit22"},"content":"    void getProjectMember_emptyArrayList_returnsIndexOutOfBoundsException() {"},{"lineNumber":20,"author":{"gitId":"gmit22"},"content":"        Project project \u003d new Project(2,\"SCRUM\", \"Deliver a cli for agile developers\","},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"                60, 30);"},{"lineNumber":22,"author":{"gitId":"gmit22"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e project.getSprintList().getSprint(2));"},{"lineNumber":23,"author":{"gitId":"gmit22"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"gmit22"},"content":""},{"lineNumber":25,"author":{"gitId":"gmit22"},"content":"}"}],"authorContributionMap":{"gmit22":24,"keke101":1}},{"path":"src/test/java/com/scrumptious/model/task/TaskManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.Project;"},{"lineNumber":4,"author":{"gitId":"e0426051"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":"public class TaskManagerTest {"},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"    void getTask_emptyTaskList_noTaskTitle_returnsNullPointerException() {"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":"        Project project \u003d new Project(1, \"Title\", \"Desc\", 3, 3);"},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"        assertThrows(NullPointerException.class, () -\u003e project.getBacklog().getTask(1).getTitle());"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"    void taskManager_isEmpty_returnsNormalBehavior() {"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":"        Project project \u003d new Project(1, \"Title\", \"Desc\", 3, 3);"},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":"        assertTrue(project.getBacklog().isEmpty());"},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":23,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":2,"e0426051":21}},{"path":"src/test/java/com/scrumptious/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.model.task;"},{"lineNumber":2,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":3,"author":{"gitId":"e0426051"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":5,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"e0426051"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":7,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":8,"author":{"gitId":"e0426051"},"content":"public class TaskTest {"},{"lineNumber":9,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":10,"author":{"gitId":"e0426051"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"e0426051"},"content":"    void task_newTask_checkMethodsNormalBehavior() {"},{"lineNumber":12,"author":{"gitId":"e0426051"},"content":"        Task task \u003d new Task(1, \"Title\", \"Desc\", \"HIGH\", false);"},{"lineNumber":13,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":14,"author":{"gitId":"e0426051"},"content":"        assertFalse(task.getDone());"},{"lineNumber":15,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"Title\", task.getTitle());"},{"lineNumber":16,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"Desc\", task.getDescription());"},{"lineNumber":17,"author":{"gitId":"e0426051"},"content":"        assertEquals(\"High priority\", task.getPriority());"},{"lineNumber":18,"author":{"gitId":"e0426051"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":20,"author":{"gitId":"e0426051"},"content":""},{"lineNumber":21,"author":{"gitId":"e0426051"},"content":"}"}],"authorContributionMap":{"keke101":1,"e0426051":20}},{"path":"src/test/java/com/scrumptious/parser/HelpParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"class HelpParserTest {"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    HelpParser helpParser \u003d new HelpParser();"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    void parseMultipleCommandsExceptions_helpActionIsNotAnInteger_returnsScrumptiousException() {"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        String notNumber \u003d \"not number\";"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"        assertThrows(ScrumptiousException.class, () -\u003e"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"            helpParser.parseMultipleCommandsExceptions(parameters, notNumber, projectManager));"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"    void parseMultipleCommandsExceptions_helpNumberIsNotinList_returnsScrumptiousException() {"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        String number \u003d \"6\";"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"        assertThrows(ScrumptiousException.class, () -\u003e"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":"            helpParser.parseMultipleCommandsExceptions(parameters, number, projectManager));"},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":23,"keke101":7}},{"path":"src/test/java/com/scrumptious/parser/MemberParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"class MemberParserTest {"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    MemberParser memberParser \u003d new MemberParser();"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    void parseMultipleCommandsExceptions_missingName_returnsScrumptiousException() {"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        String add \u003d \"add\";"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"        assertThrows(ScrumptiousException.class, () -\u003e"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"            memberParser.parseMultipleCommandsExceptions(parameters, add, projectManager));"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":18,"keke101":5}},{"path":"src/test/java/com/scrumptious/parser/ParserManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.InvalidCommand;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"class ParserManagerTest {"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    ParserManager parser \u003d new ParserManager();"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    void parser_invalidCommands_returnsInvalidCommand() {"},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"        String userInput \u003d \"projekt /create -title Duke -desc lmao -end 11102020 -sd 7\";"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        Command command \u003d parser.parser(userInput, projectManager);"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        assertTrue(command instanceof InvalidCommand);"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"    void isStringIntParsable_stringDoesNotContainInteger_returnsFalse() {"},{"lineNumber":25,"author":{"gitId":"homingjun"},"content":"        String notNumber \u003d \"not number\";"},{"lineNumber":26,"author":{"gitId":"homingjun"},"content":"        assertFalse(ParserManager.isStringIntParsable(notNumber));"},{"lineNumber":27,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":29,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"homingjun"},"content":"    void isStringIntParsable_stringContainsInteger_returnsTrue() {"},{"lineNumber":31,"author":{"gitId":"homingjun"},"content":"        String number \u003d \"1\";"},{"lineNumber":32,"author":{"gitId":"homingjun"},"content":"        assertTrue(ParserManager.isStringIntParsable(number));"},{"lineNumber":33,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":35,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"homingjun"},"content":"    void isExit_commandIsBye_returnsTrue() {"},{"lineNumber":37,"author":{"gitId":"homingjun"},"content":"        Command command \u003d parser.parser(\"bye\", projectManager);"},{"lineNumber":38,"author":{"gitId":"homingjun"},"content":"        command.execute();"},{"lineNumber":39,"author":{"gitId":"homingjun"},"content":"        assertTrue(parser.isExit());"},{"lineNumber":40,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":42,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"homingjun"},"content":"    void isExit_commandIsNotBye_returnsFalse() {"},{"lineNumber":44,"author":{"gitId":"homingjun"},"content":"        Command command \u003d parser.parser(\"help\", projectManager);"},{"lineNumber":45,"author":{"gitId":"homingjun"},"content":"        command.execute();"},{"lineNumber":46,"author":{"gitId":"homingjun"},"content":"        assertFalse(parser.isExit());"},{"lineNumber":47,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":44,"keke101":4}},{"path":"src/test/java/com/scrumptious/parser/ProjectParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"class ProjectParserTest {"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    ProjectParser projectParser \u003d new ProjectParser();"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    void parseMultipleCommandsExceptions_missingParameters_returnsScrumptiousException() {"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        String create \u003d \"create\";"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"        assertThrows(ScrumptiousException.class, () -\u003e"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"            projectParser.parseMultipleCommandsExceptions(parameters, create, projectManager));"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":19,"keke101":5}},{"path":"src/test/java/com/scrumptious/parser/StorageParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.Command;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.command.InvalidCommand;"},{"lineNumber":5,"author":{"gitId":"homingjun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":"class StorageParserTest {"},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    StorageParser storageParser \u003d new StorageParser();"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":"    Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":18,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"    void parseMultipleCommandsExceptions_invalidCommands_returnsInvalidCommand() {"},{"lineNumber":20,"author":{"gitId":"homingjun"},"content":"        String invalidCommand \u003d \"invalid command\";"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"        Command command \u003d storageParser.parseMultipleCommandsExceptions(parameters, invalidCommand, projectManager);"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"        assertTrue(command instanceof InvalidCommand);"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":20,"keke101":4}},{"path":"src/test/java/com/scrumptious/parser/TaskParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.parser;"},{"lineNumber":2,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":3,"author":{"gitId":"homingjun"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.scrumptious.exception.ScrumptiousException;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":6,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":7,"author":{"gitId":"homingjun"},"content":"import java.util.Hashtable;"},{"lineNumber":8,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":9,"author":{"gitId":"homingjun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":11,"author":{"gitId":"homingjun"},"content":"class TaskParserTest {"},{"lineNumber":12,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":13,"author":{"gitId":"homingjun"},"content":"    TaskParser taskParser \u003d new TaskParser();"},{"lineNumber":14,"author":{"gitId":"homingjun"},"content":"    ProjectManager projectManager \u003d new ProjectManager();"},{"lineNumber":15,"author":{"gitId":"homingjun"},"content":"    Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":17,"author":{"gitId":"homingjun"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"    void parseMultipleCommandsExceptions_missingParameters_returnsScrumptiousException() {"},{"lineNumber":19,"author":{"gitId":"homingjun"},"content":"        String add \u003d \"add\";"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"        assertThrows(ScrumptiousException.class, () -\u003e"},{"lineNumber":21,"author":{"gitId":"homingjun"},"content":"            taskParser.parseMultipleCommandsExceptions(parameters, add, projectManager));"},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"homingjun"},"content":""},{"lineNumber":24,"author":{"gitId":"homingjun"},"content":"}"}],"authorContributionMap":{"homingjun":19,"keke101":5}},{"path":"src/test/java/com/scrumptious/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"package com.scrumptious.storage;"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":""},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.JsonObject;"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"import com.github.cliftonlabs.json_simple.Jsoner;"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"import com.scrumptious.model.project.ProjectManager;"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":""},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"import java.nio.file.Files;"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"import java.nio.file.Path;"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"import java.nio.file.Paths;"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":""},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":""},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"class StorageManagerTest {"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"    private static final String TEST_FILENAME \u003d \"test-data.json\";"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"    private static final String TEST_FILEPATH_STR \u003d String.format(\"./data/%s\", TEST_FILENAME);"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"    private static final Path TEST_FILEPATH \u003d Paths.get(TEST_FILEPATH_STR);"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":""},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"    void load() {"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"        assertDoesNotThrow(() -\u003e {"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"            ProjectManager projMgr \u003d new ProjectManager();"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"            StorageManager sm \u003d new StorageManager(TEST_FILENAME, projMgr);"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"            String expectedStr \u003d Files.readString(Paths.get(\"test-data/LOAD_1.json\"));"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"            JsonObject expected \u003d Jsoner.deserialize(expectedStr, new JsonObject());"},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"            initTestFile(expected);"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"            sm.load();"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"        });"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":""},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":"    void load_emptyFile_noExceptions() {"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"        assertDoesNotThrow(() -\u003e {"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":"            ProjectManager projMgr \u003d new ProjectManager();"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"            StorageManager sm \u003d new StorageManager(\"randomFile\", projMgr);"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"            sm.load();"},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"        });"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"    "},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"    void load_incorrectData_exceptionThrown() {"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"        // JSON file should be loaded successfully if data file is valid"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"        assertThrows(ClassCastException.class, () -\u003e {"},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"            ProjectManager projMgr \u003d new ProjectManager();"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"            StorageManager sm \u003d new StorageManager(TEST_FILENAME, projMgr);"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"            String expectedStr \u003d Files.readString(Paths.get(\"test-data/LOAD_2.json\"));"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"            JsonObject expected \u003d Jsoner.deserialize(expectedStr, new JsonObject());"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"            initTestFile(expected);"},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"            sm.load();"},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"        });"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"keke101"},"content":""},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"    void save() {"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"        assertDoesNotThrow(() -\u003e {"},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"            ProjectManager projMgr \u003d new ProjectManager();"},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"            StorageManager sm \u003d new StorageManager(TEST_FILENAME, projMgr);"},{"lineNumber":62,"author":{"gitId":"keke101"},"content":"            String expectedStr \u003d Files.readString(Paths.get(\"test-data/SAVE_1.json\"));"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"            projMgr.fromJson((JsonObject) Jsoner.deserialize(expectedStr));"},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"            sm.save();"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"        });"},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":""},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"    void save_noPerm_exceptionThrown() {"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"        assertThrows(IOException.class, () -\u003e {"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"            File testFile \u003d TEST_FILEPATH.toFile();"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"            if (testFile.exists()) {"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"                testFile.delete();"},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"            testFile.createNewFile();"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"            testFile.setReadOnly();"},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"            ProjectManager projMgr \u003d new ProjectManager();"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"            StorageManager sm \u003d new StorageManager(TEST_FILENAME, projMgr);"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"            String expectedStr \u003d Files.readString(Paths.get(\"test-data/SAVE_1.json\"));"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"            projMgr.fromJson((JsonObject) Jsoner.deserialize(expectedStr));"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"            sm.save();"},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"        });"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":""},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"    private void initTestFile(Object data) throws IOException {"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"        if (Files.exists(TEST_FILEPATH)) {"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"            Files.delete(TEST_FILEPATH);"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"        FileWriter fw \u003d new FileWriter(TEST_FILEPATH_STR);"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"        Jsoner.serialize(data, fw);"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"        fw.close();"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"}"}],"authorContributionMap":{"keke101":93}},{"path":"text-ui-test/input.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"keke101"},"content":"storage /clear"},{"lineNumber":2,"author":{"gitId":"keke101"},"content":"n"},{"lineNumber":3,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":4,"author":{"gitId":"keke101"},"content":"project /list"},{"lineNumber":5,"author":{"gitId":"keke101"},"content":"project /create -title -desc -dur 30 -sd 10"},{"lineNumber":6,"author":{"gitId":"keke101"},"content":"project /create -title MeTube -desc video streaming software -dur 30 -sd 10"},{"lineNumber":7,"author":{"gitId":"keke101"},"content":"project /create -title FaceDiary -desc Social networking -dur 100 -sd 20"},{"lineNumber":8,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":9,"author":{"gitId":"keke101"},"content":"project /list"},{"lineNumber":10,"author":{"gitId":"keke101"},"content":"project /select  "},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"project /select 1"},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"project /select 999"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"member /add   "},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"member /add amy "},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"member /add john mary jane bob test1 test2"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"member /del  "},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"member /del bob"},{"lineNumber":19,"author":{"gitId":"keke101"},"content":"member /del test1 test2"},{"lineNumber":20,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":21,"author":{"gitId":"keke101"},"content":"task /add -title dummyTask1 -desc dummy_description -priority HIGH"},{"lineNumber":22,"author":{"gitId":"keke101"},"content":"task /add -title dummyTask2 -desc dummy_description -priority MEDIUM"},{"lineNumber":23,"author":{"gitId":"keke101"},"content":"task /del 1"},{"lineNumber":24,"author":{"gitId":"keke101"},"content":"task /add -title dummyTask3 -desc dummy_description -priority LOW"},{"lineNumber":25,"author":{"gitId":"keke101"},"content":"task /add -title dummyTask4 -desc dummy_description -priority HIGh"},{"lineNumber":26,"author":{"gitId":"keke101"},"content":"task /add -title dummyTask5 -desc dummy_description -priority MedIum"},{"lineNumber":27,"author":{"gitId":"keke101"},"content":"task /add -title dummyTask6 -desc dummy_description -priority lOw"},{"lineNumber":28,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":29,"author":{"gitId":"keke101"},"content":"task /view  "},{"lineNumber":30,"author":{"gitId":"keke101"},"content":"task /view 1"},{"lineNumber":31,"author":{"gitId":"keke101"},"content":"task /view 2"},{"lineNumber":32,"author":{"gitId":"keke101"},"content":"task /view 2 3 4"},{"lineNumber":33,"author":{"gitId":"keke101"},"content":"task /priorityview"},{"lineNumber":34,"author":{"gitId":"keke101"},"content":"task /priority -priority HIGh -id 2"},{"lineNumber":35,"author":{"gitId":"keke101"},"content":"task /priorityview"},{"lineNumber":36,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":37,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone1 -start abcd"},{"lineNumber":38,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone1 -start 20201010"},{"lineNumber":39,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone2"},{"lineNumber":40,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone3 -start 20201010"},{"lineNumber":41,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone4"},{"lineNumber":42,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone5"},{"lineNumber":43,"author":{"gitId":"keke101"},"content":"sprint /create -goal milestone6"},{"lineNumber":44,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":45,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":46,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":47,"author":{"gitId":"keke101"},"content":"sprint /addtask  "},{"lineNumber":48,"author":{"gitId":"keke101"},"content":"sprint /addtask 1"},{"lineNumber":49,"author":{"gitId":"keke101"},"content":"sprint /addtask 2"},{"lineNumber":50,"author":{"gitId":"keke101"},"content":"sprint /addtask 3 4"},{"lineNumber":51,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":52,"author":{"gitId":"keke101"},"content":"sprint /allocate -user "},{"lineNumber":53,"author":{"gitId":"keke101"},"content":"sprint /allocate -user amy "},{"lineNumber":54,"author":{"gitId":"keke101"},"content":"sprint /allocate -task 1 -user amy"},{"lineNumber":55,"author":{"gitId":"keke101"},"content":"sprint /allocate -task 3 -user amy"},{"lineNumber":56,"author":{"gitId":"keke101"},"content":"sprint /allocate -task 3 -user amy -sprint 1"},{"lineNumber":57,"author":{"gitId":"keke101"},"content":"sprint /allocate -task 3 -user jane mary -sprint 1"},{"lineNumber":58,"author":{"gitId":"keke101"},"content":"sprint /allocate -task 2 -user bob"},{"lineNumber":59,"author":{"gitId":"keke101"},"content":"sprint /deallocate -user "},{"lineNumber":60,"author":{"gitId":"keke101"},"content":"sprint /deallocate -user amy "},{"lineNumber":61,"author":{"gitId":"keke101"},"content":"sprint /deallocate -task 1 -user amy"},{"lineNumber":62,"author":{"gitId":"keke101"},"content":"sprint /deallocate -task 3 -user amy"},{"lineNumber":63,"author":{"gitId":"keke101"},"content":"sprint /deallocate -task 3 -user amy -sprint 1 "},{"lineNumber":64,"author":{"gitId":"keke101"},"content":"sprint /deallocate -task 3 -user jane mary -sprint 1"},{"lineNumber":65,"author":{"gitId":"keke101"},"content":"sprint /deallocate -task 2 -user bob"},{"lineNumber":66,"author":{"gitId":"keke101"},"content":"sprint /allocate -task 3 -user amy jane mary"},{"lineNumber":67,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":68,"author":{"gitId":"keke101"},"content":"sprint /edit -goal  "},{"lineNumber":69,"author":{"gitId":"keke101"},"content":"sprint /edit -goal milestone1 edited"},{"lineNumber":70,"author":{"gitId":"keke101"},"content":"sprint /edit -goal milestone2 edited -sprint 2"},{"lineNumber":71,"author":{"gitId":"keke101"},"content":"sprint /edit -goal milestone2 edited -sprint 4"},{"lineNumber":72,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":73,"author":{"gitId":"keke101"},"content":"sprint /removetask  "},{"lineNumber":74,"author":{"gitId":"keke101"},"content":"sprint /removetask 1"},{"lineNumber":75,"author":{"gitId":"keke101"},"content":"sprint /removetask 3"},{"lineNumber":76,"author":{"gitId":"keke101"},"content":"task /done  "},{"lineNumber":77,"author":{"gitId":"keke101"},"content":"task /done 1"},{"lineNumber":78,"author":{"gitId":"keke101"},"content":"task /done 2"},{"lineNumber":79,"author":{"gitId":"keke101"},"content":"task /done 3 4"},{"lineNumber":80,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":81,"author":{"gitId":"keke101"},"content":"task /del  "},{"lineNumber":82,"author":{"gitId":"keke101"},"content":"task /del 1"},{"lineNumber":83,"author":{"gitId":"keke101"},"content":"task /del 2"},{"lineNumber":84,"author":{"gitId":"keke101"},"content":"task /del 3 4"},{"lineNumber":85,"author":{"gitId":"keke101"},"content":"project /view"},{"lineNumber":86,"author":{"gitId":"keke101"},"content":"sprint /view"},{"lineNumber":87,"author":{"gitId":"keke101"},"content":"storage /clear"},{"lineNumber":88,"author":{"gitId":"keke101"},"content":"y"},{"lineNumber":89,"author":{"gitId":"keke101"},"content":"help"},{"lineNumber":90,"author":{"gitId":"keke101"},"content":"help /-1"},{"lineNumber":91,"author":{"gitId":"keke101"},"content":"help /0"},{"lineNumber":92,"author":{"gitId":"keke101"},"content":"help /1"},{"lineNumber":93,"author":{"gitId":"keke101"},"content":"help /2"},{"lineNumber":94,"author":{"gitId":"keke101"},"content":"help /3"},{"lineNumber":95,"author":{"gitId":"keke101"},"content":"help /4"},{"lineNumber":96,"author":{"gitId":"keke101"},"content":"help /5"},{"lineNumber":97,"author":{"gitId":"keke101"},"content":"help /6"},{"lineNumber":98,"author":{"gitId":"chocomango"},"content":"bye"}],"authorContributionMap":{"keke101":97,"chocomango":1}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in ("},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a"},{"lineNumber":13,"author":{"gitId":"-"},"content":")"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"keke101"},"content":"IF EXIST .\\data\\data.json DEL /F .\\data\\data.json"},{"lineNumber":16,"author":{"gitId":"keke101"},"content":""},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"REM java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"keke101"},"content":"java -ea -cp %jarloc% com.scrumptious.test.TextUiTest \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"homingjun"},"content":"FC /w ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"}],"authorContributionMap":{"homingjun":1,"keke101":4,"-":17}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"keke101"},"content":"if [ -f \"./data/data.json\" ] "},{"lineNumber":12,"author":{"gitId":"keke101"},"content":"then"},{"lineNumber":13,"author":{"gitId":"keke101"},"content":"  rm ./data/data.json"},{"lineNumber":14,"author":{"gitId":"keke101"},"content":"fi"},{"lineNumber":15,"author":{"gitId":"keke101"},"content":""},{"lineNumber":16,"author":{"gitId":"keke101"},"content":"#java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":17,"author":{"gitId":"keke101"},"content":"java -ea -cp $(find ../build/libs/ -mindepth 1 -print -quit) com.scrumptious.test.TextUiTest \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"gmit22"},"content":"diff -w EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"Test passed!\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":26,"author":{"gitId":"-"},"content":"else"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    echo \"Test failed!\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":29,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"gmit22":1,"keke101":7,"-":21}}]
