[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "Changed by Zhen Wei"
      }
    ],
    "authorContributionMap": {
      "keke101": 2,
      "-": 64
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "    compile \u0027com.github.cliftonlabs:json-simple:3.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 1,
      "chocomango": 1,
      "-": 45
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chan Wei Ling | [Github](https://github.com/chocomango) | [Portfolio](docs/team/weiling.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ho Ming Jun | [Github](https://github.com/homingjun) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhen Wei | [Github](https://github.com/keke101) | [Portfolio](docs/team/zhenwei.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gunit Mittal | [Github](https://github.com/gmit22) | [Portfolio](docs/team/gunit.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhao Haoxiang | [Github](https://github.com/e0426051) |[Portfolio](docs/team/haoxiang.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "keke101": 1,
      "e0426051": 2,
      "chocomango": 2,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Introduction](#introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Background](#background)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Purpose](#purpose)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Scope](#scope)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Prerequisites](#prerequisites)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Setting up](#setting-up)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Running the Program](#running-the-program)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Design](#design)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Architecture](#architecture)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [UI Component](#ui-component)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Logic Component](#logic-component)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Model Component](#model-component)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Storage Component](#storage-component)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Implementation](#implementation)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Project](#project)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Create Project](#create-project)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Select Project](#select-project)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Task](#task)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Add Task](#add-task)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [View Task](#view-task)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Delete Task](#delete-task)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Change Task Priority](#change-task-priority)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Mark Task as Complete](#mark-task-as-complete)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Sprint](#sprint)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Create Sprint](#create-sprint)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [View Sprint](#view-sprint)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Add task to Sprint](#add-task-to-sprint)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Remove task from Sprint](#remove-task-from-sprint)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Allocate Sprint tasks to Members](#allocate-sprint-tasks-to-members)        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Saving of Data](#saving-of-data)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Others](#target-user-profile)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Background"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "SCRUMptious is a Java-based command line interface application for you to efficiently manage the development of a project. Leveraging the robust SCRUM/Agile framework, it allows you to delegate tasks to your team members and organize project requirements with ease. As a bonus, if you are a keyboard warrior, you can reach peak efficiency using SCRUMptious to manage your projects."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Purpose"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "This guide illustrates the general architecture, and software design of SCRUMptious."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Scope"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "This guide is geared towards developers who wish to enhance or create their own version of SCRUMptious. As such, it contains important information regarding the software architecture and design considerations of SCRUMptious."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Prerequisites"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. JDK 11."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. IntelliJ IDEA."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Setting up"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. Use a Git tool to fork this repository, or download the .zip file from GitHub and extract the contents into a new folder."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. Right-Click on the folder and select “Open folder as Intellij IDEA Community Edition Project”."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. Ensure JDK 11 is selected for Gradle, by navigating to Configure \u003e Structure for New Projects \u003e Project Settings \u003e Project \u003e Project SDK."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Running the Program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "This program can be run once it is compiled. If you have built its artifacts (.jar) file, you may run it using java -jar \u003cfilename.jar\u003e on your command line."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "## Design"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "{UML}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### UI Component"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "{UML}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Logic Component"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "{UML}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Model Component"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "{UML}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Storage Component"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": "![Figure X: Simplified class diagram for Storage Component, Model and json.simple](./image/developerguide/storagecomponent.png \"Storage Component UML\")  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "API: [StorageManager.java](/src/main/java/seedu/duke/storage/StorageManager.java)  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "The Storage component is using the JavaScript Object Notation (JSON) to save the data. The library used for serialising and deserializing the data is json.simple 3.1.1 by Clifton Labs.  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": "Apart from the StorageManager class, each of the model classes is also part of the Storage component as they inherit the interface Jsonable. Therefore, the model classes need to implement the method toJson() which will contain the logic for serialising an object into a JSON string. This allows the object to be serialised by passing the object into Jsoner.serialize() directly.  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "In contrast, the JSON is deserialised under the functions implemented in StorageManager class manually due to the limitations of the library.  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "## Implementation"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Project"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Create Project"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Select Project"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Add Task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### View Task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Delete Task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Change Task Priority"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Mark Task as Complete    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Sprint"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Create Sprint"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### View Sprint"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Add task to Sprint"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Remove task from Sprint"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Allocate Sprint tasks to Members    "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "### Saving of Data"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "To make the data persistent and portable, **JSON** has been chosen as the format for data to be saved to a persistent storage such as storage drives, thumb drives and any other storage medium that is used to run the program. JSON is also human-readable which allows users to directly modify the data file easily which can be useful in certain scenarios such as fixing the data file in the event of data corruption."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "![Figure X: Running the Jar](image/developerguide/savingdata1.png \"Running the Jar\")  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "_Figure X: Running the Jar_  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "![Figure X: Running the Jar](image/developerguide/savingdata2.png \"Running in IDE\")  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "_Figure X: Running in IDE_  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "As shown in the above diagram, the program will save the data as “data.json”. The data file is saved in the “data/” folder that is located in the folder of the program. If you are testing the program using Intellij IDE, the “data/” folder will be in the root of the project folder. "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": "When you start the program, the program will load the data file from its respective location and deserialise it into its respective object instances. Data will be saved when the program exits or whenever the user makes changes to the program.  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the target user profile}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "keke101": 15,
      "chocomango": 83,
      "-": 32
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "# SCRUMptious"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "SCRUMptious is a command line software for project management designed for project managers following the scrum methodology to develop it. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "chocomango": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "1. [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Quick Start](#quick-start) "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Features](#features) "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Project `project`](#project-project)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Create a new project](#create-project)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [View project information](#view-project-information)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Add team members](#add-team-members-into-project-member)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Remove team members](#remove-team-members-from-project)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Project Backlog `task`](#project-backlog-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Add tasks](#add-tasks)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [View tasks](#view-task)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Delete tasks](#delete-task)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Change the priority of tasks](#change-the-priority-of-a-task)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Mark tasks as complete](#mark-task-as-complete)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    1. [Sprint `sprint`](#sprint-sprint)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Create a new sprint](#create-a-new-sprint)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [View sprint information](#view-current-sprint)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Add tasks to the sprint](#add-tasks-to-sprint)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Delete tasks from the sprint](#remove-tasks-from-sprint)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        1. [Allocate tasks to team members](#allocate-tasks-to-team-members)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "This document is the User Manual of the SCRUMptious."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "It is intended to provide all the necessary information to use this software.  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "SCRUMptious is a command line project management software, designed for project managers who adopt the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "[SCRUM](https://www.scrumguides.org/scrum-guide.html) methodology.  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "SCRUMptious allows project managers to do the following:  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Manage multiple projects"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Breakdown projects into smaller iterations known as *Sprints*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Manage tasks in the form of *Backlog* items"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Assign tasks to different *Sprint* iterations"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Assign tasks to team members"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. Download the latest version of `Scrumptious.jar` from [here](http://link.to/Scrumptious.jar)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. Move the jar file into an empty folder."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "1. Ensure that you have a functional Command Line Interface (CLI)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "1. Run the command `java -jar C:\\Scrumptious\\Scrumptious.jar`. Ensure that the `Scrumptious.jar` "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "filepath is specified "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "correctly according to where you copied it to."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "1. Type the command `project /create -title Scrumptious -desc A java project -end 30 -sd 10` "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "into the command line and press `Enter` to execute it."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "1. If the setup is correct, you should see something like this:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "   Project successfully created."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Project `project`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### Create Project"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "Create a new project  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `project /create -title \u003ctitle\u003e -desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e`  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Tags:  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * `-title`: Specify the title of the project"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * `-desc`: Specify the project description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * `-dur`: Specify the duration of the project. (Number of days)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * `-sd`: Specify the duration of a sprint. (Number of days)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Constraints: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * All tags are to be specified when creating a new project."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Example: `project /create -title MeTube -desc video streaming software -dur 90 -sd 10`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * Creates a project titled MeTube which is a video streaming software. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * The project will last for 90 days and the sprints will run on a 10 day interval."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### View project information"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "View project information which includes title, description, time-period and team members of the project. "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "It displays the project backlog, and the details of the ongoing sprint."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: `project /view`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Example: `project /view`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     ```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    [Title: MeTube ]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    [Description: video streaming software ]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    [No members added]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    [Project will start along with the first sprint]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    [Project backlog is empty]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    [There are no Sprints]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### Add team members into project `member`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Add team member(s) into the project.  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `member /add \u003cusername\u003e [\u003cusername\u003e ...]`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * At least one username must be specified"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * Username must be an alphanumeric String without spaces"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Example: `member /add john mary`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  john has been added to the project."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  mary has been added to the project."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### Remove team members from project "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Remove team member(s) from the project"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `member /del \u003cusername\u003e [\u003cusername\u003e ...]`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * At least one username must be specified"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    * Username must be an alphanumeric String"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Example: `member /del john mary`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  john has been removed from the project."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  mary has been removed from the project."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "homingjun"
        },
        "content": "### Project Backlog `task`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### Add tasks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Add a task to the project backlog."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003ccategory\u003e`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Example: `task /add -title Add UI -desc add an interactive UI -priority HIGH`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Adds a task of title `Add UI`, description `add an interactive UI` and priority `HIGH` into the backlog."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The title, description and category must be specified, otherwise the task is not added."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The priority entered must belong to the standard options as prescribed by the enum: [“HIGH”, “MEDIUM”, “LOW”]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The task will be added as \"not done\" status. Users need to manually mark a task as done after creation."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Tasks can only be created if a project has been created."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0426051"
        },
        "content": "`Add UI has been added.`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### View task"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Display the information of the specified task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `task /view \u003ctaskid\u003e`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Example: `task /view 3`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Views the third task.    "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The task ID entered must be a positive integer smaller or equal to the total number of tasks added, and must be specified."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0426051"
        },
        "content": "(Assuming the third task have the following attributes: Title: `Add parser`, Description: `add UI`, Priority: `HIGH`, Done: `false`)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "homingjun"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0426051"
        },
        "content": "[Task]"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    ID: 1"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    Add parser "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    Description: add an interactive UI "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    Priority: High priority"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    Completion: Completed"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "homingjun"
        },
        "content": " ```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Delete task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Delete the specified task from the project backlog."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `task /del \u003ctaskid\u003e [\u003ctaskid\u003e...]`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Example: `task /del 5 7 9`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Deletes the fifth, seventh and ninth task."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * There must be at least one supplied task ID for deletion."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * All task ID supplied must be a positive integer smaller or equal to the total number of tasks added."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0426051"
        },
        "content": "(Assuming the tasks have the following titles, respectively: `Add parser`, `Del UI` and `UI`)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0426051"
        },
        "content": "`The corresponding task Add parser has been removed from project.`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0426051"
        },
        "content": "`The corresponding task Del UI has been removed from project.`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0426051"
        },
        "content": "`The corresponding task UI has been removed from project.`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Change the priority of a task"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "homingjun"
        },
        "content": "Change the priority of the specified task."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `task /priority -priority \u003ccategory\u003e -id \u003ctaskid\u003e`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Example: `task /priority -priority HIGH -id 1`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Sets the first task with a priority of HIGH, regardless of its previous priority level    "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Task ID and priority level must be entered."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The Task ID entered must be a positive integer smaller or equal to the total number of tasks added."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The priority entered must belong to the standard options as prescribed by the enum: [“HIGH”, “MEDIUM”, “LOW”]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Expected outcome: (Assuming task 1 has title `Add parser`)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "homingjun"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0426051"
        },
        "content": "The task Add parser has its priority changed to:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    High priority"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "homingjun"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Mark task as complete"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Mark specified task as complete."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `task /done \u003ctaskid\u003e`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Example: `task /done 1`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * Marks the first task as done."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The Task ID must be entered."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    * The Task ID entered must be a positive integer smaller or equal to the total number of tasks added."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0426051"
        },
        "content": "* Expected outcome: (Assuming task 1 has title `Add parser`)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0426051"
        },
        "content": "`Add parser has been marked as done.`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "homingjun"
        },
        "content": "### Sprint `sprint`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### Create a new sprint"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Create a new sprint for the project."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Format: `sprint /create -goal \u003cgoal_input\u003e -start \u003cstart_date\u003e`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Tags:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `-goal`: Specify the goal for the sprint"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `-start`: Specify the start date of the sprint (Only used for the first sprint)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `goal_input` must be specified"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `start_date` will only be accepted in `YYYYMMDD` format"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Optional field:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `start_date` will be set as the date of command execution if not specified"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Example: `sprint /create Shopping Cart -start 20201010`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    Project will start along with the newly created sprint"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    Project period: 2020-10-10 to 2020-11-08"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [ID: 1]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [Goal: Shopping Cart ]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [Period: 2020-10-10 - 2020-10-19] "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [No allocated tasks]"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### View current sprint"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Display the information of the current sprint."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Format: `sprint /view`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Example: `sprint /view`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [ID: 1]"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [Goal: Shopping Cart ]"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [Period: 2020-10-10 - 2020-10-19] "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [Remaining: 4 days]"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    [No allocated tasks]"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Add tasks to sprint"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Add task(s) from the project backlog to the current sprint"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Format: `sprint /addtask \u003ctask_id\u003e [\u003ctask_id\u003e ...]`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `task_id` must be a positive integer"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * At least one `task_id` must be specified"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Example: `sprint /addtask 1 3 4`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask1  added to sprint."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask3  added to sprint."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask4  added to sprint."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chocomango"
        },
        "content": "#### Remove tasks from sprint"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Remove task(s) from the current sprint"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Format: `sprint /deltask \u003ctask_id\u003e [\u003ctask_id\u003e ...]`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `task_id` must be a positive integer"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * At least one `task_id` must be specified"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Example: `sprint /deltask 1 3 4`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask1 removed from sprint."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask3 removed from sprint."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask4 removed from sprint."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "homingjun"
        },
        "content": "  "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "homingjun"
        },
        "content": "#### Allocate tasks to team members"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chocomango"
        },
        "content": "Assign a task to a team member(s)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Format: `sprint /assign -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...]`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Tags:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `-task`: Specify the task to be allocated"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `-user`: Specify the user(s) to be assign with a task"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `task_id` must be a positive integer"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * `task_id` must be specified"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    * At least one `user_id` must be specified"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chocomango"
        },
        "content": "* Example: `sprint /assign -task 1 -user johntan mary jane`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    DummyTask1  assigned to [johntan, mary, jane]"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "homingjun"
        },
        "content": "| **Action** | **Format** | **Examples** |"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "homingjun"
        },
        "content": "| --- | --- | --- |"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Create Project | `project /create -title \u003ctitle\u003e -desc \u003cdescription\u003e -dur \u003cduration\u003e -sd \u003csprint interval\u003e` | `project /create -title MeTube -desc video streaming software -dur 90 -sd 10` |"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| View project information | `project /view` | `project /view` |"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Add members | `member /add \u003cusername\u003e [\u003cusername\u003e ...]` | `member /add john mary` |"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Remove members | `member /del \u003cusername\u003e [\u003cusername\u003e ...]` | `member /del john mary` |"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Add tasks | `task /add -title \u003ctitle\u003e -desc \u003cdescription\u003e -priority \u003ccategory\u003e` | `task /add -title Add UI -desc add an interactive UI -priority HIGH` |"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| View task | `task /view \u003ctaskid\u003e` | `task /view 3` |"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Delete task | `task /del \u003ctaskid\u003e [\u003ctaskid\u003e...]` | `task /del 5 7 9` |"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Change task priority | `task /priority -priority \u003ccategory\u003e -id \u003ctaskid\u003e` | `task /priority -priority HIGH -id 1` |"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Mark task as complete | `task /done \u003ctaskid\u003e` | `task /done 1` |"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Create sprint | `sprint /create -goal \u003cgoal_input\u003e -start \u003cstart_date\u003e` | `sprint /create Shopping Cart -start 20201010` |"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| View sprint  | `sprint /view` | `sprint /view` |"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Add tasks to sprint | `sprint /addtask \u003ctask_id\u003e [\u003ctask_id\u003e ...]` | `sprint /addtask 1 3 4` |"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Delete tasks from sprint | `sprint /deltask \u003ctask_id\u003e [\u003ctask_id\u003e ...]` | `sprint /deltask 1 3 4` |"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chocomango"
        },
        "content": "| Allocate tasks to team members | `sprint /assign -task \u003ctask_id\u003e -user \u003cuser_id\u003e [\u003cuser_id\u003e ...]` | `sprint /assign -task 1 -user johntan mary jane` |"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "e0426051"
        },
        "content": "| Exit program | `bye` | `bye` |"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gmit22"
        },
        "content": "      "
      }
    ],
    "authorContributionMap": {
      "homingjun": 104,
      "gmit22": 17,
      "e0426051": 44,
      "chocomango": 108,
      "-": 24
    }
  },
  {
    "path": "docs/team/gunit.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "# Gunit Mittal - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "gmit22": 6
    }
  },
  {
    "path": "docs/team/weiling.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "# Wei Ling - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "chocomango": 1,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": "import seedu.duke.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String dataFilename \u003d \"data.json\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static StorageManager sm;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        runInstructions();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keke101"
        },
        "content": "        destroy();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Welcome the user and initialise the local storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(projectManager.projectList.values());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sm \u003d new StorageManager(dataFilename, projectList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sm.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "            exit(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void destroy() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": "        sm.save();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Get the user input and runs the instructions."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Exits when ExitCommand returns \"true\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static void runInstructions() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": "        while (!parser.isExit()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            input \u003d Ui.getUserCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            String parserOutput \u003d parser.parser(input, projectManager);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parserOutput !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                System.out.println(parserOutput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 5,
      "homingjun": 3,
      "keke101": 17,
      "chocomango": 34,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected Hashtable\u003cString, String\u003e parameters;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new abstract command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Command(Hashtable\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setParameters(parameters);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Abstract method that execute the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public abstract void execute() throws DukeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Getters and Setters."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setParameters(Hashtable\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.parameters \u003d parameters;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CommandSummary.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class CommandSummary {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Main Commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String PROJECT \u003d \"project\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String MEMBER \u003d \"member\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public static final String TASK \u003d \"task\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SPRINT \u003d \"sprint\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Action Commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CREATE \u003d \"create\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ADD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String ADDTASK \u003d \"addtask\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DELETE \u003d \"del\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String REMOVETASK \u003d \"removetask\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String PRIORITY \u003d \"priority\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String ALLOCATE \u003d \"allocate\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String DEALLOCATE \u003d \"deallocate\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String DURATION \u003d \"dur\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String SELECT \u003d \"select\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Parameters"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DESCRIPTION \u003d \"desc\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String SPRINT_DURATION \u003d \"sd\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TASK_ID \u003d \"id\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Bye"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 31,
      "gmit22": 3,
      "e0426051": 1,
      "chocomango": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/member/AddMemberCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class AddMemberCommand extends MemberCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public AddMemberCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters, projectManager);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Member m;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project proj \u003d projectManager.getSelectedProject();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (int i \u003d 0; i \u003c parameters.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (proj.getProjectMember().containMember(new Member(parameters.get(Integer.toString(i))))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                Ui.showToUserLn(parameters.get(Integer.toString(i)) + \" is already associated to the project.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                m \u003d new Member(parameters.get(Integer.toString(i)));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                proj.getProjectMember().addMember(m);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                Ui.showToUserLn(parameters.get(Integer.toString(i)) + \" has been added to the project.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 27,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/member/DeleteMemberCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class DeleteMemberCommand extends MemberCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public DeleteMemberCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters, projectManager);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Project proj;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj \u003d projectManager.getSelectedProject();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (int i \u003d 0; i \u003c parameters.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (proj.getProjectMember().containMember(new Member(parameters.get(Integer.toString(i))))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                proj.getProjectMember().removeMember(new Member(parameters.get(Integer.toString(i))));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                Ui.showToUserLn(parameters.get(Integer.toString(i)) + \" has been removed from the project.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                Ui.showToUserLn(parameters.get(Integer.toString(i)) + \" is not associated with the project.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 26,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/member/MemberCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public abstract class MemberCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    ProjectManager projectManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public MemberCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectManager \u003d projectManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 5,
      "gmit22": 8,
      "chocomango": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/project/CreateProjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.DURATION;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT_DURATION;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class CreateProjectCommand extends ProjectCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ProjectManager projectManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public CreateProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectManager \u003d projectManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        title \u003d this.parameters.get(TITLE).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        description \u003d parameters.get(DESCRIPTION).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        int duration;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        duration \u003d Integer.parseInt(parameters.get(DURATION).trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        int sd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        sd \u003d Integer.parseInt(parameters.get(SPRINT_DURATION).trim());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectManager.addProject(title, description, duration, sd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Ui.showToUserLn(\"Project successfully created.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project addProj \u003d projectManager.getSelectedProject();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(addProj.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 36,
      "chocomango": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/project/ProjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public abstract class ProjectCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Creates a new Sprint command with arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ProjectCommand(Hashtable\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public abstract void execute() throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 6,
      "gmit22": 11,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/project/SelectProjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class SelectProjectCommand extends ProjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ProjectManager projectManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SelectProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectManager \u003d projectManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        projectManager.selectProject(Integer.parseInt(parameters.get(\"0\")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 17,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/project/ViewProjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class ViewProjectCommand extends ProjectCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ProjectManager projectManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ViewProjectCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectManager \u003d projectManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        assert projectManager.size() !\u003d 0 : \"No projects created \\n.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (projectManager.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"No projects are created.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Project project \u003d projectManager.getSelectedProject();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            assert project !\u003d null : \"The project is null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showToUserLn(project.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 25,
      "chocomango": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/AddSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class AddSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(AddSprintTaskCommand.class.getName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public AddSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters,projectList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LOGGER.setLevel(Level.WARNING);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] taskIds \u003d new String[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            chooseSprint();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskIds \u003d parameters.get(\"task\").split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectCurrentSprint();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskIds \u003d parameters.values().toArray(new String[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String id : taskIds) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int taskId \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Add task to sprint"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            this.sprintOwner.addSprintTask(taskId);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Update Task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Task addedTask \u003d this.projOwner.getProjectBacklog().getTask(taskId);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            addedTask.allocateToSprint(this.sprintOwner.getId());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Output to user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUser(projOwner.getProjectBacklog().getTask(taskId).getTitle() + \" added to sprint \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + this.sprintOwner.getId()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + \".\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Log"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            LOGGER.log(Level.INFO, \"AddSprintTaskCommand executed successfully\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + projOwner.getProjectBacklog().getTask(taskId).getTitle());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/AllocateSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class AllocateSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public AllocateSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters, projectList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseSprint();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.sprintOwner.toIdString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] taskIds \u003d this.parameters.get(\"task\").split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] userIds \u003d this.parameters.get(\"user\").split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String taskIdInString : taskIds) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int taskId \u003d Integer.parseInt(taskIdInString);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (String userId : userIds) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Member mem \u003d this.projOwner.getProjectMember().getMember(userId.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                mem.allocateTask(taskId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                this.projOwner.getProjectBacklog().getTask(taskId).allocateToMember(mem.getUserId());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(this.projOwner.getProjectBacklog().getTask(taskId).getTitle()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + \" is assigned to \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + Arrays.toString(userIds));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/CreateSprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.Sprint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class CreateSprintCommand extends SprintCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new DELETE command with arguments."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public CreateSprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters, projectList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Abstract method that execute the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUser(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (sprintList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                createFirstSprint(projOwner);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                e.printExceptionMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            createSubsequentSprint(projOwner);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void createFirstSprint(Project proj) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String sprintGoal \u003d this.parameters.get(\"goal\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintStart \u003d LocalDate.now();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (this.parameters.containsKey(\"start\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintStart \u003d DateTimeParser.parseDate(this.parameters.get(\"start\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintEnd \u003d sprintStart.plusDays(proj.getSprintLength() - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.addSprint(proj, sprintGoal, sprintStart, sprintEnd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate projEndDate \u003d sprintStart.plusDays(proj.getProjectDuration() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj.setStartDate(sprintStart);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj.setEndDate(projEndDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(\"\\nProject will start along with the newly created sprint\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(\"Project period: \" + sprintStart + \" to \" + projEndDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        printCreatedSprint();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void createSubsequentSprint(Project proj) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String sprintGoal \u003d this.parameters.get(\"goal\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint prevSprint \u003d sprintList.getSprint(sprintList.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintStart \u003d prevSprint.getEndDate().plusDays(1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(proj.getEndDate(), sprintStart) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"\\nAll sprints are already created.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintEnd \u003d sprintStart.plusDays(proj.getSprintLength() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.addSprint(proj, sprintGoal, sprintStart, sprintEnd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!this.parameters.containsKey(\"start\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(Messages.MESSAGE_CREATE_SUB_SPRINT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        printCreatedSprint();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void printCreatedSprint() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint createdSprint \u003d sprintList.getSprint(sprintList.size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(createdSprint.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 4,
      "chocomango": 80
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/DeallocateSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class DeallocateSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public DeallocateSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters, projectList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseSprint();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.sprintOwner.toIdString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] taskIds \u003d this.parameters.get(\"task\").split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] userIds \u003d this.parameters.get(\"user\").split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String taskIdInString : taskIds) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int taskId \u003d Integer.parseInt(taskIdInString);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (String userId : userIds) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Member mem \u003d this.projOwner.getProjectMember().getMember(userId.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                mem.deallocateTask(taskId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                this.projOwner.getProjectBacklog().getTask(taskId).removeFromMember(mem.getUserId());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(this.projOwner.getProjectBacklog().getTask(taskId).getTitle()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + \" is removed from \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + Arrays.toString(userIds));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/EditSprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class EditSprintCommand extends SprintCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new DELETE command with arguments."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public EditSprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters, projectList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Abstract method that execute the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseSprint();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String sprintGoal \u003d this.parameters.get(\"goal\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintOwner.setGoal(sprintGoal);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //Output to user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUser(this.sprintOwner.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/RemoveSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.SprintManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class RemoveSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintManager allSprint;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ProjectManager projectManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public RemoveSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters, projectList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] taskIds \u003d new String[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            chooseSprint();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskIds \u003d parameters.get(\"task\").split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectCurrentSprint();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskIds \u003d parameters.values().toArray(new String[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String id : taskIds) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int taskId \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Add task to sprint"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            this.sprintOwner.removeSprintTask(taskId);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Update Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Task removedTask \u003d this.projOwner.getProjectBacklog().getTask(taskId);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            removedTask.removeFromSprint(this.sprintOwner.getId());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Output to user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUser(projOwner.getProjectBacklog().getTask(taskId).getTitle() + \" removed from sprint \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + this.sprintOwner.getId()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    + \".\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/SprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.Sprint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.SprintManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public abstract class SprintCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected SprintManager sprintList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected ProjectManager projectList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected Project projOwner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected Sprint sprintOwner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new Sprint command with arguments."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d projectList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public abstract void execute() throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Choose the project to execute command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validation completed at SprintParser"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected void chooseProject() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int selectedProg;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"project\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //select specified project"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedProg \u003d Integer.parseInt(parameters.get(\"project\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //select default project"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedProg \u003d projectList.selectedProject;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projOwner \u003d projectList.getProject(selectedProg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintList \u003d projOwner.getSprintList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Choose the sprint to execute command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validation completed at SprintParser"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected void chooseSprint() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int selectedSprint;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //select specified sprint"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"sprint\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d Integer.parseInt(parameters.get(\"sprint\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d Integer.parseInt(parameters.get(\"0\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //select ongoing sprint"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintList.updateCurrentSprint();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d sprintList.getCurrentSprintIndex();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintOwner \u003d projOwner.getSprintList().getSprint(selectedSprint);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Choose the sprint to execute command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validation completed at SprintParser"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected void selectCurrentSprint() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.updateCurrentSprint();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int selectedSprint \u003d sprintList.getCurrentSprintIndex();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintOwner \u003d projOwner.getSprintList().getSprint(selectedSprint);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/ViewSprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class ViewSprintCommand extends SprintCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ViewSprintCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters, projectList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseProject();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        chooseSprint();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //Output to user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(this.projOwner.toIdString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUser(this.sprintOwner.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/AddTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static seedu.duke.command.CommandSummary.PRIORITY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private final ProjectManager projectListManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public AddTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectListManager) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.projectListManager \u003d projectListManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void execute()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assert !projectListManager.isEmpty() : \"No project\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (projectListManager.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Please create a project first.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String priority;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        title \u003d parameters.get(TITLE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        description \u003d parameters.get(DESCRIPTION);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        priority \u003d parameters.get(PRIORITY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d projectListManager.getSelectedProject();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (!proj.getProjectBacklog().checkValidPriority(priority)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Invalid priority!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        proj.getProjectBacklog().addTask(title, description, priority);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Task addedTask \u003d proj.getProjectBacklog().getTask(proj.getProjectBacklog().getNextId() - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Ui.showToUserLn(\"Task successfully created.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Ui.showToUserLn(addedTask.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0426051": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/ChangeTaskPriorityCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static seedu.duke.command.CommandSummary.PRIORITY;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK_ID;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public class ChangeTaskPriorityCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private final ProjectManager projectListManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public ChangeTaskPriorityCommand(Hashtable\u003cString,String\u003e parameters, ProjectManager projectListManager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.projectListManager \u003d projectListManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assert !projectListManager.isEmpty() : \"No project\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (projectListManager.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Please create a project first.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String priority;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        id \u003d Integer.parseInt(parameters.get(TASK_ID));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        priority \u003d parameters.get(PRIORITY).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d projectListManager.getSelectedProject();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            task \u003d proj.getProjectBacklog().getTask(id);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            if (!proj.getProjectBacklog().checkValidPriority(priority)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                throw new DukeException(\"Invalid priority!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            task.setPriority(priority);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showToUserLn(\"The task \" + task.getTitle() + \" has its priority changed to:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showToUserLn(\"\\t\" + task.getPriority());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Task ID entered is out of bounds!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Priority entered is invalid!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"The task does not exist or has been deleted.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0426051": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.sprint.Sprint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private final ProjectManager projectListManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public DeleteTaskCommand(Hashtable\u003cString,String\u003e parameters, ProjectManager projectListManager) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.projectListManager \u003d projectListManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assert !projectListManager.isEmpty() : \"No project\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (projectListManager.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Please create a project first.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d projectListManager.getSelectedProject();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (parameters.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Missing parameters.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        for (int i \u003d 0; i \u003c parameters.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                int taskId \u003d Integer.parseInt(parameters.get(Integer.toString(i)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                if (proj.getProjectBacklog().checkTaskExist(taskId)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Task task \u003d proj.getProjectBacklog().getTask(taskId);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Ui.showToUserLn(\"The corresponding task \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                            + task.getTitle()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                            + \" has been removed from project.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    proj.getProjectBacklog().removeTask(taskId);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    ArrayList\u003cSprint\u003e allSprints \u003d proj.getSprintList().getSprintList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    for (Sprint sprint : allSprints) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                        if (sprint.checkTaskExist(taskId)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                            sprint.removeSprintTask(taskId);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Ui.showError(Messages.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0426051": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/DoneTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private final ProjectManager projectListManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public DoneTaskCommand(Hashtable\u003cString,String\u003e parameters, ProjectManager projectListManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.projectListManager \u003d projectListManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assert !projectListManager.isEmpty() : \"No project\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (projectListManager.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Please create a project first.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d projectListManager.getSelectedProject();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        for (int i \u003d 0; i \u003c parameters.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                int backlogId \u003d Integer.parseInt(parameters.get(Integer.toString(i)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                if (backlogId \u003c\u003d proj.getProjectBacklog().backlogTasks.size()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    task \u003d proj.getProjectBacklog().getTask(backlogId);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    task.setAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Ui.showToUserLn(task.getTitle() + \" has been marked as done.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Ui.showError(Messages.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(\"The task does not exist or has been deleted.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0426051": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public abstract class TaskCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public TaskCommand(Hashtable\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public abstract void execute() throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 7,
      "gmit22": 1,
      "e0426051": 5,
      "chocomango": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/ViewTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public class ViewTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private final ProjectManager projectListManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public ViewTaskCommand(Hashtable\u003cString, String\u003e parameters, ProjectManager projectListManager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.projectListManager \u003d projectListManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assert !projectListManager.isEmpty() : \"No project found!\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (projectListManager.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Please create a project first.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Project proj \u003d projectListManager.getSelectedProject();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            if (parameters.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(\"Missing parameters.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showToUserLn(\"The details of the tasks are as follows: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            for (int i \u003d 0; i \u003c parameters.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                int backlogId \u003d Integer.parseInt(parameters.get(Integer.toString(i)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                //if (backlogId \u003c\u003d proj.getProjectBacklog().backlogTasks.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                //Change to getNextId because each task\u0027s ID does not decrease with deletion."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                if (backlogId \u003c\u003d proj.getProjectBacklog().getNextId()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    task \u003d proj.getProjectBacklog().getTask(backlogId);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Ui.showToUserLn(task.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                    Ui.showError(Messages.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"The task does not exist or has been deleted.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0426051": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void printExceptionMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Exception found: \" + this.getMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/member/Member.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Member implements Jsonable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String userId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cInteger\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public Member() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Member(String userId) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getUserId() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return userId;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setUserId(String userId) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setTaskList(ArrayList\u003cInteger\u003e taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void allocateTask(int taskid) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskList.add(taskid);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void deallocateTask(int taskid) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskList.remove((Object) taskid);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        /* Check if o is an instance of Member or not"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "          \"null instanceof [type]\" also returns false */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (!(o instanceof Member)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Member v \u003d (Member) o;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        // Compare the userId of members and return accordingly"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return userId.equals(v.userId);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jMember \u003d new JsonObject();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMember.put(\"userId\", userId);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jTasks \u003d new JsonArray();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        jTasks.addAll(taskList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMember.put(\"allocatedTaskIds\", jTasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMember.toJson(writer);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 26,
      "keke101": 39,
      "chocomango": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/member/ProjectMembers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class ProjectMembers implements Jsonable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cMember\u003e memberList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ProjectMembers() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        memberList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setMemberList(ArrayList\u003cMember\u003e memberList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.memberList \u003d memberList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return memberList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cMember\u003e getAllMembers() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return this.memberList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Member getMember(String userid) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Member mem : memberList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (mem.getUserId().equals(userid)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return mem;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void addMember(Member m) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        memberList.add(m);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    public void addMember(List\u003cString\u003e userId) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        Member m;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        for (String s : userId) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            if (memberList.contains(new Member(s))) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                System.out.println(\"The user associated with \" + s + \" is already added to the project\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                m \u003d new Member(s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                memberList.add(m);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                System.out.println(\"The user associated with \" + s + \" has been added\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //add comparator for removing object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void deleteMember(List\u003cString\u003e userId) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String s : userId) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (memberList.contains(new Member(s))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                memberList.remove(new Member(s));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"The user associated with \" + s + \" has been removed from the project\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                System.out.println(\"This member is not associated with this project: \" + new Member(s).getUserId());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean containMember(Member member) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return memberList.contains(member);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void removeMember(Member member) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        memberList.remove(member);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder membersString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        membersString.append(\"[Members:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Member mem : memberList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            membersString.append(String.format(\" %s\", mem.getUserId()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        membersString.append(\"]\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return membersString.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jMemberList \u003d new JsonArray(memberList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMemberList.toJson(writer);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 52,
      "keke101": 26,
      "chocomango": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/project/Project.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.ProjectMembers;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.SprintManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Project implements Jsonable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintManager sprintList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private TaskManager backlog;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ProjectMembers memberList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int projectID;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int projectDuration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int sprintLength;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private LocalDate startDate \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private LocalDate endDate \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public Project() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Project(int projectID, String title, String description, int projectDuration, int sprintLength) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectID \u003d projectID;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectDuration \u003d projectDuration;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.sprintLength \u003d sprintLength;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlog \u003d new TaskManager(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        memberList \u003d new ProjectMembers();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList \u003d new SprintManager();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toIdString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder projectInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(String.format(\"[Project ID: %s]\", this.projectID));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectInString.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder projectInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(String.format(\"[ID: %s]\\n\", this.projectID));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(String.format(\"[Title: %s]\\n\", this.title));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(String.format(\"[Description: %s]\\n\", this.description));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!memberList.getAllMembers().isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(memberList.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[No members added]\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (this.startDate !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(String.format(\"[Period: %s - %s] \\n\", this.startDate, this.endDate));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[Project will start along with the first sprint]\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!this.backlog.backlogTasks.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(this.backlog.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[Project backlog is empty]\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (this.sprintList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(sprintList.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[There are no Sprints]\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectInString.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Getters"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int getProjectID() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectID;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SprintManager getSprintList() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ProjectMembers getProjectMember() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return memberList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getProjectDuration() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return projectDuration;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getSprintLength() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return sprintLength;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public TaskManager getBacklog() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return backlog;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ProjectMembers getMemberList() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return memberList;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public TaskManager getProjectBacklog() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return backlog;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    // Call this function every time a new sprint object is instantiated."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    // sets the start date the first time."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Setters"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setStartDate() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        setStartDate(LocalDate.now());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setStartDate(LocalDate startDate) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setEndDate(LocalDate endDate) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setSprintList(SprintManager sprintList) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintList \u003d sprintList;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setBacklog(TaskManager backlog) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.backlog \u003d backlog;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setMemberList(ProjectMembers memberList) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.memberList \u003d memberList;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setProjectDuration(int projectDuration) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.projectDuration \u003d projectDuration;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setSprintLength(int sprintLength) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.sprintLength \u003d sprintLength;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void displayProjectBacklog() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (backlog.getNextId() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"No tasks currently added to project backlog.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"Current tasks in your project backlog\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (int i \u003d 0; i \u003c backlog.getNextId(); i++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \". \" + backlog.getTask(i).getTitle());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jObj \u003d new JsonObject();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"title\", this.title);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"description\", this.description);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"projectDuration\", this.projectDuration);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"sprintLength\", this.sprintLength);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"startDate\", this.startDate \u003d\u003d null ? null : this.startDate.toString());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"endDate\", this.endDate \u003d\u003d null ? null : this.endDate.toString());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"backlog\", backlog);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        jObj.put(\"members\", memberList);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        jObj.put(\"allSprints\", sprintList);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.toJson(writer);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 64,
      "keke101": 74,
      "chocomango": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/project/ProjectManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.model.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class ProjectManager {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Hashtable\u003cInteger, Project\u003e projectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int selectedProject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ProjectManager() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.selectedProject \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addProject(String title, String description, int projectDuration, int sprintLength) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int newProjectID \u003d this.size() + 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList.put(newProjectID,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                new Project(newProjectID, title, description, projectDuration, sprintLength));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.selectedProject \u003d newProjectID;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void selectProject(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        selectedProject \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return projectList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return projectList.isEmpty();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Project getSelectedProject() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectList.get(selectedProject);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Project getProject(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectList.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 23,
      "chocomango": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/sprint/Sprint.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Sprint implements Jsonable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String goal;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cInteger\u003e taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project owner;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public Sprint() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint(int sprintID, Project proj, String goal) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this(sprintID, proj, goal, null, null);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint(int sprintID, Project proj, String goal, LocalDate startDate) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this(sprintID, proj, goal, startDate, null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint(int sprintID, Project proj, String goal, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setId(sprintID);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setGoal(goal);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setStartDate(startDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setEndDate(endDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.owner \u003d proj;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getTaskList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setTaskList(ArrayList\u003cInteger\u003e taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Project getOwner() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return owner;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setOwner(Project owner) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.owner \u003d owner;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String getGoal() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return goal;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setGoal(String goal) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.goal \u003d goal;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setStartDate(LocalDate startDate) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setEndDate(LocalDate endDate) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public boolean checkTaskExist(int taskId) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Integer id : taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (id \u003d\u003d taskId) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addSprintTask(int taskId) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.taskList.add(taskId);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void removeSprintTask(int taskId) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.taskList.remove((Object) taskId);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getAllSprintTaskIds() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toIdString() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder sprintInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Sprint ID: %s]\", this.id));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintInString.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toSimplifiedString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder sprintInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Sprint ID: %d]\", this.id));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"\\t[Goal: %s]\", this.goal));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"\\t[Period: %s - %s]\\n\", this.startDate, this.endDate));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintInString.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        boolean isCurrentSprint;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        isCurrentSprint \u003d ((this.id - 1) \u003d\u003d this.owner.getSprintList().getCurrentSprintIndex());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder sprintInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (isCurrentSprint) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CURRENT SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SPRINT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[ID: %d]\\n\", this.id));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Goal: %s]\\n\", this.goal));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Period: %s - %s] \\n\", this.startDate, this.endDate));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (isCurrentSprint) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(String.format(\"[Remaining: %s days]\\n\", this.endDate.compareTo(LocalDate.now())));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(\"[No allocated tasks]\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (int taskIds : taskList) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Task task \u003d owner.getProjectBacklog().getTask(taskIds);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                sprintInString.append(task.toString());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintInString.toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jObj \u003d new JsonObject();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"id\", id);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"goal\", goal);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"startDate\", startDate \u003d\u003d null ? null : startDate.toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"endDate\", endDate \u003d\u003d null ? null : endDate.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jsonSprintTaskIds \u003d new JsonArray();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        jsonSprintTaskIds.addAll(taskList);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"sprintTaskIds\", jsonSprintTaskIds);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.toJson(writer);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 44,
      "chocomango": 138
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/sprint/SprintManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class SprintManager implements Jsonable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cSprint\u003e sprintList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int currentSprintIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SprintManager() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setCurrentSprintIndex(-1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public ArrayList\u003cSprint\u003e getSprintList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return sprintList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setSprintList(ArrayList\u003cSprint\u003e sprintList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.sprintList \u003d sprintList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public int getCurrentSprintIndex() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return currentSprintIndex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setCurrentSprintIndex(int sprintId) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.currentSprintIndex \u003d sprintId;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint getSprint(int sprintId) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList.get(sprintId - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint getCurrentSprint() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList.get(this.currentSprintIndex - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addSprint(Project proj, String goal, LocalDate start, LocalDate end) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int newSprintID \u003d this.size() + 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.add(new Sprint(newSprintID, proj, goal, start, end));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public boolean updateCurrentSprint() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (int id \u003d 1; id \u003c\u003d this.size(); id++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Sprint current \u003d this.getSprint(id);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (DateTimeParser.diff(LocalDate.now(), current.getEndDate()) \u003e\u003d 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    \u0026\u0026 DateTimeParser.diff(current.getStartDate(), LocalDate.now()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                this.setCurrentSprintIndex(id);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder allSprintsInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprintsInString.append(\"\\n-------------------------- ALL SPRINTS --------------------------\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Sprint sprint : sprintList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            allSprintsInString.append(sprint.toSimplifiedString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprintsInString.append(\"-----------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return allSprintsInString.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jSprintObj \u003d new JsonObject();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jSprintList \u003d new JsonArray(sprintList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jSprintObj.put(\"sprintList\", jSprintList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jSprintObj.put(\"currentSprintIndex\", currentSprintIndex);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jSprintObj.toJson(writer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 42,
      "chocomango": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/Priority.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    HIGH {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"High priority\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    MEDIUM {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"Medium priority\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    LOW {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"Low priority\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 16,
      "keke101": 1,
      "e0426051": 3,
      "chocomango": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Task implements Jsonable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cString\u003e memberList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cInteger\u003e sprintList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Task(int id, String title, String description, String priority) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this(id, title, description, priority, false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Task(int id, String title, String description, String priority, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.priority \u003d Priority.valueOf(priority);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.memberList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setPriority(Priority priority) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setPriority(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "        priority \u003d Priority.valueOf(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cString\u003e getMemberList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return memberList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setMemberList(ArrayList\u003cString\u003e memberList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.memberList \u003d memberList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getSprintList() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setSprintList(ArrayList\u003cInteger\u003e sprintList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintList \u003d sprintList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void allocateToMember(String memberId) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        memberList.add(memberId);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void removeFromMember(String memberId) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        memberList.remove((Object) memberId);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cString\u003e getAllocatedMembers() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return memberList;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void allocateToSprint(int sprintId) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.add(sprintId);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void removeFromSprint(int sprintId) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.remove((Object) sprintId);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getAllocatedSprints() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getPriority() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return priority.toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toSimplifiedString() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder taskString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"[Task ID: %d]\", this.id));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\t[Title: %s]\", this.title));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\t[Completion: %s]\\n\", this.isDone ? \"Completed\" : \"Incomplete\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return taskString.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder taskString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\n[Task]\\n\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tID: %d\\n\", this.id));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tTitle: %s\\n\", this.title));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tDescription: %s\\n\", this.description));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tPriority: %s\\n\", this.priority));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tCompletion: %s\\n\", this.isDone ? \"Completed\" : \"Incomplete\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!memberList.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskString.append(\"\\tAssigned to: \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (String member : memberList) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                taskString.append(String.format(\"%s \", member));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskString.append(\"\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskString.append(\"\\tTask have yet to be assigned to anyone\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return taskString.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jTask \u003d new JsonObject();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        final JsonArray members \u003d new JsonArray(memberList);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"id\", id);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"title\", title);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"description\", description);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"priority\", priority.name());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"isDone\", isDone);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"membersAllocatedTo\", members);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        jTask.put(\"sprintAllocatedTo\", sprintList);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.toJson(writer);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 32,
      "keke101": 77,
      "chocomango": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/TaskManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class TaskManager implements Jsonable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ArrayList\u003cTask\u003e backlogTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    int nextId;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public TaskManager(Project proj) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.proj \u003d proj;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        backlogTasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        nextId \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        return backlogTasks.isEmpty();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        return backlogTasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public int getNextId() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return nextId;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setProj(Project proj) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.proj \u003d proj;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setBacklogTasks(ArrayList\u003cTask\u003e backlogTasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.backlogTasks \u003d backlogTasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setNextId(int nextId) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.nextId \u003d nextId;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addTask(String title, String description, String priority) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int newTaskId \u003d nextId++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlogTasks.add(new Task(newTaskId, title, description, priority));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public boolean checkValidPriority(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Priority priority : Priority.values()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (priority.name().equals(input)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Task getTask(int id) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (task.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void removeTask(int taskId) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (task.getId() \u003d\u003d taskId) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                ArrayList\u003cInteger\u003e allocatedSprint \u003d task.getAllocatedSprints();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                for (Integer sprintId : allocatedSprint) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    proj.getSprintList().getSprint(sprintId).removeSprintTask(taskId);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                backlogTasks.remove(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void viewTask(String id, Ui ui) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (backlogId \u003c nextId) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d backlogTasks.get(backlogId);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUserLn(task.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUserLn(\"The following task id doesn\u0027t exist in backlog.\\n Please enter a valid id.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Task id is not an integer.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public boolean checkTaskExist(int id) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (task.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder backlogString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlogString.append(\"\\n---------------------------- BACKLOG ----------------------------\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            backlogString.append(task.toSimplifiedString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlogString.append(\"-----------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return backlogString.toString();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jsonBacklog \u003d new JsonObject();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jsonTasks \u003d new JsonArray(backlogTasks);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jsonBacklog.put(\"backlogTasks\", jsonTasks);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jsonBacklog.put(\"nextId\", nextId);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jsonBacklog.toJson(writer);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 26,
      "keke101": 46,
      "e0426051": 8,
      "chocomango": 64
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/DateTimeParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.Period;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final String DATETIME_FORMAT \u003d \"yyyy-MM-dd HHmm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"yyyyMMdd\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Parses String into LocalDateTime object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @param dateTime String in the DATETIME_FORMAT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @return LocalDateTime object based on the String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return LocalDateTime.parse(dateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static LocalDate parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static long diff(LocalDate from, LocalDate to) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Period period \u003d Period.between(from, to);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return ChronoUnit.DAYS.between(from, to);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/ExceptionsParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public interface ExceptionsParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                ProjectManager projectListManager)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 11,
      "chocomango": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/MemberParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.member.AddMemberCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.member.DeleteMemberCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ADD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DELETE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class MemberParser implements ExceptionsParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                ProjectManager projectListManager)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assert parameters.get(\"0\") !\u003d null : \"Invalid Input\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        if (parameters.get(\"0\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Ui.showError(\"Please do not enter dashes.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Missing name!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (projectListManager.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(\"You currently have no projects created\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case ADD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            new AddMemberCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            new DeleteMemberCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 25,
      "gmit22": 7,
      "e0426051": 7,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.BYE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.PROJECT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.MEMBER;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //Groups of 3: (command) (action) (options)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final Pattern CMD_PATTERN \u003d Pattern.compile(\"(\\\\w+)\\\\s\\\\/(\\\\w+)\\\\s*(.*)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //Groups of 2: (option name) (option value)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final Pattern ARGS_PATTERN \u003d Pattern.compile(\"-(\\\\w+)\\\\s([^-]+)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private final Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private boolean exit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String parser(String userInput, ProjectManager projectListManager) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (userInput.equals(BYE)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(BYE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": "            exit \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keke101"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Matcher cmdMatcher \u003d CMD_PATTERN.matcher(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (cmdMatcher.matches()) { //Need to check if it matches, groupCount will always show 3"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String command \u003d cmdMatcher.group(1); //capture first group (command)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String action \u003d cmdMatcher.group(2); //capture 2nd group (action)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String rawArgs \u003d cmdMatcher.group(3); //capture 3rd group (options)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Matcher parameterMatcher \u003d ARGS_PATTERN.matcher(rawArgs); //match the option"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!rawArgs.contains(\"-\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                params.clear();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                parameters.clear();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                if (!rawArgs.isBlank()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    String[] arguments \u003d rawArgs.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    params.addAll(Arrays.asList(arguments));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    for (int i \u003d 0; i \u003c arguments.length; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        parameters.put(\"\" + i, arguments[i]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                parameters.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                while (parameterMatcher.find()) { //go through each occurrence of options"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    //put the options into the hashtable (similar to dictionary)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    parameters.put(parameterMatcher.group(1), parameterMatcher.group(2).trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case PROJECT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    new ProjectParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case MEMBER:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    new MemberParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case TASK:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    new TaskParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case SPRINT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    new SprintParser().parseMultipleCommandsExceptions(parameters, action, projectListManager);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    return \"Invalid command!\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                e.printExceptionMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return \"Invalid command!\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static boolean isStringContainsNumber(String s) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Pattern.compile(\"[0-9]\").matcher(s).find();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 59,
      "gmit22": 16,
      "keke101": 8,
      "chocomango": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/ProjectParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.project.CreateProjectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.project.SelectProjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.command.project.ViewProjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DURATION;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT_DURATION;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.VIEW;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.CREATE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.SELECT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class ProjectParser implements ExceptionsParser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                ProjectManager projectListManager)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        case CREATE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!parameters.containsKey(TITLE) || !parameters.containsKey(DESCRIPTION)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    || !parameters.containsKey(DURATION) || !parameters.containsKey(SPRINT_DURATION)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Missing parameters.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(TITLE).isBlank()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"no title\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(DESCRIPTION).isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"no description\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(DURATION).isBlank() || !Parser.isStringContainsNumber(parameters.get(DURATION))) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"please give a number for duration\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(SPRINT_DURATION).isBlank()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    || !Parser.isStringContainsNumber(parameters.get(SPRINT_DURATION))) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"please give a number for sprint duration\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new CreateProjectCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case VIEW:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (projectListManager.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                throw new DukeException(\"You currently have no projects created\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new ViewProjectCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        case SELECT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            assert parameters.get(\"0\") !\u003d null : \"Invalid Input\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            if (parameters.get(\"0\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(\"Please do not enter dashes.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            int index \u003d Integer.parseInt(parameters.get(\"0\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (index \u003c\u003d projectListManager.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new SelectProjectCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                throw new DukeException(\"Invalid index, no corresponding project exists\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"Invalid action!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 37,
      "gmit22": 20,
      "e0426051": 13,
      "chocomango": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/SprintParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.sprint.CreateSprintCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.sprint.AddSprintTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.sprint.RemoveSprintTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.sprint.ViewSprintCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.sprint.AllocateSprintTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.EditSprintCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.DeallocateSprintTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.Sprint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.CREATE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static seedu.duke.command.CommandSummary.EDIT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ADDTASK;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static seedu.duke.command.CommandSummary.REMOVETASK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.VIEW;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static seedu.duke.command.CommandSummary.ALLOCATE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static seedu.duke.command.CommandSummary.DEALLOCATE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class SprintParser implements ExceptionsParser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                ProjectManager projectListManager)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!checkProjExist(projectListManager)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please create a project first.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case CREATE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkCreateSprintParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new CreateSprintCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        case EDIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkEditSprintParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                new EditSprintCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case ADDTASK:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkAddTaskParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new AddSprintTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        case REMOVETASK:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkRemoveTaskParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new RemoveSprintTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case VIEW:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkViewSprintParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new ViewSprintCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        case ALLOCATE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkAllocateTaskParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                new AllocateSprintTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        case DEALLOCATE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (checkDeallocateTaskParams(parameters, projectListManager)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                new DeallocateSprintTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"Invalid action!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Check if Project Manager contain any project."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @return True if ProjectManager.size \u003e 0"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkProjExist(ProjectManager projectList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectList.size() !\u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for CreateSprintCommand."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkCreateSprintParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Mandatory fields."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - goal"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!parameters.containsKey(\"goal\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please indicate your goal for this sprint.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - start"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"start\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                DateTimeParser.parseDate(parameters.get(\"start\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Please indicate your start date in this following format: YYYYMMDD\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for EditSprintCommand."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkEditSprintParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Mandatory fields."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - goal"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!parameters.containsKey(\"goal\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please indicate your goal for this sprint.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields with tags."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - sprint"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project selectedProject \u003d checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkSprintParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for AddSprintTaskCommand."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkAddTaskParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - sprint"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Mandatory fields"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - task (with or without tag)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project selectedProject \u003d checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint selectedSprint \u003d new Sprint();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d checkSprintParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedProject.getSprintList().updateCurrentSprint();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d selectedProject.getSprintList().getCurrentSprint();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkTaskParam(parameters, selectedProject, selectedSprint, true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for RemoveSprintTaskCommand."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkRemoveTaskParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - sprint"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Mandatory fields"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - task (with or without tag)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project selectedProject \u003d checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint selectedSprint \u003d new Sprint();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d checkSprintParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedProject.getSprintList().updateCurrentSprint();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedSprint \u003d selectedProject.getSprintList().getCurrentSprint();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkTaskParam(parameters, selectedProject, selectedSprint, false);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for ViewSprintCommand."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkViewSprintParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields with tags."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - sprint"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project selectedProject \u003d checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkSprintParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for AllocateSprintTaskCommand."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkAllocateTaskParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Mandatory fields."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - user"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - task"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!parameters.containsKey(\"user\") || !parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please indicate task and user for this command.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields with tags."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - sprint"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project selectedProject \u003d checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint selectedSprint \u003d checkSprintParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkUserParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkTaskParam(parameters, selectedProject, selectedSprint, false);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate parameters for DeallocateSprintTaskCommand."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean checkDeallocateTaskParams(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Mandatory fields."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - user"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - task"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!parameters.containsKey(\"user\") || !parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please indicate task and user for this command.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * Optional fields with tags."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - project"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         * - sprint"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chocomango"
        },
        "content": "         */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project selectedProject \u003d checkProjectParam(parameters, projectManager);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint selectedSprint \u003d checkSprintParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkUserParam(parameters, selectedProject);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkTaskParam(parameters, selectedProject, selectedSprint, false);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        checkAllocation(parameters, selectedProject);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate the \"project\" params."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Checks:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - parsable into an Integer"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - Exist in Project Manager"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - Contains sprints in selected Project (Also check when project is not specified)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project checkProjectParam(Hashtable\u003cString, String\u003e parameters, ProjectManager projectManager)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int selectedProg;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"project\")) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                selectedProg \u003d Integer.parseInt(parameters.get(\"project\"));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Please include a positive integer for Project ID.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (selectedProg \u003e projectManager.size()) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Project not found.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            selectedProg \u003d projectManager.selectedProject;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectManager.getProject(selectedProg);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Validate the \"sprint\" params."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Checks:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - parsable into an Integer"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - Exist in Sprint Manager"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Check if there is ongoing spring if \"sprint\" params is not specified"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Sprint checkSprintParam(Hashtable\u003cString, String\u003e parameters, Project proj) throws DukeException {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (proj.getSprintList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please create a sprint for Project \" + proj.getProjectID() + \" first.\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int selectedSprint;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //Specified with tag"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"sprint\")) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                selectedSprint \u003d Integer.parseInt(parameters.get(\"sprint\"));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Please include a positive integer for Sprint ID.\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (selectedSprint \u003e proj.getSprintList().size()) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Sprint not found.\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Specified without tag"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                selectedSprint \u003d Integer.parseInt(parameters.get(\"0\"));"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Please include a positive integer for Sprint ID.\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (selectedSprint \u003e proj.getSprintList().size()) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Sprint not found.\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //Not Specified: Check if there is ongoing sprint"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (proj.getSprintList().updateCurrentSprint()) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                selectedSprint \u003d proj.getSprintList().getCurrentSprintIndex();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"No ongoing sprint. Maybe you can specify using -sprint tag\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return proj.getSprintList().getSprint(selectedSprint);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Check if the \"task\" params is specified and validate the params."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Checks:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - parsable into an Integer"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - Exist in backlog (Task Manager)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void checkTaskParam(Hashtable\u003cString, String\u003e parameters, Project proj, Sprint sprint, boolean isAdd)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (parameters.containsKey(\"task\")) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            checkTaskParamTag(parameters, \"task\", proj, sprint, isAdd);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (parameters.containsKey(\"0\")) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            checkTaskParamTag(parameters, \"0\", proj, sprint, isAdd);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throw new DukeException(\"Please indicate task(s) to be allocated.\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void checkTaskParamTag(Hashtable\u003cString, String\u003e parameters, String tag, Project proj,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                   Sprint sprint, boolean isAdd)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] taskIds;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (tag.equals(\"task\")) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskIds \u003d parameters.get(tag).split(\" \");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            taskIds \u003d parameters.values().toArray(new String[0]);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String id : taskIds) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int taskId;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                taskId \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Please include positive integer for task IDs.\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (!proj.getBacklog().checkTaskExist(taskId)) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"Task(s) not found in backlog.\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (isAdd \u003d\u003d sprint.checkTaskExist(taskId)) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(isAdd"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        ? \"Task(s) already exist\""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        : \"Task(s) not found in sprint.\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Check if all \"task\"  are allocated to \"user\"."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void checkAllocation(Hashtable\u003cString, String\u003e parameters, Project proj)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] taskIds \u003d parameters.get(\"task\").split(\" \");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] userIds \u003d parameters.get(\"user\").split(\" \");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String taskIdInString : taskIds) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int taskId \u003d Integer.parseInt(taskIdInString);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Task task \u003d proj.getBacklog().getTask(taskId);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (String mem : task.getAllocatedMembers()) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                for (String userId : userIds) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    if (mem.equals(userId)) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        throw new DukeException(\"Task(s) not allocated to member(s)\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Check if the \"user\" params is specified and validate the params."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Checks:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * - Exist in MemberManager"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void checkUserParam(Hashtable\u003cString, String\u003e parameters, Project proj)"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String[] userIds \u003d parameters.get(\"user\").split(\" \");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String id : userIds) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Member mem \u003d proj.getProjectMember().getMember(id.trim());"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (mem \u003d\u003d null) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                throw new DukeException(\"User(s) not found.\");"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 36,
      "gmit22": 5,
      "e0426051": 1,
      "chocomango": 372
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/TaskParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.task.AddTaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.task.ChangeTaskPriorityCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.task.DeleteTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.task.DoneTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.task.ViewTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.ProjectManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.PRIORITY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK_ID;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ADD;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DELETE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.VIEW;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class TaskParser implements ExceptionsParser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void parseMultipleCommandsExceptions(Hashtable\u003cString, String\u003e parameters, String action,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                ProjectManager projectListManager)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case ADD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!parameters.containsKey(TITLE) || !parameters.containsKey(DESCRIPTION)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    || !parameters.containsKey(PRIORITY)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Missing parameters.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(TITLE).isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Please enter a title!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(DESCRIPTION).isBlank()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Please enter a description!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(PRIORITY).isBlank()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Please enter a priority!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                new AddTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            assert parameters.get(\"0\") !\u003d null : \"Invalid Input\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            if (parameters.get(\"0\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(\"Please do not enter dashes.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(\"0\").isBlank() || !Parser.isStringContainsNumber(parameters.get(\"0\"))) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                throw new DukeException(\"please give a task number!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                new DeleteTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            assert parameters.get(\"0\") !\u003d null : \"Invalid Input\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            if (parameters.get(\"0\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Ui.showError(\"Please do not enter dashes.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(\"0\").isBlank() || !Parser.isStringContainsNumber(parameters.get(\"0\"))) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                throw new DukeException(\"please give a task number!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                new DoneTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case VIEW:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            new ViewTaskCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case PRIORITY:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!parameters.containsKey(TASK_ID) || !parameters.containsKey(PRIORITY)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Missing parameters.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(TASK_ID).isBlank() || !Parser.isStringContainsNumber(parameters.get(TASK_ID))) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Task ID entered is invalid!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parameters.get(PRIORITY).isBlank()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                throw new DukeException(\"Please enter a priority!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                new ChangeTaskPriorityCommand(parameters, projectListManager).execute();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"Invalid action!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 67,
      "e0426051": 23,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keke101"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsoner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.ProjectMembers;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.Sprint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.SprintManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.Priority;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String DEFAULT_FILEPATH \u003d \"./data/data.json\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String INVALID_FILE_REGEX \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private final Path filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private final ArrayList\u003cProject\u003e projects;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public StorageManager(String filename, ArrayList\u003cProject\u003e projects) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keke101"
        },
        "content": "        if (isValidFilename(filename)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keke101"
        },
        "content": "            filepath \u003d Paths.get(\"./data\", filename);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keke101"
        },
        "content": "            filepath \u003d Paths.get(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.projects \u003d projects \u003d\u003d null ? new ArrayList\u003c\u003e() : projects;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Getters"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public Path getFilepath() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return filepath;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public ArrayList\u003cProject\u003e getProjects() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return projects;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Public functions to be invoked"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * Save all projects into JSON data file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * File name of the data file is specified when the StorageManager object is instantiated"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keke101"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonArray jsonProjects \u003d new JsonArray(projects);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keke101"
        },
        "content": "            FileWriter fw \u003d new FileWriter((filepath.toFile()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Jsoner.serialize(jsonProjects, fw);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Warning] Cannot save to data file, data will be lost when this program ends!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * Load the data file and deserialize it as a list of Project objects."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * File name of the data file is specified when the StorageManager object is instantiated."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * @throws IOException Thrown when there is error opening the file or reading to the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void load() throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "keke101"
        },
        "content": "        if (!Files.exists(filepath)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "keke101"
        },
        "content": "            return; //file does not exist, start from a new"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String rawData \u003d loadRawData();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonArray rawJson \u003d Jsoner.deserialize(rawData, new JsonArray());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "keke101"
        },
        "content": "            parseJsonArray(rawJson);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Unable to load the data file properly, exiting...\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "keke101"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "keke101"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.printf(\"[Error] Cannot parse an element as a JSON object properly!%n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "keke101"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "keke101"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Private functions    "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "        initDataDir();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void initDataDir() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Path path \u003d filepath.getParent();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "keke101"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "keke101"
        },
        "content": "                Files.createDirectory(path);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "keke101"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot create data directory for saving.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "keke101"
        },
        "content": "            exit(1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void parseJsonArray(JsonArray raw) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cJsonObject\u003e jsonProjects \u003d new ArrayList\u003c\u003e(raw.size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "keke101"
        },
        "content": "        for (Object o : raw) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Project project \u003d convertToProject((JsonObject) o);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "keke101"
        },
        "content": "            projects.add(project);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private Project convertToProject(JsonObject jsonProject) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Project project \u003d new Project();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        SprintManager allSprints \u003d convertSprintsList((JsonObject) jsonProject.get(\"allSprints\"), project);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        TaskManager backlog \u003d convertBacklog((JsonObject) jsonProject.get(\"backlog\"), project);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ProjectMembers members \u003d convertProjectMembers((JsonArray) jsonProject.get(\"members\"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "keke101"
        },
        "content": "        String title \u003d (String) jsonProject.get(\"title\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "keke101"
        },
        "content": "        String description \u003d (String) jsonProject.get(\"description\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "keke101"
        },
        "content": "        int projectDuration \u003d ((BigDecimal) jsonProject.get(\"projectDuration\")).intValue();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "keke101"
        },
        "content": "        int sprintLength \u003d ((BigDecimal) jsonProject.get(\"sprintLength\")).intValue();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setTitle(title);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setDescription(description);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setProjectDuration(projectDuration);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setSprintLength(sprintLength);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        project.setSprintList(allSprints);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setBacklog(backlog);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        project.setMemberList(members);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setStartDate(getDateFromJsonObj(jsonProject, \"startDate\"));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "keke101"
        },
        "content": "        project.setEndDate(getDateFromJsonObj(jsonProject, \"endDate\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return project;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private ProjectMembers convertProjectMembers(JsonArray rawMembers) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ProjectMembers projectMembers \u003d new ProjectMembers();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cMember\u003e members \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "keke101"
        },
        "content": "        for (Object o : rawMembers) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Member member \u003d new Member();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonObject rawMember \u003d (JsonObject) o;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonArray rawAllocatedTaskIds \u003d (JsonArray) rawMember.get(\"allocatedTaskIds\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "keke101"
        },
        "content": "            ArrayList\u003cInteger\u003e allocatedTaskIds \u003d getIntegersFromJsonArray(rawAllocatedTaskIds);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String userId \u003d (String) rawMember.get(\"userId\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "keke101"
        },
        "content": "            member.setUserId(userId);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            member.setTaskList(allocatedTaskIds);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "keke101"
        },
        "content": "            members.add(member);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "keke101"
        },
        "content": "        projectMembers.setMemberList(members);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return projectMembers;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private TaskManager convertBacklog(JsonObject rawBacklog, Project project) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        TaskManager backlog \u003d new TaskManager();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cTask\u003e backlogTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "keke101"
        },
        "content": "        JsonArray rawTasks \u003d (JsonArray) rawBacklog.get(\"backlogTasks\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "keke101"
        },
        "content": "        for (Object rawTask : rawTasks) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "keke101"
        },
        "content": "            backlogTasks.add(convertTask((JsonObject) rawTask));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "keke101"
        },
        "content": "        backlog.setNextId(((BigDecimal) rawBacklog.get(\"nextId\")).intValue());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "keke101"
        },
        "content": "        backlog.setBacklogTasks(backlogTasks);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "keke101"
        },
        "content": "        backlog.setProj(project);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return backlog;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private Task convertTask(JsonObject jsonObject) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Task task \u003d new Task();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "keke101"
        },
        "content": "        int id \u003d ((BigDecimal) jsonObject.get(\"id\")).intValue();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "keke101"
        },
        "content": "        task.setId(id);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "keke101"
        },
        "content": "        String title \u003d (String) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "keke101"
        },
        "content": "        task.setTitle(title);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "keke101"
        },
        "content": "        String description \u003d (String) jsonObject.get(\"description\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "keke101"
        },
        "content": "        task.setDescription(description);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Priority priority \u003d Priority.valueOf((String) jsonObject.get(\"priority\"));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "keke101"
        },
        "content": "        task.setPriority(priority);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "keke101"
        },
        "content": "        boolean isDone \u003d (Boolean) jsonObject.get(\"isDone\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "keke101"
        },
        "content": "        task.setDone(isDone);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cString\u003e membersAllocatedTo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        task.setMemberList(membersAllocatedTo);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "keke101"
        },
        "content": "        JsonArray rawMembersAllocate \u003d (JsonArray) jsonObject.get(\"membersAllocatedTo\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "keke101"
        },
        "content": "        rawMembersAllocate.asCollection(membersAllocatedTo);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "keke101"
        },
        "content": "        JsonArray rawSprintAllocate \u003d (JsonArray) jsonObject.get(\"sprintAllocatedTo\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cInteger\u003e sprintAllocatedTo \u003d getIntegersFromJsonArray(rawSprintAllocate);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        task.setSprintList(sprintAllocatedTo);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintManager convertSprintsList(JsonObject rawSprints, Project project) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        SprintManager sprintManager \u003d new SprintManager();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintManager.setCurrentSprintIndex(((BigDecimal) rawSprints.get(\"currentSprintIndex\")).intValue());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintManager.setSprintList(convertSprint((JsonArray) rawSprints.get(\"sprintList\"), project));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintManager;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private ArrayList\u003cSprint\u003e convertSprint(JsonArray sprintList, Project project) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cSprint\u003e sprints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "keke101"
        },
        "content": "        for (Object o : sprintList) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Sprint sprint \u003d new Sprint();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonObject rawSprint \u003d (JsonObject) o;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "keke101"
        },
        "content": "            int id \u003d ((BigDecimal) rawSprint.get(\"id\")).intValue();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String goal \u003d (String) rawSprint.get(\"goal\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonArray rawSprintTaskIds \u003d (JsonArray) rawSprint.get(\"sprintTaskIds\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "keke101"
        },
        "content": "            ArrayList\u003cInteger\u003e sprintTaskIds \u003d getIntegersFromJsonArray(rawSprintTaskIds);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sprint.setId(id);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sprint.setGoal(goal);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sprint.setStartDate(getDateFromJsonObj(rawSprint, \"startDate\"));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sprint.setEndDate(getDateFromJsonObj(rawSprint, \"endDate\"));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprint.setTaskList(sprintTaskIds);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprint.setOwner(project);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sprints.add(sprint);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return sprints;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private ArrayList\u003cInteger\u003e getIntegersFromJsonArray(JsonArray rawIntegers) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cInteger\u003e numList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "keke101"
        },
        "content": "        for (Object rawInteger : rawIntegers) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "keke101"
        },
        "content": "            int num \u003d ((BigDecimal) rawInteger).intValue();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "keke101"
        },
        "content": "            numList.add(num);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return numList;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private LocalDate getDateFromJsonObj(JsonObject obj, String key) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Object rawDate \u003d obj.get(key);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "keke101"
        },
        "content": "        if (rawDate !\u003d null) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "keke101"
        },
        "content": "            return LocalDate.parse((String) rawDate);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private String loadRawData() throws IOException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return Files.readString(filepath);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //TODO Valid filename checker"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private boolean isValidFilename(String filename) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "keke101"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 232,
      "chocomango": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * General messages."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //public static final String NEWLINE \u003d  System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_LOGO \u003d \"   _____  _____ _____  _    _ __  __       _   _  \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"  / ____|/ ____|  __ \\\\| |  | |  \\\\/  |     | | (_) \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \" | (___ | |    | |__) | |  | | \\\\  / |_ __ | |_ _  ___  _   _ ___\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"  \\\\___ \\\\| |    |  _  /| |  | | |\\\\/| | \u0027_ \\\\| __| |/ _ \\\\| | | / __|\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"  ____) | |____| | \\\\ \\\\| |__| | |  | | |_) | |_| | (_) | |_| \\\\__ \\\\ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \" |_____/ \\\\_____|_|  \\\\_\\\\\\\\____/|_|  |_| .__/ \\\\__|_|\\\\___/ \\\\__,_|___/ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"                                    | |\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"                                    |_|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"WELCOME TO SCRUMPTIOUS\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_PROMPT_INPUT \u003d \"command\u003e \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_CREATE_SUB_SPRINT \u003d \"Newly created sprint will automatically start after \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                   + \"the previous sprint ends.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_INVALID_ID \u003d \"The following task ID doesn\u0027t exist in backlog.\\nPlease enter a\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            + \" valid ID.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String MESSAGE_INVALID_IDTYPE \u003d \"Task ID entered is not an integer!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String MESSAGE_INVALID_DURATION \u003d \"Duration must be a multiple of sprint duration. \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "           + \"Duration must be longer than the project sprint\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 4,
      "chocomango": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": " * TextUi that handles user interaction."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final PrintStream out \u003d System.out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static void showWelcomeScreen() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        showToUserLn(Messages.MESSAGE_LOGO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        showToUserLn(Messages.MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Accepts input from user via input stream."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @return Input from user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static String getUserCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        showToUser(Messages.MESSAGE_PROMPT_INPUT.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        while (input.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return input.strip();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Print messages to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @param messages Specify messages to print"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static void showToUser(String... messages) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            out.print(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static void showToUserLn(String... messages) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            out.println(message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static void showError(String... messages) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            out.println(message);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 22,
      "chocomango": 38
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/TaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.command.task.TaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "class TaskCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    private TaskCommand test \u003d new TaskCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void addTaskCommand_validCommand_returnsNormalBehavior() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"HIGH\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String outputDescription \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String outputTitle \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getTitle();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String outputPriority \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getPriority();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"a\", outputTitle);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"b\", outputDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"High priority\", outputPriority);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        boolean outputDone \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertFalse(outputDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void addTaskCommand_invalidPriority_throwsException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"CRITICAL\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void deleteTaskCommand_validCommand_returnsNormalBehavior() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Setup"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"HIGH\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cString\u003e numbers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        numbers.add(\"1\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        test.deleteTaskCommand(numbers, projectList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertNull(proj.getProjectBacklog().getTask(proj.getProjectBacklog().getNextId() - 1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void viewTaskCommand_nonNumberInput_throwsException() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Setup"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"HIGH\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cString\u003e numbers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        numbers.add(\"1\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        test.viewTaskCommand(numbers, projectList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void changeTaskPriorityCommand_validCommand_returnsNormalBehavior() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Setup"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"HIGH\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String outputPriority \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getPriority();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"High priority\", outputPriority);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"id\",\"1\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\",\"MEDIUM\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        System.out.println(tasks.get(\"priority\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        System.out.println(tasks.get(\"id\"));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.changeTaskPriorityCommand(tasks, projectList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        outputPriority \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getPriority();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"Medium priority\", outputPriority);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\",\"LOW\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.changeTaskPriorityCommand(tasks, projectList);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        outputPriority \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getPriority();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"Low priority\", outputPriority);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void changeTaskPriorityCommand_invalidPriority_throwsException() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Setup"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"HIGH\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //Test"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        String outputPriority \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getPriority();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertEquals(\"High priority\", outputPriority);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"id\",\"1\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\",\"CRITICAL\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        System.out.println(tasks.get(\"priority\"));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        System.out.println(tasks.get(\"id\"));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.changeTaskPriorityCommand(tasks, projectList);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    void doneTaskCommand_validCommand_returnsNormalBehavior() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        //setup"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Project proj \u003d new Project(\"title\", \"description\", \"3\", \"3\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        Hashtable\u003cString, String\u003e tasks \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"title\", \"a\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"desc\", \"b\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        tasks.put(\"priority\", \"HIGH\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            test.addTaskCommand(tasks, projectList);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        ArrayList\u003cString\u003e numbers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        numbers.add(\"1\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        test.doneTaskCommand(numbers, projectList);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        boolean outputDone \u003d proj.getProjectBacklog()"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                .getTask(proj.getProjectBacklog().getNextId() - 1).getDone();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        assertTrue(outputDone);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "homingjun"
        },
        "content": "} */"
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "e0426051": 213,
      "chocomango": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/project/CreateProjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "class CreateProjectCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/project/SelectProjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "class SelectProjectCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/sprint/AddSprintTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "/*package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "class AddSprintTaskCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setUpProject() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Project proj \u003d new Project(null, null, \"90\", \"10\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj.getAllSprints().addSprint(proj, null, LocalDate.now(), LocalDate.now().plusDays(10));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj.getProjectBacklog().addTask(\"faketask\", null, \"HIGH\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    void addSprintTask_missingFields_returnErrorMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setUpStreams();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setUpProject();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String command \u003d \"sprint /addtask\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        parser.parser(command, projectList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String expectedOutput \u003d \"Exception found: please give a task number\" + System.lineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        restoreStreams();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}*/"
      }
    ],
    "authorContributionMap": {
      "homingjun": 2,
      "chocomango": 49
    }
  },
  {
    "path": "src/test/java/seedu/duke/model/project/ProjectMemberTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class ProjectMemberTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    Project project \u003d new Project(\"SCRUM\", \"Deliver a cli for agile developers\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            60, 30);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void add_addMember_noError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.getProjectMember().addMember(new Member(\"test user\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        assertEquals(1, project.getProjectMember().size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void checkPerson_personExists_noError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.getProjectMember().addMember(new Member(\"test user\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        assertTrue(project.getProjectMember().containMember(new Member(\"test user\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void checkPerson_personDoesNotExist_noError() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        Member m \u003d new Member(\"test user\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        Member m1 \u003d new Member(\"Not added\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.getProjectMember().addMember(m);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        assertFalse(project.getProjectMember().containMember(m1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 9,
      "chocomango": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/model/project/ProjectTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.model.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class ProjectTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void getProjectSprint_emptyArrayList_returnsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        Project project \u003d new Project(\"SCRUM\", \"Deliver a cli for agile developers\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//                60, 30);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        assertThrows(IndexOutOfBoundsException.class, () -\u003e project.getSprintList().getSprint(2));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void getProjectMember_emptyArrayList_returnsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        Project project \u003d new Project(\"SCRUM\", \"Deliver a cli for agile developers\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//                60, 30);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        assertThrows(IndexOutOfBoundsException.class, () -\u003e project.getSprintList().getSprint(2));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 10,
      "chocomango": 15
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//    void parser_invalidCommands_returnsInvalidMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//        String userInput \u003d \"projekt /create -title Duke -desc lmao -end 11102020 -sd 7\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//        String actualOutput \u003d p.parser(userInput, projectList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//        String expectedOutput \u003d \"Invalid command!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//        assertEquals(actualOutput, expectedOutput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 12,
      "gmit22": 9,
      "chocomango": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/project/ProjectBacklogTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "class ProjectBacklogTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keke101"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsoner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.project.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.task.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.ProjectMembers;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.member.Member;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.model.sprint.SprintManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keke101"
        },
        "content": "class StorageManagerTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private static final String TEST_FILENAME \u003d \"test-data.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private static final String TEST_FILEPATH_STR \u003d String.format(\"./data/%s\", TEST_FILENAME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private static final Path TEST_FILEPATH \u003d Paths.get(TEST_FILEPATH_STR);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void load() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        ArrayList\u003cProject\u003e projList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        StorageManager sm \u003d new StorageManager(TEST_FILENAME, projList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        // JSON file should be loaded successfully if data file is valid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            String expectedStr \u003d Files.readString(Paths.get(\"test-data/LOAD_EXPECTED_1.json\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            JsonArray expected \u003d Jsoner.deserialize(expectedStr, new JsonArray());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            initTestFile(expected);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            sm.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    void save() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            ArrayList\u003cProject\u003e projList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            StorageManager sm \u003d new StorageManager(TEST_FILENAME, projList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            projList.add(generateProject()); //2nd assertion"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            sm.save();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            String expectedStr \u003d Files.readString(Paths.get(\"test-data/SAVE_EXPECTED_1.json\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            JsonArray expected \u003d Jsoner.deserialize(expectedStr, new JsonArray());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            String fileData \u003d Files.readString(sm.getFilepath());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            assertEquals(expected.toJson(), fileData);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private Project generateProject() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        Project project \u003d new Project(\"Game\", \"Among Us\", 100, 10);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.setSprintList(generateSprintList(project));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.setBacklog(generateProjectBacklog(project));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.setMemberList(generateProjectMembers());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.setStartDate(LocalDate.parse(\"2020-10-10\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        project.setEndDate(LocalDate.parse(\"2021-01-10\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        return project;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private SprintManager generateSprintList(Project project) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        SprintManager sprintManager \u003d new SprintManager();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        sprintManager.addSprint(project, \"Goal\", LocalDate.parse(\"2020-10-10\"), LocalDate.parse(\"2020-10-19\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        sprintManager.addSprint(project, \"Goal1\", LocalDate.parse(\"2020-10-20\"), LocalDate.parse(\"2020-10-29\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        return sprintManager;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private TaskManager generateProjectBacklog(Project project) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        TaskManager backlog \u003d new TaskManager(project);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        backlog.addTask(\"Task1\", \"Task1 desc\", \"LOW\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        return backlog;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private ProjectMembers generateProjectMembers() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        ProjectMembers members \u003d new ProjectMembers();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        members.addMember(new Member(\"Lily\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        members.addMember(new Member(\"Bob\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        return members;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    private void initTestFile(Object data) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        FileWriter fw \u003d new FileWriter(TEST_FILEPATH_STR);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        Jsoner.serialize(data, fw);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//        fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 20,
      "chocomango": 73
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chocomango": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "IF EXIST .\\data\\data.json DEL /F .\\data\\data.json"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "FC /w ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "keke101": 2,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "if [ -f \"./data/data.json\" ] "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "  rm ./data/data.json"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "diff -w EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "gmit22": 1,
      "keke101": 5,
      "-": 22
    }
  }
]
