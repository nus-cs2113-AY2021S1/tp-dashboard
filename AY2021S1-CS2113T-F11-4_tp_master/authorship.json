[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "Changed by Zhen Wei"
      }
    ],
    "authorContributionMap": {
      "keke101": 2,
      "-": 64
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chan Wei Ling | [Github](https://github.com/chocomango) | [Portfolio](docs/team/weiling.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ho Ming Jun | [Github](https://github.com/homingjun) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhen Wei | [Github](https://github.com/keke101) | [Portfolio](docs/team/zhenwei.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gunit Mittal | [Github](https://github.com/gmit22) | [Portfolio](docs/team/gunit.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhao Haoxiang | [Github](https://github.com/e0426051) |[Portfolio](docs/team/haoxiang.md)"
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "keke101": 1,
      "e0426051": 2,
      "chocomango": 1,
      "-": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* [About Us](AboutUs.md)g"
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "-": 7
    }
  },
  {
    "path": "docs/team/gunit.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "# Gunit Mittal - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "gmit22": 6
    }
  },
  {
    "path": "docs/team/weiling.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "# Wei LIng - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "chocomango": 1,
      "-": 5
    }
  },
  {
    "path": "src/main/java/scrumptious/Priority.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package scrumptious;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    HIGH {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"high priority\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    MEDIUM {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"medium priority\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    LOW {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"low priority\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0426051": 21
    }
  },
  {
    "path": "src/main/java/scrumptious/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0426051"
        },
        "content": "package scrumptious;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0426051"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    protected Priority priority;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public Task(String title, String description, String level) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.priority \u003d Priority.valueOf(level);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void setPriority(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        priority \u003d Priority.valueOf(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public String getPriority() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        return priority.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    //Delete task handled outside using ArrayList remove() function"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    //iD handled outside. (task number)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    //valueOf for enum explained here:https://www.baeldung.com/java-string-to-enum"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0426051": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/CommandExtract.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": " * Constant variables to process command type inputted by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class CommandExtract {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String ADD \u003d \"/add\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String DELETE \u003d \"/del\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String TITLE \u003d \"-title\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String DESCRIPTION \u003d \"-desc\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String DURATION \u003d \"-duration\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String SD \u003d \"-sd\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String DISPLAY \u003d \"/disp\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String PRIORITY \u003d \"-priority\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static final String VIEW \u003d \"/view\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            new Parser().parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 5,
      "gmit22": 1,
      "-": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/Member.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Member {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String userId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ArrayList\u003cTask\u003e allocatedTask \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Member(String userId) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getUserId() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return userId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        /* Check if o is an instance of Member or not"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "          \"null instanceof [type]\" also returns false */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (!(o instanceof Member)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Member v \u003d (Member) o;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        // Compare the userId of members and return accordingly"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return userId.equals(v.userId);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        allocatedTask.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/Project.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Project {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    static ProjectBacklog backlog;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static ArrayList\u003cMember\u003e member;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    int projectDuration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    int sprintLength;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    LocalDate startDate \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    LocalDate endDate \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Project(String title, String description, int projectDuration, int sprintLength) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectDuration \u003d projectDuration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.sprintLength \u003d sprintLength;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        backlog \u003d new ProjectBacklog();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        member \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return \"Project title: \" + title + \"\\nProject description \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getProjectDuration() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return projectDuration;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getSprintLength() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return sprintLength;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void addMember(List\u003cString\u003e userId) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Member m;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String s : userId) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (member.contains(new Member(s))) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"The user associated with \" + s + \"is already added to the project\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                m \u003d new Member(s);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                member.add(m);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"The user associated with \" + s + \"has been added\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //add comparator for removing object"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void removeMember(List\u003cString\u003e userId) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String s : userId) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (member.contains(new Member(s))) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                member.remove(new Member(s));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"The user associated with \" + s + \"has been removed from the project\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"This member is not associated with this project: \" + new Member(s).userId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void displayProjectBacklog() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (backlog.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"No tasks currently added to project backlog.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"Current tasks in your project backlog\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (int i \u003d 0; i \u003c backlog.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \". \" + backlog.getTask(i).title);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    // Call this function every time a new sprint object is instantiated."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    // sets the start date the first time."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setStartDate() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (startDate !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            startDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            endDate \u003d startDate.plusDays(projectDuration);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 91
    }
  },
  {
    "path": "src/main/java/seedu/duke/ProjectBacklog.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class ProjectBacklog {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ArrayList\u003cTask\u003e backlogTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    int size;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ProjectBacklog() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        backlogTasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        backlogTasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return size;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return backlogTasks.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void viewTask(String id, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (backlogId \u003c size) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d backlogTasks.get(backlogId);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                ui.displayTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                ui.displayInvalidId();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            ui.printError(\"Task id is not an integer.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void deleteTask(List\u003cString\u003e taskId, Ui ui) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String id : taskId) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                if (backlogId \u003c size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printTaskRemoved(backlogTasks.get(backlogId));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    backlogTasks.remove(backlogId);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.displayInvalidId();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                ui.printError(\"Task id is not an integer.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 62
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String title;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String priority;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Task(String title, String description, String priority) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return title + \" \" + priority + \" \" + isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CommandSummary.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class CommandSummary {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Main Commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String PROJECT \u003d \"project\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String MEMBER \u003d \"member\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TASK \u003d \"task\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SPRINT \u003d \"sprint\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Action Commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CREATE \u003d \"create\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ADD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DELETE \u003d \"del\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String PRIORITY \u003d \"priority\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ASSIGN \u003d \"assign\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Parameters"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DESCRIPTION \u003d \"desc\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DEADLINE \u003d \"end\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SPRINT_INTERVAL \u003d \"si\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TASK_ID \u003d \"id\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Bye"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/MemberCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class MemberCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void addMemberCommand(ArrayList\u003cString\u003e names) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String name \u003d  \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String n : names) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            name +\u003d n + \" \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for adding members to the project here."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void deleteMemberCommand(ArrayList\u003cString\u003e names) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String name \u003d  \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String n : names) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            name +\u003d n + \" \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(name);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for deleting members from the project here."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ProjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class ProjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void createProjectCommand(String title, String desc, String end, String sd,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                                     Hashtable\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Example of how to use the hashtable and how to throw the exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (parameters.get(title) !\u003d null) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(parameters.get(title));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no title\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (parameters.get(desc) !\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(parameters.get(desc));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no description\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (parameters.get(end) !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(parameters.get(end));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (parameters.get(sd) !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(parameters.get(sd));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no sprint interval\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*Insert code for putting the title into the project class here."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*Insert code for putting the description into the project class here."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*Insert code for putting the deadline into the project class here."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*Insert code for putting the sprint interval into the project class here."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/SprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class SprintCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void createSprintCommand(ArrayList\u003cString\u003e goals) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String goal \u003d  \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String g : goals) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            goal +\u003d g + \" \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(goal);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for creating goals for the sprint here."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void addSprintTaskCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String task \u003d  \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String t : tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            task +\u003d t + \" \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Tasks added: \" + task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for adding tasks to the sprint here."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void deleteSprintTaskCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String task \u003d  \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String t : tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            task +\u003d t + \" \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Tasks deleted: \" + task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for deleting tasks from the sprint here."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void viewSprintCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String goal \u003d  \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String g : tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            goal +\u003d g + System.lineSeparator();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Goals: \" + goal);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for viewing goals here."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void assignSprintTaskCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String task \u003d  \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String t : tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            task +\u003d t + \" \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for assigning tasks from the sprint here."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 90
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class TaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void addTaskCommand(String title, String desc, String priority,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                               Hashtable\u003cString, String\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Example of how to use the hashtable and how to throw the exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.get(title) !\u003d null) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(tasks.get(title));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no title\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.get(desc) !\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(tasks.get(desc));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no description\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.get(priority) !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(tasks.get(priority));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no priority\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for adding tasks here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void deleteTaskCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String task \u003d  \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String t : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            task +\u003d t + \" \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Tasks deleted: \" + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for deleting tasks here."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void viewTaskCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String task \u003d  \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String t : tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            task +\u003d t + System.lineSeparator();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Tasks in list: \" + task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for viewing tasks here."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void changeTaskPriorityCommand(String taskId, String priority,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                                          Hashtable\u003cString, String\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Example of how to use the hashtable and how to throw the exception."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.get(taskId) !\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(tasks.get(taskId));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no title\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.get(priority) !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(tasks.get(priority));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no priority\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for changing task priority here."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void doneTaskCommand(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "           For testing purposes only, to be deleted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String task \u003d  \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (String t : tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            task +\u003d t + \" \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Tasks done: \" + task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        /* Insert actual code for completing tasks here."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "         */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 110
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void printExceptionMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Exception found: \" + this.getMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.MemberCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.ProjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.SprintCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.command.TaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ADD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.BYE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.CREATE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DELETE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.PROJECT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.MEMBER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT_INTERVAL;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.VIEW;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DONE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.PRIORITY;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ASSIGN;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DEADLINE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK_ID;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final Pattern CMD_PATTERN \u003d Pattern.compile(\"(\\\\w+)\\\\s\\\\/(\\\\w+)\\\\s(.+)\"); //Groups of 3: (command) (action) (options)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final Pattern ARGS_PATTERN \u003d Pattern.compile(\"-(\\\\w+)\\\\s([^-]+)\"); //Groups of 2: (option name) (option value)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final Scanner SCAN \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final Hashtable\u003cString, String\u003e PARAMETERS \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final ArrayList\u003cString\u003e PARAMS \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void parser() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String userInput \u003d SCAN.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.equals(BYE)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(BYE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Matcher cmdMatcher \u003d CMD_PATTERN.matcher(userInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (cmdMatcher.matches()) { //Need to check if it matches, groupCount will always show 3"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String command \u003d cmdMatcher.group(1); //capture first group (command)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String action \u003d cmdMatcher.group(2); //capture 2nd group (action)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String rawArgs \u003d cmdMatcher.group(3); //capture 3rd group (options)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Matcher parameterMatcher \u003d ARGS_PATTERN.matcher(rawArgs); //match the option"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!rawArgs.contains(\"-\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                String[] arguments \u003d rawArgs.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                PARAMS.addAll(Arrays.asList(arguments));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                while (parameterMatcher.find()) { //go through each occurrence of options"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    PARAMETERS.put(parameterMatcher.group(1), parameterMatcher.group(2)); //put the options into the hashtable (similar to dictionary)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case PROJECT:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case CREATE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        new ProjectCommand().createProjectCommand(TITLE, DESCRIPTION, DEADLINE, SPRINT_INTERVAL, PARAMETERS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case MEMBER:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new MemberCommand().addMemberCommand(PARAMS);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new MemberCommand().deleteMemberCommand(PARAMS);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case TASK:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        new TaskCommand().addTaskCommand(TITLE, DESCRIPTION, PRIORITY, PARAMETERS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new TaskCommand().deleteTaskCommand(PARAMS);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case VIEW:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new TaskCommand().viewTaskCommand(PARAMS);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case PRIORITY:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        new TaskCommand().changeTaskPriorityCommand(TASK_ID, PRIORITY, PARAMETERS);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new TaskCommand().doneTaskCommand(PARAMS);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case SPRINT:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case CREATE:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new SprintCommand().createSprintCommand(PARAMS);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new SprintCommand().addSprintTaskCommand(PARAMS);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new SprintCommand().deleteSprintTaskCommand(PARAMS);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case VIEW:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new SprintCommand().viewSprintCommand(PARAMS);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ASSIGN:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    new SprintCommand().assignSprintTaskCommand(PARAMS);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                System.out.println(\"Invalid command!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            System.out.println(\"Invalid command!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 165
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final Scanner IN \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private void printLogo() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return IN.nextLine().strip();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private void printGreeting() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"Please enter the project details for instantiation\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printError(String s) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void welcomeUser() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void displayMembers() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (Project.member.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"Currently no members added to the project.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"Here are the members added to you project:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (int i \u003d 0; i \u003c Project.member.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \". \" + Project.member.get(i).getUserId());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void displayTask(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void invalidCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"Unknown format or command.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void displayInvalidId() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"The following task id doesn\u0027t exist in backlog.\\n Please enter a valid id.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printTaskRemoved(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"The corresponding task \" + task.toString() + \" has been removed.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 63
    }
  }
]
