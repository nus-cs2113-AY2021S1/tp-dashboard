[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "Changed by Zhen Wei"
      }
    ],
    "authorContributionMap": {
      "keke101": 2,
      "-": 64
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "    compile \u0027com.github.cliftonlabs:json-simple:3.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chan Wei Ling | [Github](https://github.com/chocomango) | [Portfolio](docs/team/weiling.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ho Ming Jun | [Github](https://github.com/homingjun) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhen Wei | [Github](https://github.com/keke101) | [Portfolio](docs/team/zhenwei.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0426051"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gunit Mittal | [Github](https://github.com/gmit22) | [Portfolio](docs/team/gunit.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhao Haoxiang | [Github](https://github.com/e0426051) |[Portfolio](docs/team/haoxiang.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "keke101": 1,
      "e0426051": 2,
      "chocomango": 2,
      "-": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "* [About Us](AboutUs.md)g"
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "-": 7
    }
  },
  {
    "path": "docs/team/gunit.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "# Gunit Mittal - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "gmit22": 6
    }
  },
  {
    "path": "docs/team/weiling.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "# Wei LIng - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "chocomango": 1,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        runInstructions();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Welcome the user and initialise the local storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Get the user input and runs the instructions."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Exits when ExitCommand returns \"true\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static void runInstructions() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            input \u003d Ui.getUserCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String parserOutput \u003d parser.parser(input, projectList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (parserOutput !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                System.out.println(parserOutput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 8,
      "homingjun": 4,
      "chocomango": 28,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected Hashtable\u003cString, String\u003e parametersInHT \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected ArrayList\u003cString\u003e parametersInAL \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new abstract command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Command(Hashtable\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setParametersInHT(parameters);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Command(ArrayList\u003cString\u003e parameters) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setParametersInAL(parameters);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Abstract method that execute the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Getters and Setters."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Hashtable\u003cString, String\u003e getParametersInHT() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return parametersInHT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setParametersInHT(Hashtable\u003cString, String\u003e parametersInHT) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.parametersInHT \u003d parametersInHT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cString\u003e getParametersInAL() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return parametersInAL;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setParametersInAL(ArrayList\u003cString\u003e parametersInAL) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.parametersInAL \u003d parametersInAL;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 1,
      "chocomango": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CommandSummary.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class CommandSummary {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Main Commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String PROJECT \u003d \"project\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String MEMBER \u003d \"member\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public static final String TASK \u003d \"task\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SPRINT \u003d \"sprint\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Action Commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CREATE \u003d \"create\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ADD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String ADDTASK \u003d \"addtask\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DELETE \u003d \"del\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String DELETETASK \u003d \"deltask\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String PRIORITY \u003d \"priority\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ASSIGN \u003d \"assign\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Parameters"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DESCRIPTION \u003d \"desc\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String DEADLINE \u003d \"end\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String SPRINT_DURATION \u003d \"sd\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TASK_ID \u003d \"id\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    Bye"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 34,
      "gmit22": 1,
      "e0426051": 1,
      "chocomango": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/member/MemberCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.member;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.sprint.Member;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class MemberCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addMemberCommand(ArrayList\u003cString\u003e userId, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Member m;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Project proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (String s : userId) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                if (proj.getProjectMember().containMember(new Member(s))) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showToUserLn(s + \" is already associated to the project.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    m \u003d new Member(s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    proj.getProjectMember().addMember(m);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showToUserLn(s + \" has been added to the project.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"Required index of project not found. Please create before proceeding.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void deleteMemberCommand(ArrayList\u003cString\u003e userId, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Project proj;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (String s : userId) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                if (proj.getProjectMember().containMember(new Member(s))) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    proj.getProjectMember().removeMember(new Member(s));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showToUserLn(s + \" has been removed from the project.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showToUserLn(s + \" is not associated with the project.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"Required index of project not found. Please create before proceeding.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 8,
      "gmit22": 34,
      "chocomango": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/project/ProjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.DEADLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT_DURATION;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class ProjectCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void createProjectCommand(Hashtable\u003cString, String\u003e parameters, ArrayList\u003cProject\u003e projectList)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String sd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (parameters.get(TITLE) !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            title \u003d parameters.get(TITLE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no title\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (parameters.get(DESCRIPTION) !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            description \u003d parameters.get(DESCRIPTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no description\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (parameters.get(DEADLINE) !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            deadline \u003d parameters.get(DEADLINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no deadline\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (parameters.get(SPRINT_DURATION) !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            sd \u003d parameters.get(SPRINT_DURATION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no sprint interval\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Project proj \u003d new Project(title, description, deadline, sd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Ui.showToUserLn(\"Project successfully created.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        projectList.add(proj);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void viewProjectCommand(ArrayList\u003cProject\u003e projectList) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(projectList.get(0).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 21,
      "gmit22": 26,
      "chocomango": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/AddSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Sprint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.SprintList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class AddSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintList allSprint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cProject\u003e projectList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public AddSprintTaskCommand(ArrayList\u003cString\u003e parameters, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d projectList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprint \u003d proj.getAllSprints();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.updateCurrentSprint()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int currentSprintNo \u003d allSprint.getCurrentSprintIndex();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Sprint currentSprint \u003d allSprint.getSprint(currentSprintNo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (String entry: this.parametersInAL) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                int taskId \u003d Integer.parseInt(entry);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                currentSprint.addSprintTask(taskId);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                proj.getProjectBacklog().getTask(taskId).allocateToSprint(currentSprint.getId());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUser(proj.getProjectBacklog().getTask(taskId).getTitle() + \"added to sprint.\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            checkReason();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void checkReason() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"You have yet to create your sprint.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint latestSprint \u003d allSprint.getSprint(allSprint.size() - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), proj.getEndDate()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project already ended on \" + proj.getEndDate());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (DateTimeParser.diff(LocalDate.now(), proj.getStartDate()) \u003e 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project will start on \" + proj.getStartDate());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(latestSprint.getEndDate(), LocalDate.now()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Latest sprint ended on \" + latestSprint.getEndDate());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Please create new sprint.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint current \u003d allSprint.getSprint(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), current.getStartDate()) \u003c 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"First sprint will start on \" + current.getStartDate());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/AllocateSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Member;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Sprint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.SprintList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class AllocateSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintList allSprint;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cProject\u003e projectList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public AllocateSprintTaskCommand(Hashtable\u003cString, String\u003e parameters, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d projectList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprint \u003d proj.getAllSprints();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.updateCurrentSprint()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (validateParams()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                int taskId \u003d Integer.parseInt(this.parametersInHT.get(\"task\").trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                String[] userIds \u003d this.parametersInHT.get(\"user\").split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                for (String id: userIds) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    Member mem \u003d proj.getProjectMember().getMember(id.trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    if (mem \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        Ui.showError(\"User not found.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        mem.allocateTask(taskId);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        proj.getProjectBacklog().getTask(taskId).allocateToMember(mem.getUserId());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUserLn(proj.getProjectBacklog().getTask(taskId).getTitle()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        + \" assigned to \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        + Arrays.toString(userIds));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            checkReason();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean validateParams() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return !this.parametersInHT.get(\"task\").isEmpty() \u0026\u0026 !this.parametersInHT.get(\"user\").isEmpty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void checkReason() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"You have yet to create your sprint.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint latestSprint \u003d allSprint.getSprint(allSprint.size() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), proj.getEndDate()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project already ended on \" + proj.getEndDate());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (DateTimeParser.diff(LocalDate.now(), proj.getStartDate()) \u003e 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project will start on \" + proj.getStartDate());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(latestSprint.getEndDate(), LocalDate.now()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Latest sprint ended on \" + latestSprint.getEndDate());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Please create new sprint.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint current \u003d allSprint.getSprint(0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), current.getStartDate()) \u003c 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"First sprint will start on \" + current.getStartDate());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 81
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/CreateSprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Sprint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.SprintList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class CreateSprintCommand extends SprintCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintList allSprint;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cProject\u003e projectList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new DELETE command with arguments."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public CreateSprintCommand(Hashtable\u003cString, String\u003e parameters, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d projectList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Abstract method that execute the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (validateParams()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            allSprint \u003d proj.getAllSprints();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (allSprint.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                createFirstSprint(proj);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                createSubsequentSprint(proj);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void createFirstSprint(Project proj) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintStart \u003d LocalDate.now();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!this.parametersInHT.get(\"start\").isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintStart \u003d DateTimeParser.parseDate(this.parametersInHT.get(\"start\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintEnd \u003d sprintStart.plusDays(proj.getSprintLength() - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String sprintGoal \u003d this.parametersInHT.get(\"goal\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprint.addSprint(proj, sprintGoal, sprintStart, sprintEnd);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate projEndDate \u003d sprintStart.plusDays(proj.getProjectDuration() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj.setStartDate(sprintStart);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj.setEndDate(projEndDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(\"Project will start along with the newly created sprint\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        System.out.println(\"Project period: \" + sprintStart + \" to \" + projEndDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        printCreatedSprint();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void createSubsequentSprint(Project proj) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String sprintGoal \u003d this.parametersInHT.get(\"goal\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint prevSprint \u003d allSprint.getSprint(allSprint.size() - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintStart \u003d prevSprint.getEndDate().plusDays(1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(proj.getEndDate(),sprintStart) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"\\nAll sprints are already created.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        LocalDate sprintEnd \u003d sprintStart.plusDays(proj.getSprintLength() - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprint.addSprint(proj, sprintGoal, sprintStart, sprintEnd);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!this.parametersInHT.containsKey(\"start\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(Messages.MESSAGE_CREATE_SUB_SPRINT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        printCreatedSprint();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private boolean validateParams() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return !this.parametersInHT.get(\"goal\").isEmpty();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void printCreatedSprint() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint createdSprint \u003d allSprint.getSprint(allSprint.size() - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Ui.showToUserLn(createdSprint.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 88
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/DeleteSprintTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Sprint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.SprintList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class DeleteSprintTaskCommand extends SprintCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintList allSprint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cProject\u003e projectList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public DeleteSprintTaskCommand(ArrayList\u003cString\u003e parameters, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d projectList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprint \u003d proj.getAllSprints();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.updateCurrentSprint()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int currentSprintNo \u003d allSprint.getCurrentSprintIndex();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Sprint currentSprint \u003d allSprint.getSprint(currentSprintNo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (String entry: this.parametersInAL) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                int taskId \u003d Integer.parseInt(entry);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUser(proj.getProjectBacklog().getTask(taskId).getTitle() + \"removed from sprint.\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                currentSprint.removeSprintTask(taskId);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            checkReason();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void checkReason() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"You have yet to create your sprint.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint latestSprint \u003d allSprint.getSprint(allSprint.size() - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), proj.getEndDate()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project already ended on \" + proj.getEndDate());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (DateTimeParser.diff(LocalDate.now(), proj.getStartDate()) \u003e 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project will start on \" + proj.getStartDate());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(latestSprint.getEndDate(), LocalDate.now()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Latest sprint ended on \" + latestSprint.getEndDate());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Please create new sprint.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint current \u003d allSprint.getSprint(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), current.getStartDate()) \u003c 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"First sprint will start on \" + current.getStartDate());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/SprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public abstract class SprintCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Creates a new Sprint command with arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SprintCommand(Hashtable\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SprintCommand(ArrayList\u003cString\u003e parameters) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 1,
      "chocomango": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/sprint/ViewSprintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Sprint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.SprintList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class ViewSprintCommand extends SprintCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private SprintList allSprint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private final ArrayList\u003cProject\u003e projectList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ViewSprintCommand(Hashtable\u003cString, String\u003e parameters, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        super(parameters);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projectList \u003d projectList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Abstract method that execute the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allSprint \u003d proj.getAllSprints();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.updateCurrentSprint()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int currentSprintNo \u003d allSprint.getCurrentSprintIndex();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Sprint currentSprint \u003d allSprint.getSprint(currentSprintNo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUser(currentSprint.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            Ui.showToUserLn(\"------ Current Sprint ------\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            Ui.showToUserLn(\"Sprint number: \" + (currentSprintNo + 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            Ui.showToUserLn(\"Sprint Goal: \" + currentSprint.getGoal());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            Ui.showToUserLn(\"Sprint period: \" + currentSprint.getStartDate() + \" to \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            + currentSprint.getEndDate());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            Ui.showToUserLn(\"Days left: \" + currentSprint.getEndDate().compareTo(LocalDate.now()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //            printSprintTask(currentSprint);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            checkReason();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //    private void printSprintTask(Sprint sprint) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        Hashtable\u003cInteger, ArrayList\u003cString\u003e\u003e sprintTasks \u003d sprint.getAllSprintTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        if (sprintTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            Ui.showToUserLn(\"No task allocated to current sprint.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        ArrayList\u003cString\u003e users;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        Set\u003cInteger\u003e keys \u003d sprintTasks.keySet();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        Ui.showToUserLn(\"Sprint Tasks: \" + keys.size());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        for (int key: keys) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            Ui.showToUserLn(proj.getProjectBacklog().getTask(key).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            users \u003d sprintTasks.get(key);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            if (users.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //                Ui.showToUserLn(\"No allocation.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //                Ui.showToUserLn(\"Allocated to:\" + Arrays.toString(users.toArray()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private void checkReason() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (allSprint.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"You have yet to create your sprint.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint latestSprint \u003d allSprint.getSprint(allSprint.size() - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), proj.getEndDate()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project already ended on \" + proj.getEndDate());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else if (DateTimeParser.diff(LocalDate.now(), proj.getStartDate()) \u003e 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Project will start on \" + proj.getStartDate());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(latestSprint.getEndDate(), LocalDate.now()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Latest sprint ended on \" + latestSprint.getEndDate());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Please create new sprint.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Sprint current \u003d allSprint.getSprint(0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (DateTimeParser.diff(LocalDate.now(), current.getStartDate()) \u003c 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"First sprint will start on \" + current.getStartDate());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 94
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/task/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0426051"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.PRIORITY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.TITLE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.DESCRIPTION;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK_ID;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class TaskCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addTaskCommand(Hashtable\u003cString, String\u003e tasks, ArrayList\u003cProject\u003e projectList)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String priority;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (tasks.get(TITLE) !\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            title \u003d tasks.get(TITLE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Please enter a title!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (tasks.get(DESCRIPTION) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            description \u003d tasks.get(DESCRIPTION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Please enter a description!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (tasks.get(PRIORITY) !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            priority \u003d tasks.get(PRIORITY);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Please enter a priority!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Project proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            proj.getProjectBacklog().addTask(title, description, priority);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Task addedTask \u003d  proj.getProjectBacklog().getTask(proj.getProjectBacklog().getNextId() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(addedTask.getTitle() + \" has been added.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void deleteTaskCommand(ArrayList\u003cString\u003e taskId, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Project proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (String id : taskId) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    int backlogId \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    if (proj.getProjectBacklog().checkTaskExist(backlogId)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        Task task \u003d proj.getProjectBacklog().getTask(backlogId);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        Ui.showToUserLn(\"The corresponding task \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                + task.getTitle()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                + \"has been removed from project.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        proj.getProjectBacklog().removeTask(backlogId);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        Ui.showError(Messages.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void viewTaskCommand(ArrayList\u003cString\u003e taskId, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Project proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showToUserLn(\"The details of the tasks are as follows: \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (String id : taskId) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    if (backlogId \u003c proj.getProjectBacklog().backlogTasks.size()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        task \u003d proj.getProjectBacklog().getTask(backlogId);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        Ui.showToUserLn(task.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        //Ui.showToUserLn(\"\\t Title: \" + task.getTitle());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        Ui.showError(Messages.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void changeTaskPriorityCommand(Hashtable\u003cString, String\u003e tasks, ArrayList\u003cProject\u003e projectList)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String priority;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (tasks.get(TASK_ID) !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            id \u003d Integer.parseInt(tasks.get(TASK_ID)) - 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Task ID entered is invalid!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (tasks.get(PRIORITY) !\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            priority \u003d tasks.get(PRIORITY).trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            throw new DukeException(\"Please enter a priority!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            Project proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d proj.getProjectBacklog().getTask(id);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task.setPriority(priority);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                Ui.showToUserLn(\"The task \" + task.getTitle() + \"has its priority changed to:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                Ui.showToUserLn(\"\\t\" + task.getPriority());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                throw new DukeException(\"Task ID entered is out of bounds!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                throw new DukeException(\"Priority entered is invalid!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void doneTaskCommand(ArrayList\u003cString\u003e taskId, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Project proj \u003d projectList.get(0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (String id : taskId) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    int backlogId \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    if (backlogId \u003c\u003d proj.getProjectBacklog().backlogTasks.size()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        task \u003d proj.getProjectBacklog().getTask(backlogId);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        task.setAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        Ui.showToUserLn(task.getTitle() + \"has been marked as done.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                        Ui.showError(Messages.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showError(Messages.MESSAGE_INVALID_IDTYPE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Ui.showError(\"There are no projects! Please create a project first.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "homingjun": 28,
      "gmit22": 78,
      "e0426051": 37,
      "chocomango": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void printExceptionMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.println(\"Exception found: \" + this.getMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/DateTimeParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.Period;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final String DATETIME_FORMAT \u003d \"yyyy-MM-dd HHmm\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"yyyyMMdd\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Parses String into LocalDateTime object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @param dateTime String in the DATETIME_FORMAT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @return LocalDateTime object based on the String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.BASIC_ISO_DATE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return LocalDateTime.parse(dateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //throw new Exceptions(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static LocalDate parseDate(String date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            return LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            //throw new Exceptions(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static long diff(LocalDate from, LocalDate to) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        Period period \u003d Period.between(from, to);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return ChronoUnit.DAYS.between(from, to);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //System.out.println(period.getDays());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //return period.getDays();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chocomango": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.member.MemberCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.project.ProjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.AllocateSprintTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.ViewSprintCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.AddSprintTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.CreateSprintCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.sprint.DeleteSprintTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.command.task.TaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ADD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static seedu.duke.command.CommandSummary.ADDTASK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.BYE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.CREATE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DELETE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import static seedu.duke.command.CommandSummary.DELETETASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.PROJECT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.TASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.MEMBER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.SPRINT;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.VIEW;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.DONE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.PRIORITY;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static seedu.duke.command.CommandSummary.ASSIGN;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //Groups of 3: (command) (action) (options)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final Pattern CMD_PATTERN \u003d Pattern.compile(\"(\\\\w+)\\\\s\\\\/(\\\\w+)\\\\s*(.*)\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //Groups of 2: (option name) (option value)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final Pattern ARGS_PATTERN \u003d Pattern.compile(\"-(\\\\w+)\\\\s([^-]+)\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private final Hashtable\u003cString, String\u003e parameters \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String parser(String userInput, ArrayList\u003cProject\u003e projectList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (userInput.equals(BYE)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(BYE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Matcher cmdMatcher \u003d CMD_PATTERN.matcher(userInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (cmdMatcher.matches()) { //Need to check if it matches, groupCount will always show 3"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String command \u003d cmdMatcher.group(1); //capture first group (command)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String action \u003d cmdMatcher.group(2); //capture 2nd group (action)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            String rawArgs \u003d cmdMatcher.group(3); //capture 3rd group (options)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Matcher parameterMatcher \u003d ARGS_PATTERN.matcher(rawArgs); //match the option"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!rawArgs.contains(\"-\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                params.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                String[] arguments \u003d rawArgs.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                params.addAll(Arrays.asList(arguments));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                parameters.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                while (parameterMatcher.find()) { //go through each occurrence of options"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    //put the options into the hashtable (similar to dictionary)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    parameters.put(parameterMatcher.group(1), parameterMatcher.group(2));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case PROJECT:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case CREATE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        new ProjectCommand().createProjectCommand(parameters, projectList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                case VIEW:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        new ProjectCommand().viewProjectCommand(projectList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case MEMBER:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new MemberCommand().addMemberCommand(params, projectList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new MemberCommand().deleteMemberCommand(params, projectList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        throw new DukeException(\"Invalid action\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case TASK:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        new TaskCommand().addTaskCommand(parameters, projectList);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new TaskCommand().deleteTaskCommand(params, projectList);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case VIEW:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new TaskCommand().viewTaskCommand(params, projectList);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case PRIORITY:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        new TaskCommand().changeTaskPriorityCommand(parameters, projectList);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    new TaskCommand().doneTaskCommand(params, projectList);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                        throw new DukeException(\"Invalid action!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case SPRINT:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (action.toLowerCase()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case CREATE:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new CreateSprintCommand(parameters, projectList).execute();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                case ADDTASK:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new AddSprintTaskCommand(params, projectList).execute();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                case DELETETASK:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new DeleteSprintTaskCommand(params, projectList).execute();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case VIEW:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new ViewSprintCommand(parameters, projectList).execute();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case ASSIGN:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    new AllocateSprintTaskCommand(parameters, projectList).execute();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0426051"
        },
        "content": "                        throw new DukeException(\"Invalid action!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        e.printExceptionMessage();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                return \"Invalid command!\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return \"Invalid command!\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 122,
      "gmit22": 16,
      "e0426051": 2,
      "chocomango": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/project/Project.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.sprint.Sprint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.sprint.SprintList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Project implements Jsonable {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected SprintList allSprints;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected ProjectBacklog backlog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected ProjectMembers members;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected int projectDuration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected int sprintLength;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected LocalDate startDate \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected LocalDate endDate \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Project(String title, String description, String projectDuration, String sprintLength) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.projectDuration \u003d Integer.parseInt(projectDuration.trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.sprintLength \u003d Integer.parseInt(sprintLength);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlog \u003d new ProjectBacklog(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        members \u003d new ProjectMembers();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        allSprints \u003d new SprintList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder projectInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PROJECT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(String.format(\"[Title: %s]\\n\", this.title));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(String.format(\"[Description: %s]\\n\", this.description));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!members.getAllMembers().isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(members.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[No members added]\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (this.startDate !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(String.format(\"[Period: %s - %s] \\n\", this.startDate, this.endDate));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[Project will start along with the first sprint]\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (!this.backlog.backlogTasks.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(this.backlog.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[Project backlog is empty]\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (this.allSprints.size() !\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            int currentSprintIndex \u003d this.allSprints.getCurrentSprintIndex();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Sprint currentSprint \u003d this.allSprints.getSprint(currentSprintIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(currentSprint.toSimplifiedString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            projectInString.append(\"[There are no Sprints]\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        projectInString.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return projectInString.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public SprintList getAllSprints() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return allSprints;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ProjectMembers getProjectMember() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return members;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getProjectDuration() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return projectDuration;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getSprintLength() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return sprintLength;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    // Call this function every time a new sprint object is instantiated."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    // sets the start date the first time."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setStartDate() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        setStartDate(LocalDate.now());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setStartDate(LocalDate startDate) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setEndDate(LocalDate endDate) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ProjectBacklog getProjectBacklog() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return backlog;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void displayProjectBacklog() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (backlog.getNextId() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"No tasks currently added to project backlog.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"Current tasks in your project backlog\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (int i \u003d 0; i \u003c backlog.getNextId(); i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \". \" + backlog.getTask(i).getTitle());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jObj \u003d new JsonObject();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"title\", this.title);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"description\", this.description);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"duration\", this.projectDuration);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"sprint_length\", this.sprintLength);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"start_date\", this.startDate \u003d\u003d null ? null : this.startDate.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"backlog\", backlog);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"members\", members);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.toJson(writer);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 89,
      "keke101": 34,
      "chocomango": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/project/ProjectBacklog.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class ProjectBacklog implements Jsonable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project proj;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ArrayList\u003cTask\u003e backlogTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    int nextId;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ProjectBacklog(Project proj) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.proj \u003d proj;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        backlogTasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        nextId \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addTask(String title, String description, String priority) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int newTaskId \u003d nextId++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlogTasks.add(new Task(newTaskId, title, description, priority));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int getNextId() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return nextId;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Task getTask(int id) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (task.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void removeTask(int taskId) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (task.getId() \u003d\u003d taskId) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                ArrayList\u003cInteger\u003e allocatedSprint \u003d task.getAllocatedSprints();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                for (Integer sprintId : allocatedSprint) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    proj.allSprints.getSprint(sprintId).removeSprintTask(taskId);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                backlogTasks.remove(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void viewTask(String id, Ui ui) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (backlogId \u003c nextId) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d backlogTasks.get(backlogId);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUserLn(task.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Ui.showToUserLn(\"The following task id doesn\u0027t exist in backlog.\\n Please enter a valid id.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Ui.showToUserLn(\"Task id is not an integer.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public boolean checkTaskExist(int id) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (task.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder backlogString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlogString.append(\"\\n----------------- BACKLOG -----------------\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Task task : backlogTasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            backlogString.append(task.toSimplifiedString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        backlogString.append(\"\\n------------------------------------------\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return backlogString.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jTasks \u003d new JsonArray(backlogTasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTasks.toJson(writer);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    public void viewTask(String id, Ui ui) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        Task task \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            if (backlogId \u003c size) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                task \u003d backlogTasks.get(backlogId);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                ui.displayTask(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                ui.displayInvalidId();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            ui.printError(\"Task id is not an integer.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    public void deleteTask(List\u003cString\u003e taskId, Ui ui) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        for (String id : taskId) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                int backlogId \u003d Integer.parseInt(id) - 1;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                if (backlogId \u003c size) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                    ui.printTaskRemoved(backlogTasks.get(backlogId));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                    backlogTasks.remove(backlogId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                    ui.displayInvalidId();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                ui.printError(\"Task id is not an integer.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 61,
      "keke101": 25,
      "chocomango": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/project/ProjectMembers.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import seedu.duke.sprint.Member;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class ProjectMembers implements Jsonable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ArrayList\u003cMember\u003e memberList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ProjectMembers() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        memberList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return memberList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cMember\u003e getAllMembers() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return this.memberList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Member getMember(String userid) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Member mem : memberList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (mem.getUserId().equals(userid)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return mem;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void addMember(Member m) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        memberList.add(m);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    public void addMember(List\u003cString\u003e userId) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        Member m;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        for (String s : userId) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            if (memberList.contains(new Member(s))) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                System.out.println(\"The user associated with \" + s + \" is already added to the project\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                m \u003d new Member(s);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                memberList.add(m);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //                System.out.println(\"The user associated with \" + s + \" has been added\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //add comparator for removing object"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void deleteMember(List\u003cString\u003e userId) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String s : userId) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (memberList.contains(new Member(s))) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                memberList.remove(new Member(s));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"The user associated with \" + s + \" has been removed from the project\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                System.out.println(\"This member is not associated with this project: \" + new Member(s).getUserId());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean containMember(Member member) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return memberList.contains(member);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void removeMember(Member member) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        memberList.remove(member);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder membersString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        membersString.append(\"[Members:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (Member mem : memberList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            membersString.append(String.format(\" %s\", mem.getUserId()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        membersString.append(\"]\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return membersString.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jMemberList \u003d new JsonArray(memberList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMemberList.toJson(writer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 57,
      "keke101": 23,
      "chocomango": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/sprint/Member.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Member implements Jsonable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String userId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cInteger\u003e allocatedTaskIds;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Member(String userId) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allocatedTaskIds \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getUserId() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return userId;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void allocateTask(int taskid) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        allocatedTaskIds.add(taskid);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        /* Check if o is an instance of Member or not"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "          \"null instanceof [type]\" also returns false */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (!(o instanceof Member)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Member v \u003d (Member) o;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        // Compare the userId of members and return accordingly"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return userId.equals(v.userId);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jMember \u003d new JsonObject();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMember.put(\"id\", userId);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jTasks \u003d new JsonArray();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (int taskId : allocatedTaskIds) { //Add only the ID that reference to the actual task in ProjectBacklog"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            jTasks.add(taskId);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jMember.toJson(writer);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 27,
      "keke101": 28,
      "chocomango": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/sprint/Sprint.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Sprint implements Jsonable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private String goal;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cInteger\u003e sprintTaskIds;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private Project projAllocatedTo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint(int sprintID, Project proj, String goal) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this(sprintID, proj, goal, null, null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint(int sprintID, Project proj, String goal, LocalDate startDate) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this(sprintID, proj, goal, startDate, null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint(int sprintID, Project proj, String goal, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setId(sprintID);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setGoal(goal);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setStartDate(startDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setEndDate(endDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintTaskIds \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.projAllocatedTo \u003d proj;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String getGoal() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return goal;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setGoal(String goal) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.goal \u003d goal;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setStartDate(LocalDate startDate) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setEndDate(LocalDate endDate) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addSprintTask(int taskId) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintTaskIds.add(taskId);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void removeSprintTask(int taskId) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintTaskIds.remove((Object) taskId);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getAllSprintTaskIds() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return this.sprintTaskIds;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toSimplifiedString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        boolean isCurrentSprint;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        isCurrentSprint \u003d ((this.id - 1) \u003d\u003d this.projAllocatedTo.getAllSprints().getCurrentSprintIndex());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder sprintInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(\"\\n----------------- SPRINT -----------------\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[ID: %d]\\n\", this.id));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Goal: %s]\\n\", this.goal));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Period: %s - %s] \\n\", this.startDate, this.endDate));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (isCurrentSprint) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(String.format(\"[Remaining: %s days]\\n\", this.endDate.compareTo(LocalDate.now())));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(\"\\n------------------------------------------\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintInString.toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        boolean isCurrentSprint;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        isCurrentSprint \u003d ((this.id - 1) \u003d\u003d this.projAllocatedTo.getAllSprints().getCurrentSprintIndex());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder sprintInString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(\"\\n----------------- SPRINT -----------------\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[ID: %d]\\n\", this.id));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Goal: %s]\\n\", this.goal));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(String.format(\"[Period: %s - %s] \\n\", this.startDate, this.endDate));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (isCurrentSprint) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(String.format(\"[Remaining: %s days]\\n\", this.endDate.compareTo(LocalDate.now())));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        if (sprintTaskIds.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            sprintInString.append(\"[No allocated tasks]\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            for (int taskIds : sprintTaskIds) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                Task task \u003d projAllocatedTo.getProjectBacklog().getTask(taskIds);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                sprintInString.append(task.toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                ArrayList\u003cString\u003e allocatedMembers \u003d task.getAllocatedMembers();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                if (!allocatedMembers.isEmpty()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    sprintInString.append(\"\\tAssigned to: \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    for (String member : allocatedMembers) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                        sprintInString.append(String.format(\"%s \", member));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    sprintInString.append(\"\\tTask have yet to be assigned to anyone\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintInString.append(\"\\n------------------------------------------\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintInString.toString();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jObj \u003d new JsonObject();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"goal\", goal);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"startDate\", startDate \u003d\u003d null ? null : startDate.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"endDate\", endDate \u003d\u003d null ? null : endDate.toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jsonSprintTasks \u003d new JsonObject();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //        for (Integer key : sprintTasks.keySet()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //            JsonArray jsonTask \u003d new JsonArray(sprintTasks.get(key));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //            jsonSprintTasks.put(key.toString(), jsonTask);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.put(\"sprintTasks\", jsonSprintTasks);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jObj.toJson(writer);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 1,
      "keke101": 30,
      "chocomango": 134
    }
  },
  {
    "path": "src/main/java/seedu/duke/sprint/SprintList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.sprint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class SprintList implements Jsonable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private ArrayList\u003cSprint\u003e sprintList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private int currentSprintIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public SprintList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        setCurrentSprintIndex(-1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Sprint getSprint(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintList.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void addSprint(Project proj, String goal, LocalDate start, LocalDate end) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        int newSprintID \u003d this.size() + 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintList.add(new Sprint(newSprintID, proj, goal, start, end));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public int getCurrentSprintIndex() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return currentSprintIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void setCurrentSprintIndex(int currentSprintIndex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.currentSprintIndex \u003d currentSprintIndex;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public boolean updateCurrentSprint() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            Sprint current \u003d this.getSprint(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            if (DateTimeParser.diff(LocalDate.now(), current.getEndDate()) \u003e\u003d 0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                    \u0026\u0026 DateTimeParser.diff(current.getStartDate(), LocalDate.now()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                this.setCurrentSprintIndex(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jSprintObj \u003d new JsonObject();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonArray jSprintList \u003d new JsonArray(sprintList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jSprintObj.put(\"list\", jSprintList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jSprintObj.put(\"currentSprintIndex\", currentSprintIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jSprintObj.toJson(writer);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 1,
      "keke101": 28,
      "chocomango": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keke101"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsoner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String DEFAULT_FILEPATH \u003d \"./data/data.json\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String INVALID_FILE_REGEX \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private final Path filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private final ArrayList\u003cProject\u003e projects;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public StorageManager(String filename, ArrayList\u003cProject\u003e projects) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "        if (isValidFilename(filename)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": "            filepath \u003d Paths.get(\"./data\", filename);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keke101"
        },
        "content": "            filepath \u003d Paths.get(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.projects \u003d projects \u003d\u003d null ? new ArrayList\u003c\u003e() : projects;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keke101"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Getters"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public Path getFilepath() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return filepath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public ArrayList\u003cProject\u003e getProjects() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return projects;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Public functions to be invoked"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * Save all projects into JSON data file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * File name of the data file is specified when the StorageManager object is instantiated"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonArray jsonProjects \u003d new JsonArray(projects);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": "            FileWriter fw \u003d new FileWriter((filepath.toFile()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Jsoner.serialize(jsonProjects, fw);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Warning] Cannot save to data file, data will be lost when this program ends!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * Load the data file and deserialize it as a list of Project objects."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * File name of the data file is specified when the StorageManager object is instantiated."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "     * @throws IOException Thrown when there is error opening the file or reading to the file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void load() throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String rawData \u003d loadRawData();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "            JsonArray rawJson \u003d Jsoner.deserialize(rawData, new JsonArray());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "            ArrayList\u003cProject\u003e jsonProjects \u003d parseJsonArray(rawJson);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Unable to load the data file properly, exiting...\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "keke101"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.printf(\"[Error] Cannot parse an element as a JSON object properly!%n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "keke101"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //Private functions    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "keke101"
        },
        "content": "        initDataDir();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void initDataDir() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Path path \u003d filepath.getParent();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "                Files.createDirectory(path);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot create data directory for saving.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "keke101"
        },
        "content": "            exit(1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private ArrayList\u003cProject\u003e parseJsonArray(JsonArray raw) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cJsonObject\u003e jsonProjects \u003d new ArrayList\u003c\u003e(raw.size());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "keke101"
        },
        "content": "        for (int i \u003d 0; i \u003c raw.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "keke101"
        },
        "content": "            jsonProjects.add(raw.getMap(i));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return convertToProject(jsonProjects);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private ArrayList\u003cProject\u003e convertToProject(ArrayList\u003cJsonObject\u003e jsonProjects) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "keke101"
        },
        "content": "        System.out.println(\"Convert JsonObject to Project object and its respective object members\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private String loadRawData() throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return Files.readString(filepath);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "keke101"
        },
        "content": "    //TODO Valid filename checker"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private boolean isValidFilename(String filename) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "keke101"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 126
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Priority.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "public enum Priority implements Jsonable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    HIGH {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "        public String toJson() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "            final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "                this.toJson(writeable);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keke101"
        },
        "content": "                System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keke101"
        },
        "content": "            return writeable.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keke101"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keke101"
        },
        "content": "        public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": "            writer.write(\"HIGH\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"High priority\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    MEDIUM {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keke101"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keke101"
        },
        "content": "        public String toJson() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keke101"
        },
        "content": "            final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keke101"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": "                this.toJson(writeable);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": "                System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keke101"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "            return writeable.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": "        public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "            writer.write(\"MEDIUM\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"Medium priority\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    LOW {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "        public String toJson() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keke101"
        },
        "content": "            final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "                this.toJson(writeable);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "                System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "            return writeable.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "        public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "            writer.write(\"LOW\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "        "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0426051"
        },
        "content": "            return \"Low priority\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 17,
      "keke101": 61,
      "e0426051": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsonable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "public class Task implements Jsonable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected Priority priority;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected ArrayList\u003cString\u003e membersAllocatedTo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    protected ArrayList\u003cInteger\u003e sprintAllocatedTo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Task(int id, String title, String description, String priority) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this(id, title, description, priority, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public Task(int id, String title, String description, String priority, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.priority \u003d Priority.valueOf(priority);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.membersAllocatedTo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        this.sprintAllocatedTo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void allocateToMember(String memberId) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        membersAllocatedTo.add(memberId);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cString\u003e getAllocatedMembers() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return membersAllocatedTo;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public void allocateToSprint(int sprintId) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        sprintAllocatedTo.add(sprintId);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public ArrayList\u003cInteger\u003e getAllocatedSprints() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return sprintAllocatedTo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    public void setPriority(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0426051"
        },
        "content": "        priority \u003d Priority.valueOf(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0426051"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0426051"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getPriority() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return priority.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public String toSimplifiedString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder taskString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\n[Task]\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tID: %d\", this.id));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tTitle: %s\", this.title));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tCompletion: %s\\n\", this.isDone ? \"Completed\" : \"Incomplete\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return taskString.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        StringBuilder taskString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\n[Task]\\n\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tID: %d\\n\", this.id));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tTitle: %s\\n\", this.title));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tDescription: %s\\n\", this.description));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tPriority: %s\\n\", this.priority));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        taskString.append(String.format(\"\\tCompletion: %s\\n\", this.isDone ? \"Completed\" : \"Incomplete\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return taskString.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public String toJson() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final StringWriter writeable \u003d new StringWriter();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "keke101"
        },
        "content": "            this.toJson(writeable);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "keke101"
        },
        "content": "            System.out.println(\"[Error] Cannot convert this project to JSON\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "keke101"
        },
        "content": "        return writeable.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "keke101"
        },
        "content": "    public void toJson(Writer writer) throws IOException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "keke101"
        },
        "content": "        final JsonObject jTask \u003d new JsonObject();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"id\", id);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"title\", title);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"description\", description);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"priority\", priority);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.put(\"isDone\", isDone);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "keke101"
        },
        "content": "        jTask.toJson(writer);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //Delete seedu.duke.task handled outside using ArrayList remove() function"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //iD handled outside. (seedu.duke.task number)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    //valueOf for enum explained here:https://www.baeldung.com/java-string-to-enum"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 43,
      "keke101": 43,
      "e0426051": 4,
      "chocomango": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * General messages."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    //public static final String NEWLINE \u003d  System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_LOGO \u003d \"   _____  _____ _____  _    _ __  __       _   _  \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"  / ____|/ ____|  __ \\\\| |  | |  \\\\/  |     | | (_) \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \" | (___ | |    | |__) | |  | | \\\\  / |_ __ | |_ _  ___  _   _ ___\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"  \\\\___ \\\\| |    |  _  /| |  | | |\\\\/| | \u0027_ \\\\| __| |/ _ \\\\| | | / __|\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"  ____) | |____| | \\\\ \\\\| |__| | |  | | |_) | |_| | (_) | |_| \\\\__ \\\\ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \" |_____/ \\\\_____|_|  \\\\_\\\\\\\\____/|_|  |_| .__/ \\\\__|_|\\\\___/ \\\\__,_|___/ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"                                    | |\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            + \"                                    |_|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"WELCOME TO SCRUMPTIOUS\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_PROMPT_INPUT \u003d \"command\u003e \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_CREATE_SUB_SPRINT \u003d \"Newly created sprint will automatically start after \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "                                                   + \"the previous sprint ends.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static final String MESSAGE_INVALID_ID \u003d \"The following task ID doesn\u0027t exist in backlog.\\nPlease enter a\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            + \" valid ID.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String MESSAGE_INVALID_IDTYPE \u003d \"Task ID entered is not an integer!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 2,
      "chocomango": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": " * TextUi that handles user interaction."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    private static final PrintStream out \u003d System.out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static void showWelcomeScreen() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        showToUserLn(Messages.MESSAGE_LOGO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        showToUserLn(Messages.MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Accepts input from user via input stream."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @return Input from user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static String getUserCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        showToUser(Messages.MESSAGE_PROMPT_INPUT.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        String input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        while (input.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * Print messages to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     * @param messages Specify messages to print"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chocomango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static void showToUser(String... messages) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            out.print(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chocomango"
        },
        "content": "    public static void showToUserLn(String... messages) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chocomango"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chocomango"
        },
        "content": "            out.println(message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chocomango"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static void showError(String... messages) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            out.println(message);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 22,
      "chocomango": 38
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    void parser_invalidCommands_returnsInvalidMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ArrayList\u003cProject\u003e projectList \u003d new ArrayList\u003c\u003e(10);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String userInput \u003d \"projekt /create -title Duke -desc lmao -end 11102020 -sd 7\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String actualOutput \u003d p.parser(userInput, projectList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String expectedOutput \u003d \"Invalid command!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        assertEquals(actualOutput, expectedOutput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keke101"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.JsonObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keke101"
        },
        "content": "import com.github.cliftonlabs.json_simple.Jsoner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keke101"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keke101"
        },
        "content": "import seedu.duke.project.Project;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keke101"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keke101"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keke101"
        },
        "content": "class StorageManagerTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String TEST_FILENAME \u003d \"test-data.json\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final String TEST_FILEPATH_STR \u003d String.format(\"./data/%s\", TEST_FILENAME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final Path TEST_FILEPATH \u003d Paths.get(TEST_FILEPATH_STR);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final JsonArray SAVE_EXPECTED_1 \u003d Jsoner.deserialize("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keke101"
        },
        "content": "            \"[{\\\"title\\\":\\\"Game\\\",\\\"description\\\":\\\"Among Us\\\",\\\"duration\\\":100,\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keke101"
        },
        "content": "                    + \"\\\"sprint_length\\\":9,\\\"start_date\\\":null,\\\"backlog\\\":[],\\\"members\\\":[]}]\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keke101"
        },
        "content": "            new JsonArray());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final JsonArray SAVE_EXPECTED_2 \u003d Jsoner.deserialize("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String.format(\"[{\\\"title\\\":\\\"Game\\\",\\\"description\\\":\\\"Among Us\\\",\\\"duration\\\":100,\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keke101"
        },
        "content": "                            + \"\\\"sprint_length\\\":9,\\\"start_date\\\":null,\\\"backlog\\\":[],\\\"members\\\":[]},\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keke101"
        },
        "content": "                            + \"{\\\"title\\\":\\\"Webpage\\\",\\\"description\\\":\\\"Beautifying\\\",\\\"duration\\\":99,\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keke101"
        },
        "content": "                            + \"\\\"sprint_length\\\":10,\\\"start_date\\\":\\\"%s\\\",\\\"backlog\\\":[],\\\"members\\\":[]}]\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keke101"
        },
        "content": "                    LocalDate.now().toString()),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keke101"
        },
        "content": "            new JsonArray());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final JsonArray LOAD_ERROR_1 \u003d Jsoner.deserialize("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String.format(\"[{\\\"title\\\":\\\"Game\\\",\\\"description\\\":\\\"Among Us\\\",\\\"duration\\\":100\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keke101"
        },
        "content": "                            + \",\\\"sprint_length\\\":9,\\\"start_date\\\":null,\\\"backlog\\\":[],\\\"members\\\":[]},\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keke101"
        },
        "content": "                            + \"{\\\"title\\\":\\\"Webpage\\\",\\\"description\\\":\\\"Beautifying\\\",\\\"duration\\\":99,\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keke101"
        },
        "content": "                            + \"\\\"sprint_length\\\":10,\\\"start_date\\\":\\\"%s\\\",\\\"backlog\\\":[],\\\"members\\\":[]},1]\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keke101"
        },
        "content": "                    LocalDate.now().toString()),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keke101"
        },
        "content": "            new JsonArray());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private static final JsonObject LOAD_ERROR_2 \u003d Jsoner.deserialize("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keke101"
        },
        "content": "            \"{\\\"title\\\":\\\"Game\\\",\\\"description\\\":\\\"Among Us\\\",\\\"duration\\\":100,\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keke101"
        },
        "content": "                    + \"\\\"sprint_length\\\":9,\\\"start_date\\\":null,\\\"backlog\\\":[],\\\"members\\\":[]}\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keke101"
        },
        "content": "            new JsonObject());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keke101"
        },
        "content": "    void load() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keke101"
        },
        "content": "        ArrayList\u003cProject\u003e projList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keke101"
        },
        "content": "        StorageManager sm \u003d new StorageManager(TEST_FILENAME, projList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keke101"
        },
        "content": "        // JSON file should be loaded successfully if data file is valid"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keke101"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keke101"
        },
        "content": "            initTestFile(SAVE_EXPECTED_2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sm.load();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keke101"
        },
        "content": "        });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keke101"
        },
        "content": "        // Exception should be thrown if any of the element in the JSON array is NOT an json object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keke101"
        },
        "content": "        assertThrows(ClassCastException.class, () -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keke101"
        },
        "content": "            initTestFile(LOAD_ERROR_1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sm.load();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keke101"
        },
        "content": "        });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keke101"
        },
        "content": "        // Data file should start with a JSON array, load() will ignore the data file "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keke101"
        },
        "content": "        // if it does not start with JSON array "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keke101"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keke101"
        },
        "content": "            initTestFile(LOAD_ERROR_2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sm.load();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keke101"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keke101"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keke101"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "keke101"
        },
        "content": "    void save() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "keke101"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "keke101"
        },
        "content": "            ArrayList\u003cProject\u003e projList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "keke101"
        },
        "content": "            StorageManager sm \u003d new StorageManager(TEST_FILENAME, projList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Project p1 \u003d new Project(\"Game\", \"Among Us\", \"100\", \"9\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "keke101"
        },
        "content": "            projList.add(p1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sm.save();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "keke101"
        },
        "content": "            String fileData \u003d Files.readString(TEST_FILEPATH);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "keke101"
        },
        "content": "            assertEquals(SAVE_EXPECTED_1.toJson(), fileData); //1st assertion"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "keke101"
        },
        "content": "            //Add a second object compare the changes"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "keke101"
        },
        "content": "            Project p2 \u003d new Project(\"Webpage\", \"Beautifying\", \"99\", \"10\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "keke101"
        },
        "content": "            p2.setStartDate();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "keke101"
        },
        "content": "            projList.add(p2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "keke101"
        },
        "content": "            sm.save();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "keke101"
        },
        "content": "            fileData \u003d Files.readString(TEST_FILEPATH);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "keke101"
        },
        "content": "            assertEquals(SAVE_EXPECTED_2.toJson(), fileData); //2nd assertion"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "keke101"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "keke101"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "keke101"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "keke101"
        },
        "content": "    "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "keke101"
        },
        "content": "    private void initTestFile(Object data) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "keke101"
        },
        "content": "        FileWriter fw \u003d new FileWriter(TEST_FILEPATH_STR);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "keke101"
        },
        "content": "        Jsoner.serialize(data, fw);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "keke101"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "keke101"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "keke101"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keke101": 98
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chocomango"
        },
        "content": "project /create -title MeTube -desc video streaming software -end 30 -sd 10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chocomango"
        },
        "content": "project /view"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chocomango"
        },
        "content": "member /add amy john bob"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chocomango"
        },
        "content": "task /add -title Add parser -desc add an interactive UI -priority HIGH"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chocomango"
        },
        "content": "task /add -title Del UI -desc add an interactive UI -priority HIGH"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chocomango"
        },
        "content": "task /add -title  UI -desc add an interactive UI -priority HIGH"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chocomango"
        },
        "content": "task /add -title Add4 UI -desc add an interactive UI -priority HIGH"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chocomango"
        },
        "content": "task /add -title Add5 UI -desc add an interactive UI -priority HIGH"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chocomango"
        },
        "content": "task /add -title Add6 UI -desc add an interactive UI -priority HIGH"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /create -goal goal1 -start 20201010"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /create -goal goal2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /create -goal goal3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /create -goal goal4"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /create -goal goal5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /create -goal goal6"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /view"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /addtask 1 2 3 4 5 6"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /view"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /assign -task 1 -user amy"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /assign -task 3 -user amy john"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /assign -task 1 -user bob"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /view"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /deltask 4 3"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chocomango"
        },
        "content": "sprint /view"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chocomango"
        },
        "content": "project /view"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chocomango"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chocomango": 26
    }
  }
]
